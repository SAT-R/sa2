.include "asm/macros.inc"
.include "constants/constants.inc"

.syntax unified
.arm

	thumb_func_start sub_801A6D8
sub_801A6D8: @ 0x0801A6D8
	push {lr}
	ldr r0, _0801A714 @ =gUnknown_03005450
	movs r3, #0
	str r3, [r0]
	ldr r0, _0801A718 @ =gUnknown_030054B0
	strb r3, [r0]
	ldr r2, _0801A71C @ =gUnknown_03005448
	movs r0, #3
	strb r0, [r2]
	ldr r0, _0801A720 @ =gUnknown_030054CC
	ldrb r1, [r0]
	cmp r1, #2
	bls _0801A6F6
	movs r0, #1
	strb r0, [r2]
_0801A6F6:
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0801A724 @ =gUnknown_03005424
	cmp r0, #3
	bls _0801A70C
	ldrh r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0801A72C
_0801A70C:
	ldr r0, _0801A728 @ =gUnknown_030054EC
	strb r3, [r0]
	b _0801A736
	.align 2, 0
_0801A714: .4byte gUnknown_03005450
_0801A718: .4byte gUnknown_030054B0
_0801A71C: .4byte gUnknown_03005448
_0801A720: .4byte gUnknown_030054CC
_0801A724: .4byte gUnknown_03005424
_0801A728: .4byte gUnknown_030054EC
_0801A72C:
	ldr r1, _0801A750 @ =gUnknown_030054EC
	ldr r0, _0801A754 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	strb r0, [r1]
_0801A736:
	ldrh r1, [r2]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0801A758
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #1
	movs r1, #2
	bl sub_802B61C
	b _0801A766
	.align 2, 0
_0801A750: .4byte gUnknown_030054EC
_0801A754: .4byte gLoadedSaveGame
_0801A758:
	ldr r0, _0801A76C @ =gLoadedSaveGame
	ldr r2, [r0]
	ldrh r0, [r2, #0x2c]
	ldrh r1, [r2, #0x2e]
	ldrh r2, [r2, #0x30]
	bl sub_802B61C
_0801A766:
	pop {r0}
	bx r0
	.align 2, 0
_0801A76C: .4byte gLoadedSaveGame

	thumb_func_start sub_801A770
sub_801A770: @ 0x0801A770
	push {lr}
	ldr r0, _0801A7E0 @ =gUnknown_03005444
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0801A7E4 @ =gUnknown_030055B0
	strb r1, [r0]
	ldr r1, _0801A7E8 @ =gUnknown_030053F0
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0801A7EC @ =gUnknown_030054F8
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0801A7F0 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1d
	beq _0801A7AE
	ldr r0, _0801A7F4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	ldr r3, _0801A7F8 @ =gUnknown_030059E0
	movs r2, #0
	bl sub_80299F0
	ldr r1, _0801A7FC @ =gUnknown_030056A4
	movs r0, #0
	str r0, [r1]
_0801A7AE:
	ldr r0, _0801A800 @ =gUnknown_03005590
	movs r3, #0
	str r3, [r0]
	ldr r2, _0801A804 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _0801A808 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
	ldr r2, _0801A80C @ =gUnknown_030054CC
	ldrb r0, [r2]
	cmp r0, #2
	bls _0801A7CE
	ldr r0, _0801A810 @ =gUnknown_030054A0
	ldr r1, _0801A814 @ =gUnknown_03002264
	ldr r1, [r1]
	str r1, [r0]
_0801A7CE:
	ldr r0, _0801A818 @ =gUnknown_030053E4
	str r3, [r0]
	ldrb r0, [r2]
	cmp r0, #5
	beq _0801A820
	ldr r0, _0801A81C @ =gUnknown_03005490
	str r3, [r0]
	b _0801A826
	.align 2, 0
_0801A7E0: .4byte gUnknown_03005444
_0801A7E4: .4byte gUnknown_030055B0
_0801A7E8: .4byte gUnknown_030053F0
_0801A7EC: .4byte gUnknown_030054F8
_0801A7F0: .4byte gUnknown_030055B4
_0801A7F4: .4byte gUnknown_030054F0
_0801A7F8: .4byte gUnknown_030059E0
_0801A7FC: .4byte gUnknown_030056A4
_0801A800: .4byte gUnknown_03005590
_0801A804: .4byte gUnknown_03005424
_0801A808: .4byte 0x0000FF7F
_0801A80C: .4byte gUnknown_030054CC
_0801A810: .4byte gUnknown_030054A0
_0801A814: .4byte gUnknown_03002264
_0801A818: .4byte gUnknown_030053E4
_0801A81C: .4byte gUnknown_03005490
_0801A820:
	ldr r1, _0801A830 @ =gUnknown_03005490
	ldr r0, _0801A834 @ =0x00002A30
	str r0, [r1]
_0801A826:
	bl sub_801A838
	pop {r0}
	bx r0
	.align 2, 0
_0801A830: .4byte gUnknown_03005490
_0801A834: .4byte 0x00002A30

	thumb_func_start sub_801A838
sub_801A838: @ 0x0801A838
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r0, _0801A928 @ =sub_801AB3C
	movs r2, #0xff
	lsls r2, r2, #8
	ldr r1, _0801A92C @ =sub_801B7A8
	str r1, [sp]
	movs r1, #0
	movs r3, #0
	bl TaskCreate
	ldr r1, _0801A930 @ =gUnknown_03005848
	str r0, [r1]
	ldr r0, _0801A934 @ =gUnknown_0300540C
	movs r4, #0
	strb r4, [r0]
	ldr r0, _0801A938 @ =gUnknown_030054F4
	strb r4, [r0]
	ldr r5, _0801A93C @ =gUnknown_030054B0
	strb r4, [r5]
	ldr r2, _0801A940 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x21
	orrs r0, r1
	ldr r1, _0801A944 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
	ldr r0, _0801A948 @ =gUnknown_03005430
	strb r4, [r0]
	ldr r1, _0801A94C @ =gUnknown_0300542C
	movs r0, #0xa
	strb r0, [r1]
	ldr r0, _0801A950 @ =gUnknown_030055BC
	strb r4, [r0]
	bl sub_801F044
	ldr r0, _0801A954 @ =gUnknown_030053E0
	strb r4, [r0]
	ldr r4, _0801A958 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1d
	beq _0801A8A0
	ldr r0, _0801A95C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0
	ldrsb r1, [r4, r1]
	ldr r2, _0801A960 @ =gUnknown_030059E0
	bl sub_80213C0
_0801A8A0:
	ldrb r1, [r4]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _0801A8BC
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0801A8B8
	ldrb r0, [r5]
	cmp r0, #0
	beq _0801A8BC
_0801A8B8:
	cmp r1, #0x1d
	bne _0801A8FC
_0801A8BC:
	ldr r7, _0801A964 @ =gUnknown_03005440
	ldr r4, _0801A968 @ =gUnknown_080D5964
	ldr r6, _0801A958 @ =gUnknown_030055B4
	ldrb r0, [r6]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #2
	adds r1, r0, r4
	ldrh r1, [r1]
	strh r1, [r7]
	ldr r5, _0801A96C @ =gUnknown_030054BC
	adds r1, r4, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r5]
	cmp r2, #0x1c
	bne _0801A8E8
	ldr r0, _0801A970 @ =gUnknown_030055B0
	ldrb r0, [r0]
	bl sub_80498CC
_0801A8E8:
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0x1d
	bne _0801A8FC
	bl sub_802B708
	ldrh r0, [r4, #0x20]
	strh r0, [r7]
	ldrh r0, [r4, #0x22]
	strh r0, [r5]
_0801A8FC:
	ldr r0, _0801A974 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801A97C
	bl sub_800BEF8
	bl sub_802F0A8
	ldr r4, _0801A958 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r4, r0]
	bl sub_801C068
	ldr r1, _0801A978 @ =gUnknown_080D57DC
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	b _0801A99E
	.align 2, 0
_0801A928: .4byte sub_801AB3C
_0801A92C: .4byte sub_801B7A8
_0801A930: .4byte gUnknown_03005848
_0801A934: .4byte gUnknown_0300540C
_0801A938: .4byte gUnknown_030054F4
_0801A93C: .4byte gUnknown_030054B0
_0801A940: .4byte gUnknown_03005424
_0801A944: .4byte 0x0000FF7F
_0801A948: .4byte gUnknown_03005430
_0801A94C: .4byte gUnknown_0300542C
_0801A950: .4byte gUnknown_030055BC
_0801A954: .4byte gUnknown_030053E0
_0801A958: .4byte gUnknown_030055B4
_0801A95C: .4byte gUnknown_030054F0
_0801A960: .4byte gUnknown_030059E0
_0801A964: .4byte gUnknown_03005440
_0801A968: .4byte gUnknown_080D5964
_0801A96C: .4byte gUnknown_030054BC
_0801A970: .4byte gUnknown_030055B0
_0801A974: .4byte gUnknown_030054CC
_0801A978: .4byte gUnknown_080D57DC
_0801A97C:
	movs r0, #0
	bl sub_801C068
	bl sub_801BF90
	bl sub_8082D44
	ldr r2, _0801AA50 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0801AA54 @ =0xFF9FFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	ldr r2, _0801AA58 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _0801AA5C @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
_0801A99E:
	ldr r0, _0801AA60 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0801A9B6
	movs r0, #1
	rsbs r0, r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_80115D0
_0801A9B6:
	ldr r3, _0801AA58 @ =gUnknown_03005424
	ldrh r0, [r3]
	ldr r2, _0801AA64 @ =0x0000FFFD
	ands r2, r0
	ldr r0, _0801AA68 @ =0x0000FFFB
	ands r2, r0
	strh r2, [r3]
	ldr r5, _0801AA6C @ =gUnknown_030054CC
	ldrb r0, [r5]
	cmp r0, #5
	bne _0801A9D4
	movs r1, #4
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r3]
_0801A9D4:
	bl sub_8007E10
	bl sub_800888C
	ldr r0, _0801AA70 @ =gUnknown_03001944
	movs r4, #0
	strh r4, [r0]
	ldr r0, _0801AA74 @ =gUnknown_030017F0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _0801AA78 @ =gUnknown_03005394
	strh r1, [r0]
	ldr r0, _0801AA7C @ =gUnknown_03002A8C
	movs r2, #0x78
	strh r2, [r0]
	ldr r0, _0801AA80 @ =gUnknown_03004D58
	movs r1, #0x50
	strh r1, [r0]
	ldr r0, _0801AA84 @ =gUnknown_0300194C
	strh r2, [r0]
	ldr r0, _0801AA88 @ =gUnknown_03002820
	strh r1, [r0]
	ldr r1, _0801AA8C @ =gUnknown_03005398
	movs r0, #0x80
	strh r0, [r1]
	ldrb r0, [r5]
	cmp r0, #2
	bls _0801AAF0
	bl sub_80191A4
	bl sub_8019120
	ldr r0, _0801AA90 @ =gUnknown_030054E8
	strb r4, [r0]
	movs r4, #0
_0801AA1E:
	ldr r0, _0801AA94 @ =gUnknown_030053E8
	adds r0, r4, r0
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0801AA98 @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0801AAA4
	adds r0, r4, #0
	bl sub_8016028
	ldr r0, _0801AA9C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r4, r0
	beq _0801AAA0
	adds r0, r4, #0
	bl sub_80193C4
	b _0801AAA4
	.align 2, 0
_0801AA50: .4byte gUnknown_030059E0
_0801AA54: .4byte 0xFF9FFFFF
_0801AA58: .4byte gUnknown_03005424
_0801AA5C: .4byte 0x0000FFFE
_0801AA60: .4byte gUnknown_030055B4
_0801AA64: .4byte 0x0000FFFD
_0801AA68: .4byte 0x0000FFFB
_0801AA6C: .4byte gUnknown_030054CC
_0801AA70: .4byte gUnknown_03001944
_0801AA74: .4byte gUnknown_030017F0
_0801AA78: .4byte gUnknown_03005394
_0801AA7C: .4byte gUnknown_03002A8C
_0801AA80: .4byte gUnknown_03004D58
_0801AA84: .4byte gUnknown_0300194C
_0801AA88: .4byte gUnknown_03002820
_0801AA8C: .4byte gUnknown_03005398
_0801AA90: .4byte gUnknown_030054E8
_0801AA94: .4byte gUnknown_030053E8
_0801AA98: .4byte gUnknown_030055B8
_0801AA9C: .4byte 0x04000128
_0801AAA0:
	bl sub_8019498
_0801AAA4:
	ldr r0, _0801AADC @ =gUnknown_030054B4
	adds r0, r4, r0
	movs r1, #0xff
	strb r1, [r0]
	ldr r0, _0801AAE0 @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #5
	bne _0801AABC
	ldr r0, _0801AAE4 @ =gUnknown_03005500
	adds r0, r4, r0
	strb r4, [r0]
_0801AABC:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _0801AA1E
	ldrb r0, [r5]
	ldr r6, _0801AAE8 @ =gUnknown_030056A4
	cmp r0, #5
	beq _0801AB0A
	ldr r0, _0801AAEC @ =gUnknown_030059E0
	adds r0, #0x37
	ldrb r2, [r0]
	movs r1, #0x80
	orrs r1, r2
	strb r1, [r0]
	b _0801AB0A
	.align 2, 0
_0801AADC: .4byte gUnknown_030054B4
_0801AAE0: .4byte gUnknown_030054CC
_0801AAE4: .4byte gUnknown_03005500
_0801AAE8: .4byte gUnknown_030056A4
_0801AAEC: .4byte gUnknown_030059E0
_0801AAF0:
	movs r4, #0
	ldr r6, _0801AB30 @ =gUnknown_030056A4
	ldr r3, _0801AB34 @ =gUnknown_030054B4
	movs r2, #0xff
_0801AAF8:
	adds r0, r4, r3
	ldrb r1, [r0]
	orrs r1, r2
	strb r1, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _0801AAF8
_0801AB0A:
	movs r0, #0
	str r0, [r6]
	ldrb r0, [r5]
	cmp r0, #5
	beq _0801AB1A
	ldr r0, _0801AB38 @ =gUnknown_030059E0
	bl sub_8013FAC
_0801AB1A:
	ldrb r0, [r5]
	cmp r0, #2
	bls _0801AB28
	cmp r0, #5
	beq _0801AB28
	bl sub_8086CE8
_0801AB28:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801AB30: .4byte gUnknown_030056A4
_0801AB34: .4byte gUnknown_030054B4
_0801AB38: .4byte gUnknown_030059E0

	thumb_func_start sub_801AB3C
sub_801AB3C: @ 0x0801AB3C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r0, _0801AB84 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r7, r0, #0x1e
	ldr r0, _0801AB88 @ =gUnknown_030054CC
	ldrb r4, [r0]
	cmp r4, #2
	bhi _0801AB98
	ldr r0, _0801AB8C @ =gUnknown_03005424
	ldrh r2, [r0]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	bne _0801AB74
	ldr r0, _0801AB90 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0801AB74
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	bne _0801AB74
	bl sub_800A9FC
_0801AB74:
	ldr r1, _0801AB94 @ =gUnknown_03005590
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	movs r0, #1
	mov ip, r0
	b _0801ACE4
	.align 2, 0
_0801AB84: .4byte 0x04000128
_0801AB88: .4byte gUnknown_030054CC
_0801AB8C: .4byte gUnknown_03005424
_0801AB90: .4byte gPressedKeys
_0801AB94: .4byte gUnknown_03005590
_0801AB98:
	ldr r0, _0801ABFC @ =gUnknown_03002264
	ldr r1, _0801AC00 @ =gUnknown_030054A0
	ldr r2, [r0]
	ldr r0, [r1]
	subs r3, r2, r0
	ldr r1, _0801AC04 @ =gUnknown_03005590
	ldr r0, [r1]
	subs r0, r3, r0
	mov ip, r0
	str r3, [r1]
	cmp r4, #5
	bne _0801AC20
	ldr r2, _0801AC08 @ =0xFFFFFE00
	adds r1, r3, #0
	ands r1, r2
	subs r4, r3, r0
	adds r0, r4, #0
	ands r0, r2
	cmp r1, r0
	beq _0801AC40
	ldr r5, _0801AC0C @ =gUnknown_03005434
	ldr r1, [r5]
	ldr r0, _0801AC10 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0801AC14 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	ldr r0, _0801AC18 @ =0xFFFFF000
	ands r3, r0
	ands r4, r0
	ldr r6, _0801AC1C @ =gUnknown_030054E8
	cmp r3, r4
	beq _0801ABEA
	ldrb r2, [r6]
	lsrs r1, r2, #4
	adds r1, #1
	movs r0, #0xf
	ands r0, r2
	lsls r1, r1, #4
	orrs r0, r1
	strb r0, [r6]
_0801ABEA:
	ldr r1, [r5]
	movs r3, #7
	ldrb r2, [r6]
	movs r0, #0xf8
	ands r0, r2
	ands r1, r3
	orrs r0, r1
	strb r0, [r6]
	b _0801AC40
	.align 2, 0
_0801ABFC: .4byte gUnknown_03002264
_0801AC00: .4byte gUnknown_030054A0
_0801AC04: .4byte gUnknown_03005590
_0801AC08: .4byte 0xFFFFFE00
_0801AC0C: .4byte gUnknown_03005434
_0801AC10: .4byte 0x00196225
_0801AC14: .4byte 0x3C6EF35F
_0801AC18: .4byte 0xFFFFF000
_0801AC1C: .4byte gUnknown_030054E8
_0801AC20:
	movs r2, #0x40
	rsbs r2, r2, #0
	adds r1, r3, #0
	ands r1, r2
	mov r4, ip
	subs r0, r3, r4
	ands r0, r2
	cmp r1, r0
	beq _0801AC40
	ldr r2, _0801AC70 @ =gUnknown_03005434
	ldr r1, [r2]
	ldr r0, _0801AC74 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _0801AC78 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
_0801AC40:
	ldr r2, _0801AC7C @ =gUnknown_03005960
	adds r0, r2, #0
	adds r0, #0x50
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0801ACBE
	ldr r0, _0801AC80 @ =gInput
	ldrh r3, [r0]
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r1, #0
	ands r0, r3
	cmp r0, r1
	bne _0801AC84
	cmp r7, #3
	beq _0801ACAA
	adds r1, r2, #0
	adds r1, #0x66
	movs r0, #3
	strb r0, [r1]
	b _0801ACC4
	.align 2, 0
_0801AC70: .4byte gUnknown_03005434
_0801AC74: .4byte 0x00196225
_0801AC78: .4byte 0x3C6EF35F
_0801AC7C: .4byte gUnknown_03005960
_0801AC80: .4byte gInput
_0801AC84:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r3
	cmp r0, #0
	beq _0801AC9C
	cmp r7, #0
	beq _0801ACB4
	adds r1, r2, #0
	adds r1, #0x66
	movs r0, #0
	strb r0, [r1]
	b _0801ACC4
_0801AC9C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0801ACBE
	cmp r7, #1
	bhi _0801ACB4
_0801ACAA:
	adds r1, r2, #0
	adds r1, #0x66
	movs r0, #2
	strb r0, [r1]
	b _0801ACC4
_0801ACB4:
	adds r1, r2, #0
	adds r1, #0x66
	movs r0, #1
	strb r0, [r1]
	b _0801ACC4
_0801ACBE:
	adds r0, r2, #0
	adds r0, #0x66
	strb r7, [r0]
_0801ACC4:
	ldr r0, _0801AD4C @ =gUnknown_030055B8
	ldrb r0, [r0]
	adds r2, #0x66
	ldrb r1, [r2]
	asrs r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0801ACD8
	strb r7, [r2]
_0801ACD8:
	ldr r1, _0801AD50 @ =gUnknown_030053E0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0801ACE4
	subs r0, #1
	strb r0, [r1]
_0801ACE4:
	ldr r0, _0801AD54 @ =gUnknown_0300544C
	ldr r3, _0801AD58 @ =gUnknown_03005424
	ldrh r2, [r3]
	strh r2, [r0]
	movs r4, #1
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0801ACF8
	b _0801AE3E
_0801ACF8:
	ldr r0, _0801AD5C @ =gUnknown_030053E4
	ldr r1, [r0]
	add r1, ip
	str r1, [r0]
	movs r0, #4
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0801ADBC
	ldr r1, _0801AD60 @ =gUnknown_03005490
	ldr r0, [r1]
	mov r5, ip
	subs r0, r0, r5
	str r0, [r1]
	cmp r0, #0
	ble _0801AD1C
	b _0801AE3E
_0801AD1C:
	ldr r0, _0801AD64 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0801ADB0
	adds r0, r2, #0
	orrs r0, r4
	strh r0, [r3]
	ldr r0, _0801AD68 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #5]
	cmp r0, #0
	beq _0801AD36
	b _0801AE3E
_0801AD36:
	ldr r2, _0801AD6C @ =gUnknown_030059E0
	adds r1, r2, #0
	adds r1, #0x37
	strb r0, [r1]
	ldr r0, [r2, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0801AD74
	ldr r0, _0801AD70 @ =0x0000FD60
	b _0801AD76
	.align 2, 0
_0801AD4C: .4byte gUnknown_030055B8
_0801AD50: .4byte gUnknown_030053E0
_0801AD54: .4byte gUnknown_0300544C
_0801AD58: .4byte gUnknown_03005424
_0801AD5C: .4byte gUnknown_030053E4
_0801AD60: .4byte gUnknown_03005490
_0801AD64: .4byte gUnknown_030054CC
_0801AD68: .4byte gLoadedSaveGame
_0801AD6C: .4byte gUnknown_030059E0
_0801AD70: .4byte 0x0000FD60
_0801AD74:
	ldr r0, _0801ADA4 @ =0x0000FB20
_0801AD76:
	strh r0, [r2, #0x12]
	ldr r0, _0801ADA8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0xa
	bne _0801AD98
	movs r0, #0x80
	lsls r0, r0, #4
	movs r3, #1
	rsbs r3, r3, #0
	movs r1, #0xd0
	str r1, [sp]
	movs r1, #8
	movs r2, #0x10
	bl sub_802B4F8
_0801AD98:
	ldr r0, _0801ADAC @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #0x80
	orrs r1, r2
	str r1, [r0, #0x20]
	b _0801AE28
	.align 2, 0
_0801ADA4: .4byte 0x0000FB20
_0801ADA8: .4byte gUnknown_030055B4
_0801ADAC: .4byte gUnknown_030059E0
_0801ADB0:
	adds r0, r2, #0
	orrs r0, r4
	strh r0, [r3]
	bl sub_8019F08
	b _0801AE3E
_0801ADBC:
	ldr r0, _0801AE04 @ =gUnknown_03005490
	ldr r1, [r0]
	add r1, ip
	str r1, [r0]
	ldr r0, _0801AE08 @ =0x00008CA0
	cmp r1, r0
	bls _0801AE3E
	ldr r0, _0801AE0C @ =gUnknown_030054CC
	ldrb r1, [r0]
	cmp r1, #2
	bhi _0801AE34
	adds r0, r2, #0
	orrs r0, r4
	strh r0, [r3]
	ldr r0, _0801AE10 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #5]
	cmp r0, #0
	beq _0801ADEC
	subs r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0801AE3E
_0801ADEC:
	ldr r0, _0801AE14 @ =gUnknown_030059E0
	adds r1, r0, #0
	adds r1, #0x37
	strb r5, [r1]
	ldr r1, [r0, #0x20]
	movs r2, #0x40
	ands r1, r2
	adds r2, r0, #0
	cmp r1, #0
	beq _0801AE1C
	ldr r0, _0801AE18 @ =0x0000FD60
	b _0801AE1E
	.align 2, 0
_0801AE04: .4byte gUnknown_03005490
_0801AE08: .4byte 0x00008CA0
_0801AE0C: .4byte gUnknown_030054CC
_0801AE10: .4byte gLoadedSaveGame
_0801AE14: .4byte gUnknown_030059E0
_0801AE18: .4byte 0x0000FD60
_0801AE1C:
	ldr r0, _0801AE30 @ =0x0000FB20
_0801AE1E:
	strh r0, [r2, #0x12]
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r2, #0x20]
_0801AE28:
	movs r0, #0x95
	bl m4aSongNumStart
	b _0801AE3E
	.align 2, 0
_0801AE30: .4byte 0x0000FB20
_0801AE34:
	adds r0, r2, #0
	orrs r0, r4
	strh r0, [r3]
	bl sub_8019F08
_0801AE3E:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801AE48
sub_801AE48: @ 0x0801AE48
	push {lr}
	ldr r3, _0801AE90 @ =gUnknown_03005424
	ldrh r1, [r3]
	movs r0, #0x20
	adds r2, r1, #0
	orrs r2, r0
	strh r2, [r3]
	ldr r0, _0801AE94 @ =gUnknown_030054CC
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0801AEB4
	ldr r1, _0801AE98 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0801AE9C @ =gUnknown_03002AE4
	ldr r0, _0801AEA0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0801AEA4 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0801AEA8 @ =gUnknown_03004D5C
	ldr r0, _0801AEAC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_80890BC
	ldr r1, _0801AEB0 @ =gUnknown_03005448
	movs r0, #2
	strb r0, [r1]
	b _0801AEF6
	.align 2, 0
_0801AE90: .4byte gUnknown_03005424
_0801AE94: .4byte gUnknown_030054CC
_0801AE98: .4byte 0x0000FFFF
_0801AE9C: .4byte gUnknown_03002AE4
_0801AEA0: .4byte gUnknown_0300287C
_0801AEA4: .4byte gUnknown_03005390
_0801AEA8: .4byte gUnknown_03004D5C
_0801AEAC: .4byte gUnknown_03002A84
_0801AEB0: .4byte gUnknown_03005448
_0801AEB4:
	ldr r1, _0801AED0 @ =gUnknown_03005448
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0801AED4
	movs r0, #1
	orrs r2, r0
	strh r2, [r3]
	movs r0, #1
	bl sub_8036670
	b _0801AEF6
	.align 2, 0
_0801AED0: .4byte gUnknown_03005448
_0801AED4:
	ldr r1, _0801AEFC @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0801AF00 @ =gUnknown_03002AE4
	ldr r0, _0801AF04 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0801AF08 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0801AF0C @ =gUnknown_03004D5C
	ldr r0, _0801AF10 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_801A838
_0801AEF6:
	pop {r0}
	bx r0
	.align 2, 0
_0801AEFC: .4byte 0x0000FFFF
_0801AF00: .4byte gUnknown_03002AE4
_0801AF04: .4byte gUnknown_0300287C
_0801AF08: .4byte gUnknown_03005390
_0801AF0C: .4byte gUnknown_03004D5C
_0801AF10: .4byte gUnknown_03002A84

	thumb_func_start sub_801AF14
sub_801AF14: @ 0x0801AF14
	push {lr}
	movs r0, #0x83
	lsls r0, r0, #4
	ldr r1, _0801AF68 @ =0x7F207F20
	movs r2, #0
	bl sub_80115D0
	movs r0, #0x80
	lsls r0, r0, #6
	ldr r1, _0801AF6C @ =0x00000381
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801AF70 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801AF74 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801AF98
	ldr r0, _0801AF78 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801AF84
	ldr r0, _0801AF7C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801AF84
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801AF84
	ldr r1, _0801AF80 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801AF9E
	.align 2, 0
_0801AF68: .4byte 0x7F207F20
_0801AF6C: .4byte 0x00000381
_0801AF70: .4byte gUnknown_030055B4
_0801AF74: .4byte gUnknown_030054CC
_0801AF78: .4byte gUnknown_030054F0
_0801AF7C: .4byte gLoadedSaveGame
_0801AF80: .4byte gUnknown_030054A8
_0801AF84:
	ldr r0, _0801AF94 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801AF9E
	.align 2, 0
_0801AF94: .4byte gUnknown_080D5204
_0801AF98:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801AF9E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801AFA4
sub_801AFA4: @ 0x0801AFA4
	push {r4, r5, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	movs r5, #0xe1
	lsls r5, r5, #2
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B008 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B00C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B030
	ldr r0, _0801B010 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B01C
	ldr r0, _0801B014 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B01C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B01C
	ldr r1, _0801B018 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B036
	.align 2, 0
_0801B008: .4byte gUnknown_030055B4
_0801B00C: .4byte gUnknown_030054CC
_0801B010: .4byte gUnknown_030054F0
_0801B014: .4byte gLoadedSaveGame
_0801B018: .4byte gUnknown_030054A8
_0801B01C:
	ldr r0, _0801B02C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B036
	.align 2, 0
_0801B02C: .4byte gUnknown_080D5204
_0801B030:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B036:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B03C
sub_801B03C: @ 0x0801B03C
	push {r4, r5, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	movs r5, #0xe1
	lsls r5, r5, #2
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B0A0 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B0A4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B0C8
	ldr r0, _0801B0A8 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B0B4
	ldr r0, _0801B0AC @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B0B4
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B0B4
	ldr r1, _0801B0B0 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B0CE
	.align 2, 0
_0801B0A0: .4byte gUnknown_030055B4
_0801B0A4: .4byte gUnknown_030054CC
_0801B0A8: .4byte gUnknown_030054F0
_0801B0AC: .4byte gLoadedSaveGame
_0801B0B0: .4byte gUnknown_030054A8
_0801B0B4:
	ldr r0, _0801B0C4 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B0CE
	.align 2, 0
_0801B0C4: .4byte gUnknown_080D5204
_0801B0C8:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B0CE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B0D4
sub_801B0D4: @ 0x0801B0D4
	push {r4, r5, lr}
	movs r5, #0x80
	lsls r5, r5, #6
	ldr r4, _0801B144 @ =0x0000038A
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B148 @ =0x00000385
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B14C @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B150 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B174
	ldr r0, _0801B154 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B160
	ldr r0, _0801B158 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B160
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B160
	ldr r1, _0801B15C @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B17A
	.align 2, 0
_0801B144: .4byte 0x0000038A
_0801B148: .4byte 0x00000385
_0801B14C: .4byte gUnknown_030055B4
_0801B150: .4byte gUnknown_030054CC
_0801B154: .4byte gUnknown_030054F0
_0801B158: .4byte gLoadedSaveGame
_0801B15C: .4byte gUnknown_030054A8
_0801B160:
	ldr r0, _0801B170 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B17A
	.align 2, 0
_0801B170: .4byte gUnknown_080D5204
_0801B174:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B17A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B180
sub_801B180: @ 0x0801B180
	push {r4, r5, lr}
	movs r5, #0x80
	lsls r5, r5, #6
	ldr r4, _0801B1F0 @ =0x0000038A
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B1F4 @ =0x00000385
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B1F8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B1FC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B220
	ldr r0, _0801B200 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B20C
	ldr r0, _0801B204 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B20C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B20C
	ldr r1, _0801B208 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B226
	.align 2, 0
_0801B1F0: .4byte 0x0000038A
_0801B1F4: .4byte 0x00000385
_0801B1F8: .4byte gUnknown_030055B4
_0801B1FC: .4byte gUnknown_030054CC
_0801B200: .4byte gUnknown_030054F0
_0801B204: .4byte gLoadedSaveGame
_0801B208: .4byte gUnknown_030054A8
_0801B20C:
	ldr r0, _0801B21C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B226
	.align 2, 0
_0801B21C: .4byte gUnknown_080D5204
_0801B220:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B226:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B22C
sub_801B22C: @ 0x0801B22C
	push {r4, r5, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	movs r5, #0xeb
	lsls r5, r5, #2
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #3
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #4
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #5
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #6
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #7
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #8
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #9
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0xb
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B2F0 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B2F4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B318
	ldr r0, _0801B2F8 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B304
	ldr r0, _0801B2FC @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B304
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B304
	ldr r1, _0801B300 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B31E
	.align 2, 0
_0801B2F0: .4byte gUnknown_030055B4
_0801B2F4: .4byte gUnknown_030054CC
_0801B2F8: .4byte gUnknown_030054F0
_0801B2FC: .4byte gLoadedSaveGame
_0801B300: .4byte gUnknown_030054A8
_0801B304:
	ldr r0, _0801B314 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B31E
	.align 2, 0
_0801B314: .4byte gUnknown_080D5204
_0801B318:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B31E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B324
sub_801B324: @ 0x0801B324
	push {r4, r5, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	movs r5, #0xeb
	lsls r5, r5, #2
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #3
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #4
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #5
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #6
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #7
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #8
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #9
	movs r3, #0
	bl sub_8009628
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0xb
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B3E8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B3EC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B410
	ldr r0, _0801B3F0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B3FC
	ldr r0, _0801B3F4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B3FC
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B3FC
	ldr r1, _0801B3F8 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B416
	.align 2, 0
_0801B3E8: .4byte gUnknown_030055B4
_0801B3EC: .4byte gUnknown_030054CC
_0801B3F0: .4byte gUnknown_030054F0
_0801B3F4: .4byte gLoadedSaveGame
_0801B3F8: .4byte gUnknown_030054A8
_0801B3FC:
	ldr r0, _0801B40C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B416
	.align 2, 0
_0801B40C: .4byte gUnknown_080D5204
_0801B410:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B416:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_801B41C
sub_801B41C: @ 0x0801B41C
	push {r4, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	ldr r1, _0801B4A4 @ =0x000003AD
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B4A8 @ =0x000003AE
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B4AC @ =0x000003AF
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	movs r1, #0xec
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B4B0 @ =0x000003B1
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B4B4 @ =0x000003B2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B4B8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B4BC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B4E0
	ldr r0, _0801B4C0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B4CC
	ldr r0, _0801B4C4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B4CC
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B4CC
	ldr r1, _0801B4C8 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B4E6
	.align 2, 0
_0801B4A4: .4byte 0x000003AD
_0801B4A8: .4byte 0x000003AE
_0801B4AC: .4byte 0x000003AF
_0801B4B0: .4byte 0x000003B1
_0801B4B4: .4byte 0x000003B2
_0801B4B8: .4byte gUnknown_030055B4
_0801B4BC: .4byte gUnknown_030054CC
_0801B4C0: .4byte gUnknown_030054F0
_0801B4C4: .4byte gLoadedSaveGame
_0801B4C8: .4byte gUnknown_030054A8
_0801B4CC:
	ldr r0, _0801B4DC @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B4E6
	.align 2, 0
_0801B4DC: .4byte gUnknown_080D5204
_0801B4E0:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B4E6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_801B4EC
sub_801B4EC: @ 0x0801B4EC
	push {r4, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	ldr r1, _0801B574 @ =0x000003AD
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B578 @ =0x000003AE
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B57C @ =0x000003AF
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	movs r1, #0xec
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B580 @ =0x000003B1
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B584 @ =0x000003B2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B588 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B58C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B5B0
	ldr r0, _0801B590 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B59C
	ldr r0, _0801B594 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B59C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B59C
	ldr r1, _0801B598 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B5B6
	.align 2, 0
_0801B574: .4byte 0x000003AD
_0801B578: .4byte 0x000003AE
_0801B57C: .4byte 0x000003AF
_0801B580: .4byte 0x000003B1
_0801B584: .4byte 0x000003B2
_0801B588: .4byte gUnknown_030055B4
_0801B58C: .4byte gUnknown_030054CC
_0801B590: .4byte gUnknown_030054F0
_0801B594: .4byte gLoadedSaveGame
_0801B598: .4byte gUnknown_030054A8
_0801B59C:
	ldr r0, _0801B5AC @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B5B6
	.align 2, 0
_0801B5AC: .4byte gUnknown_080D5204
_0801B5B0:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B5B6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_801B5BC
sub_801B5BC: @ 0x0801B5BC
	push {r4, lr}
	movs r4, #0x80
	lsls r4, r4, #6
	ldr r1, _0801B644 @ =0x000003AD
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B648 @ =0x000003AE
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B64C @ =0x000003AF
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	movs r1, #0xec
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B650 @ =0x000003B1
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r1, _0801B654 @ =0x000003B2
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B658 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B65C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B680
	ldr r0, _0801B660 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B66C
	ldr r0, _0801B664 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B66C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B66C
	ldr r1, _0801B668 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B686
	.align 2, 0
_0801B644: .4byte 0x000003AD
_0801B648: .4byte 0x000003AE
_0801B64C: .4byte 0x000003AF
_0801B650: .4byte 0x000003B1
_0801B654: .4byte 0x000003B2
_0801B658: .4byte gUnknown_030055B4
_0801B65C: .4byte gUnknown_030054CC
_0801B660: .4byte gUnknown_030054F0
_0801B664: .4byte gLoadedSaveGame
_0801B668: .4byte gUnknown_030054A8
_0801B66C:
	ldr r0, _0801B67C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B686
	.align 2, 0
_0801B67C: .4byte gUnknown_080D5204
_0801B680:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B686:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_801B68C
sub_801B68C: @ 0x0801B68C
	push {r4, lr}
	ldr r4, _0801B6AC @ =gUnknown_03005848
	ldr r0, [r4]
	bl TaskDestroy
	movs r0, #0
	str r0, [r4]
	ldr r0, _0801B6B0 @ =gUnknown_030059E0
	bl sub_80299FC
	bl sub_801E028
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801B6AC: .4byte gUnknown_03005848
_0801B6B0: .4byte gUnknown_030059E0

	thumb_func_start sub_801B6B4
sub_801B6B4: @ 0x0801B6B4
	push {lr}
	ldr r2, _0801B6F8 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0801B6FC @ =gUnknown_030054CC
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0801B71C
	ldr r1, _0801B700 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0801B704 @ =gUnknown_03002AE4
	ldr r0, _0801B708 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0801B70C @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0801B710 @ =gUnknown_03004D5C
	ldr r0, _0801B714 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_80890BC
	ldr r1, _0801B718 @ =gUnknown_03005448
	movs r0, #2
	strb r0, [r1]
	b _0801B73E
	.align 2, 0
_0801B6F8: .4byte gUnknown_03005424
_0801B6FC: .4byte gUnknown_030054CC
_0801B700: .4byte 0x0000FFFF
_0801B704: .4byte gUnknown_03002AE4
_0801B708: .4byte gUnknown_0300287C
_0801B70C: .4byte gUnknown_03005390
_0801B710: .4byte gUnknown_03004D5C
_0801B714: .4byte gUnknown_03002A84
_0801B718: .4byte gUnknown_03005448
_0801B71C:
	ldr r1, _0801B734 @ =gUnknown_03005448
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0801B738
	movs r0, #1
	bl sub_8036670
	b _0801B73E
	.align 2, 0
_0801B734: .4byte gUnknown_03005448
_0801B738:
	movs r0, #2
	bl sub_8036670
_0801B73E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B744
sub_801B744: @ 0x0801B744
	push {lr}
	ldr r1, _0801B788 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0801B78C @ =gUnknown_03002AE4
	ldr r0, _0801B790 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0801B794 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0801B798 @ =gUnknown_03004D5C
	ldr r0, _0801B79C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl WriteSaveGame
	ldr r0, _0801B7A0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0801B784
	ldr r1, _0801B7A4 @ =gUnknown_030055B4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x21
	bgt _0801B784
	bl sub_801A770
_0801B784:
	pop {r0}
	bx r0
	.align 2, 0
_0801B788: .4byte 0x0000FFFF
_0801B78C: .4byte gUnknown_03002AE4
_0801B790: .4byte gUnknown_0300287C
_0801B794: .4byte gUnknown_03005390
_0801B798: .4byte gUnknown_03004D5C
_0801B79C: .4byte gUnknown_03002A84
_0801B7A0: .4byte gUnknown_030054CC
_0801B7A4: .4byte gUnknown_030055B4

	thumb_func_start sub_801B7A8
sub_801B7A8: @ 0x0801B7A8
	push {lr}
	ldr r1, _0801B7B8 @ =gUnknown_03005848
	movs r0, #0
	str r0, [r1]
	bl m4aMPlayAllStop
	pop {r0}
	bx r0
	.align 2, 0
_0801B7B8: .4byte gUnknown_03005848

	thumb_func_start sub_801B7BC
sub_801B7BC: @ 0x0801B7BC
	push {lr}
	movs r0, #0x80
	lsls r0, r0, #6
	ldr r1, _0801B804 @ =0x00000381
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801B808 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B80C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B830
	ldr r0, _0801B810 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B81C
	ldr r0, _0801B814 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B81C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B81C
	ldr r1, _0801B818 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B836
	.align 2, 0
_0801B804: .4byte 0x00000381
_0801B808: .4byte gUnknown_030055B4
_0801B80C: .4byte gUnknown_030054CC
_0801B810: .4byte gUnknown_030054F0
_0801B814: .4byte gLoadedSaveGame
_0801B818: .4byte gUnknown_030054A8
_0801B81C:
	ldr r0, _0801B82C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B836
	.align 2, 0
_0801B82C: .4byte gUnknown_080D5204
_0801B830:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B836:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B83C
sub_801B83C: @ 0x0801B83C
	push {lr}
	ldr r3, _0801B874 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B878 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B89C
	ldr r0, _0801B87C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B888
	ldr r0, _0801B880 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B888
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B888
	ldr r1, _0801B884 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B8A2
	.align 2, 0
_0801B874: .4byte gUnknown_030055B4
_0801B878: .4byte gUnknown_030054CC
_0801B87C: .4byte gUnknown_030054F0
_0801B880: .4byte gLoadedSaveGame
_0801B884: .4byte gUnknown_030054A8
_0801B888:
	ldr r0, _0801B898 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B8A2
	.align 2, 0
_0801B898: .4byte gUnknown_080D5204
_0801B89C:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B8A2:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B8A8
sub_801B8A8: @ 0x0801B8A8
	push {lr}
	ldr r3, _0801B8E0 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B8E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B908
	ldr r0, _0801B8E8 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B8F4
	ldr r0, _0801B8EC @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B8F4
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B8F4
	ldr r1, _0801B8F0 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B90E
	.align 2, 0
_0801B8E0: .4byte gUnknown_030055B4
_0801B8E4: .4byte gUnknown_030054CC
_0801B8E8: .4byte gUnknown_030054F0
_0801B8EC: .4byte gLoadedSaveGame
_0801B8F0: .4byte gUnknown_030054A8
_0801B8F4:
	ldr r0, _0801B904 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B90E
	.align 2, 0
_0801B904: .4byte gUnknown_080D5204
_0801B908:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B90E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B914
sub_801B914: @ 0x0801B914
	push {lr}
	ldr r3, _0801B94C @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B950 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B974
	ldr r0, _0801B954 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B960
	ldr r0, _0801B958 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B960
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B960
	ldr r1, _0801B95C @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B97A
	.align 2, 0
_0801B94C: .4byte gUnknown_030055B4
_0801B950: .4byte gUnknown_030054CC
_0801B954: .4byte gUnknown_030054F0
_0801B958: .4byte gLoadedSaveGame
_0801B95C: .4byte gUnknown_030054A8
_0801B960:
	ldr r0, _0801B970 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B97A
	.align 2, 0
_0801B970: .4byte gUnknown_080D5204
_0801B974:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B97A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B980
sub_801B980: @ 0x0801B980
	push {lr}
	ldr r3, _0801B9B8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801B9BC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801B9E0
	ldr r0, _0801B9C0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801B9CC
	ldr r0, _0801B9C4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801B9CC
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801B9CC
	ldr r1, _0801B9C8 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801B9E6
	.align 2, 0
_0801B9B8: .4byte gUnknown_030055B4
_0801B9BC: .4byte gUnknown_030054CC
_0801B9C0: .4byte gUnknown_030054F0
_0801B9C4: .4byte gLoadedSaveGame
_0801B9C8: .4byte gUnknown_030054A8
_0801B9CC:
	ldr r0, _0801B9DC @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801B9E6
	.align 2, 0
_0801B9DC: .4byte gUnknown_080D5204
_0801B9E0:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801B9E6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801B9EC
sub_801B9EC: @ 0x0801B9EC
	push {lr}
	ldr r3, _0801BA24 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BA28 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BA4C
	ldr r0, _0801BA2C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BA38
	ldr r0, _0801BA30 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BA38
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BA38
	ldr r1, _0801BA34 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BA52
	.align 2, 0
_0801BA24: .4byte gUnknown_030055B4
_0801BA28: .4byte gUnknown_030054CC
_0801BA2C: .4byte gUnknown_030054F0
_0801BA30: .4byte gLoadedSaveGame
_0801BA34: .4byte gUnknown_030054A8
_0801BA38:
	ldr r0, _0801BA48 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BA52
	.align 2, 0
_0801BA48: .4byte gUnknown_080D5204
_0801BA4C:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BA52:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BA58
sub_801BA58: @ 0x0801BA58
	push {lr}
	ldr r3, _0801BA90 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BA94 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BAB8
	ldr r0, _0801BA98 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BAA4
	ldr r0, _0801BA9C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BAA4
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BAA4
	ldr r1, _0801BAA0 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BABE
	.align 2, 0
_0801BA90: .4byte gUnknown_030055B4
_0801BA94: .4byte gUnknown_030054CC
_0801BA98: .4byte gUnknown_030054F0
_0801BA9C: .4byte gLoadedSaveGame
_0801BAA0: .4byte gUnknown_030054A8
_0801BAA4:
	ldr r0, _0801BAB4 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BABE
	.align 2, 0
_0801BAB4: .4byte gUnknown_080D5204
_0801BAB8:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BABE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BAC4
sub_801BAC4: @ 0x0801BAC4
	push {lr}
	ldr r3, _0801BAFC @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BB00 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BB24
	ldr r0, _0801BB04 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BB10
	ldr r0, _0801BB08 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BB10
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BB10
	ldr r1, _0801BB0C @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BB2A
	.align 2, 0
_0801BAFC: .4byte gUnknown_030055B4
_0801BB00: .4byte gUnknown_030054CC
_0801BB04: .4byte gUnknown_030054F0
_0801BB08: .4byte gLoadedSaveGame
_0801BB0C: .4byte gUnknown_030054A8
_0801BB10:
	ldr r0, _0801BB20 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BB2A
	.align 2, 0
_0801BB20: .4byte gUnknown_080D5204
_0801BB24:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BB2A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BB30
sub_801BB30: @ 0x0801BB30
	push {lr}
	ldr r3, _0801BB68 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BB6C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BB90
	ldr r0, _0801BB70 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BB7C
	ldr r0, _0801BB74 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BB7C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BB7C
	ldr r1, _0801BB78 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BB96
	.align 2, 0
_0801BB68: .4byte gUnknown_030055B4
_0801BB6C: .4byte gUnknown_030054CC
_0801BB70: .4byte gUnknown_030054F0
_0801BB74: .4byte gLoadedSaveGame
_0801BB78: .4byte gUnknown_030054A8
_0801BB7C:
	ldr r0, _0801BB8C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BB96
	.align 2, 0
_0801BB8C: .4byte gUnknown_080D5204
_0801BB90:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BB96:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BB9C
sub_801BB9C: @ 0x0801BB9C
	push {lr}
	movs r0, #0x80
	lsls r0, r0, #6
	ldr r1, _0801BBE4 @ =0x000002AE
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801BBE8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BBEC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BC10
	ldr r0, _0801BBF0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BBFC
	ldr r0, _0801BBF4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BBFC
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BBFC
	ldr r1, _0801BBF8 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BC16
	.align 2, 0
_0801BBE4: .4byte 0x000002AE
_0801BBE8: .4byte gUnknown_030055B4
_0801BBEC: .4byte gUnknown_030054CC
_0801BBF0: .4byte gUnknown_030054F0
_0801BBF4: .4byte gLoadedSaveGame
_0801BBF8: .4byte gUnknown_030054A8
_0801BBFC:
	ldr r0, _0801BC0C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BC16
	.align 2, 0
_0801BC0C: .4byte gUnknown_080D5204
_0801BC10:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BC16:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BC1C
sub_801BC1C: @ 0x0801BC1C
	push {lr}
	ldr r3, _0801BC54 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BC58 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BC7C
	ldr r0, _0801BC5C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BC68
	ldr r0, _0801BC60 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BC68
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BC68
	ldr r1, _0801BC64 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BC82
	.align 2, 0
_0801BC54: .4byte gUnknown_030055B4
_0801BC58: .4byte gUnknown_030054CC
_0801BC5C: .4byte gUnknown_030054F0
_0801BC60: .4byte gLoadedSaveGame
_0801BC64: .4byte gUnknown_030054A8
_0801BC68:
	ldr r0, _0801BC78 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BC82
	.align 2, 0
_0801BC78: .4byte gUnknown_080D5204
_0801BC7C:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BC82:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BC88
sub_801BC88: @ 0x0801BC88
	push {lr}
	movs r0, #0x80
	lsls r0, r0, #6
	ldr r1, _0801BCD0 @ =0x000002AE
	movs r2, #0
	movs r3, #0
	bl sub_8009628
	ldr r3, _0801BCD4 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BCD8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BCFC
	ldr r0, _0801BCDC @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BCE8
	ldr r0, _0801BCE0 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BCE8
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BCE8
	ldr r1, _0801BCE4 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BD02
	.align 2, 0
_0801BCD0: .4byte 0x000002AE
_0801BCD4: .4byte gUnknown_030055B4
_0801BCD8: .4byte gUnknown_030054CC
_0801BCDC: .4byte gUnknown_030054F0
_0801BCE0: .4byte gLoadedSaveGame
_0801BCE4: .4byte gUnknown_030054A8
_0801BCE8:
	ldr r0, _0801BCF8 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BD02
	.align 2, 0
_0801BCF8: .4byte gUnknown_080D5204
_0801BCFC:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BD02:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BD08
sub_801BD08: @ 0x0801BD08
	push {lr}
	ldr r3, _0801BD40 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BD44 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BD68
	ldr r0, _0801BD48 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BD54
	ldr r0, _0801BD4C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BD54
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BD54
	ldr r1, _0801BD50 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BD6E
	.align 2, 0
_0801BD40: .4byte gUnknown_030055B4
_0801BD44: .4byte gUnknown_030054CC
_0801BD48: .4byte gUnknown_030054F0
_0801BD4C: .4byte gLoadedSaveGame
_0801BD50: .4byte gUnknown_030054A8
_0801BD54:
	ldr r0, _0801BD64 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BD6E
	.align 2, 0
_0801BD64: .4byte gUnknown_080D5204
_0801BD68:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BD6E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BD74
sub_801BD74: @ 0x0801BD74
	push {lr}
	ldr r3, _0801BDAC @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BDB0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BDD4
	ldr r0, _0801BDB4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BDC0
	ldr r0, _0801BDB8 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BDC0
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BDC0
	ldr r1, _0801BDBC @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BDDA
	.align 2, 0
_0801BDAC: .4byte gUnknown_030055B4
_0801BDB0: .4byte gUnknown_030054CC
_0801BDB4: .4byte gUnknown_030054F0
_0801BDB8: .4byte gLoadedSaveGame
_0801BDBC: .4byte gUnknown_030054A8
_0801BDC0:
	ldr r0, _0801BDD0 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BDDA
	.align 2, 0
_0801BDD0: .4byte gUnknown_080D5204
_0801BDD4:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BDDA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BDE0
sub_801BDE0: @ 0x0801BDE0
	push {lr}
	ldr r3, _0801BE18 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BE1C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BE40
	ldr r0, _0801BE20 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BE2C
	ldr r0, _0801BE24 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BE2C
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BE2C
	ldr r1, _0801BE28 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BE46
	.align 2, 0
_0801BE18: .4byte gUnknown_030055B4
_0801BE1C: .4byte gUnknown_030054CC
_0801BE20: .4byte gUnknown_030054F0
_0801BE24: .4byte gLoadedSaveGame
_0801BE28: .4byte gUnknown_030054A8
_0801BE2C:
	ldr r0, _0801BE3C @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BE46
	.align 2, 0
_0801BE3C: .4byte gUnknown_080D5204
_0801BE40:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BE46:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BE4C
sub_801BE4C: @ 0x0801BE4C
	push {lr}
	ldr r3, _0801BE84 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BE88 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BEAC
	ldr r0, _0801BE8C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BE98
	ldr r0, _0801BE90 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BE98
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BE98
	ldr r1, _0801BE94 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BEB2
	.align 2, 0
_0801BE84: .4byte gUnknown_030055B4
_0801BE88: .4byte gUnknown_030054CC
_0801BE8C: .4byte gUnknown_030054F0
_0801BE90: .4byte gLoadedSaveGame
_0801BE94: .4byte gUnknown_030054A8
_0801BE98:
	ldr r0, _0801BEA8 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BEB2
	.align 2, 0
_0801BEA8: .4byte gUnknown_080D5204
_0801BEAC:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BEB2:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BEB8
sub_801BEB8: @ 0x0801BEB8
	push {lr}
	ldr r3, _0801BEF0 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BEF4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BF18
	ldr r0, _0801BEF8 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BF04
	ldr r0, _0801BEFC @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BF04
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BF04
	ldr r1, _0801BF00 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BF1E
	.align 2, 0
_0801BEF0: .4byte gUnknown_030055B4
_0801BEF4: .4byte gUnknown_030054CC
_0801BEF8: .4byte gUnknown_030054F0
_0801BEFC: .4byte gLoadedSaveGame
_0801BF00: .4byte gUnknown_030054A8
_0801BF04:
	ldr r0, _0801BF14 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BF1E
	.align 2, 0
_0801BF14: .4byte gUnknown_080D5204
_0801BF18:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BF1E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BF24
sub_801BF24: @ 0x0801BF24
	push {lr}
	ldr r3, _0801BF5C @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BF60 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BF84
	ldr r0, _0801BF64 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BF70
	ldr r0, _0801BF68 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BF70
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BF70
	ldr r1, _0801BF6C @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BF8A
	.align 2, 0
_0801BF5C: .4byte gUnknown_030055B4
_0801BF60: .4byte gUnknown_030054CC
_0801BF64: .4byte gUnknown_030054F0
_0801BF68: .4byte gLoadedSaveGame
_0801BF6C: .4byte gUnknown_030054A8
_0801BF70:
	ldr r0, _0801BF80 @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BF8A
	.align 2, 0
_0801BF80: .4byte gUnknown_080D5204
_0801BF84:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BF8A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BF90
sub_801BF90: @ 0x0801BF90
	push {lr}
	ldr r3, _0801BFC8 @ =gUnknown_030055B4
	movs r2, #0
	ldrsb r2, [r3, r2]
	lsls r0, r2, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0801BFCC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801BFF0
	ldr r0, _0801BFD0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801BFDC
	ldr r0, _0801BFD4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #7]
	cmp r0, r2
	bgt _0801BFDC
	adds r0, r2, #0
	cmp r0, #0x12
	bne _0801BFDC
	ldr r1, _0801BFD8 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801BFF6
	.align 2, 0
_0801BFC8: .4byte gUnknown_030055B4
_0801BFCC: .4byte gUnknown_030054CC
_0801BFD0: .4byte gUnknown_030054F0
_0801BFD4: .4byte gLoadedSaveGame
_0801BFD8: .4byte gUnknown_030054A8
_0801BFDC:
	ldr r0, _0801BFEC @ =gUnknown_080D5204
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801BFF6
	.align 2, 0
_0801BFEC: .4byte gUnknown_080D5204
_0801BFF0:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801BFF6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801BFFC
sub_801BFFC: @ 0x0801BFFC
	push {lr}
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, _0801C034 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801C05C
	ldr r0, _0801C038 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0801C048
	ldr r0, _0801C03C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	ldr r2, _0801C040 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _0801C048
	cmp r0, #0x12
	bne _0801C048
	ldr r1, _0801C044 @ =gUnknown_030054A8
	movs r0, #0x1e
	strb r0, [r1, #1]
	b _0801C062
	.align 2, 0
_0801C034: .4byte gUnknown_030054CC
_0801C038: .4byte gUnknown_030054F0
_0801C03C: .4byte gLoadedSaveGame
_0801C040: .4byte gUnknown_030055B4
_0801C044: .4byte gUnknown_030054A8
_0801C048:
	ldr r0, _0801C058 @ =gUnknown_080D5204
	lsls r1, r3, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	bl m4aSongNumStart
	b _0801C062
	.align 2, 0
_0801C058: .4byte gUnknown_080D5204
_0801C05C:
	movs r0, #0x3a
	bl m4aSongNumStart
_0801C062:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801C068
sub_801C068: @ 0x0801C068
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	ldr r6, _0801C1CC @ =gUnknown_03005960
	lsls r0, r0, #2
	str r0, [sp, #4]
	ldr r0, _0801C1D0 @ =gUnknown_080D5A98
	ldr r1, [sp, #4]
	adds r1, r1, r0
	mov r8, r1
	ldr r4, _0801C1D4 @ =gDispCnt
	movs r2, #0xf9
	lsls r2, r2, #6
	adds r0, r2, #0
	strh r0, [r4]
	mov r3, sl
	cmp r3, #0x1d
	bne _0801C09A
	ldr r1, _0801C1D8 @ =0x00003741
	adds r0, r1, #0
	strh r0, [r4]
_0801C09A:
	ldr r3, _0801C1DC @ =gBgCntRegs
	movs r2, #0
	mov sb, r2
	ldr r0, _0801C1E0 @ =0x00001E01
	strh r0, [r3, #2]
	ldr r0, _0801C1E4 @ =0x00001F02
	strh r0, [r3, #4]
	mov r0, r8
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r1, #0x1f
	asrs r1, r1, #6
	ldrb r0, [r0, #1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x1f
	asrs r0, r0, #6
	lsls r0, r0, #1
	orrs r1, r0
	lsls r1, r1, #0xe
	mov r2, r8
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r0, r0, #8
	movs r2, #3
	orrs r0, r2
	orrs r1, r0
	mov r2, r8
	movs r0, #2
	ldrsb r0, [r2, r0]
	lsls r0, r0, #2
	orrs r1, r0
	strh r1, [r3, #6]
	mov r3, sl
	cmp r3, #0x1d
	bne _0801C0E8
	ldr r1, _0801C1E8 @ =0x00003641
	adds r0, r1, #0
	strh r0, [r4]
_0801C0E8:
	ldr r7, _0801C1EC @ =gUnknown_03005850
	ldr r5, _0801C1F0 @ =gUnknown_080D5864
	ldr r0, _0801C1F4 @ =gUnknown_03005890
	adds r1, r5, #0
	movs r2, #0x40
	bl memcpy
	mov r2, sl
	lsls r4, r2, #1
	add r4, sl
	adds r0, r7, #0
	adds r0, #0x5c
	strh r4, [r0]
	adds r1, r5, #0
	adds r1, #0x40
	ldr r0, _0801C1F8 @ =gUnknown_030058D0
	movs r2, #0x40
	bl memcpy
	adds r1, r4, #1
	adds r0, r7, #0
	adds r0, #0x9c
	strh r1, [r0]
	adds r5, #0x80
	ldr r0, _0801C1FC @ =gUnknown_03005910
	adds r1, r5, #0
	movs r2, #0x40
	bl memcpy
	adds r4, #2
	adds r0, r7, #0
	adds r0, #0xdc
	strh r4, [r0]
	adds r2, r7, #0
	adds r2, #0xc4
	mov r3, r8
	movs r0, #2
	ldrsb r0, [r3, r0]
	lsls r0, r0, #0xe
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r0, r0, r1
	str r0, [r2]
	adds r2, #8
	movs r0, #3
	ldrsb r0, [r3, r0]
	lsls r0, r0, #0xb
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0
	ldrsb r0, [r3, r0]
	adds r1, r7, #0
	adds r1, #0xe6
	strh r0, [r1]
	movs r1, #1
	ldrsb r1, [r3, r1]
	adds r0, r7, #0
	adds r0, #0xe8
	strh r1, [r0]
	ldr r3, _0801C200 @ =gUnknown_03004D80
	mov r0, sb
	strb r0, [r3, #1]
	ldr r0, _0801C204 @ =gUnknown_03002280
	mov r1, sb
	strb r1, [r0, #4]
	strb r1, [r0, #5]
	movs r1, #0xff
	strb r1, [r0, #6]
	movs r2, #0x20
	strb r2, [r0, #7]
	mov r1, sb
	strb r1, [r3, #2]
	strb r1, [r0, #8]
	strb r1, [r0, #9]
	movs r1, #1
	rsbs r1, r1, #0
	strb r1, [r0, #0xa]
	strb r2, [r0, #0xb]
	ldr r4, _0801C208 @ =gUnknown_030054CC
	ldrb r0, [r4]
	cmp r0, #5
	bne _0801C1A4
	adds r1, r7, #0
	adds r1, #0x6e
	ldrh r0, [r1]
	movs r3, #0x82
	lsls r3, r3, #2
	adds r2, r3, #0
	orrs r0, r2
	strh r0, [r1]
	adds r1, #0x40
	ldrh r0, [r1]
	orrs r0, r2
	strh r0, [r1]
_0801C1A4:
	mov r0, sl
	cmp r0, #0x1d
	beq _0801C1BC
	ldr r0, _0801C1F4 @ =gUnknown_03005890
	bl sub_8002A3C
	ldr r0, _0801C1F8 @ =gUnknown_030058D0
	bl sub_8002A3C
	ldr r0, _0801C1FC @ =gUnknown_03005910
	bl sub_8002A3C
_0801C1BC:
	ldrb r0, [r4]
	cmp r0, #5
	beq _0801C214
	ldr r0, _0801C20C @ =gUnknown_030059C8
	ldr r1, _0801C210 @ =gUnknown_080D62D8
	ldr r2, [sp, #4]
	adds r1, r2, r1
	b _0801C218
	.align 2, 0
_0801C1CC: .4byte gUnknown_03005960
_0801C1D0: .4byte gUnknown_080D5A98
_0801C1D4: .4byte gDispCnt
_0801C1D8: .4byte 0x00003741
_0801C1DC: .4byte gBgCntRegs
_0801C1E0: .4byte 0x00001E01
_0801C1E4: .4byte 0x00001F02
_0801C1E8: .4byte 0x00003641
_0801C1EC: .4byte gUnknown_03005850
_0801C1F0: .4byte gUnknown_080D5864
_0801C1F4: .4byte gUnknown_03005890
_0801C1F8: .4byte gUnknown_030058D0
_0801C1FC: .4byte gUnknown_03005910
_0801C200: .4byte gUnknown_03004D80
_0801C204: .4byte gUnknown_03002280
_0801C208: .4byte gUnknown_030054CC
_0801C20C: .4byte gUnknown_030059C8
_0801C210: .4byte gUnknown_080D62D8
_0801C214:
	ldr r0, _0801C288 @ =gUnknown_030059C8
	ldr r1, _0801C28C @ =gUnknown_02033004
_0801C218:
	ldr r1, [r1]
	str r1, [r0]
	movs r3, #0
	str r3, [r6, #0x28]
	ldr r1, [r0]
	ldr r0, [r1, #0x20]
	str r0, [r6, #0x2c]
	str r3, [r6, #0x30]
	ldr r0, [r1, #0x1c]
	str r0, [r6, #0x34]
	ldr r1, _0801C290 @ =gUnknown_030055B4
	ldrb r2, [r1]
	movs r0, #3
	ands r0, r2
	adds r4, r1, #0
	cmp r0, #2
	beq _0801C24E
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0801C24A
	ldr r0, _0801C294 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0801C24E
_0801C24A:
	cmp r1, #0x1d
	bne _0801C2D0
_0801C24E:
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1d
	bne _0801C2AC
	ldr r0, _0801C298 @ =gUnknown_030059E0
	adds r0, #8
	ldr r1, _0801C298 @ =gUnknown_030059E0
	adds r1, #0xc
	bl sub_802C668
	ldr r1, _0801C29C @ =gUnknown_03005440
	ldr r2, _0801C2A0 @ =gUnknown_080D5964
	ldrh r0, [r2, #0x20]
	strh r0, [r1]
	ldr r1, _0801C2A4 @ =gUnknown_030054BC
	ldrh r0, [r2, #0x22]
	strh r0, [r1]
	movs r0, #0x96
	lsls r0, r0, #2
	str r0, [r6]
	movs r0, #0x78
	str r0, [r6, #0x10]
	movs r0, #0
	str r0, [r6, #0x14]
	str r0, [r6, #4]
	adds r1, r6, #0
	adds r1, #0x64
	ldr r0, _0801C2A8 @ =0x0000FFFC
	b _0801C304
	.align 2, 0
_0801C288: .4byte gUnknown_030059C8
_0801C28C: .4byte gUnknown_02033004
_0801C290: .4byte gUnknown_030055B4
_0801C294: .4byte gUnknown_030054B0
_0801C298: .4byte gUnknown_030059E0
_0801C29C: .4byte gUnknown_03005440
_0801C2A0: .4byte gUnknown_080D5964
_0801C2A4: .4byte gUnknown_030054BC
_0801C2A8: .4byte 0x0000FFFC
_0801C2AC:
	ldr r3, _0801C2C8 @ =gUnknown_030059E0
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	str r0, [r6]
	ldr r1, _0801C2CC @ =0xFFFFFE20
	adds r0, r0, r1
	str r0, [r6, #0x10]
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	subs r0, #0x54
	str r0, [r6, #4]
	str r0, [r6, #0x14]
	b _0801C2FA
	.align 2, 0
_0801C2C8: .4byte gUnknown_030059E0
_0801C2CC: .4byte 0xFFFFFE20
_0801C2D0:
	ldr r2, _0801C380 @ =gUnknown_030059E0
	ldr r1, [r2, #8]
	asrs r1, r1, #8
	subs r1, #0x78
	str r1, [r6]
	ldr r0, [r2, #0xc]
	asrs r0, r0, #8
	subs r0, #0x54
	str r0, [r6, #4]
	cmp r1, #0
	bge _0801C2E8
	str r3, [r6]
_0801C2E8:
	ldr r0, [r6, #4]
	cmp r0, #0
	bge _0801C2F0
	str r3, [r6, #4]
_0801C2F0:
	ldr r0, [r6]
	str r0, [r6, #0x10]
	ldr r0, [r6, #4]
	str r0, [r6, #0x14]
	ldr r3, _0801C380 @ =gUnknown_030059E0
_0801C2FA:
	movs r0, #0x17
	ldrsb r0, [r3, r0]
	subs r0, #4
	adds r1, r6, #0
	adds r1, #0x64
_0801C304:
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r6, #8]
	movs r0, #0xc
	str r0, [r6, #0xc]
	adds r1, r6, #0
	adds r1, #0x56
	movs r0, #0
	strh r0, [r1]
	str r0, [r6, #0x18]
	str r0, [r6, #0x1c]
	str r0, [r6, #0x20]
	str r0, [r6, #0x24]
	subs r1, #0x16
	strh r0, [r1]
	movs r1, #8
	str r1, [r6, #0x44]
	str r0, [r6, #0x48]
	str r0, [r6, #0x4c]
	adds r1, r6, #0
	adds r1, #0x50
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #0xc
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	ldr r0, _0801C384 @ =sub_801E0A8
	movs r2, #0xf0
	lsls r2, r2, #4
	ldr r1, _0801C388 @ =sub_801E040
	str r1, [sp]
	movs r1, #0
	movs r3, #0
	bl TaskCreate
	str r0, [r6, #0x5c]
	ldr r0, _0801C38C @ =gUnknown_080D5A10
	mov r2, sl
	lsls r1, r2, #2
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [r6, #0x58]
	ldr r0, _0801C390 @ =gUnknown_080D5988
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _0801C370
	bl _call_via_r0
_0801C370:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801C380: .4byte gUnknown_030059E0
_0801C384: .4byte sub_801E0A8
_0801C388: .4byte sub_801E040
_0801C38C: .4byte gUnknown_080D5A10
_0801C390: .4byte gUnknown_080D5988

	thumb_func_start sub_801C394
sub_801C394: @ 0x0801C394
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0801C414 @ =gUnknown_030059E0
	mov r8, r0
	ldr r5, _0801C418 @ =gUnknown_03005960
	ldr r6, [r5]
	ldr r7, [r5, #4]
	str r6, [r5, #0x38]
	str r7, [r5, #0x3c]
	ldr r0, [r5, #0x30]
	adds r3, r5, #0
	cmp r6, r0
	blt _0801C3BE
	ldr r0, [r5, #0x34]
	adds r1, r0, #0
	subs r1, #0xf1
	adds r0, r6, #0
	cmp r0, r1
	ble _0801C3BE
	adds r0, r1, #0
_0801C3BE:
	adds r6, r0, #0
	ldr r0, [r5, #0x28]
	cmp r7, r0
	blt _0801C3D0
	ldr r0, [r5, #0x2c]
	subs r0, #0xa1
	adds r1, r7, #0
	cmp r1, r0
	ble _0801C3D2
_0801C3D0:
	adds r1, r0, #0
_0801C3D2:
	adds r7, r1, #0
	ldr r0, _0801C41C @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _0801C3F6
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0801C3F0
	ldr r0, _0801C420 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0801C3F6
_0801C3F0:
	cmp r1, #0x1d
	beq _0801C3F6
	b _0801C508
_0801C3F6:
	mov r1, r8
	ldr r4, [r1, #0x20]
	movs r0, #0x80
	ands r4, r0
	cmp r4, #0
	beq _0801C424
	ldr r2, [r5, #0x58]
	cmp r2, #0
	bne _0801C40A
	b _0801C6FE
_0801C40A:
	ldr r0, [r3]
	ldr r1, [r3, #4]
	bl _call_via_r2
	b _0801C6FE
	.align 2, 0
_0801C414: .4byte gUnknown_030059E0
_0801C418: .4byte gUnknown_03005960
_0801C41C: .4byte gUnknown_030055B4
_0801C420: .4byte gUnknown_030054B0
_0801C424:
	ldr r0, _0801C468 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0801C43C
	mov r0, r8
	adds r0, #8
	mov r1, r8
	adds r1, #0xc
	bl sub_802C668
_0801C43C:
	ldr r2, [r5, #0x10]
	mov ip, r2
	mov r3, ip
	adds r3, #5
	str r3, [r5, #0x10]
	adds r6, #5
	adds r1, r6, #0
	adds r1, #0x79
	mov r2, r8
	ldr r0, [r2, #8]
	asrs r2, r0, #8
	cmp r1, r2
	bge _0801C472
	mov r0, ip
	adds r0, #0x55
	cmp r0, r6
	ble _0801C46C
	adds r0, r2, #0
	subs r0, #0x78
	subs r0, r0, r6
	str r0, [r5, #0x18]
	b _0801C486
	.align 2, 0
_0801C468: .4byte gUnknown_030055B4
_0801C46C:
	adds r6, r0, #0
	str r4, [r5, #0x18]
	b _0801C486
_0801C472:
	str r4, [r5, #0x18]
	adds r0, r6, #0
	adds r0, #0x60
	cmp r0, r2
	ble _0801C486
	adds r6, r2, #0
	subs r6, #0x60
	cmp r6, r3
	bge _0801C486
	adds r6, r3, #0
_0801C486:
	mov r3, r8
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	subs r1, r0, r7
	ldr r0, _0801C4B0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0801C4B8
	cmp r1, #0x30
	ble _0801C4BC
	ldr r0, _0801C4B4 @ =gUnknown_030054BC
	ldrh r0, [r0]
	subs r0, #0xd0
	cmp r1, r0
	blt _0801C4CA
	adds r0, r7, #0
	subs r0, #0x70
	b _0801C4C0
	.align 2, 0
_0801C4B0: .4byte gUnknown_030055B4
_0801C4B4: .4byte gUnknown_030054BC
_0801C4B8:
	cmp r1, #0x30
	bgt _0801C4C8
_0801C4BC:
	adds r0, r7, #0
	subs r0, #0x30
_0801C4C0:
	adds r7, r1, r0
	movs r0, #0
	str r0, [r5, #0x1c]
	b _0801C4CA
_0801C4C8:
	adds r7, #2
_0801C4CA:
	ldr r0, _0801C500 @ =gUnknown_03005440
	ldrh r0, [r0]
	cmp r7, r0
	blt _0801C4DE
	ldr r0, _0801C504 @ =gUnknown_030054BC
	ldrh r0, [r0]
	subs r0, #0xa0
	adds r1, r7, #0
	cmp r1, r0
	ble _0801C4E0
_0801C4DE:
	adds r1, r0, #0
_0801C4E0:
	ldr r0, [r5, #0x18]
	adds r6, r6, r0
	ldr r0, [r5, #0x1c]
	adds r7, r1, r0
	adds r0, r5, #0
	adds r0, #0x60
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r6, r6, r0
	adds r0, r5, #0
	adds r0, #0x62
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r7, r7, r0
	b _0801C6D8
	.align 2, 0
_0801C500: .4byte gUnknown_03005440
_0801C504: .4byte gUnknown_030054BC
_0801C508:
	adds r1, r5, #0
	adds r1, #0x40
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	beq _0801C51C
	subs r0, r2, #1
	strh r0, [r1]
	b _0801C5B6
_0801C51C:
	adds r4, r5, #0
	adds r4, #0x50
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0801C55A
	mov r0, r8
	ldrh r1, [r0, #0x10]
	ldr r0, [r0, #8]
	asrs r0, r0, #8
	ldr r2, [r5, #0x18]
	adds r0, r0, r2
	subs r0, #0x78
	str r0, [r5, #0x10]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r3, r5, #0
	adds r3, #0x56
	movs r0, #0
	ldrsh r2, [r3, r0]
	lsls r0, r2, #4
	subs r0, r0, r2
	adds r1, r1, r0
	asrs r1, r1, #4
	strh r1, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x15
	ldr r0, [r5, #0x10]
	adds r0, r0, r1
	str r0, [r5, #0x10]
_0801C55A:
	ldrh r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0801C5B6
	adds r2, r5, #0
	adds r2, #0x64
	movs r1, #0
	ldrsh r4, [r2, r1]
	mov r3, r8
	movs r0, #0x17
	ldrsb r0, [r3, r0]
	subs r3, r0, #4
	ldr r0, _0801C594 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801C582
	rsbs r3, r3, #0
_0801C582:
	cmp r4, r3
	beq _0801C5A2
	cmp r4, r3
	bge _0801C598
	adds r4, #5
	cmp r4, r3
	ble _0801C5A0
	b _0801C59E
	.align 2, 0
_0801C594: .4byte gUnknown_03005424
_0801C598:
	subs r4, #5
	cmp r4, r3
	bge _0801C5A0
_0801C59E:
	adds r4, r3, #0
_0801C5A0:
	strh r4, [r2]
_0801C5A2:
	mov r1, r8
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	ldr r1, [r5, #0x1c]
	adds r0, r0, r1
	ldr r1, [r5, #0x4c]
	subs r1, #0x50
	adds r0, r0, r1
	adds r0, r0, r4
	str r0, [r5, #0x14]
_0801C5B6:
	ldr r0, [r5, #0x10]
	subs r1, r0, r6
	ldr r0, [r5, #0x44]
	cmp r1, r0
	ble _0801C5D2
	subs r2, r1, r0
	ldr r0, [r5, #8]
	asrs r1, r0, #8
	adds r3, r0, #0
	cmp r1, r2
	ble _0801C5CE
	adds r1, r2, #0
_0801C5CE:
	adds r6, r6, r1
	b _0801C5E6
_0801C5D2:
	ldr r3, [r5, #8]
	cmn r1, r0
	bge _0801C5E6
	adds r1, r1, r0
	asrs r0, r3, #8
	rsbs r0, r0, #0
	cmp r0, r1
	bge _0801C5E4
	adds r0, r1, #0
_0801C5E4:
	adds r6, r6, r0
_0801C5E6:
	ldr r4, [r5, #0x30]
	cmp r6, r4
	bge _0801C5F0
	adds r0, r4, #0
	b _0801C5FE
_0801C5F0:
	ldr r0, [r5, #0x34]
	adds r1, r0, #0
	subs r1, #0xf0
	adds r0, r6, #0
	cmp r0, r1
	ble _0801C5FE
	adds r0, r1, #0
_0801C5FE:
	adds r6, r0, #0
	ldr r0, _0801C644 @ =0x00000FFF
	cmp r3, r0
	bgt _0801C60C
	adds r0, r3, #0
	adds r0, #0x20
	str r0, [r5, #8]
_0801C60C:
	mov r2, r8
	ldr r0, [r2, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0801C648
	mov r0, r8
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	bne _0801C634
	mov r0, r8
	adds r0, #0x61
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #9
	beq _0801C648
_0801C634:
	ldr r0, [r5, #0x48]
	adds r0, #4
	str r0, [r5, #0x48]
	cmp r0, #0x18
	ble _0801C654
	movs r0, #0x18
	b _0801C654
	.align 2, 0
_0801C644: .4byte 0x00000FFF
_0801C648:
	ldr r0, [r5, #0x48]
	subs r0, #4
	str r0, [r5, #0x48]
	cmp r0, #0
	bge _0801C654
	movs r0, #0
_0801C654:
	str r0, [r5, #0x48]
	ldr r0, [r5, #0x14]
	subs r1, r0, r7
	ldr r0, [r5, #0x48]
	cmp r1, r0
	ble _0801C66E
	subs r0, r1, r0
	ldr r1, [r5, #0xc]
	cmp r1, r0
	ble _0801C66A
	adds r1, r0, #0
_0801C66A:
	adds r7, r7, r1
	b _0801C680
_0801C66E:
	cmn r1, r0
	bge _0801C680
	adds r1, r1, r0
	ldr r0, [r5, #0xc]
	rsbs r0, r0, #0
	cmp r0, r1
	bge _0801C67E
	adds r0, r1, #0
_0801C67E:
	adds r7, r7, r0
_0801C680:
	ldr r2, [r5, #0x28]
	cmp r7, r2
	bge _0801C68A
	adds r1, r2, #0
	b _0801C696
_0801C68A:
	ldr r0, [r5, #0x2c]
	subs r0, #0xa0
	adds r1, r7, #0
	cmp r1, r0
	ble _0801C696
	adds r1, r0, #0
_0801C696:
	adds r7, r1, #0
	cmp r6, r4
	bge _0801C6A0
	adds r0, r4, #0
	b _0801C6AE
_0801C6A0:
	ldr r0, [r5, #0x34]
	adds r1, r0, #0
	subs r1, #0xf0
	adds r0, r6, #0
	cmp r0, r1
	ble _0801C6AE
	adds r0, r1, #0
_0801C6AE:
	adds r6, r0, #0
	cmp r7, r2
	bge _0801C6B8
	adds r1, r2, #0
	b _0801C6C4
_0801C6B8:
	ldr r0, [r5, #0x2c]
	subs r0, #0xa0
	adds r1, r7, #0
	cmp r1, r0
	ble _0801C6C4
	adds r1, r0, #0
_0801C6C4:
	adds r0, r5, #0
	adds r0, #0x60
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r6, r6, r0
	adds r0, r5, #0
	adds r0, #0x62
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r7, r1, r0
_0801C6D8:
	str r6, [r5]
	str r7, [r5, #4]
	ldr r0, [r5, #0x38]
	subs r0, r0, r6
	str r0, [r5, #0x38]
	ldr r0, [r5, #0x3c]
	subs r0, r0, r7
	str r0, [r5, #0x3c]
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_801C708
	ldr r2, [r5, #0x58]
	cmp r2, #0
	beq _0801C6FE
	adds r0, r6, #0
	adds r1, r7, #0
	bl _call_via_r2
_0801C6FE:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_801C708
sub_801C708: @ 0x0801C708
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	mov sb, r1
	ldr r0, _0801C768 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _0801C75C
	ldr r4, _0801C76C @ =gUnknown_03005890
	ldr r0, _0801C770 @ =gBgScrollRegs
	mov r8, r0
	movs r0, #7
	adds r6, r7, #0
	ands r6, r0
	mov r1, r8
	strh r6, [r1, #4]
	mov r5, sb
	ands r5, r0
	strh r5, [r1, #6]
	strh r7, [r4, #0x30]
	mov r0, sb
	strh r0, [r4, #0x32]
	adds r0, r4, #0
	bl sub_8002A3C
	adds r0, r4, #0
	bl sub_8003638
	adds r4, #0x40
	mov r1, r8
	strh r6, [r1, #8]
	strh r5, [r1, #0xa]
	strh r7, [r4, #0x30]
	mov r0, sb
	strh r0, [r4, #0x32]
	adds r0, r4, #0
	bl sub_8002A3C
_0801C75C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801C768: .4byte gUnknown_030055B4
_0801C76C: .4byte gUnknown_03005890
_0801C770: .4byte gBgScrollRegs

	thumb_func_start sub_801C774
sub_801C774: @ 0x0801C774
	push {r4, lr}
	ldr r4, _0801C7B4 @ =gUnknown_03005850
	ldr r2, _0801C7B8 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801C7BC @ =gBgCntRegs
	ldr r0, _0801C7C0 @ =0x00001B0F
	strh r0, [r1]
	ldr r0, _0801C7C4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801C7D4
	ldr r1, _0801C7C8 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0x71
	strh r0, [r4, #0x1c]
	ldr r0, _0801C7CC @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801C7D0 @ =0x0600D800
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	b _0801C7F2
	.align 2, 0
_0801C7B4: .4byte gUnknown_03005850
_0801C7B8: .4byte gDispCnt
_0801C7BC: .4byte gBgCntRegs
_0801C7C0: .4byte 0x00001B0F
_0801C7C4: .4byte gUnknown_030054CC
_0801C7C8: .4byte gUnknown_080D5864
_0801C7CC: .4byte 0x0600C000
_0801C7D0: .4byte 0x0600D800
_0801C7D4:
	ldr r1, _0801C808 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #2
	strh r0, [r4, #0x1c]
	ldr r0, _0801C80C @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801C810 @ =0x0600D800
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	movs r0, #0x1e
_0801C7F2:
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	ldr r1, _0801C814 @ =gBgScrollRegs
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801C808: .4byte gUnknown_080D5864
_0801C80C: .4byte 0x0600C000
_0801C810: .4byte 0x0600D800
_0801C814: .4byte gBgScrollRegs

	thumb_func_start sub_801C818
sub_801C818: @ 0x0801C818
	push {r4, r5, r6, r7, lr}
	ldr r0, _0801C868 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0801C824
	b _0801C944
_0801C824:
	ldr r1, _0801C86C @ =gUnknown_030059E0
	ldr r2, [r1, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0x14
	ands r0, r2
	adds r7, r1, #0
	cmp r0, #0
	beq _0801C880
	ldr r0, _0801C870 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801C880
	movs r0, #0x80
	lsls r0, r0, #0x13
	ands r2, r0
	movs r4, #0xf
	cmp r2, #0
	beq _0801C84A
	movs r4, #7
_0801C84A:
	ldr r1, _0801C874 @ =gBgScrollRegs
	movs r0, #0
	ldrsh r3, [r1, r0]
	ldr r0, _0801C878 @ =gUnknown_03005590
	ldr r0, [r0]
	ands r0, r4
	adds r5, r1, #0
	cmp r0, r4
	bne _0801C85E
	adds r3, #1
_0801C85E:
	movs r0, #0xff
	ands r3, r0
	strh r3, [r5]
	ldr r4, _0801C87C @ =gUnknown_03005960
	b _0801C892
	.align 2, 0
_0801C868: .4byte gUnknown_030054CC
_0801C86C: .4byte gUnknown_030059E0
_0801C870: .4byte gUnknown_030054F4
_0801C874: .4byte gBgScrollRegs
_0801C878: .4byte gUnknown_03005590
_0801C87C: .4byte gUnknown_03005960
_0801C880:
	ldr r2, _0801C8F0 @ =gBgScrollRegs
	ldr r3, _0801C8F4 @ =gUnknown_03005960
	ldr r0, [r3]
	asrs r0, r0, #6
	movs r1, #0xff
	ands r0, r1
	strh r0, [r2]
	adds r5, r2, #0
	adds r4, r3, #0
_0801C892:
	ldr r0, [r4, #4]
	asrs r0, r0, #9
	strh r0, [r5, #2]
	ldr r1, _0801C8F8 @ =gFlags
	ldr r0, [r1]
	movs r2, #4
	orrs r0, r2
	str r0, [r1]
	ldr r1, _0801C8FC @ =gUnknown_03002878
	ldr r0, _0801C900 @ =0x0400001C
	str r0, [r1]
	ldr r0, _0801C904 @ =gUnknown_03002A80
	strb r2, [r0]
	ldr r0, _0801C908 @ =gUnknown_03001884
	ldr r2, [r0]
	movs r6, #0
	ldr r1, [r7, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801C914
	ldr r0, _0801C90C @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801C914
	movs r0, #0x80
	lsls r0, r0, #0x13
	ands r1, r0
	movs r3, #0x1f
	cmp r1, #0
	beq _0801C8D4
	movs r3, #0xf
_0801C8D4:
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	ldr r0, _0801C910 @ =gUnknown_03005590
	ldr r0, [r0]
	ands r0, r3
	cmp r0, r3
	bne _0801C8E4
	adds r1, #1
_0801C8E4:
	movs r0, #0xff
	ands r1, r0
	strh r1, [r5, #0xc]
	ldrh r3, [r5, #0xc]
	b _0801C91C
	.align 2, 0
_0801C8F0: .4byte gBgScrollRegs
_0801C8F4: .4byte gUnknown_03005960
_0801C8F8: .4byte gFlags
_0801C8FC: .4byte gUnknown_03002878
_0801C900: .4byte 0x0400001C
_0801C904: .4byte gUnknown_03002A80
_0801C908: .4byte gUnknown_03001884
_0801C90C: .4byte gUnknown_030054F4
_0801C910: .4byte gUnknown_03005590
_0801C914:
	ldr r0, [r4]
	lsls r0, r0, #9
	lsrs r3, r0, #0x10
	strh r3, [r5, #0xc]
_0801C91C:
	ldr r0, [r4, #4]
	lsls r0, r0, #8
	lsrs r0, r0, #0x10
	movs r4, #0
	movs r1, #0x47
_0801C926:
	strh r6, [r2]
	adds r2, #2
	strh r4, [r2]
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bge _0801C926
	movs r1, #0x56
_0801C936:
	strh r3, [r2]
	adds r2, #2
	strh r0, [r2]
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bge _0801C936
_0801C944:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801C94C
sub_801C94C: @ 0x0801C94C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r2, r1, #0
	movs r0, #0
	mov sb, r0
	ldr r3, _0801C9C0 @ =gUnknown_030059E0
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801C992
	ldr r0, _0801C9C4 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801C992
	ldr r1, _0801C9C8 @ =gBgScrollRegs
	movs r4, #0xc
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bne _0801C982
	strh r6, [r1, #0xc]
_0801C982:
	ldrh r0, [r3, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	ldrh r7, [r1, #0xc]
	adds r0, r0, r7
	strh r0, [r1, #0xc]
	movs r0, #0xc
	ldrsh r6, [r1, r0]
_0801C992:
	ldr r0, _0801C9CC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801C9D0
	ldr r4, _0801C9C8 @ =gBgScrollRegs
	asrs r0, r6, #4
	strh r0, [r4, #0xc]
	adds r0, r2, #0
	movs r1, #0x10
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	mov r8, r1
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	ble _0801C9BA
	mov r8, r1
_0801C9BA:
	mov r2, r8
	strh r2, [r4, #0xe]
	b _0801CB58
	.align 2, 0
_0801C9C0: .4byte gUnknown_030059E0
_0801C9C4: .4byte gUnknown_030054F4
_0801C9C8: .4byte gBgScrollRegs
_0801C9CC: .4byte gUnknown_030054CC
_0801C9D0:
	adds r0, r2, #0
	movs r1, #0x10
	bl Div
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	mov r8, r3
	asrs r0, r0, #0x10
	movs r4, #0x80
	lsls r4, r4, #1
	cmp r0, r4
	ble _0801C9EA
	mov r8, r4
_0801C9EA:
	adds r0, r6, #0
	movs r1, #0x69
	bl Div
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r4
	ble _0801C9FE
	adds r3, r4, #0
_0801C9FE:
	ldr r1, _0801CA5C @ =gFlags
	ldr r0, [r1]
	movs r2, #4
	orrs r0, r2
	str r0, [r1]
	ldr r1, _0801CA60 @ =gUnknown_03002878
	ldr r0, _0801CA64 @ =0x0400001C
	str r0, [r1]
	ldr r0, _0801CA68 @ =gUnknown_03002A80
	strb r2, [r0]
	ldr r0, _0801CA6C @ =gUnknown_03001884
	ldr r4, [r0]
	ldr r0, _0801CA70 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	str r0, [sp]
	movs r5, #0
	mov r7, r8
	lsls r0, r7, #0x10
	lsls r3, r3, #0x10
	str r3, [sp, #0xc]
	asrs r2, r6, #3
	str r2, [sp, #8]
	asrs r2, r0, #0x10
	movs r3, #0xff
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #1
	asrs r0, r0, #5
	ands r0, r3
	lsls r0, r0, #0x10
	mov ip, r0
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	mov sl, r1
_0801CA48:
	adds r1, r2, r5
	adds r0, r1, #0
	subs r0, #0x6f
	cmp r0, #9
	bhi _0801CA74
	adds r0, #1
	muls r0, r6, r0
	asrs r0, r0, #5
	ands r0, r3
	b _0801CA82
	.align 2, 0
_0801CA5C: .4byte gFlags
_0801CA60: .4byte gUnknown_03002878
_0801CA64: .4byte 0x0400001C
_0801CA68: .4byte gUnknown_03002A80
_0801CA6C: .4byte gUnknown_03001884
_0801CA70: .4byte gUnknown_03005590
_0801CA74:
	cmp r1, #0x78
	ble _0801CA7E
	mov r7, ip
	lsrs r0, r7, #0x10
	b _0801CA82
_0801CA7E:
	ldr r1, [sp, #0xc]
	lsrs r0, r1, #0x10
_0801CA82:
	strh r0, [r4]
	adds r4, #2
	mov r7, r8
	strh r7, [r4]
	adds r4, #2
	adds r0, r2, r5
	lsls r1, r5, #3
	add r1, sl
	ldr r7, _0801CB68 @ =0x000003FF
	ands r1, r7
	lsls r1, r1, #1
	ldr r7, _0801CB6C @ =gUnknown_08097AA4
	adds r1, r1, r7
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x1c
	adds r0, r0, r1
	cmp r0, #0xb1
	bgt _0801CAB2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x9e
	bls _0801CA48
_0801CAB2:
	ldr r1, [sp, #8]
	lsls r0, r1, #0x10
	lsrs r3, r0, #0x10
	movs r2, #0
	mov ip, r2
	cmp r5, #0x9e
	bhi _0801CB58
	ldr r6, _0801CB6C @ =gUnknown_08097AA4
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r3, #0x80
	lsls r3, r3, #1
	mov sl, r3
_0801CACE:
	movs r7, #8
	add sb, r7
	ldr r1, _0801CB68 @ =0x000003FF
	adds r0, r1, #0
	mov r2, sb
	ands r2, r0
	mov sb, r2
	lsls r0, r2, #1
	adds r0, r0, r6
	ldrh r3, [r0]
	lsls r3, r3, #0x10
	asrs r1, r3, #0x1d
	ldr r7, [sp, #4]
	adds r1, r7, r1
	ldr r7, _0801CB70 @ =gUnknown_03005590
	ldr r0, [r7]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldr r2, _0801CB68 @ =0x000003FF
	ands r0, r2
	add r0, sl
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1b
	adds r1, r1, r0
	lsls r0, r5, #6
	ldr r7, [sp]
	adds r0, r7, r0
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1d
	adds r1, r1, r0
	strh r1, [r4]
	adds r4, #2
	mov r0, ip
	lsrs r2, r0, #1
	add r2, r8
	asrs r3, r3, #0x1c
	adds r2, r2, r3
	lsls r0, r5, #3
	ldr r3, _0801CB70 @ =gUnknown_03005590
	ldr r1, [r3]
	adds r0, r0, r1
	ldr r7, _0801CB68 @ =0x000003FF
	ands r0, r7
	add r0, sl
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1a
	adds r2, r2, r0
	strh r2, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r0, ip
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	cmp r5, #0x9e
	bls _0801CACE
_0801CB58:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801CB68: .4byte 0x000003FF
_0801CB6C: .4byte gUnknown_08097AA4
_0801CB70: .4byte gUnknown_03005590

	thumb_func_start sub_801CB74
sub_801CB74: @ 0x0801CB74
	push {r4, r5, lr}
	ldr r4, _0801CBC4 @ =gUnknown_03005850
	ldr r2, _0801CBC8 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801CBCC @ =gBgCntRegs
	movs r5, #0
	ldr r0, _0801CBD0 @ =0x00001B0F
	strh r0, [r1]
	ldr r1, _0801CBD4 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	ldr r0, _0801CBD8 @ =0x00000171
	strh r0, [r4, #0x1c]
	ldr r0, _0801CBDC @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801CBE0 @ =0x0600D800
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	ldr r0, _0801CBE4 @ =gBgScrollRegs
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #0xc]
	strh r5, [r0, #0xe]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801CBC4: .4byte gUnknown_03005850
_0801CBC8: .4byte gDispCnt
_0801CBCC: .4byte gBgCntRegs
_0801CBD0: .4byte 0x00001B0F
_0801CBD4: .4byte gUnknown_080D5864
_0801CBD8: .4byte 0x00000171
_0801CBDC: .4byte 0x0600C000
_0801CBE0: .4byte 0x0600D800
_0801CBE4: .4byte gBgScrollRegs

	thumb_func_start sub_801CBE8
sub_801CBE8: @ 0x0801CBE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	mov r8, r0
	adds r0, r1, #0
	movs r1, #0
	mov sl, r1
	ldr r1, _0801CC54 @ =gUnknown_03001884
	ldr r5, [r1]
	movs r1, #0x3c
	bl Div
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, _0801CC58 @ =gBgScrollRegs
	strh r3, [r0, #2]
	strh r3, [r0, #0xe]
	ldr r0, _0801CC5C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801CC1A
	b _0801CD4C
_0801CC1A:
	ldr r2, _0801CC60 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801CC6C
	ldr r0, _0801CC64 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801CC6C
	ldr r1, _0801CC68 @ =gUnknown_03000408
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bne _0801CC3E
	mov r7, r8
	strh r7, [r1]
_0801CC3E:
	ldrh r0, [r2, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	movs r7, #0
	ldrsh r4, [r1, r7]
	mov r8, r4
	b _0801CC72
	.align 2, 0
_0801CC54: .4byte gUnknown_03001884
_0801CC58: .4byte gBgScrollRegs
_0801CC5C: .4byte gUnknown_030054CC
_0801CC60: .4byte gUnknown_030059E0
_0801CC64: .4byte gUnknown_030054F4
_0801CC68: .4byte gUnknown_03000408
_0801CC6C:
	ldr r1, _0801CD5C @ =gUnknown_03000408
	movs r0, #0
	strh r0, [r1]
_0801CC72:
	movs r4, #0
	lsls r0, r3, #0x10
	asrs r2, r0, #0x10
	ldr r1, _0801CD60 @ =gUnknown_080D5B20
	adds r6, r0, #0
	mov sb, r1
	mov r0, sp
	adds r0, #2
	str r0, [sp, #0x44]
	lsls r3, r3, #0x18
	str r3, [sp, #0x40]
	ldrb r1, [r1]
	cmp r2, r1
	blt _0801CCA6
_0801CC8E:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bhi _0801CCA8
	asrs r1, r6, #0x10
	lsls r0, r4, #1
	adds r0, r0, r4
	add r0, sb
	ldrb r0, [r0]
	cmp r1, r0
	bge _0801CC8E
_0801CCA6:
	mov sl, r4
_0801CCA8:
	movs r4, #0
	mov r2, sl
	lsls r2, r2, #0x10
	mov sl, r2
	movs r6, #0xff
	ldr r3, _0801CD64 @ =gUnknown_080D5B22
	mov ip, r3
_0801CCB6:
	lsls r2, r4, #2
	mov r7, sp
	adds r3, r7, r2
	lsls r1, r4, #1
	adds r1, r1, r4
	ldr r7, _0801CD68 @ =gUnknown_080D5B21
	adds r0, r1, r7
	ldrb r0, [r0]
	mov r7, r8
	muls r7, r0, r7
	adds r0, r7, #0
	asrs r0, r0, #5
	ands r0, r6
	strh r0, [r3]
	ldr r0, [sp, #0x44]
	adds r2, r0, r2
	add r1, ip
	ldrb r0, [r1]
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r0, r0, #5
	ands r0, r6
	strh r0, [r2]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _0801CCB6
	mov r2, sl
	asrs r0, r2, #0x10
	lsls r1, r0, #2
	mov r3, sp
	adds r2, r3, r1
	lsls r1, r0, #1
	adds r1, r1, r0
	add r1, sb
	movs r4, #0
	ldr r7, [sp, #0x40]
	lsrs r3, r7, #0x18
_0801CD06:
	ldrh r0, [r2, #2]
	strh r0, [r5]
	adds r5, #2
	ldrh r0, [r2]
	strh r0, [r5]
	adds r5, #2
	ldrb r0, [r1]
	cmp r3, r0
	blo _0801CD1C
	adds r1, #3
	adds r2, #4
_0801CD1C:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x9e
	bls _0801CD06
	ldr r1, _0801CD6C @ =gUnknown_0300188C
	ldrb r0, [r1]
	adds r1, r0, #1
	ldr r2, _0801CD6C @ =gUnknown_0300188C
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	ldr r3, _0801CD70 @ =gUnknown_030026E0
	adds r0, r0, r3
	ldr r4, _0801CD74 @ =sub_801E454
	str r4, [r0]
	ldr r7, _0801CD78 @ =gFlags
	ldr r0, [r7]
	movs r1, #8
	orrs r0, r1
	str r0, [r7]
_0801CD4C:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801CD5C: .4byte gUnknown_03000408
_0801CD60: .4byte gUnknown_080D5B20
_0801CD64: .4byte gUnknown_080D5B22
_0801CD68: .4byte gUnknown_080D5B21
_0801CD6C: .4byte gUnknown_0300188C
_0801CD70: .4byte gUnknown_030026E0
_0801CD74: .4byte sub_801E454
_0801CD78: .4byte gFlags

	thumb_func_start sub_801CD7C
sub_801CD7C: @ 0x0801CD7C
	push {r4, r5, lr}
	ldr r4, _0801CDCC @ =gUnknown_03005850
	ldr r1, _0801CDD0 @ =gBgCntRegs
	movs r5, #0
	ldr r0, _0801CDD4 @ =0x00001B0F
	strh r0, [r1]
	ldr r1, _0801CDD8 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	ldr r0, _0801CDDC @ =0x00000173
	strh r0, [r4, #0x1c]
	ldr r0, _0801CDE0 @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801CDE4 @ =0x0600D800
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	strh r0, [r4, #0x28]
	movs r0, #0x13
	strh r0, [r4, #0x2e]
	adds r0, r4, #0
	bl sub_8002A3C
	ldr r0, _0801CDE8 @ =gBgScrollRegs
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #0xc]
	strh r5, [r0, #0xe]
	ldr r0, _0801CDEC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0801CDC6
	bl sub_800A6A8
_0801CDC6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801CDCC: .4byte gUnknown_03005850
_0801CDD0: .4byte gBgCntRegs
_0801CDD4: .4byte 0x00001B0F
_0801CDD8: .4byte gUnknown_080D5864
_0801CDDC: .4byte 0x00000173
_0801CDE0: .4byte 0x0600C000
_0801CDE4: .4byte 0x0600D800
_0801CDE8: .4byte gBgScrollRegs
_0801CDEC: .4byte gUnknown_030054CC

	thumb_func_start sub_801CDF0
sub_801CDF0: @ 0x0801CDF0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r2, _0801CE2C @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801CE38
	ldr r0, _0801CE30 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801CE38
	ldr r1, _0801CE34 @ =gUnknown_0300040A
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bne _0801CE18
	strh r5, [r1]
_0801CE18:
	ldrh r0, [r2, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r1]
	movs r3, #0
	ldrsh r5, [r1, r3]
	b _0801CE3E
	.align 2, 0
_0801CE2C: .4byte gUnknown_030059E0
_0801CE30: .4byte gUnknown_030054F4
_0801CE34: .4byte gUnknown_0300040A
_0801CE38:
	ldr r1, _0801CEB8 @ =gUnknown_0300040A
	movs r0, #0
	strh r0, [r1]
_0801CE3E:
	ldr r0, _0801CEBC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0801CE78
	ldr r0, _0801CEC0 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0801CE78
	ldr r1, _0801CEC4 @ =gWinRegs
	movs r0, #0x3e
	strh r0, [r1, #0xa]
	ldr r0, _0801CEC8 @ =0x00003F3F
	strh r0, [r1, #8]
	movs r2, #0xf0
	strh r2, [r1]
	movs r0, #0xa0
	strh r0, [r1, #4]
	strh r2, [r1, #2]
	strh r0, [r1, #6]
	ldr r1, _0801CECC @ =gBldRegs
	movs r0, #7
	strh r0, [r1, #4]
	ldr r0, _0801CED0 @ =0x00003F41
	strh r0, [r1]
	ldr r0, _0801CED4 @ =0x00000C0C
	strh r0, [r1, #2]
_0801CE78:
	ldr r4, _0801CED8 @ =gUnknown_03005850
	adds r0, r4, #0
	bl sub_8002A3C
	adds r0, r4, #0
	bl sub_8003638
	ldr r0, _0801CEDC @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0801CEA6
	ldr r1, _0801CEE0 @ =gBgScrollRegs
	ldrh r0, [r1]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1]
	ldrh r0, [r1, #2]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #2]
_0801CEA6:
	ldr r0, _0801CEE0 @ =gBgScrollRegs
	asrs r1, r5, #4
	strh r1, [r0, #0xc]
	asrs r1, r6, #6
	strh r1, [r0, #0xe]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801CEB8: .4byte gUnknown_0300040A
_0801CEBC: .4byte gUnknown_030054CC
_0801CEC0: .4byte gUnknown_03005424
_0801CEC4: .4byte gWinRegs
_0801CEC8: .4byte 0x00003F3F
_0801CECC: .4byte gBldRegs
_0801CED0: .4byte 0x00003F41
_0801CED4: .4byte 0x00000C0C
_0801CED8: .4byte gUnknown_03005850
_0801CEDC: .4byte gUnknown_03005590
_0801CEE0: .4byte gBgScrollRegs

	thumb_func_start sub_801CEE4
sub_801CEE4: @ 0x0801CEE4
	push {r4, lr}
	ldr r4, _0801CF3C @ =gUnknown_03005850
	ldr r0, _0801CF40 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0801CF2A
	ldr r2, _0801CF44 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801CF48 @ =gBgCntRegs
	ldr r0, _0801CF4C @ =0x00001B0C
	strh r0, [r1]
	ldr r1, _0801CF50 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xb9
	lsls r0, r0, #1
	strh r0, [r4, #0x1c]
	ldr r0, _0801CF54 @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801CF58 @ =0x0600D800
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
_0801CF2A:
	ldr r1, _0801CF5C @ =gBgScrollRegs
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #0xc]
	strh r0, [r1, #0xe]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801CF3C: .4byte gUnknown_03005850
_0801CF40: .4byte gUnknown_030054CC
_0801CF44: .4byte gDispCnt
_0801CF48: .4byte gBgCntRegs
_0801CF4C: .4byte 0x00001B0C
_0801CF50: .4byte gUnknown_080D5864
_0801CF54: .4byte 0x0600C000
_0801CF58: .4byte 0x0600D800
_0801CF5C: .4byte gBgScrollRegs

	thumb_func_start sub_801CF60
sub_801CF60: @ 0x0801CF60
	push {r4, r5, r6, lr}
	ldr r1, _0801D0C8 @ =gBgScrollRegs
	ldrh r0, [r1]
	adds r0, #1
	movs r2, #0
	strh r0, [r1]
	strh r2, [r1, #0xc]
	ldr r0, _0801D0CC @ =gUnknown_03005590
	ldr r0, [r0]
	lsls r6, r0, #1
	ldr r0, _0801D0D0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801CF7E
	b _0801D0C2
_0801CF7E:
	ldr r2, _0801D0D4 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	ldr r1, _0801D0D8 @ =gUnknown_03002878
	ldr r0, _0801D0DC @ =0x0400001C
	str r0, [r1]
	ldr r1, _0801D0E0 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0801D0E4 @ =gUnknown_03001884
	ldr r4, [r0]
	ldr r0, _0801D0E8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x12
	beq _0801CFDE
	ldr r2, _0801D0EC @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801D0F0 @ =gWinRegs
	movs r0, #0x3f
	strh r0, [r1, #0xa]
	ldr r0, _0801D0F4 @ =0x00003F3F
	strh r0, [r1, #8]
	movs r2, #0xf0
	strh r2, [r1]
	movs r0, #0xa0
	strh r0, [r1, #4]
	strh r2, [r1, #2]
	strh r0, [r1, #6]
	ldr r1, _0801D0F8 @ =gBldRegs
	movs r0, #7
	strh r0, [r1, #4]
	ldr r0, _0801D0FC @ =0x00003F41
	strh r0, [r1]
	ldr r0, _0801D100 @ =0x00001010
	strh r0, [r1, #2]
_0801CFDE:
	movs r5, #0
	movs r1, #0
_0801CFE2:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x5f
	bls _0801CFE2
	adds r0, r6, #0
	movs r1, #8
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x63
	bhi _0801D00E
_0801D000:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x63
	bls _0801D000
_0801D00E:
	adds r0, r6, #0
	movs r1, #7
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x67
	bhi _0801D02C
_0801D01E:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x67
	bls _0801D01E
_0801D02C:
	adds r0, r6, #0
	movs r1, #6
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x6f
	bhi _0801D04A
_0801D03C:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x6f
	bls _0801D03C
_0801D04A:
	adds r0, r6, #0
	movs r1, #5
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x77
	bhi _0801D068
_0801D05A:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x77
	bls _0801D05A
_0801D068:
	adds r0, r6, #0
	movs r1, #4
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x7f
	bhi _0801D086
_0801D078:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x7f
	bls _0801D078
_0801D086:
	adds r0, r6, #0
	movs r1, #3
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x8f
	bhi _0801D0A4
_0801D096:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x8f
	bls _0801D096
_0801D0A4:
	adds r0, r6, #0
	movs r1, #2
	bl Div
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r5, #0x9e
	bhi _0801D0C2
_0801D0B4:
	strh r1, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x9e
	bls _0801D0B4
_0801D0C2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801D0C8: .4byte gBgScrollRegs
_0801D0CC: .4byte gUnknown_03005590
_0801D0D0: .4byte gUnknown_030054CC
_0801D0D4: .4byte gFlags
_0801D0D8: .4byte gUnknown_03002878
_0801D0DC: .4byte 0x0400001C
_0801D0E0: .4byte gUnknown_03002A80
_0801D0E4: .4byte gUnknown_03001884
_0801D0E8: .4byte gUnknown_030055B4
_0801D0EC: .4byte gDispCnt
_0801D0F0: .4byte gWinRegs
_0801D0F4: .4byte 0x00003F3F
_0801D0F8: .4byte gBldRegs
_0801D0FC: .4byte 0x00003F41
_0801D100: .4byte 0x00001010

	thumb_func_start sub_801D104
sub_801D104: @ 0x0801D104
	push {r4, r5, lr}
	sub sp, #4
	ldr r2, _0801D178 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r5, _0801D17C @ =gBgCntRegs
	movs r4, #0
	movs r2, #0
	ldr r0, _0801D180 @ =0x00001A0F
	strh r0, [r5]
	ldr r0, _0801D184 @ =gUnknown_03004D80
	strb r4, [r0]
	ldr r1, _0801D188 @ =gUnknown_03002280
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x20
	strb r0, [r1, #3]
	str r2, [sp]
	ldr r1, _0801D18C @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r0, _0801D190 @ =0x0600C000
	str r0, [r1, #4]
	ldr r0, _0801D194 @ =0x85000010
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0801D198 @ =gBgScrollRegs
	strh r2, [r0]
	strh r2, [r0, #2]
	strh r2, [r0, #0xc]
	strh r2, [r0, #0xe]
	ldr r1, _0801D19C @ =gUnknown_03005590
	movs r0, #0xe0
	lsls r0, r0, #2
	str r0, [r1]
	ldr r0, _0801D1A0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801D162
	bl sub_801D1A8
_0801D162:
	ldrh r0, [r5, #6]
	ldr r1, _0801D1A4 @ =0x0000FFFC
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strh r1, [r5, #6]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801D178: .4byte gDispCnt
_0801D17C: .4byte gBgCntRegs
_0801D180: .4byte 0x00001A0F
_0801D184: .4byte gUnknown_03004D80
_0801D188: .4byte gUnknown_03002280
_0801D18C: .4byte 0x040000D4
_0801D190: .4byte 0x0600C000
_0801D194: .4byte 0x85000010
_0801D198: .4byte gBgScrollRegs
_0801D19C: .4byte gUnknown_03005590
_0801D1A0: .4byte gUnknown_030054CC
_0801D1A4: .4byte 0x0000FFFC

	thumb_func_start sub_801D1A8
sub_801D1A8: @ 0x0801D1A8
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r4, _0801D21C @ =gUnknown_03005850
	ldr r2, _0801D220 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801D224 @ =gBgCntRegs
	movs r2, #0
	movs r3, #0
	ldr r0, _0801D228 @ =0x00001A0F
	strh r0, [r1]
	ldr r0, _0801D22C @ =gUnknown_03004D80
	strb r2, [r0]
	ldr r1, _0801D230 @ =gUnknown_03002280
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r5, #0x20
	strb r5, [r1, #3]
	str r3, [sp]
	ldr r1, _0801D234 @ =0x040000D4
	mov r0, sp
	str r0, [r1]
	ldr r6, _0801D238 @ =0x0600C000
	str r6, [r1, #4]
	ldr r0, _0801D23C @ =0x85000010
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0801D240 @ =gBgScrollRegs
	strh r3, [r0]
	strh r3, [r0, #2]
	strh r3, [r0, #0xc]
	strh r3, [r0, #0xe]
	ldr r1, _0801D244 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xa8
	strh r0, [r4, #0x1c]
	str r6, [r4, #4]
	ldr r0, _0801D248 @ =0x0600D000
	str r0, [r4, #0xc]
	strh r5, [r4, #0x26]
	strh r5, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801D21C: .4byte gUnknown_03005850
_0801D220: .4byte gDispCnt
_0801D224: .4byte gBgCntRegs
_0801D228: .4byte 0x00001A0F
_0801D22C: .4byte gUnknown_03004D80
_0801D230: .4byte gUnknown_03002280
_0801D234: .4byte 0x040000D4
_0801D238: .4byte 0x0600C000
_0801D23C: .4byte 0x85000010
_0801D240: .4byte gBgScrollRegs
_0801D244: .4byte gUnknown_080D5864
_0801D248: .4byte 0x0600D000

	thumb_func_start sub_801D24C
sub_801D24C: @ 0x0801D24C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sb, r2
	ldr r4, _0801D374 @ =gFlags
	ldr r0, [r4]
	movs r3, #4
	orrs r0, r3
	str r0, [r4]
	ldr r2, _0801D378 @ =gUnknown_03002878
	ldr r0, _0801D37C @ =0x04000010
	str r0, [r2]
	ldr r0, _0801D380 @ =gUnknown_03002A80
	strb r3, [r0]
	ldr r2, _0801D384 @ =gWinRegs
	movs r0, #0
	mov sl, r0
	movs r0, #0x3f
	strh r0, [r2, #0xa]
	ldr r3, _0801D388 @ =gBldRegs
	mov r8, r3
	ldr r0, _0801D38C @ =0x00003F41
	strh r0, [r3]
	movs r0, #0x81
	lsls r0, r0, #4
	strh r0, [r3, #2]
	movs r0, #0xa0
	strh r0, [r2, #4]
	ldr r0, _0801D390 @ =gUnknown_03001884
	ldr r3, [r0]
	ldr r0, _0801D394 @ =gUnknown_03005590
	ldr r0, [r0]
	ldr r5, _0801D398 @ =0x000003FF
	mov ip, r5
	adds r5, r0, #0
	mov r6, ip
	ands r5, r6
	lsrs r7, r0, #1
	ands r7, r6
	lsls r2, r1, #0x10
	asrs r1, r2, #0xf
	asrs r0, r2, #0x11
	adds r1, r1, r0
	movs r0, #0x9f
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0801D2C2
	movs r6, #0x9f
_0801D2C2:
	mov r0, sb
	cmp r0, #0
	bne _0801D2CA
	b _0801D3D6
_0801D2CA:
	asrs r0, r2, #0x14
	movs r1, #0x10
	subs r0, r1, r0
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, r8
	strh r0, [r1, #2]
	movs r4, #0
	lsls r0, r6, #0x10
	asrs r1, r0, #0x10
	mov sl, r0
	cmp r4, r1
	bge _0801D312
	movs r2, #0
	mov sb, r2
	movs r6, #0xf
	rsbs r6, r6, #0
	mov r8, r6
	movs r6, #0xff
	adds r2, r1, #0
_0801D2F2:
	mov r0, sb
	strh r0, [r3]
	adds r3, #2
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	mov r4, r8
	subs r0, r4, r1
	ands r0, r6
	strh r0, [r3]
	adds r3, #2
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, r2
	blt _0801D2F2
_0801D312:
	lsls r1, r4, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9e
	ble _0801D31C
	b _0801D498
_0801D31C:
	ldr r6, _0801D39C @ =gUnknown_08097AA4
	mov ip, r6
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r0, _0801D398 @ =0x000003FF
	mov sb, r0
	movs r2, #0xff
	mov r8, r2
	mov r6, sl
	asrs r5, r6, #0x10
_0801D332:
	asrs r1, r1, #0x10
	lsls r0, r1, #4
	adds r0, r0, r7
	ldr r2, [sp, #4]
	adds r0, r0, r2
	mov r6, sb
	ands r0, r6
	lsls r0, r0, #1
	add r0, ip
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r0, #1
	lsls r2, r1, #1
	subs r0, r0, r2
	mov r6, r8
	ands r0, r6
	strh r0, [r3]
	adds r3, #2
	adds r0, r1, #0
	subs r0, #0xf
	cmp r0, r5
	bge _0801D3A0
	movs r0, #1
	subs r0, r0, r1
	subs r1, r1, r5
	subs r1, #0xf
	lsls r1, r1, #3
	subs r0, r0, r1
	movs r1, #0xfe
	ands r0, r1
	b _0801D3BE
	.align 2, 0
_0801D374: .4byte gFlags
_0801D378: .4byte gUnknown_03002878
_0801D37C: .4byte 0x04000010
_0801D380: .4byte gUnknown_03002A80
_0801D384: .4byte gWinRegs
_0801D388: .4byte gBldRegs
_0801D38C: .4byte 0x00003F41
_0801D390: .4byte gUnknown_03001884
_0801D394: .4byte gUnknown_03005590
_0801D398: .4byte 0x000003FF
_0801D39C: .4byte gUnknown_08097AA4
_0801D3A0:
	lsls r0, r1, #2
	adds r0, r7, r0
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #1
	add r0, ip
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r0, #1
	subs r0, r0, r2
	ldr r2, [sp, #4]
	adds r0, r2, r0
	mov r6, r8
	ands r0, r6
_0801D3BE:
	strh r0, [r3]
	adds r3, #2
	lsls r0, r4, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r4, r0, #0x10
	lsls r1, r4, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9e
	ble _0801D332
	b _0801D498
_0801D3D6:
	asrs r0, r2, #0x15
	movs r1, #0x10
	subs r0, r1, r0
	lsls r0, r0, #8
	orrs r0, r1
	mov r2, r8
	strh r0, [r2, #2]
	lsls r6, r6, #0x10
	movs r4, #0
	mov sl, r6
	cmp r6, #0
	ble _0801D44C
	ldr r0, _0801D478 @ =gUnknown_08097AA4
	mov sb, r0
	lsls r0, r5, #0x10
	asrs r5, r0, #0x10
	mov r8, ip
	movs r1, #0xff
	mov ip, r1
_0801D3FC:
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #4
	adds r0, r0, r7
	adds r0, r0, r5
	mov r2, r8
	ands r0, r2
	lsls r0, r0, #1
	add r0, sb
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r0, #1
	lsls r2, r1, #1
	subs r0, r0, r2
	mov r4, ip
	ands r0, r4
	strh r0, [r3]
	adds r3, #2
	lsls r0, r1, #2
	adds r0, r7, r0
	mov r4, r8
	ands r0, r4
	lsls r0, r0, #1
	add r0, sb
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	adds r0, #1
	subs r0, r0, r2
	adds r0, r5, r0
	mov r2, ip
	ands r0, r2
	strh r0, [r3]
	adds r3, #2
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	cmp r1, r6
	blt _0801D3FC
_0801D44C:
	lsls r1, r4, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9e
	bgt _0801D498
	mov r5, sl
	asrs r2, r5, #0x10
	movs r5, #0xff
_0801D45A:
	movs r0, #0
	strh r0, [r3]
	adds r3, #2
	asrs r1, r1, #0x10
	adds r0, r1, #0
	subs r0, #0xf
	cmp r0, r2
	bge _0801D47C
	subs r0, r1, r2
	subs r0, #0xf
	lsls r0, r0, #3
	subs r1, #1
	subs r0, r0, r1
	b _0801D480
	.align 2, 0
_0801D478: .4byte gUnknown_08097AA4
_0801D47C:
	rsbs r0, r1, #0
	adds r0, #1
_0801D480:
	ands r0, r5
	strh r0, [r3]
	adds r3, #2
	lsls r0, r4, #0x10
	movs r6, #0x80
	lsls r6, r6, #9
	adds r0, r0, r6
	lsrs r4, r0, #0x10
	lsls r1, r4, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0x9e
	ble _0801D45A
_0801D498:
	ldr r0, [sp]
	cmp r0, #0x10
	bls _0801D4A2
	movs r1, #0x10
	str r1, [sp]
_0801D4A2:
	movs r5, #0
	ldr r6, _0801D528 @ =gUnknown_080D5C02
	movs r2, #0x1f
	mov ip, r2
	movs r3, #0x32
	adds r3, r3, r6
	mov sb, r3
	ldr r4, _0801D52C @ =gBgPalette
	mov r8, r4
_0801D4B4:
	lsls r3, r5, #0x10
	asrs r3, r3, #0x10
	lsls r1, r3, #1
	adds r1, r1, r3
	adds r0, r6, #0
	adds r0, #0x30
	adds r0, r1, r0
	ldrb r7, [r0]
	ldr r5, [sp]
	adds r4, r7, #0
	muls r4, r5, r4
	asrs r4, r4, #4
	mov r0, ip
	ands r4, r0
	adds r0, r6, #0
	adds r0, #0x31
	adds r0, r1, r0
	ldrb r0, [r0]
	adds r2, r0, #0
	muls r2, r5, r2
	asrs r2, r2, #4
	mov r5, ip
	ands r2, r5
	add r1, sb
	ldrb r0, [r1]
	ldr r1, [sp]
	muls r0, r1, r0
	asrs r0, r0, #4
	ands r0, r5
	adds r1, r3, #0
	adds r1, #0xf0
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #0xa
	lsls r2, r2, #5
	adds r0, r0, r2
	adds r4, r4, r0
	strh r4, [r1]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x10
	asrs r3, r3, #0x10
	cmp r3, #0xf
	ble _0801D4B4
	ldr r2, _0801D530 @ =gFlags
	ldr r0, [r2]
	movs r1, #1
	orrs r0, r1
	str r0, [r2]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801D528: .4byte gUnknown_080D5C02
_0801D52C: .4byte gBgPalette
_0801D530: .4byte gFlags

	thumb_func_start sub_801D534
sub_801D534: @ 0x0801D534
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0801D568 @ =gUnknown_03005850
	ldr r1, _0801D56C @ =gBgScrollRegs
	asrs r0, r0, #4
	strh r0, [r1, #0xc]
	ldr r0, _0801D570 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd0
	lsls r1, r1, #3
	bl DivRem
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r5, #0
	movs r2, #7
	ldr r0, _0801D574 @ =gUnknown_080D5BF0
	ldrh r0, [r0, #0xe]
	cmp r6, r0
	bls _0801D578
	movs r5, #7
	b _0801D598
	.align 2, 0
_0801D568: .4byte gUnknown_03005850
_0801D56C: .4byte gBgScrollRegs
_0801D570: .4byte gUnknown_03005590
_0801D574: .4byte gUnknown_080D5BF0
_0801D578:
	lsls r0, r2, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r2, r0, #0x18
	lsls r3, r2, #0x18
	asrs r0, r3, #0x18
	cmp r0, #0
	blt _0801D598
	ldr r1, _0801D5C4 @ =gUnknown_080D5BF0
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r6, r0
	bls _0801D578
	lsrs r5, r3, #0x18
_0801D598:
	ldr r0, _0801D5C8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801D5A2
	movs r5, #5
_0801D5A2:
	ldr r1, _0801D5CC @ =gBgPalette
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0801D5D0 @ =gFlags
	ldr r0, [r2]
	movs r1, #1
	orrs r0, r1
	str r0, [r2]
	mov sl, r2
	cmp r5, #7
	bls _0801D5BA
	b _0801D942
_0801D5BA:
	lsls r0, r5, #2
	ldr r1, _0801D5D4 @ =_0801D5D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0801D5C4: .4byte gUnknown_080D5BF0
_0801D5C8: .4byte gUnknown_030054CC
_0801D5CC: .4byte gBgPalette
_0801D5D0: .4byte gFlags
_0801D5D4: .4byte _0801D5D8
_0801D5D8: @ jump table
	.4byte _0801D5F8 @ case 0
	.4byte _0801D680 @ case 1
	.4byte _0801D68C @ case 2
	.4byte _0801D6D0 @ case 3
	.4byte _0801D718 @ case 4
	.4byte _0801D7F8 @ case 5
	.4byte _0801D86C @ case 6
	.4byte _0801D90C @ case 7
_0801D5F8:
	cmp r6, #1
	bne _0801D630
	ldr r1, _0801D624 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xa7
	strh r0, [r4, #0x1c]
	ldr r0, _0801D628 @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801D62C @ =0x0600D000
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	b _0801D942
	.align 2, 0
_0801D624: .4byte gUnknown_080D5864
_0801D628: .4byte 0x0600C000
_0801D62C: .4byte 0x0600D000
_0801D630:
	cmp r6, #1
	bhi _0801D636
	b _0801D942
_0801D636:
	ldr r2, _0801D674 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0801D678 @ =gBgCntRegs
	ldrh r3, [r2]
	ldr r1, _0801D67C @ =0x0000FFFC
	adds r0, r1, #0
	ands r0, r3
	movs r3, #3
	orrs r0, r3
	strh r0, [r2]
	ldrh r0, [r2, #6]
	ands r1, r0
	orrs r1, r3
	strh r1, [r2, #6]
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x3f
	bls _0801D666
	movs r2, #0x3f
_0801D666:
	lsrs r6, r6, #2
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x3f
	subs r1, r1, r2
	b _0801D684
	.align 2, 0
_0801D674: .4byte gDispCnt
_0801D678: .4byte gBgCntRegs
_0801D67C: .4byte 0x0000FFFC
_0801D680:
	movs r0, #0xf
	movs r1, #0
_0801D684:
	movs r2, #0
	bl sub_801D24C
	b _0801D942
_0801D68C:
	ldr r1, _0801D6B4 @ =0xFFFFFDBF
	adds r0, r6, r1
	lsls r0, r0, #0x10
	lsls r1, r0, #8
	lsrs r2, r1, #0x18
	lsrs r6, r0, #0x12
	movs r0, #0xf
	subs r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _0801D6B8
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x3f
	subs r1, r1, r2
	movs r2, #1
	bl sub_801D24C
	b _0801D942
	.align 2, 0
_0801D6B4: .4byte 0xFFFFFDBF
_0801D6B8:
	mov r2, sl
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r0, _0801D6CC @ =gBldRegs
	strh r6, [r0]
	b _0801D942
	.align 2, 0
_0801D6CC: .4byte gBldRegs
_0801D6D0:
	ldr r3, _0801D70C @ =gBgCntRegs
	ldrh r2, [r3]
	ldr r1, _0801D710 @ =0x0000FFFC
	adds r0, r1, #0
	ands r0, r2
	movs r2, #3
	orrs r0, r2
	strh r0, [r3]
	ldrh r0, [r3, #6]
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strh r1, [r3, #6]
	movs r2, #0
	ldr r4, _0801D714 @ =gBgPalette
	movs r3, #0
_0801D6F0:
	lsls r1, r2, #0x18
	asrs r1, r1, #0x18
	adds r0, r1, #0
	adds r0, #0xf0
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	asrs r1, r1, #0x18
	cmp r1, #0xf
	ble _0801D6F0
	b _0801D8EE
	.align 2, 0
_0801D70C: .4byte gBgCntRegs
_0801D710: .4byte 0x0000FFFC
_0801D714: .4byte gBgPalette
_0801D718:
	ldr r0, _0801D744 @ =0x00000381
	cmp r6, r0
	bne _0801D754
	ldr r1, _0801D748 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xa8
	strh r0, [r4, #0x1c]
	ldr r0, _0801D74C @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801D750 @ =0x0600D000
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	b _0801D76C
	.align 2, 0
_0801D744: .4byte 0x00000381
_0801D748: .4byte gUnknown_080D5864
_0801D74C: .4byte 0x0600C000
_0801D750: .4byte 0x0600D000
_0801D754:
	ldr r2, _0801D7D8 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0801D7DC @ =gBgCntRegs
	ldrh r1, [r2]
	movs r0, #3
	orrs r0, r1
	strh r0, [r2]
_0801D76C:
	ldr r1, _0801D7E0 @ =0xFFFFFC7F
	adds r0, r6, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r2, #0
	ldr r3, _0801D7E4 @ =gBgScrollRegs
	mov r8, r3
	ldr r0, _0801D7E8 @ =gFlags
	mov sl, r0
	ldr r1, _0801D7EC @ =gUnknown_080D5C02
	mov ip, r1
	movs r7, #0x1f
	ldr r3, _0801D7F0 @ =gBgPalette
	mov sb, r3
_0801D788:
	lsls r3, r2, #0x18
	asrs r3, r3, #0x18
	lsls r1, r3, #1
	adds r1, r1, r3
	mov r2, ip
	adds r0, r1, r2
	ldrb r4, [r0]
	muls r4, r6, r4
	asrs r4, r4, #5
	ands r4, r7
	mov r0, ip
	adds r0, #1
	adds r0, r1, r0
	ldrb r5, [r0]
	adds r2, r5, #0
	muls r2, r6, r2
	asrs r2, r2, #5
	ands r2, r7
	ldr r0, _0801D7F4 @ =gUnknown_080D5C04
	adds r1, r1, r0
	ldrb r0, [r1]
	muls r0, r6, r0
	asrs r0, r0, #5
	ands r0, r7
	adds r1, r3, #0
	adds r1, #0xf0
	lsls r1, r1, #1
	add r1, sb
	lsls r0, r0, #0xa
	lsls r2, r2, #5
	orrs r0, r2
	orrs r0, r4
	strh r0, [r1]
	adds r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r3, #0x18
	asrs r3, r3, #0x18
	cmp r3, #0xf
	ble _0801D788
	b _0801D83C
	.align 2, 0
_0801D7D8: .4byte gDispCnt
_0801D7DC: .4byte gBgCntRegs
_0801D7E0: .4byte 0xFFFFFC7F
_0801D7E4: .4byte gBgScrollRegs
_0801D7E8: .4byte gFlags
_0801D7EC: .4byte gUnknown_080D5C02
_0801D7F0: .4byte gBgPalette
_0801D7F4: .4byte gUnknown_080D5C04
_0801D7F8:
	movs r2, #0
	ldr r0, _0801D860 @ =gBgScrollRegs
	mov r8, r0
	ldr r6, _0801D864 @ =gUnknown_080D5C02
	adds r1, r6, #2
	mov sb, r1
	ldr r3, _0801D868 @ =gBgPalette
	mov ip, r3
	adds r7, r6, #1
_0801D80A:
	lsls r3, r2, #0x18
	asrs r3, r3, #0x18
	lsls r0, r3, #1
	adds r0, r0, r3
	adds r1, r0, r6
	ldrb r4, [r1]
	adds r1, r0, r7
	ldrb r5, [r1]
	add r0, sb
	ldrb r0, [r0]
	adds r2, r3, #0
	adds r2, #0xf0
	lsls r2, r2, #1
	add r2, ip
	lsls r0, r0, #0xa
	lsls r1, r5, #5
	orrs r0, r1
	orrs r0, r4
	strh r0, [r2]
	adds r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r3, #0x18
	asrs r3, r3, #0x18
	cmp r3, #0xf
	ble _0801D80A
_0801D83C:
	mov r1, sl
	ldr r0, [r1]
	movs r1, #1
	orrs r0, r1
	mov r2, sl
	str r0, [r2]
	mov r3, r8
	ldrh r0, [r3]
	subs r0, #2
	movs r1, #0xff
	ands r0, r1
	strh r0, [r3]
	ldrh r0, [r3, #2]
	adds r0, #1
	ands r0, r1
	strh r0, [r3, #2]
	b _0801D942
	.align 2, 0
_0801D860: .4byte gBgScrollRegs
_0801D864: .4byte gUnknown_080D5C02
_0801D868: .4byte gBgPalette
_0801D86C:
	ldr r1, _0801D8FC @ =gBgScrollRegs
	ldrh r0, [r1]
	subs r0, #2
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1]
	ldrh r0, [r1, #2]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #2]
	ldr r1, _0801D900 @ =0xFFFFFA5F
	adds r0, r6, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #0x1f
	subs r0, r0, r6
	lsls r0, r0, #0xf
	lsrs r6, r0, #0x10
	movs r2, #0
	ldr r3, _0801D904 @ =gUnknown_080D5C02
	mov ip, r3
	movs r7, #0x1f
	movs r0, #2
	add r0, ip
	mov sb, r0
	ldr r1, _0801D908 @ =gBgPalette
	mov r8, r1
_0801D8A2:
	lsls r3, r2, #0x18
	asrs r3, r3, #0x18
	lsls r1, r3, #1
	adds r1, r1, r3
	mov r2, ip
	adds r0, r1, r2
	ldrb r4, [r0]
	muls r4, r6, r4
	asrs r4, r4, #4
	ands r4, r7
	mov r0, ip
	adds r0, #1
	adds r0, r1, r0
	ldrb r5, [r0]
	adds r2, r5, #0
	muls r2, r6, r2
	asrs r2, r2, #4
	ands r2, r7
	add r1, sb
	ldrb r0, [r1]
	muls r0, r6, r0
	asrs r0, r0, #4
	ands r0, r7
	adds r1, r3, #0
	adds r1, #0xf0
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #0xa
	lsls r2, r2, #5
	orrs r0, r2
	orrs r0, r4
	strh r0, [r1]
	adds r3, #1
	lsls r3, r3, #0x18
	lsrs r2, r3, #0x18
	asrs r3, r3, #0x18
	cmp r3, #0xf
	ble _0801D8A2
_0801D8EE:
	mov r3, sl
	ldr r0, [r3]
	movs r1, #1
	orrs r0, r1
	str r0, [r3]
	b _0801D942
	.align 2, 0
_0801D8FC: .4byte gBgScrollRegs
_0801D900: .4byte 0xFFFFFA5F
_0801D904: .4byte gUnknown_080D5C02
_0801D908: .4byte gBgPalette
_0801D90C:
	movs r2, #0
	ldr r5, _0801D950 @ =gDispCnt
	ldr r4, _0801D954 @ =gBgPalette
	movs r3, #0
_0801D914:
	lsls r1, r2, #0x18
	asrs r1, r1, #0x18
	adds r0, r1, #0
	adds r0, #0xf0
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	asrs r1, r1, #0x18
	cmp r1, #0xf
	ble _0801D914
	mov r1, sl
	ldr r0, [r1]
	movs r1, #1
	orrs r0, r1
	mov r2, sl
	str r0, [r2]
	ldrh r1, [r5]
	ldr r0, _0801D958 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r5]
_0801D942:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801D950: .4byte gDispCnt
_0801D954: .4byte gBgPalette
_0801D958: .4byte 0x0000FEFF

	thumb_func_start sub_801D95C
sub_801D95C: @ 0x0801D95C
	push {r4, r5, r6, lr}
	ldr r4, _0801D9B0 @ =gUnknown_03005850
	ldr r1, _0801D9B4 @ =gDispCnt
	movs r2, #0xb2
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r5, _0801D9B8 @ =gBgCntRegs
	movs r6, #0
	ldr r0, _0801D9BC @ =0x0000160F
	strh r0, [r5]
	ldr r1, _0801D9C0 @ =gUnknown_080D5864
	adds r1, #0xc0
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xd1
	strh r0, [r4, #0x1c]
	ldr r0, _0801D9C4 @ =0x0600C000
	str r0, [r4, #4]
	ldr r0, _0801D9C8 @ =0x0600B000
	str r0, [r4, #0xc]
	movs r0, #0x20
	strh r0, [r4, #0x26]
	movs r0, #0x14
	strh r0, [r4, #0x28]
	adds r0, r4, #0
	bl sub_8002A3C
	ldrh r1, [r5, #6]
	ldr r0, _0801D9CC @ =0x0000FFFC
	ands r0, r1
	movs r1, #3
	orrs r0, r1
	strh r0, [r5, #6]
	ldr r0, _0801D9D0 @ =gBgScrollRegs
	strh r6, [r0]
	strh r6, [r0, #2]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801D9B0: .4byte gUnknown_03005850
_0801D9B4: .4byte gDispCnt
_0801D9B8: .4byte gBgCntRegs
_0801D9BC: .4byte 0x0000160F
_0801D9C0: .4byte gUnknown_080D5864
_0801D9C4: .4byte 0x0600C000
_0801D9C8: .4byte 0x0600B000
_0801D9CC: .4byte 0x0000FFFC
_0801D9D0: .4byte gBgScrollRegs

	thumb_func_start sub_801D9D4
sub_801D9D4: @ 0x0801D9D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sl, r0
	adds r5, r1, #0
	ldr r2, _0801DB80 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801DA1A
	ldr r0, _0801DB84 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0801DA1A
	ldr r1, _0801DB88 @ =gBgScrollRegs
	movs r3, #0xc
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bne _0801DA08
	mov r0, sl
	strh r0, [r1, #0xc]
_0801DA08:
	ldrh r0, [r2, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	ldrh r2, [r1, #0xc]
	adds r0, r0, r2
	strh r0, [r1, #0xc]
	movs r0, #0xc
	ldrsh r3, [r1, r0]
	mov sl, r3
_0801DA1A:
	ldr r2, _0801DB8C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0801DB90 @ =0x0000FEFF
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #4
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0801DB94 @ =gFlags
	ldr r0, [r1]
	movs r2, #4
	orrs r0, r2
	str r0, [r1]
	ldr r1, _0801DB98 @ =gUnknown_03002878
	ldr r0, _0801DB9C @ =0x0400001C
	str r0, [r1]
	ldr r0, _0801DBA0 @ =gUnknown_03002A80
	strb r2, [r0]
	ldr r0, _0801DBA4 @ =gUnknown_03001884
	ldr r4, [r0]
	movs r0, #0x2a
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0xc8
	lsls r1, r1, #1
	bl Div
	mov r2, sl
	lsls r0, r2, #1
	asrs r3, r5, #4
	str r3, [sp, #0xc]
	asrs r5, r5, #1
	str r5, [sp, #4]
	asrs r2, r2, #4
	str r2, [sp, #8]
	movs r2, #8
	movs r1, #0x10
	movs r3, #0x27
_0801DA6A:
	strh r2, [r4]
	adds r4, #2
	strh r1, [r4]
	adds r4, #2
	subs r3, #1
	cmp r3, #0
	bge _0801DA6A
	add r0, sl
	lsls r0, r0, #3
	add r0, sl
	movs r1, #0xc8
	lsls r1, r1, #1
	bl Div
	mov ip, r0
	movs r0, #0xff
	mov r1, ip
	ands r1, r0
	mov ip, r1
	movs r0, #0x11
	movs r3, #0x76
_0801DA94:
	mov r2, ip
	strh r2, [r4]
	adds r4, #2
	strh r0, [r4]
	adds r4, #2
	subs r3, #1
	cmp r3, #0
	bge _0801DA94
	movs r1, #0
_0801DAA6:
	ldr r3, _0801DBA8 @ =gUnknown_03005590
	ldr r0, [r3]
	add r0, sl
	lsrs r0, r0, #3
	mov ip, r0
	movs r0, #0xff
	mov r2, ip
	ands r2, r0
	mov ip, r2
	movs r0, #0x64
	muls r0, r1, r0
	adds r0, #0x40
	ldr r3, [sp, #0xc]
	subs r0, r0, r3
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xef
	bhi _0801DBAC
	lsls r0, r5, #2
	mov sb, r0
	adds r1, #1
	str r1, [sp]
	cmp r5, #0x50
	bls _0801DB1C
	ldr r1, _0801DBA4 @ =gUnknown_03001884
	ldr r4, [r1]
	adds r0, r5, #0
	subs r0, #0x50
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	subs r0, r5, r1
	lsls r0, r0, #2
	adds r4, r4, r0
	adds r3, r5, #0
	movs r2, #0
	adds r7, r1, #0
	adds r7, #0xa0
	cmp r3, r7
	bge _0801DB1C
	cmp r2, r1
	bhs _0801DB1C
	movs r0, #0
	mov r8, r0
	movs r0, #0xd0
	subs r6, r0, r3
_0801DB02:
	mov r0, r8
	strh r0, [r4]
	adds r4, #2
	strh r6, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, r7
	bge _0801DB1C
	cmp r2, r1
	blo _0801DB02
_0801DB1C:
	ldr r1, _0801DBA4 @ =gUnknown_03001884
	ldr r4, [r1]
	add r4, sb
	adds r3, r5, #0
	movs r2, #0
	cmp r3, #0x9f
	bgt _0801DB48
	movs r0, #0xf0
	subs r1, r0, r3
_0801DB2E:
	mov r0, ip
	strh r0, [r4]
	adds r4, #2
	strh r1, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, #0x9f
	bgt _0801DB48
	cmp r2, #0xf
	bls _0801DB2E
_0801DB48:
	cmp r3, #0x4f
	bgt _0801DBEE
	movs r0, #0x50
	subs r0, r0, r3
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r2, #0
	cmp r3, #0x9f
	bgt _0801DBEE
	cmp r2, r1
	bhs _0801DBEE
	movs r6, #0
	movs r0, #0xb8
	subs r5, r0, r5
_0801DB66:
	strh r6, [r4]
	adds r4, #2
	strh r5, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, #0x9f
	bgt _0801DBEE
	cmp r2, r1
	blo _0801DB66
	b _0801DBEE
	.align 2, 0
_0801DB80: .4byte gUnknown_030059E0
_0801DB84: .4byte gUnknown_030054F4
_0801DB88: .4byte gBgScrollRegs
_0801DB8C: .4byte gDispCnt
_0801DB90: .4byte 0x0000FEFF
_0801DB94: .4byte gFlags
_0801DB98: .4byte gUnknown_03002878
_0801DB9C: .4byte 0x0400001C
_0801DBA0: .4byte gUnknown_03002A80
_0801DBA4: .4byte gUnknown_03001884
_0801DBA8: .4byte gUnknown_03005590
_0801DBAC:
	ldr r2, _0801DCCC @ =gUnknown_03001884
	ldr r4, [r2]
	movs r0, #0xff
	subs r3, r0, r5
	adds r1, #1
	str r1, [sp]
	cmp r3, #0xf
	bgt _0801DBD2
	ldr r1, _0801DCD0 @ =0x000001EF
	adds r0, r1, #0
	subs r0, r0, r5
_0801DBC2:
	mov r2, ip
	strh r2, [r4]
	adds r4, #2
	strh r0, [r4]
	adds r4, #2
	adds r3, #1
	cmp r3, #0xf
	ble _0801DBC2
_0801DBD2:
	movs r2, #0
	movs r3, #0
	ldr r1, _0801DCD4 @ =0x000001B7
	adds r0, r1, #0
	subs r1, r0, r5
_0801DBDC:
	strh r3, [r4]
	adds r4, #2
	strh r1, [r4]
	adds r4, #2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _0801DBDC
_0801DBEE:
	ldr r2, [sp]
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bhi _0801DBFA
	b _0801DAA6
_0801DBFA:
	ldr r3, _0801DCD8 @ =gUnknown_03005590
	ldr r0, [r3]
	add r0, sl
	lsrs r0, r0, #1
	mov ip, r0
	movs r0, #0xff
	mov r1, ip
	ands r1, r0
	mov ip, r1
	ldr r2, [sp, #4]
	rsbs r0, r2, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xdf
	bhi _0801DCDC
	lsls r3, r5, #2
	mov sb, r3
	cmp r5, #0x50
	bls _0801DC66
	ldr r0, _0801DCCC @ =gUnknown_03001884
	ldr r4, [r0]
	adds r0, r5, #0
	subs r0, #0x50
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	subs r0, r5, r1
	lsls r0, r0, #2
	adds r4, r4, r0
	adds r3, r5, #0
	movs r2, #0
	adds r6, r1, #0
	adds r6, #0xa0
	cmp r3, r6
	bge _0801DC66
	cmp r2, r1
	bhs _0801DC66
	movs r0, #0
	mov r8, r0
	movs r0, #0xd0
	subs r7, r0, r3
_0801DC4C:
	mov r0, r8
	strh r0, [r4]
	adds r4, #2
	strh r7, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, r6
	bge _0801DC66
	cmp r2, r1
	blo _0801DC4C
_0801DC66:
	ldr r1, _0801DCCC @ =gUnknown_03001884
	ldr r4, [r1]
	add r4, sb
	adds r3, r5, #0
	movs r2, #0
	cmp r3, #0x9f
	bgt _0801DC92
	movs r0, #0xd0
	subs r1, r0, r3
_0801DC78:
	mov r0, ip
	strh r0, [r4]
	adds r4, #2
	strh r1, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, #0x9f
	bgt _0801DC92
	cmp r2, #0x1f
	bls _0801DC78
_0801DC92:
	cmp r3, #0x4f
	bgt _0801DD1A
	movs r0, #0x50
	subs r0, r0, r3
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r2, #0
	cmp r3, #0x9f
	bgt _0801DD1A
	cmp r2, r1
	bhs _0801DD1A
	movs r6, #0
	movs r0, #0xa8
	subs r5, r0, r5
_0801DCB0:
	strh r6, [r4]
	adds r4, #2
	strh r5, [r4]
	adds r4, #2
	adds r3, #1
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r3, #0x9f
	bgt _0801DD1A
	cmp r2, r1
	blo _0801DCB0
	b _0801DD1A
	.align 2, 0
_0801DCCC: .4byte gUnknown_03001884
_0801DCD0: .4byte 0x000001EF
_0801DCD4: .4byte 0x000001B7
_0801DCD8: .4byte gUnknown_03005590
_0801DCDC:
	ldr r1, _0801DD64 @ =gUnknown_03001884
	ldr r4, [r1]
	movs r0, #0xff
	subs r3, r0, r5
	cmp r3, #0x1f
	bgt _0801DCFE
	ldr r2, _0801DD68 @ =0x000001CF
	adds r0, r2, #0
	subs r0, r0, r5
_0801DCEE:
	mov r1, ip
	strh r1, [r4]
	adds r4, #2
	strh r0, [r4]
	adds r4, #2
	adds r3, #1
	cmp r3, #0x1f
	ble _0801DCEE
_0801DCFE:
	movs r2, #0
	movs r3, #0
	ldr r1, _0801DD6C @ =0x000001A7
	adds r0, r1, #0
	subs r1, r0, r5
_0801DD08:
	strh r3, [r4]
	adds r4, #2
	strh r1, [r4]
	adds r4, #2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _0801DD08
_0801DD1A:
	ldr r2, [sp, #8]
	lsls r1, r2, #0x10
	movs r6, #7
	ldr r5, _0801DD70 @ =gUnknown_080D5C82
	ldr r0, _0801DD74 @ =gBgPalette
	movs r3, #0xd1
	lsls r3, r3, #1
	adds r4, r0, r3
	lsrs r1, r1, #0x10
	movs r3, #7
_0801DD2E:
	adds r0, r1, #0
	ands r0, r6
	adds r2, r0, #1
	lsls r0, r2, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	strh r0, [r4]
	adds r4, #2
	subs r1, #1
	subs r3, #1
	cmp r3, #0
	bge _0801DD2E
	ldr r1, _0801DD78 @ =gFlags
	ldr r0, [r1]
	movs r1, #1
	orrs r0, r1
	ldr r2, _0801DD78 @ =gFlags
	str r0, [r2]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801DD64: .4byte gUnknown_03001884
_0801DD68: .4byte 0x000001CF
_0801DD6C: .4byte 0x000001A7
_0801DD70: .4byte gUnknown_080D5C82
_0801DD74: .4byte gBgPalette
_0801DD78: .4byte gFlags

	thumb_func_start sub_801DD7C
sub_801DD7C: @ 0x0801DD7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	ldr r2, _0801DED8 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0801DEDC @ =0x0000F7FF
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0801DEE0 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	ldr r1, _0801DEE4 @ =gUnknown_03002878
	ldr r0, _0801DEE8 @ =0x04000010
	str r0, [r1]
	ldr r1, _0801DEEC @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0801DEF0 @ =gUnknown_03001884
	ldr r4, [r0]
	ldr r0, _0801DEF4 @ =gUnknown_03005590
	ldr r5, [r0]
	lsrs r1, r5, #3
	movs r2, #0x1f
	ands r1, r2
	mov sb, r0
	cmp r1, #0xf
	bls _0801DDCA
	subs r0, r2, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0801DDCA:
	movs r3, #0
	ldr r6, _0801DEF8 @ =gUnknown_080D5C62
	adds r7, r6, #2
	mov r8, r7
	movs r0, #7
	mov ip, r0
	movs r1, #0xff
	mov sl, r1
_0801DDDA:
	lsls r0, r3, #1
	mov r7, sp
	adds r2, r7, r0
	adds r1, r3, #0
	mov r0, ip
	ands r1, r0
	lsls r1, r1, #2
	adds r0, r1, r6
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r5, r0
	add r1, r8
	lsrs r0, r0, #8
	ldrh r1, [r1]
	adds r0, r0, r1
	mov r1, sl
	ands r0, r1
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bls _0801DDDA
	ldr r6, _0801DEFC @ =0x0000507F
	movs r3, #0
	ldr r5, _0801DF00 @ =gUnknown_08097AA4
	ldr r2, _0801DF04 @ =0x000003FF
_0801DE10:
	mov r7, sb
	ldr r0, [r7]
	lsls r0, r0, #2
	lsls r1, r3, #1
	adds r0, r0, r1
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r3, #0
	muls r0, r6, r0
	lsrs r0, r0, #5
	ands r0, r2
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1a
	adds r0, r1, r0
	lsls r0, r0, #0x10
	movs r1, #0x1f
	ands r1, r3
	lsls r1, r1, #1
	add r1, sp
	lsrs r0, r0, #0x10
	ldrh r1, [r1]
	adds r0, r0, r1
	movs r1, #0xff
	ands r0, r1
	strh r0, [r4]
	adds r4, #2
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x4f
	bls _0801DE10
	cmp r3, #0x9e
	bhi _0801DEC6
	ldr r5, _0801DF00 @ =gUnknown_08097AA4
	ldr r2, _0801DF04 @ =0x000003FF
_0801DE6E:
	mov r1, sb
	ldr r0, [r1]
	lsls r0, r0, #2
	lsls r1, r3, #1
	adds r0, r0, r1
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	movs r0, #0xa0
	subs r0, r0, r3
	muls r0, r6, r0
	lsrs r0, r0, #5
	ands r0, r2
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1a
	adds r0, r1, r0
	lsls r0, r0, #0x10
	movs r1, #0x1f
	ands r1, r3
	lsls r1, r1, #1
	add r1, sp
	lsrs r0, r0, #0x10
	ldrh r1, [r1]
	adds r0, r0, r1
	movs r1, #0xff
	ands r0, r1
	strh r0, [r4]
	adds r4, #2
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x9e
	bls _0801DE6E
_0801DEC6:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801DED8: .4byte gDispCnt
_0801DEDC: .4byte 0x0000F7FF
_0801DEE0: .4byte gFlags
_0801DEE4: .4byte gUnknown_03002878
_0801DEE8: .4byte 0x04000010
_0801DEEC: .4byte gUnknown_03002A80
_0801DEF0: .4byte gUnknown_03001884
_0801DEF4: .4byte gUnknown_03005590
_0801DEF8: .4byte gUnknown_080D5C62
_0801DEFC: .4byte 0x0000507F
_0801DF00: .4byte gUnknown_08097AA4
_0801DF04: .4byte 0x000003FF

	thumb_func_start sub_801DF08
sub_801DF08: @ 0x0801DF08
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	ldr r1, _0801DFE0 @ =gDispCnt
	ldr r2, _0801DFE4 @ =0x00001141
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, _0801DFE8 @ =gUnknown_03004D80
	movs r5, #0
	strb r5, [r0, #2]
	ldr r1, _0801DFEC @ =gUnknown_03002280
	strb r5, [r1, #8]
	strb r5, [r1, #9]
	movs r0, #0xff
	strb r0, [r1, #0xa]
	movs r0, #0x20
	mov sb, r0
	mov r2, sb
	strb r2, [r1, #0xb]
	ldr r4, _0801DFF0 @ =gUnknown_030058D0
	ldr r0, _0801DFF4 @ =gBgCntRegs
	mov r8, r0
	ldr r0, _0801DFF8 @ =0x00001A89
	mov r1, r8
	strh r0, [r1, #4]
	ldr r6, _0801DFFC @ =gUnknown_080D5864
	adds r1, r6, #0
	adds r1, #0x80
	adds r0, r4, #0
	movs r2, #0x40
	bl memcpy
	ldr r0, _0801E000 @ =0x00000177
	strh r0, [r4, #0x1c]
	ldr r0, _0801E004 @ =0x06008000
	str r0, [r4, #4]
	ldr r0, _0801E008 @ =0x0600D000
	str r0, [r4, #0xc]
	movs r0, #0xa
	strh r0, [r4, #0x26]
	movs r0, #9
	strh r0, [r4, #0x28]
	ldrh r0, [r4, #0x2e]
	movs r1, #4
	orrs r0, r1
	strh r0, [r4, #0x2e]
	adds r0, r4, #0
	bl sub_8002A3C
	subs r4, #0x80
	ldr r0, _0801E00C @ =0x00001E07
	mov r2, r8
	strh r0, [r2]
	adds r6, #0xc0
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0x40
	bl memcpy
	movs r0, #0xba
	lsls r0, r0, #1
	strh r0, [r4, #0x1c]
	ldr r0, _0801E010 @ =0x06004000
	str r0, [r4, #4]
	ldr r0, _0801E014 @ =0x0600F000
	str r0, [r4, #0xc]
	mov r0, sb
	strh r0, [r4, #0x26]
	movs r0, #0x14
	strh r0, [r4, #0x28]
	strh r5, [r4, #0x2e]
	adds r0, r4, #0
	bl sub_8002A3C
	ldr r0, _0801E018 @ =gBgScrollRegs
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	strh r5, [r0, #0xa]
	strh r5, [r0, #0xc]
	strh r5, [r0, #0xe]
	movs r2, #0
	ldr r4, _0801E01C @ =gBgPalette
	ldr r3, _0801E020 @ =gUnknown_080D5CC2
_0801DFB6:
	lsls r0, r2, #1
	adds r1, r0, r4
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0801DFB6
	ldr r0, _0801E024 @ =gFlags
	ldr r1, [r0]
	movs r2, #1
	orrs r1, r2
	str r1, [r0]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801DFE0: .4byte gDispCnt
_0801DFE4: .4byte 0x00001141
_0801DFE8: .4byte gUnknown_03004D80
_0801DFEC: .4byte gUnknown_03002280
_0801DFF0: .4byte gUnknown_030058D0
_0801DFF4: .4byte gBgCntRegs
_0801DFF8: .4byte 0x00001A89
_0801DFFC: .4byte gUnknown_080D5864
_0801E000: .4byte 0x00000177
_0801E004: .4byte 0x06008000
_0801E008: .4byte 0x0600D000
_0801E00C: .4byte 0x00001E07
_0801E010: .4byte 0x06004000
_0801E014: .4byte 0x0600F000
_0801E018: .4byte gBgScrollRegs
_0801E01C: .4byte gBgPalette
_0801E020: .4byte gUnknown_080D5CC2
_0801E024: .4byte gFlags

	thumb_func_start sub_801E028
sub_801E028: @ 0x0801E028
	push {r4, lr}
	ldr r4, _0801E03C @ =gUnknown_03005960
	ldr r0, [r4, #0x5c]
	bl TaskDestroy
	movs r0, #0
	str r0, [r4, #0x5c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801E03C: .4byte gUnknown_03005960

	thumb_func_start sub_801E040
sub_801E040: @ 0x0801E040
	push {r4, lr}
	ldr r1, _0801E090 @ =gUnknown_03005960
	movs r0, #0
	str r0, [r1, #0x5c]
	ldr r4, _0801E094 @ =gUnknown_030055B4
	ldr r3, _0801E098 @ =gFlags
	movs r2, #0
	ldr r0, _0801E09C @ =gBgScrollRegs
	movs r1, #3
_0801E052:
	strh r2, [r0]
	strh r2, [r0, #2]
	adds r0, #4
	subs r1, #1
	cmp r1, #0
	bge _0801E052
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1d
	bne _0801E080
	ldr r2, [r3]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _0801E080
	ldr r1, _0801E0A0 @ =gIntrTable
	ldr r0, _0801E0A4 @ =gIntrTableTemplate
	ldr r0, [r0, #0xc]
	str r0, [r1, #0xc]
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r3]
_0801E080:
	ldr r0, [r3]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801E090: .4byte gUnknown_03005960
_0801E094: .4byte gUnknown_030055B4
_0801E098: .4byte gFlags
_0801E09C: .4byte gBgScrollRegs
_0801E0A0: .4byte gIntrTable
_0801E0A4: .4byte gIntrTableTemplate

	thumb_func_start sub_801E0A8
sub_801E0A8: @ 0x0801E0A8
	push {lr}
	ldr r2, _0801E0E8 @ =gDispCnt
	ldrh r1, [r2]
	movs r3, #0xf0
	lsls r3, r3, #5
	adds r0, r3, #0
	orrs r1, r0
	strh r1, [r2]
	ldr r0, _0801E0EC @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0801E0CA
	ldr r0, _0801E0F0 @ =0x0000F7FF
	ands r1, r0
	strh r1, [r2]
_0801E0CA:
	ldr r0, _0801E0F4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0801E0DA
	ldrh r1, [r2]
	ldr r0, _0801E0F8 @ =0x0000DFFF
	ands r0, r1
	strh r0, [r2]
_0801E0DA:
	ldr r0, _0801E0FC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0801E100 @ =sub_801E104
	str r0, [r1, #8]
	pop {r0}
	bx r0
	.align 2, 0
_0801E0E8: .4byte gDispCnt
_0801E0EC: .4byte gUnknown_030055B4
_0801E0F0: .4byte 0x0000F7FF
_0801E0F4: .4byte gUnknown_030054CC
_0801E0F8: .4byte 0x0000DFFF
_0801E0FC: .4byte gCurTask
_0801E100: .4byte sub_801E104

	thumb_func_start sub_801E104
sub_801E104: @ 0x0801E104
	push {lr}
	bl sub_801C394
	ldr r1, _0801E114 @ =gUnknown_030054B8
	movs r0, #4
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0801E114: .4byte gUnknown_030054B8

	thumb_func_start sub_801E118
sub_801E118: @ 0x0801E118
	ldr r1, _0801E128 @ =gBgScrollRegs
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #0xc]
	strh r0, [r1, #0xe]
	bx lr
	.align 2, 0
_0801E128: .4byte gBgScrollRegs
_0801E12C:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start nullsub_8002A34_1
nullsub_8002A34_1: @ 0x0801E130
	bx lr
	.align 2, 0

	thumb_func_start sub_801E134
sub_801E134: @ 0x0801E134
	push {lr}
	ldr r3, _0801E184 @ =gUnknown_03005960
	ldr r0, _0801E188 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	ldr r1, _0801E18C @ =gUnknown_03005590
	cmp r0, #0
	beq _0801E14C
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
_0801E14C:
	ldr r2, _0801E190 @ =gBgScrollRegs
	ldr r0, [r1]
	adds r0, #4
	lsrs r0, r0, #3
	movs r1, #0xff
	ands r0, r1
	strh r0, [r2]
	ldr r0, [r3, #4]
	asrs r0, r0, #9
	strh r0, [r2, #2]
	ldr r3, _0801E194 @ =gUnknown_030026E0
	ldr r2, _0801E198 @ =gUnknown_0300188C
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r3
	ldr r1, _0801E19C @ =sub_801E434
	str r1, [r0]
	ldr r2, _0801E1A0 @ =gFlags
	ldr r0, [r2]
	movs r1, #8
	orrs r0, r1
	str r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_0801E184: .4byte gUnknown_03005960
_0801E188: .4byte gUnknown_030059E0
_0801E18C: .4byte gUnknown_03005590
_0801E190: .4byte gBgScrollRegs
_0801E194: .4byte gUnknown_030026E0
_0801E198: .4byte gUnknown_0300188C
_0801E19C: .4byte sub_801E434
_0801E1A0: .4byte gFlags

	thumb_func_start sub_801E1A4
sub_801E1A4: @ 0x0801E1A4
	push {lr}
	ldr r0, _0801E1C8 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	ldr r1, _0801E1CC @ =gUnknown_03005590
	cmp r0, #0
	beq _0801E1BA
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
_0801E1BA:
	ldr r0, [r1]
	movs r1, #0xfa
	lsls r1, r1, #4
	bl sub_801C94C
	pop {r0}
	bx r0
	.align 2, 0
_0801E1C8: .4byte gUnknown_030059E0
_0801E1CC: .4byte gUnknown_03005590

	thumb_func_start sub_801E1D0
sub_801E1D0: @ 0x0801E1D0
	ldr r1, _0801E1E0 @ =gBgScrollRegs
	movs r0, #0
	strh r0, [r1, #2]
	strh r0, [r1, #0xe]
	strh r0, [r1]
	strh r0, [r1, #0xc]
	bx lr
	.align 2, 0
_0801E1E0: .4byte gBgScrollRegs

	thumb_func_start sub_801E1E4
sub_801E1E4: @ 0x0801E1E4
	ldr r2, _0801E218 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0801E21C @ =0x0000FDFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _0801E220 @ =gBgScrollRegs
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r3, _0801E224 @ =gUnknown_030026E0
	ldr r2, _0801E228 @ =gUnknown_0300188C
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r3
	ldr r1, _0801E22C @ =sub_801E498
	str r1, [r0]
	ldr r2, _0801E230 @ =gFlags
	ldr r0, [r2]
	movs r1, #8
	orrs r0, r1
	str r0, [r2]
	bx lr
	.align 2, 0
_0801E218: .4byte gDispCnt
_0801E21C: .4byte 0x0000FDFF
_0801E220: .4byte gBgScrollRegs
_0801E224: .4byte gUnknown_030026E0
_0801E228: .4byte gUnknown_0300188C
_0801E22C: .4byte sub_801E498
_0801E230: .4byte gFlags

	thumb_func_start sub_801E234
sub_801E234: @ 0x0801E234
	ldr r2, _0801E260 @ =gBgCntRegs
	ldrh r1, [r2]
	movs r0, #3
	orrs r0, r1
	strh r0, [r2]
	ldrh r1, [r2, #6]
	ldr r0, _0801E264 @ =0x0000FFFC
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strh r0, [r2, #6]
	ldr r1, _0801E268 @ =gBgScrollRegs
	ldrh r0, [r1]
	subs r0, #2
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1]
	ldrh r0, [r1, #2]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #2]
	bx lr
	.align 2, 0
_0801E260: .4byte gBgCntRegs
_0801E264: .4byte 0x0000FFFC
_0801E268: .4byte gBgScrollRegs

	thumb_func_start sub_801E26C
sub_801E26C: @ 0x0801E26C
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	adds r7, r1, #0
	ldr r0, _0801E2C0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x18
	eors r0, r1
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	movs r4, #0
	movs r2, #0
	ldr r5, _0801E2C4 @ =gUnknown_080D5CA2
	lsls r1, r1, #4
	adds r0, r1, r5
	ldrh r0, [r0]
	cmp r3, r0
	blt _0801E2B2
	adds r6, r5, #0
	movs r5, #1
_0801E298:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #7
	bhi _0801E2B2
	lsls r0, r2, #1
	adds r0, r0, r1
	adds r0, r0, r6
	ldrh r0, [r0]
	cmp r3, r0
	bge _0801E298
	adds r4, r5, #0
	ands r4, r2
_0801E2B2:
	cmp r4, #0
	bne _0801E2C8
	adds r0, r3, #0
	adds r1, r7, #0
	bl sub_801D9D4
	b _0801E2D0
	.align 2, 0
_0801E2C0: .4byte gUnknown_030055B4
_0801E2C4: .4byte gUnknown_080D5CA2
_0801E2C8:
	adds r0, r3, #0
	adds r1, r7, #0
	bl sub_801DD7C
_0801E2D0:
	ldr r0, _0801E2DC @ =gUnknown_030059E0
	adds r0, #0xa8
	strb r4, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801E2DC: .4byte gUnknown_030059E0

	thumb_func_start sub_801E2E0
sub_801E2E0: @ 0x0801E2E0
	push {lr}
	ldr r0, _0801E304 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	ldr r1, _0801E308 @ =gUnknown_03005590
	cmp r0, #0
	beq _0801E2F6
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
_0801E2F6:
	ldr r0, [r1]
	ldr r1, _0801E30C @ =0x000003B1
	bl sub_801D9D4
	pop {r0}
	bx r0
	.align 2, 0
_0801E304: .4byte gUnknown_030059E0
_0801E308: .4byte gUnknown_03005590
_0801E30C: .4byte 0x000003B1

	thumb_func_start sub_801E310
sub_801E310: @ 0x0801E310
	push {lr}
	ldr r0, _0801E348 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801E326
	ldr r1, _0801E34C @ =gUnknown_03005590
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
_0801E326:
	ldr r3, _0801E350 @ =gUnknown_030026E0
	ldr r2, _0801E354 @ =gUnknown_0300188C
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r3
	ldr r1, _0801E358 @ =sub_801E4C4
	str r1, [r0]
	ldr r2, _0801E35C @ =gFlags
	ldr r0, [r2]
	movs r1, #8
	orrs r0, r1
	str r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_0801E348: .4byte gUnknown_030059E0
_0801E34C: .4byte gUnknown_03005590
_0801E350: .4byte gUnknown_030026E0
_0801E354: .4byte gUnknown_0300188C
_0801E358: .4byte sub_801E4C4
_0801E35C: .4byte gFlags

	thumb_func_start sub_801E360
sub_801E360: @ 0x0801E360
	push {r4, r5, r6, lr}
	movs r1, #0
	ldr r0, _0801E3CC @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _0801E37A
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldrh r0, [r0, #0x10]
	movs r1, #1
	ands r1, r0
_0801E37A:
	cmp r1, #0
	beq _0801E3C4
	ldr r2, _0801E3D0 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	ldr r1, _0801E3D4 @ =gUnknown_03002878
	ldr r0, _0801E3D8 @ =0x04000014
	str r0, [r1]
	ldr r1, _0801E3DC @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0801E3E0 @ =gUnknown_03001884
	ldr r3, [r0]
	movs r2, #0
	ldr r6, _0801E3E4 @ =gUnknown_08097AA4
	ldr r5, _0801E3E8 @ =gUnknown_03005590
	ldr r4, _0801E3EC @ =0x000003FF
_0801E3A0:
	ldr r1, [r5]
	adds r1, r2, r1
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ands r0, r4
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1c
	strh r0, [r3]
	adds r3, #2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x9e
	bls _0801E3A0
_0801E3C4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801E3CC: .4byte gUnknown_03005B4C
_0801E3D0: .4byte gFlags
_0801E3D4: .4byte gUnknown_03002878
_0801E3D8: .4byte 0x04000014
_0801E3DC: .4byte gUnknown_03002A80
_0801E3E0: .4byte gUnknown_03001884
_0801E3E4: .4byte gUnknown_08097AA4
_0801E3E8: .4byte gUnknown_03005590
_0801E3EC: .4byte 0x000003FF

	thumb_func_start sub_801E3F0
sub_801E3F0: @ 0x0801E3F0
	push {lr}
	ldr r3, _0801E420 @ =gUnknown_03005960
	ldr r0, _0801E424 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0801E41A
	ldr r2, _0801E428 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0801E42C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0801E430 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xe0
	lsls r1, r1, #0xb
	ands r0, r1
	lsrs r0, r0, #0x10
	subs r0, #8
	str r0, [r3, #0x1c]
_0801E41A:
	pop {r0}
	bx r0
	.align 2, 0
_0801E420: .4byte gUnknown_03005960
_0801E424: .4byte gUnknown_03005590
_0801E428: .4byte gUnknown_030053B8
_0801E42C: .4byte 0x00196225
_0801E430: .4byte 0x3C6EF35F

	thumb_func_start sub_801E434
sub_801E434: @ 0x0801E434
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x49
	bne _0801E448
	ldr r1, _0801E44C @ =0x0400001C
	ldr r0, _0801E450 @ =gUnknown_03005590
	ldr r0, [r0]
	lsrs r0, r0, #4
	strh r0, [r1]
_0801E448:
	pop {r0}
	bx r0
	.align 2, 0
_0801E44C: .4byte 0x0400001C
_0801E450: .4byte gUnknown_03005590

	thumb_func_start sub_801E454
sub_801E454: @ 0x0801E454
	push {lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _0801E482
	ldr r0, _0801E488 @ =gUnknown_030022AC
	lsls r1, r1, #2
	ldr r0, [r0]
	adds r1, r0, r1
	subs r0, r1, #2
	ldrh r2, [r1, #2]
	ldrh r0, [r0]
	cmp r2, r0
	beq _0801E474
	ldr r0, _0801E48C @ =0x0400001C
	strh r2, [r0]
_0801E474:
	subs r0, r1, #4
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	beq _0801E482
	ldr r0, _0801E490 @ =0x04000010
	strh r1, [r0]
_0801E482:
	pop {r0}
	bx r0
	.align 2, 0
_0801E488: .4byte gUnknown_030022AC
_0801E48C: .4byte 0x0400001C
_0801E490: .4byte 0x04000010

	thumb_func_start sub_801E494
sub_801E494: @ 0x0801E494
	bx lr
	.align 2, 0

	thumb_func_start sub_801E498
sub_801E498: @ 0x0801E498
	push {lr}
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x69
	bls _0801E4B4
	ldr r3, _0801E4B8 @ =0x0400001C
	ldr r2, _0801E4BC @ =gUnknown_03005490
	ldr r0, _0801E4C0 @ =gUnknown_080D5B50
	adds r0, r1, r0
	ldrb r1, [r0]
	subs r1, #1
	ldr r0, [r2]
	lsrs r0, r1
	strh r0, [r3]
_0801E4B4:
	pop {r0}
	bx r0
	.align 2, 0
_0801E4B8: .4byte 0x0400001C
_0801E4BC: .4byte gUnknown_03005490
_0801E4C0: .4byte gUnknown_080D5B50

	thumb_func_start sub_801E4C4
sub_801E4C4: @ 0x0801E4C4
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x58
	bne _0801E4D6
	ldr r0, _0801E4DC @ =0x0400001C
	ldr r1, _0801E4E0 @ =gUnknown_03005590
	ldrb r1, [r1]
	strh r1, [r0]
_0801E4D6:
	pop {r0}
	bx r0
	.align 2, 0
_0801E4DC: .4byte 0x0400001C
_0801E4E0: .4byte gUnknown_03005590

	thumb_func_start sub_801E4E4
sub_801E4E4: @ 0x0801E4E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	mov sb, r1
	mov sl, r2
	mov r8, r3
	ldr r7, [sp, #0x28]
	cmp r7, #0
	bne _0801E500
	mov r7, sp
_0801E500:
	mov r4, sp
	adds r4, #1
	adds r0, r6, #0
	mov r1, sb
	mov r2, sl
	adds r3, r4, #0
	ldr r5, [sp, #0x2c]
	bl _call_via_r5
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E5DA
	mov r1, r8
	adds r0, r6, r1
	mov r1, sb
	mov r2, sl
	adds r3, r4, #0
	bl _call_via_r5
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E59C
	mov r5, r8
	lsls r5, r5, #1
	adds r0, r6, r5
	mov r1, sb
	mov r2, sl
	adds r3, r4, #0
	ldr r5, [sp, #0x2c]
	bl _call_via_r5
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E55C
	mov r0, r8
	cmp r0, #0
	ble _0801E554
	movs r0, #7
	ands r0, r6
	movs r1, #0x18
	subs r0, r1, r0
	b _0801E6C4
_0801E554:
	movs r0, #7
	ands r0, r6
	adds r0, #0x11
	b _0801E6C4
_0801E55C:
	cmp r1, #8
	bne _0801E57C
	ldrb r0, [r4]
	strb r0, [r7]
	mov r1, r8
	cmp r1, #0
	ble _0801E574
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #0x10
	b _0801E6C4
_0801E574:
	movs r0, #7
	ands r0, r6
	adds r0, #8
	b _0801E6C4
_0801E57C:
	ldrb r0, [r4]
	strb r0, [r7]
	cmp r1, #0
	ble _0801E592
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x10
	b _0801E6C4
_0801E592:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #0x10
	b _0801E6C4
_0801E59C:
	cmp r1, #8
	bne _0801E5BA
	ldrb r0, [r4]
	strb r0, [r7]
	mov r5, r8
	cmp r5, #0
	ble _0801E5B4
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #8
	b _0801E6C4
_0801E5B4:
	movs r0, #7
	ands r0, r6
	b _0801E6C4
_0801E5BA:
	ldrb r0, [r4]
	strb r0, [r7]
	cmp r1, #0
	ble _0801E5D0
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #8
	b _0801E6C4
_0801E5D0:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #8
	b _0801E6C4
_0801E5DA:
	cmp r1, #8
	bne _0801E6AC
	ldrb r0, [r4]
	strb r0, [r7]
	mov r0, r8
	rsbs r0, r0, #0
	str r0, [sp, #4]
	adds r0, r6, r0
	mov r1, sb
	mov r2, sl
	adds r3, r4, #0
	ldr r5, [sp, #0x2c]
	bl _call_via_r5
	adds r1, r0, #0
	cmp r1, #8
	bne _0801E672
	ldrb r0, [r4]
	strb r0, [r7]
	ldr r0, [sp, #4]
	mov r1, r8
	subs r0, r0, r1
	adds r0, r6, r0
	mov r1, sb
	mov r2, sl
	adds r3, r4, #0
	bl _call_via_r5
	adds r1, r0, #0
	cmp r1, #8
	bne _0801E634
	ldrb r0, [r4]
	strb r0, [r7]
	mov r5, r8
	cmp r5, #0
	ble _0801E62C
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	subs r0, #0x10
	b _0801E6C4
_0801E62C:
	movs r0, #7
	ands r0, r6
	subs r0, #0x18
	b _0801E6C4
_0801E634:
	cmp r1, #0
	bne _0801E652
	mov r0, r8
	cmp r0, #0
	ble _0801E64A
	movs r0, #7
	ands r0, r6
	movs r1, #9
	rsbs r1, r1, #0
	subs r0, r1, r0
	b _0801E6C4
_0801E64A:
	movs r0, #7
	ands r0, r6
	subs r0, #0x10
	b _0801E6C4
_0801E652:
	ldrb r0, [r4]
	strb r0, [r7]
	cmp r1, #0
	ble _0801E668
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #0x10
	b _0801E6C4
_0801E668:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x10
	b _0801E6C4
_0801E672:
	cmp r1, #0
	bne _0801E68C
	mov r1, r8
	cmp r1, #0
	ble _0801E684
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	b _0801E6C4
_0801E684:
	movs r0, #8
	rsbs r0, r0, #0
	orrs r0, r6
	b _0801E6C4
_0801E68C:
	ldrb r0, [r4]
	strb r0, [r7]
	cmp r1, #0
	ble _0801E6A2
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #8
	b _0801E6C4
_0801E6A2:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #8
	b _0801E6C4
_0801E6AC:
	ldrb r0, [r4]
	strb r0, [r7]
	cmp r1, #0
	ble _0801E6BE
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r0, r1, r0
	b _0801E6C4
_0801E6BE:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
_0801E6C4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_801E6D4
sub_801E6D4: @ 0x0801E6D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	mov sb, r1
	mov sl, r2
	mov r8, r3
	ldr r0, [sp, #0x24]
	cmp r0, #0
	bne _0801E6F2
	mov r1, sp
	str r1, [sp, #0x24]
_0801E6F2:
	mov r5, sp
	adds r5, #1
	adds r0, r6, #0
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	ldr r4, [sp, #0x28]
	bl _call_via_r4
	adds r1, r0, #0
	cmp r1, #0
	beq _0801E70C
	b _0801E8E0
_0801E70C:
	mov r7, r8
	adds r0, r6, r7
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r4
	adds r1, r0, #0
	cmp r1, #0
	beq _0801E722
	b _0801E89E
_0801E722:
	lsls r4, r7, #1
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	ldr r7, [sp, #0x28]
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #0
	beq _0801E73A
	b _0801E85A
_0801E73A:
	add r4, r8
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E816
	add r4, r8
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E7D2
	add r4, r8
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #0
	bne _0801E78E
	mov r0, r8
	cmp r0, #0
	ble _0801E786
	movs r0, #7
	ands r0, r6
	movs r1, #0x30
	subs r0, r1, r0
	b _0801EB34
_0801E786:
	movs r0, #7
	ands r0, r6
	adds r0, #0x29
	b _0801EB34
_0801E78E:
	cmp r1, #8
	bne _0801E7B0
	ldrb r0, [r5]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	mov r2, r8
	cmp r2, #0
	ble _0801E7A8
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #0x28
	b _0801EB34
_0801E7A8:
	movs r0, #7
	ands r0, r6
	adds r0, #0x20
	b _0801EB34
_0801E7B0:
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	cmp r1, #0
	ble _0801E7C8
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x28
	b _0801EB34
_0801E7C8:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #0x28
	b _0801EB34
_0801E7D2:
	cmp r1, #8
	bne _0801E7F4
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	mov r0, r8
	cmp r0, #0
	ble _0801E7EC
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #0x20
	b _0801EB34
_0801E7EC:
	movs r0, #7
	ands r0, r6
	adds r0, #0x18
	b _0801EB34
_0801E7F4:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801E80C
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x20
	b _0801EB34
_0801E80C:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #0x20
	b _0801EB34
_0801E816:
	cmp r1, #8
	bne _0801E838
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	mov r7, r8
	cmp r7, #0
	ble _0801E830
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #0x18
	b _0801EB34
_0801E830:
	movs r0, #7
	ands r0, r6
	adds r0, #0x10
	b _0801EB34
_0801E838:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801E850
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x18
	b _0801EB34
_0801E850:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #0x18
	b _0801EB34
_0801E85A:
	cmp r1, #8
	bne _0801E87C
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	mov r7, r8
	cmp r7, #0
	ble _0801E874
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #0x10
	b _0801EB34
_0801E874:
	movs r0, #7
	ands r0, r6
	adds r0, #8
	b _0801EB34
_0801E87C:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801E894
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x10
	b _0801EB34
_0801E894:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #0x10
	b _0801EB34
_0801E89E:
	cmp r1, #8
	bne _0801E8BE
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	mov r7, r8
	cmp r7, #0
	ble _0801E8B8
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	adds r0, #8
	b _0801EB34
_0801E8B8:
	movs r0, #7
	ands r0, r6
	b _0801EB34
_0801E8BE:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801E8D6
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	adds r0, #8
	b _0801EB34
_0801E8D6:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	adds r0, #8
	b _0801EB34
_0801E8E0:
	cmp r1, #8
	beq _0801E8E6
	b _0801EB1A
_0801E8E6:
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	mov r7, r8
	rsbs r4, r7, #0
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	ldr r7, [sp, #0x28]
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	beq _0801E906
	b _0801EADE
_0801E906:
	ldrb r0, [r5]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	mov r2, r8
	subs r4, r4, r2
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	beq _0801E924
	b _0801EAB8
_0801E924:
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	mov r0, r8
	subs r4, r4, r0
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	ldr r7, [sp, #0x28]
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	beq _0801E944
	b _0801EA78
_0801E944:
	ldrb r0, [r5]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	mov r2, r8
	subs r4, r4, r2
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	bne _0801EA38
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	mov r0, r8
	subs r4, r4, r0
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	ldr r7, [sp, #0x28]
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	bne _0801E9F8
	ldrb r0, [r5]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	mov r2, r8
	subs r4, r4, r2
	adds r0, r6, r4
	mov r1, sb
	mov r2, sl
	adds r3, r5, #0
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #8
	bne _0801E9B8
	ldrb r0, [r5]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	mov r7, r8
	cmp r7, #0
	ble _0801E9B0
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	subs r0, #0x28
	b _0801EB34
_0801E9B0:
	movs r0, #7
	ands r0, r6
	subs r0, #0x30
	b _0801EB34
_0801E9B8:
	cmp r1, #0
	bne _0801E9D6
	mov r0, r8
	cmp r0, #0
	ble _0801E9CE
	movs r0, #7
	ands r0, r6
	movs r1, #0x21
	rsbs r1, r1, #0
	subs r0, r1, r0
	b _0801EB34
_0801E9CE:
	movs r0, #7
	ands r0, r6
	subs r0, #0x28
	b _0801EB34
_0801E9D6:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801E9EE
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #0x28
	b _0801EB34
_0801E9EE:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x28
	b _0801EB34
_0801E9F8:
	cmp r1, #0
	bne _0801EA16
	mov r4, r8
	cmp r4, #0
	ble _0801EA0E
	movs r0, #7
	ands r0, r6
	movs r1, #0x19
	rsbs r1, r1, #0
	subs r0, r1, r0
	b _0801EB34
_0801EA0E:
	movs r0, #7
	ands r0, r6
	subs r0, #0x20
	b _0801EB34
_0801EA16:
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	cmp r1, #0
	ble _0801EA2E
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #0x20
	b _0801EB34
_0801EA2E:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x20
	b _0801EB34
_0801EA38:
	cmp r1, #0
	bne _0801EA56
	mov r0, r8
	cmp r0, #0
	ble _0801EA4E
	movs r0, #7
	ands r0, r6
	movs r1, #0x11
	rsbs r1, r1, #0
	subs r0, r1, r0
	b _0801EB34
_0801EA4E:
	movs r0, #7
	ands r0, r6
	subs r0, #0x18
	b _0801EB34
_0801EA56:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801EA6E
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #0x18
	b _0801EB34
_0801EA6E:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x18
	b _0801EB34
_0801EA78:
	cmp r1, #0
	bne _0801EA96
	mov r4, r8
	cmp r4, #0
	ble _0801EA8E
_0801EA82:
	movs r0, #7
	ands r0, r6
	movs r1, #9
	rsbs r1, r1, #0
	subs r0, r1, r0
	b _0801EB34
_0801EA8E:
	movs r0, #7
	ands r0, r6
	subs r0, #0x10
	b _0801EB34
_0801EA96:
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	cmp r1, #0
	ble _0801EAAE
_0801EAA0:
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #0x10
	b _0801EB34
_0801EAAE:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x10
	b _0801EB34
_0801EAB8:
	cmp r1, #0
	bne _0801EACA
	mov r0, r8
	cmp r0, #0
	bgt _0801EA82
	movs r0, #7
	ands r0, r6
	subs r0, #0x10
	b _0801EB34
_0801EACA:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	bgt _0801EAA0
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #0x10
	b _0801EB34
_0801EADE:
	cmp r1, #0
	bne _0801EAF8
	mov r4, r8
	cmp r4, #0
	ble _0801EAF0
	movs r0, #7
	ands r0, r6
	mvns r0, r0
	b _0801EB34
_0801EAF0:
	movs r0, #8
	rsbs r0, r0, #0
	orrs r0, r6
	b _0801EB34
_0801EAF8:
	ldrb r0, [r5]
	ldr r7, [sp, #0x24]
	strb r0, [r7]
	cmp r1, #0
	ble _0801EB10
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r1, r1, r0
	adds r0, r1, #0
	subs r0, #8
	b _0801EB34
_0801EB10:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
	subs r0, #8
	b _0801EB34
_0801EB1A:
	ldrb r0, [r5]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	cmp r1, #0
	ble _0801EB2E
	subs r1, #1
	movs r0, #7
	ands r0, r6
	subs r0, r1, r0
	b _0801EB34
_0801EB2E:
	movs r0, #7
	ands r0, r6
	adds r0, r1, r0
_0801EB34:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_801EB44
sub_801EB44: @ 0x0801EB44
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	cmp r3, #0
	blt _0801EB6C
	ldr r0, _0801EB68 @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	subs r1, r0, #1
	adds r0, r3, #0
	cmp r0, r1
	bls _0801EB6E
	adds r0, r1, #0
	b _0801EB6E
	.align 2, 0
_0801EB68: .4byte gUnknown_030059C8
_0801EB6C:
	movs r0, #0
_0801EB6E:
	adds r3, r0, #0
	cmp r4, #0
	blt _0801EB8C
	ldr r0, _0801EB88 @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
	subs r0, #1
	adds r1, r4, #0
	cmp r1, r0
	bls _0801EB8E
	adds r1, r0, #0
	b _0801EB8E
	.align 2, 0
_0801EB88: .4byte gUnknown_030059C8
_0801EB8C:
	movs r1, #0
_0801EB8E:
	adds r4, r1, #0
	movs r0, #1
	mov r8, r0
	adds r2, r7, #0
	ands r2, r0
	adds r0, r3, #0
	bl sub_801EF94
	adds r5, r0, #0
	ldr r3, _0801EC24 @ =0x000003FF
	ands r3, r5
	movs r6, #7
	adds r2, r6, #0
	ands r2, r4
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r5
	cmp r0, #0
	beq _0801EBB6
	subs r2, r6, r2
_0801EBB6:
	ldr r0, _0801EC28 @ =gUnknown_030059C8
	ldr r4, [r0]
	lsls r0, r3, #3
	ldr r1, [r4]
	adds r0, r0, r2
	adds r1, r1, r0
	movs r2, #0
	ldrsb r2, [r1, r2]
	movs r0, #0xf
	ands r2, r0
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _0801EBD8
	movs r0, #0x10
	rsbs r0, r0, #0
	orrs r2, r0
_0801EBD8:
	movs r0, #8
	rsbs r0, r0, #0
	cmp r2, r0
	bne _0801EBE2
	movs r2, #8
_0801EBE2:
	movs r0, #0x80
	ands r0, r7
	cmp r0, #0
	beq _0801EC04
	lsrs r0, r3, #3
	ldr r1, [r4, #0x14]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ands r3, r6
	lsls r1, r3, #1
	asrs r0, r1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0801EC04
	movs r2, #0
_0801EC04:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r5
	cmp r0, #0
	beq _0801EC30
	cmp r2, #8
	beq _0801EC2C
	cmp r2, #0
	beq _0801EC2C
	adds r0, r2, #0
	adds r0, #8
	cmp r2, #0
	ble _0801EC2E
	subs r0, #0x10
	b _0801EC2E
	.align 2, 0
_0801EC24: .4byte 0x000003FF
_0801EC28: .4byte gUnknown_030059C8
_0801EC2C:
	adds r0, r2, #0
_0801EC2E:
	adds r2, r0, #0
_0801EC30:
	adds r0, r2, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_801EC3C
sub_801EC3C: @ 0x0801EC3C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	cmp r4, #0
	blt _0801EC64
	ldr r0, _0801EC60 @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	subs r1, r0, #1
	adds r0, r4, #0
	cmp r0, r1
	bls _0801EC66
	adds r0, r1, #0
	b _0801EC66
	.align 2, 0
_0801EC60: .4byte gUnknown_030059C8
_0801EC64:
	movs r0, #0
_0801EC66:
	adds r4, r0, #0
	cmp r3, #0
	blt _0801EC84
	ldr r0, _0801EC80 @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
	subs r1, r0, #1
	adds r0, r3, #0
	cmp r0, r1
	bls _0801EC86
	adds r0, r1, #0
	b _0801EC86
	.align 2, 0
_0801EC80: .4byte gUnknown_030059C8
_0801EC84:
	movs r0, #0
_0801EC86:
	adds r3, r0, #0
	movs r0, #1
	mov r8, r0
	adds r2, r7, #0
	ands r2, r0
	adds r0, r4, #0
	adds r1, r3, #0
	bl sub_801EF94
	adds r5, r0, #0
	ldr r3, _0801ED0C @ =0x000003FF
	ands r3, r5
	movs r6, #7
	adds r2, r6, #0
	ands r2, r4
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r5
	cmp r0, #0
	beq _0801ECB0
	subs r2, r6, r2
_0801ECB0:
	ldr r0, _0801ED10 @ =gUnknown_030059C8
	ldr r4, [r0]
	lsls r0, r3, #3
	ldr r1, [r4]
	adds r0, r0, r2
	adds r1, r1, r0
	movs r2, #0
	ldrsb r2, [r1, r2]
	asrs r2, r2, #4
	movs r0, #8
	rsbs r0, r0, #0
	cmp r2, r0
	bne _0801ECCC
	movs r2, #8
_0801ECCC:
	movs r0, #0x80
	ands r0, r7
	cmp r0, #0
	beq _0801ECEE
	lsrs r0, r3, #3
	ldr r1, [r4, #0x14]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ands r3, r6
	lsls r1, r3, #1
	asrs r0, r1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0801ECEE
	movs r2, #0
_0801ECEE:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r5
	cmp r0, #0
	beq _0801ED18
	cmp r2, #8
	beq _0801ED14
	cmp r2, #0
	beq _0801ED14
	adds r0, r2, #0
	adds r0, #8
	cmp r2, #0
	ble _0801ED16
	subs r0, #0x10
	b _0801ED16
	.align 2, 0
_0801ED0C: .4byte 0x000003FF
_0801ED10: .4byte gUnknown_030059C8
_0801ED14:
	adds r0, r2, #0
_0801ED16:
	adds r2, r0, #0
_0801ED18:
	adds r0, r2, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_801ED24
sub_801ED24: @ 0x0801ED24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	adds r5, r1, #0
	mov r8, r2
	mov sl, r3
	cmp r4, #0
	blt _0801ED50
	ldr r0, _0801ED4C @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	subs r1, r0, #1
	adds r0, r4, #0
	cmp r0, r1
	bls _0801ED52
	adds r0, r1, #0
	b _0801ED52
	.align 2, 0
_0801ED4C: .4byte gUnknown_030059C8
_0801ED50:
	movs r0, #0
_0801ED52:
	adds r4, r0, #0
	cmp r5, #0
	blt _0801ED70
	ldr r0, _0801ED6C @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
	subs r0, #1
	adds r1, r5, #0
	cmp r1, r0
	bls _0801ED72
	adds r1, r0, #0
	b _0801ED72
	.align 2, 0
_0801ED6C: .4byte gUnknown_030059C8
_0801ED70:
	movs r1, #0
_0801ED72:
	adds r5, r1, #0
	movs r0, #1
	mov sb, r0
	mov r2, r8
	ands r2, r0
	adds r0, r4, #0
	bl sub_801EF94
	adds r4, r0, #0
	ldr r6, _0801EE0C @ =0x000003FF
	ands r6, r4
	movs r7, #7
	adds r3, r7, #0
	ands r3, r5
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r4
	cmp r0, #0
	beq _0801ED9A
	subs r3, r7, r3
_0801ED9A:
	ldr r2, _0801EE10 @ =gUnknown_030059C8
	ldr r5, [r2]
	lsls r0, r6, #3
	ldr r1, [r5]
	adds r0, r0, r3
	adds r1, r1, r0
	movs r3, #0
	ldrsb r3, [r1, r3]
	movs r0, #0xf
	ands r3, r0
	movs r0, #8
	ands r0, r3
	cmp r0, #0
	beq _0801EDBC
	movs r0, #0x10
	rsbs r0, r0, #0
	orrs r3, r0
_0801EDBC:
	movs r0, #8
	rsbs r0, r0, #0
	cmp r3, r0
	bne _0801EDC6
	movs r3, #8
_0801EDC6:
	movs r0, #0x80
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0801EDEC
	lsrs r0, r6, #3
	ldr r1, [r5, #0x14]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	ands r0, r7
	lsls r0, r0, #1
	asrs r1, r0
	mov r0, sb
	ands r1, r0
	cmp r1, #0
	beq _0801EDEC
	movs r3, #0
_0801EDEC:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0801EE18
	cmp r3, #8
	beq _0801EE14
	cmp r3, #0
	beq _0801EE14
	adds r0, r3, #0
	adds r0, #8
	cmp r3, #0
	ble _0801EE16
	subs r0, #0x10
	b _0801EE16
	.align 2, 0
_0801EE0C: .4byte 0x000003FF
_0801EE10: .4byte gUnknown_030059C8
_0801EE14:
	adds r0, r3, #0
_0801EE16:
	adds r3, r0, #0
_0801EE18:
	ldr r0, [r2]
	ldr r0, [r0, #4]
	adds r0, r0, r6
	ldrb r2, [r0]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r4
	cmp r0, #0
	beq _0801EE34
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_0801EE34:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0801EE4E
	cmp r3, #0
	beq _0801EE4A
	rsbs r0, r2, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _0801EE4C
_0801EE4A:
	adds r0, r2, #0
_0801EE4C:
	adds r2, r0, #0
_0801EE4E:
	mov r1, sl
	strb r2, [r1]
	adds r0, r3, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_801EE64
sub_801EE64: @ 0x0801EE64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	adds r5, r1, #0
	mov r8, r2
	mov sl, r3
	cmp r5, #0
	blt _0801EE90
	ldr r0, _0801EE8C @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	subs r1, r0, #1
	adds r0, r5, #0
	cmp r0, r1
	bls _0801EE92
	adds r0, r1, #0
	b _0801EE92
	.align 2, 0
_0801EE8C: .4byte gUnknown_030059C8
_0801EE90:
	movs r0, #0
_0801EE92:
	adds r5, r0, #0
	cmp r4, #0
	blt _0801EEB0
	ldr r0, _0801EEAC @ =gUnknown_030059C8
	ldr r0, [r0]
	ldr r0, [r0, #0x20]
	subs r1, r0, #1
	adds r0, r4, #0
	cmp r0, r1
	bls _0801EEB2
	adds r0, r1, #0
	b _0801EEB2
	.align 2, 0
_0801EEAC: .4byte gUnknown_030059C8
_0801EEB0:
	movs r0, #0
_0801EEB2:
	adds r4, r0, #0
	movs r0, #1
	mov sb, r0
	mov r2, r8
	ands r2, r0
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_801EF94
	adds r4, r0, #0
	ldr r7, _0801EF3C @ =0x000003FF
	ands r7, r4
	movs r6, #7
	adds r3, r6, #0
	ands r3, r5
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0801EEDC
	subs r3, r6, r3
_0801EEDC:
	ldr r2, _0801EF40 @ =gUnknown_030059C8
	ldr r5, [r2]
	lsls r0, r7, #3
	ldr r1, [r5]
	adds r0, r0, r3
	adds r1, r1, r0
	movs r3, #0
	ldrsb r3, [r1, r3]
	asrs r3, r3, #4
	movs r0, #8
	rsbs r0, r0, #0
	cmp r3, r0
	bne _0801EEF8
	movs r3, #8
_0801EEF8:
	movs r0, #0x80
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0801EF1E
	lsrs r0, r7, #3
	ldr r1, [r5, #0x14]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r7, #0
	ands r0, r6
	lsls r0, r0, #1
	asrs r1, r0
	mov r0, sb
	ands r1, r0
	cmp r1, #0
	beq _0801EF1E
	movs r3, #0
_0801EF1E:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r4
	cmp r0, #0
	beq _0801EF48
	cmp r3, #8
	beq _0801EF44
	cmp r3, #0
	beq _0801EF44
	adds r0, r3, #0
	adds r0, #8
	cmp r3, #0
	ble _0801EF46
	subs r0, #0x10
	b _0801EF46
	.align 2, 0
_0801EF3C: .4byte 0x000003FF
_0801EF40: .4byte gUnknown_030059C8
_0801EF44:
	adds r0, r3, #0
_0801EF46:
	adds r3, r0, #0
_0801EF48:
	ldr r0, [r2]
	ldr r0, [r0, #4]
	adds r0, r0, r7
	ldrb r2, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r4
	cmp r0, #0
	beq _0801EF60
	rsbs r0, r2, #0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_0801EF60:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r4
	cmp r0, #0
	beq _0801EF7E
	cmp r3, #0
	beq _0801EF7A
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _0801EF7C
_0801EF7A:
	adds r0, r2, #0
_0801EF7C:
	adds r2, r0, #0
_0801EF7E:
	mov r1, sl
	strb r2, [r1]
	adds r0, r3, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_801EF94
sub_801EF94: @ 0x0801EF94
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r1, #0
	mov sb, r2
	asrs r4, r0, #3
	ldr r5, _0801EFB0 @ =gUnknown_03000410
	ldr r0, [r5]
	cmp r0, r4
	bne _0801EFB4
	ldr r7, [r5, #8]
	ldr r0, [r5, #4]
	b _0801EFCC
	.align 2, 0
_0801EFB0: .4byte gUnknown_03000410
_0801EFB4:
	adds r0, r4, #0
	movs r1, #0xc
	bl Div
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	subs r1, r4, r1
	str r4, [r5]
	str r0, [r5, #4]
	str r1, [r5, #8]
	adds r7, r1, #0
_0801EFCC:
	mov r8, r0
	asrs r4, r6, #3
	ldr r6, _0801EFE0 @ =gUnknown_03000420
	ldr r0, [r6]
	cmp r0, r4
	bne _0801EFE4
	ldr r5, [r6, #8]
	ldr r3, [r6, #4]
	b _0801EFFE
	.align 2, 0
_0801EFE0: .4byte gUnknown_03000420
_0801EFE4:
	adds r0, r4, #0
	movs r1, #0xc
	bl Div
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	subs r1, r4, r1
	adds r3, r0, #0
	str r4, [r6]
	str r3, [r6, #4]
	str r1, [r6, #8]
	adds r5, r1, #0
_0801EFFE:
	ldr r0, _0801F040 @ =gUnknown_030059C8
	ldr r4, [r0]
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r4, #0
	adds r1, #0xc
	adds r1, r1, r0
	ldrh r0, [r4, #0x18]
	muls r0, r3, r0
	add r0, r8
	ldr r1, [r1]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	lsls r1, r5, #3
	lsls r0, r5, #2
	adds r1, r1, r0
	adds r1, r1, r7
	lsls r3, r2, #8
	lsls r2, r2, #5
	lsls r1, r1, #1
	ldr r0, [r4, #8]
	adds r0, r0, r3
	adds r0, r0, r2
	adds r0, r0, r1
	ldrh r0, [r0]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0801F040: .4byte gUnknown_030059C8

	thumb_func_start sub_801F044
sub_801F044: @ 0x0801F044
	sub sp, #4
	movs r3, #0
	str r3, [sp]
	ldr r0, _0801F06C @ =0x040000D4
	mov r1, sp
	str r1, [r0]
	ldr r1, _0801F070 @ =gUnknown_03000410
	str r1, [r0, #4]
	ldr r2, _0801F074 @ =0x85000003
	str r2, [r0, #8]
	ldr r1, [r0, #8]
	str r3, [sp]
	mov r1, sp
	str r1, [r0]
	ldr r1, _0801F078 @ =gUnknown_03000420
	str r1, [r0, #4]
	str r2, [r0, #8]
	ldr r0, [r0, #8]
	add sp, #4
	bx lr
	.align 2, 0
_0801F06C: .4byte 0x040000D4
_0801F070: .4byte gUnknown_03000410
_0801F074: .4byte 0x85000003
_0801F078: .4byte gUnknown_03000420

	thumb_func_start sub_801F07C
sub_801F07C: @ 0x0801F07C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	mov r8, r3
	ldr r6, [sp, #0x1c]
	cmp r6, #0
	bne _0801F090
	mov r6, sp
_0801F090:
	mov r4, sp
	adds r4, #1
	adds r0, r5, #0
	adds r3, r4, #0
	ldr r7, [sp, #0x20]
	bl _call_via_r7
	adds r1, r0, #0
	cmp r1, #0
	bne _0801F0BC
	mov r0, r8
	cmp r0, #0
	ble _0801F0B4
	movs r0, #7
	ands r0, r5
	movs r1, #8
	subs r0, r1, r0
	b _0801F0F2
_0801F0B4:
	movs r0, #7
	ands r0, r5
	adds r0, #1
	b _0801F0F2
_0801F0BC:
	cmp r1, #8
	bne _0801F0DA
	ldrb r0, [r4]
	strb r0, [r6]
	mov r7, r8
	cmp r7, #0
	ble _0801F0D2
	movs r0, #7
	ands r0, r5
	mvns r0, r0
	b _0801F0F2
_0801F0D2:
	movs r0, #8
	rsbs r0, r0, #0
	orrs r0, r5
	b _0801F0F2
_0801F0DA:
	ldrb r0, [r4]
	strb r0, [r6]
	cmp r1, #0
	ble _0801F0EC
	subs r1, #1
	movs r0, #7
	ands r0, r5
	subs r0, r1, r0
	b _0801F0F2
_0801F0EC:
	movs r0, #7
	ands r0, r5
	adds r0, r1, r0
_0801F0F2:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_801F100
sub_801F100: @ 0x0801F100
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r3, #0
	ldr r3, [sp, #0xc]
	bl _call_via_r3
	adds r1, r0, #0
	cmp r1, #0
	bne _0801F128
	cmp r5, #0
	ble _0801F120
	movs r0, #7
	ands r0, r4
	movs r1, #8
	subs r0, r1, r0
	b _0801F154
_0801F120:
	movs r0, #7
	ands r0, r4
	adds r0, #1
	b _0801F154
_0801F128:
	cmp r1, #8
	bne _0801F140
	cmp r5, #0
	ble _0801F138
	movs r0, #7
	ands r0, r4
	mvns r0, r0
	b _0801F154
_0801F138:
	movs r0, #8
	rsbs r0, r0, #0
	orrs r0, r4
	b _0801F154
_0801F140:
	cmp r1, #0
	ble _0801F14E
	subs r1, #1
	movs r0, #7
	ands r0, r4
	subs r0, r1, r0
	b _0801F154
_0801F14E:
	movs r0, #7
	ands r0, r4
	adds r0, r1, r0
_0801F154:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_801F15C
sub_801F15C: @ 0x0801F15C
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	mov sb, r2
	mov sl, r3
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x24]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	ldr r2, _0801F1FC @ =0x00004001
	str r1, [sp]
	movs r1, #0x58
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r6, r1
	ldr r2, _0801F200 @ =IWRAM_START + 0x1C
	adds r2, r2, r6
	mov r8, r2
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [r1]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	str r5, [r1, #4]
	movs r4, #0
	movs r2, #0
	mov r3, sb
	strh r3, [r1, #0x14]
	mov r3, sl
	strb r3, [r1, #0x1a]
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	mov r1, r8
	str r2, [r1, #4]
	strh r2, [r1, #8]
	strh r2, [r1, #0xa]
	ldr r3, _0801F204 @ =IWRAM_START + 0x3C
	adds r1, r6, r3
	strb r4, [r1]
	ldr r1, _0801F208 @ =IWRAM_START + 0x3D
	adds r3, r6, r1
	movs r1, #0xff
	strb r1, [r3]
	mov r3, r8
	strh r2, [r3, #0x1a]
	strh r2, [r3, #0x1c]
	ldr r1, _0801F20C @ =IWRAM_START + 0x3E
	adds r3, r6, r1
	movs r1, #0x10
	strb r1, [r3]
	ldr r3, _0801F210 @ =IWRAM_START + 0x41
	adds r6, r6, r3
	strb r4, [r6]
	mov r1, r8
	str r2, [r1, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0801F1FC: .4byte 0x00004001
_0801F200: .4byte IWRAM_START + 0x1C
_0801F204: .4byte IWRAM_START + 0x3C
_0801F208: .4byte IWRAM_START + 0x3D
_0801F20C: .4byte IWRAM_START + 0x3E
_0801F210: .4byte IWRAM_START + 0x41

	thumb_func_start sub_801F214
sub_801F214: @ 0x0801F214
	push {r4, r5, r6, lr}
	ldr r2, _0801F25C @ =gCurTask
	ldr r6, [r2]
	ldrh r1, [r6, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x1c
	adds r5, r1, r0
	ldr r3, _0801F260 @ =gUnknown_030059E0
	ldr r1, [r3, #0x20]
	movs r0, #0x80
	ands r1, r0
	cmp r1, #0
	bne _0801F254
	ldrh r1, [r4, #0x14]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0801F264
	adds r1, r3, #0
	adds r1, #0x68
	ldrh r0, [r4, #0x16]
	ldrh r1, [r1]
	cmp r0, r1
	bne _0801F254
	adds r1, r3, #0
	adds r1, #0x6a
	ldrh r0, [r4, #0x18]
	ldrh r1, [r1]
	cmp r0, r1
	beq _0801F264
_0801F254:
	adds r0, r6, #0
	bl TaskDestroy
	b _0801F398
	.align 2, 0
_0801F25C: .4byte gCurTask
_0801F260: .4byte gUnknown_030059E0
_0801F264:
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0801F278
	ldr r0, [r2]
	bl TaskDestroy
	b _0801F398
_0801F278:
	ldrh r1, [r4, #0x14]
	movs r0, #3
	ands r0, r1
	cmp r0, #1
	beq _0801F310
	cmp r0, #1
	bgt _0801F28C
	cmp r0, #0
	beq _0801F292
	b _0801F334
_0801F28C:
	cmp r0, #2
	beq _0801F32C
	b _0801F334
_0801F292:
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0x10
	beq _0801F2EC
	cmp r0, #0x20
	bne _0801F2F4
	ldr r0, _0801F2CC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801F2E0
	ldr r0, _0801F2D0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	ldr r1, _0801F2D4 @ =gUnknown_030055A0
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r2, _0801F2D8 @ =IWRAM_START + 0x50
	adds r1, r0, r2
	movs r2, #0
	ldrsh r1, [r1, r2]
	str r1, [r4]
	ldr r1, _0801F2DC @ =IWRAM_START + 0x52
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	b _0801F2F2
	.align 2, 0
_0801F2CC: .4byte gUnknown_030054CC
_0801F2D0: .4byte 0x04000128
_0801F2D4: .4byte gUnknown_030055A0
_0801F2D8: .4byte IWRAM_START + 0x50
_0801F2DC: .4byte IWRAM_START + 0x52
_0801F2E0:
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	str r0, [r4]
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	b _0801F2F2
_0801F2EC:
	ldr r0, _0801F308 @ =gUnknown_03005660
	movs r1, #4
	ldrsh r0, [r0, r1]
_0801F2F2:
	str r0, [r4, #4]
_0801F2F4:
	ldr r2, _0801F30C @ =gUnknown_03005960
	ldr r0, [r4]
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	ldr r1, [r2, #4]
	subs r0, r0, r1
	b _0801F332
	.align 2, 0
_0801F308: .4byte gUnknown_03005660
_0801F30C: .4byte gUnknown_03005960
_0801F310:
	ldr r2, _0801F328 @ =gUnknown_03005960
	ldr r0, [r4]
	adds r1, r2, #0
	adds r1, #0x52
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	adds r2, #0x54
	ldrh r1, [r2]
	subs r0, r0, r1
	b _0801F332
	.align 2, 0
_0801F328: .4byte gUnknown_03005960
_0801F32C:
	ldr r0, [r4]
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
_0801F332:
	strh r0, [r5, #0x18]
_0801F334:
	ldrh r1, [r4, #0x14]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0801F35A
	ldr r0, [r3, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0801F352
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	b _0801F358
_0801F352:
	ldr r0, [r5, #0x10]
	ldr r1, _0801F37C @ =0xFFFFFBFF
	ands r0, r1
_0801F358:
	str r0, [r5, #0x10]
_0801F35A:
	ldrh r1, [r4, #0x14]
	movs r2, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0801F38C
	ldr r0, _0801F380 @ =gUnknown_03005424
	ldrh r1, [r0]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0801F384
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _0801F38A
	.align 2, 0
_0801F37C: .4byte 0xFFFFFBFF
_0801F380: .4byte gUnknown_03005424
_0801F384:
	ldr r0, [r5, #0x10]
	ldr r1, _0801F3A0 @ =0xFFFFF7FF
	ands r0, r1
_0801F38A:
	str r0, [r5, #0x10]
_0801F38C:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0801F398:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0801F3A0: .4byte 0xFFFFF7FF

	thumb_func_start sub_801F3A4
sub_801F3A4: @ 0x0801F3A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r3, r0, #0
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	cmp r7, #0x64
	beq _0801F3D6
	cmp r7, #0xc8
	beq _0801F3D6
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r7, r0
	beq _0801F3D6
	adds r0, #0xc8
	cmp r7, r0
	beq _0801F3D6
	movs r0, #0xc8
	lsls r0, r0, #2
	cmp r7, r0
	beq _0801F3D6
	movs r0, #0
	b _0801F474
_0801F3D6:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, _0801F410 @ =sub_801F214
	str r2, [sp]
	ldr r2, _0801F414 @ =sub_801F550
	str r2, [sp, #4]
	movs r2, #0x20
	movs r3, #0
	bl sub_801F15C
	mov sb, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov r8, r1
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r7, r0
	beq _0801F432
	cmp r7, r0
	bgt _0801F418
	cmp r7, #0x64
	beq _0801F42A
	cmp r7, #0xc8
	beq _0801F42E
	b _0801F43C
	.align 2, 0
_0801F410: .4byte sub_801F214
_0801F414: .4byte sub_801F550
_0801F418:
	movs r0, #0xfa
	lsls r0, r0, #1
	cmp r7, r0
	beq _0801F436
	movs r0, #0xc8
	lsls r0, r0, #2
	cmp r7, r0
	beq _0801F43A
	b _0801F43C
_0801F42A:
	movs r7, #0
	b _0801F43C
_0801F42E:
	movs r7, #1
	b _0801F43C
_0801F432:
	movs r7, #2
	b _0801F43C
_0801F436:
	movs r7, #3
	b _0801F43C
_0801F43A:
	movs r7, #4
_0801F43C:
	mov r6, r8
	adds r6, #0x1c
	ldr r5, _0801F484 @ =gUnknown_080D6354
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #1
	adds r0, r4, r5
	ldrh r0, [r0]
	bl sub_8007C10
	str r0, [r6, #4]
	adds r0, r5, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r5, #4
	adds r4, r4, r5
	ldrh r1, [r4]
	mov r0, r8
	adds r0, #0x3c
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r6, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	mov r0, sb
_0801F474:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0801F484: .4byte gUnknown_080D6354

	thumb_func_start sub_801F488
sub_801F488: @ 0x0801F488
	push {r4, r5, lr}
	sub sp, #8
	ldr r5, _0801F52C @ =gUnknown_030059E0
	ldr r0, _0801F530 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0801F524
	movs r4, #0x17
	ldrsb r4, [r5, r4]
	ldr r0, _0801F534 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801F4AC
	rsbs r4, r4, #0
_0801F4AC:
	ldr r2, _0801F538 @ =gUnknown_08097AA4
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r1, [r0]
	lsls r0, r1, #3
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r3, r4, #0
	muls r3, r0, r3
	asrs r3, r3, #8
	lsls r1, r1, #3
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r1, r0
	adds r1, r1, r2
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	adds r2, r4, #0
	muls r2, r0, r2
	asrs r2, r2, #8
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r1, [r5, #0xc]
	asrs r1, r1, #8
	subs r0, r0, r3
	adds r1, r1, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, _0801F53C @ =sub_801F214
	str r2, [sp]
	ldr r2, _0801F540 @ =sub_801F550
	str r2, [sp, #4]
	movs r2, #0xc0
	movs r3, #0
	bl sub_801F15C
	ldrh r4, [r0, #6]
	ldr r0, _0801F544 @ =IWRAM_START + 0x1C
	adds r5, r4, r0
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r5, #4]
	movs r1, #0
	ldr r0, _0801F548 @ =0x00000351
	strh r0, [r5, #0xa]
	ldr r0, _0801F54C @ =IWRAM_START + 0x3C
	adds r4, r4, r0
	strb r1, [r4]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
_0801F524:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801F52C: .4byte gUnknown_030059E0
_0801F530: .4byte gUnknown_03005590
_0801F534: .4byte gUnknown_03005424
_0801F538: .4byte gUnknown_08097AA4
_0801F53C: .4byte sub_801F214
_0801F540: .4byte sub_801F550
_0801F544: .4byte IWRAM_START + 0x1C
_0801F548: .4byte 0x00000351
_0801F54C: .4byte IWRAM_START + 0x3C

	thumb_func_start sub_801F550
sub_801F550: @ 0x0801F550
	push {lr}
	ldrh r0, [r0, #6]
	ldr r1, _0801F564 @ =IWRAM_START + 0x1C
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0
	.align 2, 0
_0801F564: .4byte IWRAM_START + 0x1C

	thumb_func_start sub_801F568
sub_801F568: @ 0x0801F568
	push {r4, r5, r6, lr}
	sub sp, #8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, _0801F5B8 @ =sub_801F214
	str r2, [sp]
	ldr r2, _0801F5BC @ =sub_801F550
	str r2, [sp, #4]
	movs r2, #0xc0
	movs r3, #0
	bl sub_801F15C
	adds r6, r0, #0
	ldrh r4, [r6, #6]
	ldr r0, _0801F5C0 @ =IWRAM_START + 0x1C
	adds r5, r4, r0
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r5, #4]
	movs r1, #0
	ldr r0, _0801F5C4 @ =0x00000351
	strh r0, [r5, #0xa]
	ldr r0, _0801F5C8 @ =IWRAM_START + 0x3C
	adds r4, r4, r0
	strb r1, [r4]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0801F5B8: .4byte sub_801F214
_0801F5BC: .4byte sub_801F550
_0801F5C0: .4byte IWRAM_START + 0x1C
_0801F5C4: .4byte 0x00000351
_0801F5C8: .4byte IWRAM_START + 0x3C

	thumb_func_start sub_801F5CC
sub_801F5CC: @ 0x0801F5CC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r1, _0801F5F0 @ =gUnknown_030059D0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0801F5EC
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0801F5F4
_0801F5EC:
	movs r0, #0
	b _0801F6BE
	.align 2, 0
_0801F5F0: .4byte gUnknown_030059D0
_0801F5F4:
	subs r0, r2, #1
	movs r4, #0
	strb r0, [r1]
	ldr r0, _0801F650 @ =sub_801F6E0
	ldr r2, _0801F654 @ =0x00004001
	ldr r1, _0801F658 @ =sub_801F7B8
	str r1, [sp]
	movs r1, #0x38
	movs r3, #0
	bl TaskCreate
	mov sb, r0
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r5, r0
	movs r1, #0
	mov r8, r1
	strh r6, [r0]
	strh r7, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	ldr r0, _0801F65C @ =IWRAM_START + 0x8
	adds r4, r5, r0
	ldr r0, _0801F660 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0801F668
	movs r0, #0xf
	bl sub_8007C10
	str r0, [r4, #4]
	movs r0, #0xda
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	ldr r1, _0801F664 @ =IWRAM_START + 0x28
	adds r0, r5, r1
	mov r1, r8
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #6
	b _0801F696
	.align 2, 0
_0801F650: .4byte sub_801F6E0
_0801F654: .4byte 0x00004001
_0801F658: .4byte sub_801F7B8
_0801F65C: .4byte IWRAM_START + 0x8
_0801F660: .4byte gUnknown_030059E0
_0801F664: .4byte IWRAM_START + 0x28
_0801F668:
	ldr r0, _0801F6CC @ =0x06012300
	str r0, [r4, #4]
	movs r0, #0xd4
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	ldr r1, _0801F6D0 @ =IWRAM_START + 0x28
	adds r0, r5, r1
	mov r1, r8
	strb r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #6
	str r3, [r4, #0x10]
	ldr r2, _0801F6D4 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0801F6D8 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0801F6DC @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xc0
	lsls r1, r1, #4
	ands r0, r1
	orrs r0, r3
_0801F696:
	str r0, [r4, #0x10]
	movs r2, #0
	movs r1, #0
	strh r1, [r4, #8]
	adds r3, r4, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x1a]
	strh r1, [r4, #0x1c]
	adds r1, r4, #0
	adds r1, #0x22
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x25
	strb r2, [r0]
	mov r0, sb
_0801F6BE:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0801F6CC: .4byte 0x06012300
_0801F6D0: .4byte IWRAM_START + 0x28
_0801F6D4: .4byte gUnknown_030053B8
_0801F6D8: .4byte 0x00196225
_0801F6DC: .4byte 0x3C6EF35F

	thumb_func_start sub_801F6E0
sub_801F6E0: @ 0x0801F6E0
	push {r4, r5, lr}
	ldr r2, _0801F714 @ =gUnknown_030059D0
	ldr r0, _0801F718 @ =gCurTask
	ldr r3, [r0]
	ldrh r1, [r3, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #8
	adds r5, r1, r0
	ldr r0, [r2, #4]
	cmp r0, #0
	beq _0801F706
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0801F71C
_0801F706:
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r0, r3, #0
	bl TaskDestroy
	b _0801F74A
	.align 2, 0
_0801F714: .4byte gUnknown_030059D0
_0801F718: .4byte gCurTask
_0801F71C:
	ldr r2, _0801F750 @ =gUnknown_03005960
	ldr r1, [r2]
	ldrh r0, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r1, [r2, #4]
	ldrh r0, [r4, #2]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldrh r0, [r4, #4]
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	ldrh r0, [r4, #6]
	ldrh r1, [r4, #2]
	adds r0, r0, r1
	strh r0, [r4, #2]
_0801F74A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801F750: .4byte gUnknown_03005960

	thumb_func_start sub_801F754
sub_801F754: @ 0x0801F754
	push {r4, lr}
	sub sp, #4
	ldr r4, _0801F780 @ =gUnknown_030059D0
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0801F778
	ldr r0, _0801F784 @ =sub_801F7B4
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r1, _0801F788 @ =sub_801F7A8
	str r1, [sp]
	movs r1, #0
	movs r3, #0
	bl TaskCreate
	str r0, [r4, #4]
	movs r0, #0x14
	strb r0, [r4]
_0801F778:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801F780: .4byte gUnknown_030059D0
_0801F784: .4byte sub_801F7B4
_0801F788: .4byte sub_801F7A8

	thumb_func_start sub_801F78C
sub_801F78C: @ 0x0801F78C
	push {r4, lr}
	ldr r4, _0801F7A4 @ =gUnknown_030059D0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0801F79E
	bl TaskDestroy
	movs r0, #0
	str r0, [r4, #4]
_0801F79E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801F7A4: .4byte gUnknown_030059D0

	thumb_func_start sub_801F7A8
sub_801F7A8: @ 0x0801F7A8
	ldr r1, _0801F7B0 @ =gUnknown_030059D0
	movs r0, #0
	str r0, [r1, #4]
	bx lr
	.align 2, 0
_0801F7B0: .4byte gUnknown_030059D0

	thumb_func_start sub_801F7B4
sub_801F7B4: @ 0x0801F7B4
	bx lr
	.align 2, 0

	thumb_func_start sub_801F7B8
sub_801F7B8: @ 0x0801F7B8
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r2, r0, r1
	adds r1, #8
	adds r0, r0, r1
	ldrh r1, [r0, #0xa]
	movs r0, #0xda
	lsls r0, r0, #2
	cmp r1, r0
	bne _0801F7D6
	ldr r0, [r2, #0xc]
	bl sub_8007CF0
_0801F7D6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_801F7DC
sub_801F7DC: @ 0x0801F7DC
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0801F840 @ =sub_801F860
	ldr r2, _0801F844 @ =0x00004001
	ldr r1, _0801F848 @ =sub_801FAE8
	str r1, [sp]
	movs r1, #0x30
	movs r3, #0
	bl TaskCreate
	adds r6, r0, #0
	ldrh r5, [r6, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r4, #4]
	movs r3, #0
	movs r2, #0
	strh r2, [r4, #8]
	ldr r0, _0801F84C @ =0x0000034E
	strh r0, [r4, #0xa]
	ldr r1, _0801F850 @ =IWRAM_START + 0x20
	adds r0, r5, r1
	strb r3, [r0]
	ldr r0, _0801F854 @ =IWRAM_START + 0x21
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x1a]
	strh r2, [r4, #0x1c]
	ldr r0, _0801F858 @ =IWRAM_START + 0x22
	adds r1, r5, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0801F85C @ =IWRAM_START + 0x25
	adds r5, r5, r1
	strb r3, [r5]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0801F840: .4byte sub_801F860
_0801F844: .4byte 0x00004001
_0801F848: .4byte sub_801FAE8
_0801F84C: .4byte 0x0000034E
_0801F850: .4byte IWRAM_START + 0x20
_0801F854: .4byte IWRAM_START + 0x21
_0801F858: .4byte IWRAM_START + 0x22
_0801F85C: .4byte IWRAM_START + 0x25

	thumb_func_start sub_801F860
sub_801F860: @ 0x0801F860
	push {r4, r5, r6, r7, lr}
	ldr r5, _0801F888 @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	beq _0801F87C
	ldr r0, [r5, #0x20]
	movs r1, #0x90
	lsls r1, r1, #3
	ands r0, r1
	subs r1, #0x80
	cmp r0, r1
	beq _0801F890
_0801F87C:
	ldr r0, _0801F88C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0801F998
	.align 2, 0
_0801F888: .4byte gUnknown_030059E0
_0801F88C: .4byte gCurTask
_0801F890:
	ldr r3, _0801F908 @ =gCurTask
	ldr r0, [r3]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	movs r0, #0x26
	ldrsh r1, [r5, r0]
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	ble _0801F8C2
	movs r1, #0
	ldr r0, _0801F90C @ =0x0000034F
	strh r0, [r4, #0xa]
	ldr r6, _0801F910 @ =IWRAM_START + 0x20
	adds r0, r2, r6
	strb r1, [r0]
	ldr r0, _0801F914 @ =IWRAM_START + 0x21
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r3]
	ldr r0, _0801F918 @ =sub_801F9A4
	str r0, [r1, #8]
_0801F8C2:
	ldr r6, _0801F91C @ =gUnknown_03005960
	movs r3, #0x17
	ldrsb r3, [r5, r3]
	ldr r2, _0801F920 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	beq _0801F8D8
	rsbs r3, r3, #0
_0801F8D8:
	ldr r0, _0801F924 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801F938
	ldr r1, _0801F928 @ =gUnknown_030055A0
	ldr r0, _0801F92C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	ldr r2, _0801F930 @ =IWRAM_START + 0x50
	adds r0, r1, r2
	ldr r2, [r6]
	ldrh r0, [r0]
	subs r0, r0, r2
	strh r0, [r4, #0x16]
	ldr r0, _0801F934 @ =IWRAM_START + 0x52
	adds r1, r1, r0
	ldrh r0, [r1]
	b _0801F946
	.align 2, 0
_0801F908: .4byte gCurTask
_0801F90C: .4byte 0x0000034F
_0801F910: .4byte IWRAM_START + 0x20
_0801F914: .4byte IWRAM_START + 0x21
_0801F918: .4byte sub_801F9A4
_0801F91C: .4byte gUnknown_03005960
_0801F920: .4byte gUnknown_03005424
_0801F924: .4byte gUnknown_030054CC
_0801F928: .4byte gUnknown_030055A0
_0801F92C: .4byte 0x04000128
_0801F930: .4byte IWRAM_START + 0x50
_0801F934: .4byte IWRAM_START + 0x52
_0801F938:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
_0801F946:
	adds r0, r0, r3
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r0, [r5, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0801F962
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	b _0801F968
_0801F962:
	ldr r0, [r4, #0x10]
	ldr r1, _0801F980 @ =0xFFFFFBFF
	ands r0, r1
_0801F968:
	str r0, [r4, #0x10]
	ldrh r1, [r7]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801F984
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _0801F98A
	.align 2, 0
_0801F980: .4byte 0xFFFFFBFF
_0801F984:
	ldr r0, [r4, #0x10]
	ldr r1, _0801F9A0 @ =0xFFFFF7FF
	ands r0, r1
_0801F98A:
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0801F998:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801F9A0: .4byte 0xFFFFF7FF

	thumb_func_start sub_801F9A4
sub_801F9A4: @ 0x0801F9A4
	push {r4, r5, r6, r7, lr}
	ldr r5, _0801F9CC @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	beq _0801F9C0
	ldr r0, [r5, #0x20]
	movs r1, #0x90
	lsls r1, r1, #3
	ands r0, r1
	subs r1, #0x80
	cmp r0, r1
	beq _0801F9D4
_0801F9C0:
	ldr r0, _0801F9D0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0801FADC
	.align 2, 0
_0801F9CC: .4byte gUnknown_030059E0
_0801F9D0: .4byte gCurTask
_0801F9D4:
	ldr r3, _0801FA4C @ =gCurTask
	ldr r0, [r3]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	movs r0, #0x26
	ldrsh r1, [r5, r0]
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bgt _0801FA06
	movs r1, #0
	ldr r0, _0801FA50 @ =0x0000034E
	strh r0, [r4, #0xa]
	ldr r6, _0801FA54 @ =IWRAM_START + 0x20
	adds r0, r2, r6
	strb r1, [r0]
	ldr r0, _0801FA58 @ =IWRAM_START + 0x21
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r3]
	ldr r0, _0801FA5C @ =sub_801F860
	str r0, [r1, #8]
_0801FA06:
	ldr r6, _0801FA60 @ =gUnknown_03005960
	movs r3, #0x17
	ldrsb r3, [r5, r3]
	ldr r2, _0801FA64 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	beq _0801FA1C
	rsbs r3, r3, #0
_0801FA1C:
	ldr r0, _0801FA68 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801FA7C
	ldr r1, _0801FA6C @ =gUnknown_030055A0
	ldr r0, _0801FA70 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	ldr r2, _0801FA74 @ =IWRAM_START + 0x50
	adds r0, r1, r2
	ldr r2, [r6]
	ldrh r0, [r0]
	subs r0, r0, r2
	strh r0, [r4, #0x16]
	ldr r0, _0801FA78 @ =IWRAM_START + 0x52
	adds r1, r1, r0
	ldrh r0, [r1]
	b _0801FA8A
	.align 2, 0
_0801FA4C: .4byte gCurTask
_0801FA50: .4byte 0x0000034E
_0801FA54: .4byte IWRAM_START + 0x20
_0801FA58: .4byte IWRAM_START + 0x21
_0801FA5C: .4byte sub_801F860
_0801FA60: .4byte gUnknown_03005960
_0801FA64: .4byte gUnknown_03005424
_0801FA68: .4byte gUnknown_030054CC
_0801FA6C: .4byte gUnknown_030055A0
_0801FA70: .4byte 0x04000128
_0801FA74: .4byte IWRAM_START + 0x50
_0801FA78: .4byte IWRAM_START + 0x52
_0801FA7C:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
_0801FA8A:
	adds r0, r0, r3
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r0, [r5, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0801FAA6
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	b _0801FAAC
_0801FAA6:
	ldr r0, [r4, #0x10]
	ldr r1, _0801FAC4 @ =0xFFFFFBFF
	ands r0, r1
_0801FAAC:
	str r0, [r4, #0x10]
	ldrh r1, [r7]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801FAC8
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _0801FACE
	.align 2, 0
_0801FAC4: .4byte 0xFFFFFBFF
_0801FAC8:
	ldr r0, [r4, #0x10]
	ldr r1, _0801FAE4 @ =0xFFFFF7FF
	ands r0, r1
_0801FACE:
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0801FADC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801FAE4: .4byte 0xFFFFF7FF

	thumb_func_start sub_801FAE8
sub_801FAE8: @ 0x0801FAE8
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_801FAFC
sub_801FAFC: @ 0x0801FAFC
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0801FB60 @ =sub_801FB80
	ldr r2, _0801FB64 @ =0x00002001
	ldr r1, _0801FB68 @ =sub_801FC18
	str r1, [sp]
	movs r1, #0x30
	movs r3, #0
	bl TaskCreate
	adds r6, r0, #0
	ldrh r5, [r6, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r4, #4]
	movs r3, #0
	movs r2, #0
	strh r2, [r4, #8]
	ldr r0, _0801FB6C @ =0x00000351
	strh r0, [r4, #0xa]
	ldr r1, _0801FB70 @ =IWRAM_START + 0x20
	adds r0, r5, r1
	strb r3, [r0]
	ldr r0, _0801FB74 @ =IWRAM_START + 0x21
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x1a]
	strh r2, [r4, #0x1c]
	ldr r0, _0801FB78 @ =IWRAM_START + 0x22
	adds r1, r5, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0801FB7C @ =IWRAM_START + 0x25
	adds r5, r5, r1
	strb r3, [r5]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0801FB60: .4byte sub_801FB80
_0801FB64: .4byte 0x00002001
_0801FB68: .4byte sub_801FC18
_0801FB6C: .4byte 0x00000351
_0801FB70: .4byte IWRAM_START + 0x20
_0801FB74: .4byte IWRAM_START + 0x21
_0801FB78: .4byte IWRAM_START + 0x22
_0801FB7C: .4byte IWRAM_START + 0x25

	thumb_func_start sub_801FB80
sub_801FB80: @ 0x0801FB80
	push {r4, lr}
	ldr r3, _0801FBA4 @ =gUnknown_030059E0
	adds r0, r3, #0
	adds r0, #0x8c
	ldr r0, [r0]
	cmp r0, #0
	beq _0801FB9A
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x11
	ands r0, r1
	cmp r0, #0
	bne _0801FBAC
_0801FB9A:
	ldr r0, _0801FBA8 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0801FC0C
	.align 2, 0
_0801FBA4: .4byte gUnknown_030059E0
_0801FBA8: .4byte gCurTask
_0801FBAC:
	ldr r0, [r3, #0x68]
	cmp r0, #0x37
	bne _0801FC0C
	ldr r0, _0801FBF0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r2, _0801FBF4 @ =gUnknown_03005960
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r1, [r3, #0xc]
	asrs r1, r1, #8
	movs r0, #0x17
	ldrsb r0, [r3, r0]
	adds r0, r0, r1
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r0, [r3, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0801FBF8
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	b _0801FBFE
	.align 2, 0
_0801FBF0: .4byte gCurTask
_0801FBF4: .4byte gUnknown_03005960
_0801FBF8:
	ldr r0, [r4, #0x10]
	ldr r1, _0801FC14 @ =0xFFFFFBFF
	ands r0, r1
_0801FBFE:
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0801FC0C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0801FC14: .4byte 0xFFFFFBFF

	thumb_func_start sub_801FC18
sub_801FC18: @ 0x0801FC18
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_801FC2C
sub_801FC2C: @ 0x0801FC2C
	push {r4, r5, lr}
	sub sp, #8
	ldr r0, _0801FC44 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0801FC60
	cmp r0, #2
	bhi _0801FC50
	ldr r4, _0801FC48 @ =gUnknown_030059D8
	ldr r0, _0801FC4C @ =sub_8021368
	b _0801FC64
	.align 2, 0
_0801FC44: .4byte gUnknown_030054CC
_0801FC48: .4byte gUnknown_030059D8
_0801FC4C: .4byte sub_8021368
_0801FC50:
	ldr r4, _0801FC58 @ =gUnknown_030059D8
	ldr r0, _0801FC5C @ =sub_8021388
	b _0801FC64
	.align 2, 0
_0801FC58: .4byte gUnknown_030059D8
_0801FC5C: .4byte sub_8021388
_0801FC60:
	ldr r4, _0801FCF0 @ =gUnknown_030059D8
	ldr r0, _0801FCF4 @ =sub_80213A8
_0801FC64:
	movs r1, #0xae
	lsls r1, r1, #2
	ldr r2, _0801FCF8 @ =0x00002001
	ldr r3, _0801FCFC @ =sub_80213B4
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	str r0, [r4]
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	movs r5, #0
	movs r4, #0
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	ldr r0, _0801FD00 @ =0x06011F00
	str r0, [r1, #4]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #8]
	ldr r0, _0801FD04 @ =0x000002D6
	strh r0, [r1, #0xa]
	ldr r2, _0801FD08 @ =IWRAM_START + 0x20
	adds r0, r3, r2
	strb r5, [r0]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x1c]
	ldr r0, _0801FD0C @ =IWRAM_START + 0x21
	adds r2, r3, r0
	movs r0, #0xff
	strb r0, [r2]
	ldr r0, _0801FD10 @ =IWRAM_START + 0x22
	adds r2, r3, r0
	movs r0, #0x20
	strb r0, [r2]
	ldr r2, _0801FD14 @ =IWRAM_START + 0x25
	adds r0, r3, r2
	strb r5, [r0]
	ldr r0, _0801FD18 @ =0x00042200
	str r0, [r1, #0x10]
	ldr r1, _0801FD1C @ =IWRAM_START + 0x2B6
	adds r0, r3, r1
	strh r4, [r0]
	ldr r2, _0801FD20 @ =IWRAM_START + 0x2B4
	adds r1, r3, r2
	movs r0, #0x94
	strh r0, [r1]
	ldr r0, _0801FD24 @ =IWRAM_START + 0x2B0
	adds r1, r3, r0
	movs r0, #0x12
	str r0, [r1]
	ldr r1, _0801FD28 @ =IWRAM_START + 0x30
	adds r3, r3, r1
	add r0, sp, #4
	strh r4, [r0]
	ldr r0, _0801FD2C @ =0x040000D4
	add r2, sp, #4
	str r2, [r0]
	str r3, [r0, #4]
	ldr r1, _0801FD30 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0801FCF0: .4byte gUnknown_030059D8
_0801FCF4: .4byte sub_80213A8
_0801FCF8: .4byte 0x00002001
_0801FCFC: .4byte sub_80213B4
_0801FD00: .4byte 0x06011F00
_0801FD04: .4byte 0x000002D6
_0801FD08: .4byte IWRAM_START + 0x20
_0801FD0C: .4byte IWRAM_START + 0x21
_0801FD10: .4byte IWRAM_START + 0x22
_0801FD14: .4byte IWRAM_START + 0x25
_0801FD18: .4byte 0x00042200
_0801FD1C: .4byte IWRAM_START + 0x2B6
_0801FD20: .4byte IWRAM_START + 0x2B4
_0801FD24: .4byte IWRAM_START + 0x2B0
_0801FD28: .4byte IWRAM_START + 0x30
_0801FD2C: .4byte 0x040000D4
_0801FD30: .4byte 0x81000140

	thumb_func_start sub_801FD34
sub_801FD34: @ 0x0801FD34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp]
	str r1, [sp, #4]
	adds r7, r2, #0
	ldr r0, _0801FDB8 @ =gUnknown_030059D8
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0801FDBC @ =IWRAM_START + 0x30
	adds r4, r0, r1
	ldr r6, _0801FDC0 @ =gUnknown_030059E0
	str r6, [sp, #8]
	movs r5, #0
	movs r6, #0
	cmp r7, #0
	bne _0801FD5E
	b _0801FE5A
_0801FD5E:
	cmp r7, #0x20
	ble _0801FD64
	movs r7, #0x20
_0801FD64:
	ldr r0, _0801FDC4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0801FD72
	cmp r7, #0x10
	ble _0801FD72
	movs r7, #0x10
_0801FD72:
	movs r0, #0x76
	bl m4aSongNumStart
	movs r3, #0x91
	lsls r3, r3, #3
	movs r0, #0
	mov r8, r0
	mov ip, r0
	ldr r1, _0801FDC8 @ =gUnknown_08097AA4
	mov sl, r1
	ldr r0, _0801FDCC @ =gUnknown_030053B8
	mov sb, r0
_0801FD8A:
	ldrh r0, [r4, #0xc]
	cmp r0, #0
	bne _0801FE4E
	movs r0, #0xb4
	strh r0, [r4, #0xc]
	ldr r0, [sp, #8]
	adds r0, #0x38
	ldrb r0, [r0]
	strh r0, [r4, #0xe]
	ldr r1, [sp]
	lsls r0, r1, #8
	str r0, [r4]
	ldr r1, [sp, #4]
	lsls r0, r1, #8
	str r0, [r4, #4]
	cmp r3, #0
	blt _0801FE00
	asrs r2, r3, #8
	cmp r2, #5
	ble _0801FDD0
	rsbs r0, r2, #0
	adds r0, #9
	b _0801FDD2
	.align 2, 0
_0801FDB8: .4byte gUnknown_030059D8
_0801FDBC: .4byte IWRAM_START + 0x30
_0801FDC0: .4byte gUnknown_030059E0
_0801FDC4: .4byte gUnknown_030054CC
_0801FDC8: .4byte gUnknown_08097AA4
_0801FDCC: .4byte gUnknown_030053B8
_0801FDD0:
	adds r0, r2, #0
_0801FDD2:
	adds r2, r0, #0
	movs r1, #0xff
	ands r1, r3
	lsls r0, r1, #3
	add r0, sl
	movs r6, #0
	ldrsh r5, [r0, r6]
	asrs r5, r2
	lsls r1, r1, #3
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r1, r0
	add r1, sl
	movs r0, #0
	ldrsh r6, [r1, r0]
	asrs r6, r2
	asrs r0, r5, #2
	subs r5, r5, r0
	asrs r0, r6, #2
	subs r6, r6, r0
	adds r3, #0x10
	movs r1, #0x80
	orrs r3, r1
_0801FE00:
	movs r2, #0
	strh r5, [r4, #8]
	strh r6, [r4, #0xa]
	ldr r0, _0801FE6C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0801FE16
	rsbs r0, r6, #0
	strh r0, [r4, #0xa]
_0801FE16:
	rsbs r3, r3, #0
	rsbs r5, r5, #0
	strh r2, [r4, #0x10]
	mov r0, sb
	ldr r1, [r0]
	ldr r0, _0801FE70 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0801FE74 @ =0x3C6EF35F
	adds r0, r0, r1
	mov r1, sb
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #9
	ands r0, r1
	cmp r0, #0
	bne _0801FE3A
	movs r0, #4
	strh r0, [r4, #0x10]
_0801FE3A:
	movs r0, #3
	mov r1, ip
	ands r1, r0
	ldrh r0, [r4, #0x10]
	orrs r1, r0
	strh r1, [r4, #0x10]
	movs r0, #1
	add ip, r0
	cmp ip, r7
	bge _0801FE5A
_0801FE4E:
	adds r4, #0x14
	movs r1, #1
	add r8, r1
	mov r0, r8
	cmp r0, #0x1f
	ble _0801FD8A
_0801FE5A:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0801FE6C: .4byte gUnknown_03005424
_0801FE70: .4byte 0x00196225
_0801FE74: .4byte 0x3C6EF35F

	thumb_func_start sub_801FE78
sub_801FE78: @ 0x0801FE78
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r0, _0801FFDC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _0801FFE0 @ =IWRAM_START + 0x30
	adds r5, r1, r0
	ldr r2, [sp, #4]
	mov sb, r2
	ldr r4, _0801FFE4 @ =IWRAM_START + 0x2B0
	adds r0, r1, r4
	ldr r0, [r0]
	str r0, [sp, #8]
	ldr r0, _0801FFE8 @ =IWRAM_START + 0x2B4
	adds r1, r1, r0
	ldrh r1, [r1]
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	mov r0, sb
	bl sub_8004558
	movs r2, #0x1f
	str r2, [sp, #0x14]
_0801FEB8:
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	bne _0801FEC0
	b _08020180
_0801FEC0:
	movs r4, #8
	ldrsh r0, [r5, r4]
	ldr r1, [r5]
	adds r1, r1, r0
	str r1, [r5]
	movs r0, #0xa
	ldrsh r2, [r5, r0]
	ldr r0, [r5, #4]
	adds r0, r0, r2
	str r0, [r5, #4]
	asrs r7, r1, #8
	asrs r0, r0, #8
	mov r8, r0
	ldr r1, _0801FFEC @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r7, r0
	str r0, [sp, #0x18]
	ldr r0, [r1, #4]
	mov r2, r8
	subs r2, r2, r0
	mov sl, r2
	ldr r4, _0801FFF0 @ =gUnknown_030059E0
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldrh r0, [r5, #0xc]
	ldr r1, [sp, #0xc]
	cmp r0, r1
	ble _0801FEFC
	b _08020008
_0801FEFC:
	adds r0, r4, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x14
	bne _0801FF12
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0801FF12
	b _08020008
_0801FF12:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08020008
	adds r6, r2, #0
	adds r6, #0x38
	adds r2, r7, #0
	subs r2, #8
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	movs r3, #0
	ldrsb r3, [r6, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _0801FF3E
	adds r0, r7, #0
	adds r0, #8
	cmp r0, r1
	bge _0801FF4A
	cmp r2, r1
	blt _08020008
_0801FF3E:
	movs r0, #2
	ldrsb r0, [r6, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020008
_0801FF4A:
	mov r2, r8
	subs r2, #0x10
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r3, #1
	ldrsb r3, [r6, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _0801FF64
	cmp r8, r1
	bge _0801FF70
	cmp r2, r1
	blt _08020008
_0801FF64:
	movs r0, #3
	ldrsb r0, [r6, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020008
_0801FF70:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	ldr r1, _0801FFF4 @ =gUnknown_030053F0
	ldrh r6, [r1]
	adds r0, r6, #1
	strh r0, [r1]
	ldr r0, _0801FFF8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _0801FFC4
	ldrh r0, [r1]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0x64
	bl Div
	cmp r4, r0
	beq _0801FFC4
	ldr r0, _0801FFFC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0801FFC4
	ldr r1, _08020000 @ =gUnknown_03005448
	ldrb r0, [r1]
	adds r0, #1
	cmp r0, #0xff
	bls _0801FFBC
	movs r0, #0xff
_0801FFBC:
	strb r0, [r1]
	ldr r1, _08020004 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_0801FFC4:
	ldr r0, _0801FFFC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0801FFD8
	ldr r1, _0801FFF4 @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0xff
	bls _0801FFD8
	movs r0, #0xff
	strh r0, [r1]
_0801FFD8:
	movs r0, #0
	b _0802017E
	.align 2, 0
_0801FFDC: .4byte gCurTask
_0801FFE0: .4byte IWRAM_START + 0x30
_0801FFE4: .4byte IWRAM_START + 0x2B0
_0801FFE8: .4byte IWRAM_START + 0x2B4
_0801FFEC: .4byte gUnknown_03005960
_0801FFF0: .4byte gUnknown_030059E0
_0801FFF4: .4byte gUnknown_030053F0
_0801FFF8: .4byte gUnknown_030055B4
_0801FFFC: .4byte gUnknown_030054CC
_08020000: .4byte gUnknown_03005448
_08020004: .4byte gUnknown_030054A8
_08020008:
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #0
	bge _08020046
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020046
	mov r0, r8
	subs r0, #0x10
	movs r1, #0xe
	ldrsh r2, [r5, r1]
	ldr r1, _080200EC @ =sub_801EC3C
	str r1, [sp]
	adds r1, r7, #0
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801F100
	cmp r0, #0
	bgt _08020046
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020046:
	ldr r2, [sp, #4]
	ldr r4, _080200F0 @ =0x000002B6
	adds r0, r2, r4
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08020090
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0
	ble _08020090
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020090
	movs r4, #0xe
	ldrsh r2, [r5, r4]
	ldr r0, _080200EC @ =sub_801EC3C
	str r0, [sp]
	mov r0, r8
	adds r1, r7, #0
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bgt _08020090
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020090:
	ldrh r0, [r5, #0xa]
	ldr r1, [sp, #8]
	subs r0, r0, r1
	strh r0, [r5, #0xa]
	ldr r0, [sp, #0x18]
	adds r0, #7
	cmp r0, #0xfe
	bhi _08020166
	movs r0, #8
	rsbs r0, r0, #0
	cmp sl, r0
	ble _08020166
	mov r2, sl
	cmp r2, #0xa7
	bgt _08020166
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _080200C0
	ldr r0, _080200F4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08020166
_080200C0:
	mov r2, sb
	adds r2, #0x23
	ldr r4, [sp, #0x10]
	cmp r4, #0
	beq _080200D2
	adds r1, r2, #0
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _080200F8
_080200D2:
	movs r0, #0xff
	strb r0, [r2]
	mov r0, sp
	ldrh r1, [r0, #0x18]
	mov r0, sb
	strh r1, [r0, #0x16]
	mov r2, sl
	strh r2, [r0, #0x18]
	bl sub_80051E8
	movs r4, #1
	str r4, [sp, #0x10]
	b _08020166
	.align 2, 0
_080200EC: .4byte sub_801EC3C
_080200F0: .4byte 0x000002B6
_080200F4: .4byte gUnknown_03005590
_080200F8:
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r1, _080201A0 @ =gUnknown_030022D0
	adds r4, r0, r1
	mov r1, sb
	ldrh r0, [r1, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _080201A4 @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _08020166
	ldr r1, _080201A8 @ =0x040000D4
	str r4, [r1]
	str r3, [r1, #4]
	ldr r0, _080201AC @ =0x80000003
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrh r2, [r3]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	strh r2, [r3]
	mov r1, sb
	ldr r0, [r1, #0xc]
	ldrh r0, [r0, #0xa]
	mov r4, sl
	subs r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3]
	ldrh r2, [r3, #2]
	movs r1, #0xfe
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	strh r2, [r3, #2]
	mov r4, sb
	ldr r0, [r4, #0xc]
	ldrh r0, [r0, #8]
	ldr r1, [sp, #0x18]
	subs r0, r1, r0
	ldr r4, _080201B0 @ =0x000001FF
	adds r1, r4, #0
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3, #2]
_08020166:
	ldrh r1, [r5, #0x10]
	ldr r2, _080201B4 @ =0x0000FFFC
	adds r0, r2, #0
	adds r2, r1, #0
	ands r2, r0
	adds r1, #1
	movs r0, #3
	ands r1, r0
	orrs r2, r1
	strh r2, [r5, #0x10]
	ldrh r0, [r5, #0xc]
	subs r0, #1
_0802017E:
	strh r0, [r5, #0xc]
_08020180:
	adds r5, #0x14
	ldr r4, [sp, #0x14]
	subs r4, #1
	str r4, [sp, #0x14]
	cmp r4, #0
	blt _0802018E
	b _0801FEB8
_0802018E:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080201A0: .4byte gUnknown_030022D0
_080201A4: .4byte gUnknown_03005BB4
_080201A8: .4byte 0x040000D4
_080201AC: .4byte 0x80000003
_080201B0: .4byte 0x000001FF
_080201B4: .4byte 0x0000FFFC

	thumb_func_start sub_80201B8
sub_80201B8: @ 0x080201B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r0, _0802032C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _08020330 @ =IWRAM_START + 0x30
	adds r5, r1, r0
	ldr r2, [sp, #4]
	mov sb, r2
	ldr r4, _08020334 @ =IWRAM_START + 0x2B0
	adds r0, r1, r4
	ldr r0, [r0]
	str r0, [sp, #8]
	ldr r0, _08020338 @ =IWRAM_START + 0x2B4
	adds r1, r1, r0
	ldrh r1, [r1]
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	mov r0, sb
	bl sub_8004558
	movs r2, #0x1f
	str r2, [sp, #0x14]
_080201F8:
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	bne _08020200
	b _080204DC
_08020200:
	movs r4, #8
	ldrsh r1, [r5, r4]
	ldr r0, _0802033C @ =gUnknown_030054FC
	ldr r0, [r0]
	adds r1, r1, r0
	ldr r2, [r5]
	adds r2, r2, r1
	str r2, [r5]
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	ldr r0, _08020340 @ =gUnknown_030054E0
	ldr r0, [r0]
	adds r1, r1, r0
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	asrs r2, r2, #8
	mov r8, r2
	mov ip, r8
	asrs r7, r0, #8
	ldr r1, _08020344 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r2, r2, r0
	str r2, [sp, #0x18]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	mov sl, r0
	ldr r4, _08020348 @ =gUnknown_030059E0
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldrh r0, [r5, #0xc]
	ldr r1, [sp, #0xc]
	cmp r0, r1
	ble _08020248
	b _08020360
_08020248:
	adds r0, r4, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x14
	bne _0802025E
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0802025E
	b _08020360
_0802025E:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802026A
	b _08020360
_0802026A:
	adds r6, r2, #0
	adds r6, #0x38
	mov r2, r8
	subs r2, #8
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	movs r3, #0
	ldrsb r3, [r6, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _0802028C
	mov r0, r8
	adds r0, #8
	cmp r0, r1
	bge _08020298
	cmp r2, r1
	blt _08020360
_0802028C:
	movs r0, #2
	ldrsb r0, [r6, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020360
_08020298:
	adds r2, r7, #0
	subs r2, #0x10
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r3, #1
	ldrsb r3, [r6, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _080202B2
	cmp r7, r1
	bge _080202BE
	cmp r2, r1
	blt _08020360
_080202B2:
	movs r0, #3
	ldrsb r0, [r6, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020360
_080202BE:
	mov r2, ip
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	ldr r1, _0802034C @ =gUnknown_030053F0
	ldrh r6, [r1]
	adds r0, r6, #1
	strh r0, [r1]
	ldr r0, _08020350 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _08020312
	ldrh r0, [r1]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0x64
	bl Div
	cmp r4, r0
	beq _08020312
	ldr r0, _08020354 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08020312
	ldr r1, _08020358 @ =gUnknown_03005448
	ldrb r0, [r1]
	adds r0, #1
	cmp r0, #0xff
	bls _0802030A
	movs r0, #0xff
_0802030A:
	strb r0, [r1]
	ldr r1, _0802035C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08020312:
	ldr r0, _08020354 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08020326
	ldr r1, _0802034C @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0xff
	bls _08020326
	movs r0, #0xff
	strh r0, [r1]
_08020326:
	movs r0, #0
	b _080204DA
	.align 2, 0
_0802032C: .4byte gCurTask
_08020330: .4byte IWRAM_START + 0x30
_08020334: .4byte IWRAM_START + 0x2B0
_08020338: .4byte IWRAM_START + 0x2B4
_0802033C: .4byte gUnknown_030054FC
_08020340: .4byte gUnknown_030054E0
_08020344: .4byte gUnknown_03005960
_08020348: .4byte gUnknown_030059E0
_0802034C: .4byte gUnknown_030053F0
_08020350: .4byte gUnknown_030055B4
_08020354: .4byte gUnknown_030054CC
_08020358: .4byte gUnknown_03005448
_0802035C: .4byte gUnknown_030054A8
_08020360:
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #0
	ble _0802039A
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0802039A
	movs r0, #0xe
	ldrsh r2, [r5, r0]
	ldr r0, _08020448 @ =sub_801EC3C
	str r0, [sp]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bgt _0802039A
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_0802039A:
	ldr r1, [sp, #4]
	ldr r2, _0802044C @ =0x000002B6
	adds r0, r1, r2
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080203E8
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #0
	bge _080203E8
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080203E8
	adds r0, r7, #0
	subs r0, #0x10
	movs r1, #0xe
	ldrsh r2, [r5, r1]
	ldr r1, _08020448 @ =sub_801EC3C
	str r1, [sp]
	mov r1, r8
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801F100
	cmp r0, #0
	bgt _080203E8
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_080203E8:
	ldrh r0, [r5, #0xa]
	ldr r2, [sp, #8]
	adds r0, r0, r2
	strh r0, [r5, #0xa]
	ldr r0, [sp, #0x18]
	adds r0, #7
	cmp r0, #0xfe
	bhi _080204C2
	movs r0, #8
	rsbs r0, r0, #0
	cmp sl, r0
	ble _080204C2
	mov r4, sl
	cmp r4, #0xa7
	bgt _080204C2
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _08020418
	ldr r0, _08020450 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080204C2
_08020418:
	mov r2, sb
	adds r2, #0x23
	ldr r0, [sp, #0x10]
	cmp r0, #0
	beq _0802042A
	adds r1, r2, #0
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08020454
_0802042A:
	movs r0, #0xff
	strb r0, [r2]
	mov r1, sp
	ldrh r2, [r1, #0x18]
	mov r1, sb
	strh r2, [r1, #0x16]
	mov r4, sl
	strh r4, [r1, #0x18]
	mov r0, sb
	bl sub_80051E8
	movs r0, #1
	str r0, [sp, #0x10]
	b _080204C2
	.align 2, 0
_08020448: .4byte sub_801EC3C
_0802044C: .4byte 0x000002B6
_08020450: .4byte gUnknown_03005590
_08020454:
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r1, _080204FC @ =gUnknown_030022D0
	adds r4, r0, r1
	mov r1, sb
	ldrh r0, [r1, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _08020500 @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _080204C2
	ldr r1, _08020504 @ =0x040000D4
	str r4, [r1]
	str r3, [r1, #4]
	ldr r0, _08020508 @ =0x80000003
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrh r2, [r3]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	strh r2, [r3]
	mov r1, sb
	ldr r0, [r1, #0xc]
	ldrh r0, [r0, #0xa]
	mov r4, sl
	subs r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3]
	ldrh r2, [r3, #2]
	movs r1, #0xfe
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	strh r2, [r3, #2]
	mov r4, sb
	ldr r0, [r4, #0xc]
	ldrh r0, [r0, #8]
	ldr r1, [sp, #0x18]
	subs r0, r1, r0
	ldr r4, _0802050C @ =0x000001FF
	adds r1, r4, #0
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3, #2]
_080204C2:
	ldrh r1, [r5, #0x10]
	ldr r2, _08020510 @ =0x0000FFFC
	adds r0, r2, #0
	adds r2, r1, #0
	ands r2, r0
	adds r1, #1
	movs r0, #3
	ands r1, r0
	orrs r2, r1
	strh r2, [r5, #0x10]
	ldrh r0, [r5, #0xc]
	subs r0, #1
_080204DA:
	strh r0, [r5, #0xc]
_080204DC:
	adds r5, #0x14
	ldr r4, [sp, #0x14]
	subs r4, #1
	str r4, [sp, #0x14]
	cmp r4, #0
	blt _080204EA
	b _080201F8
_080204EA:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080204FC: .4byte gUnknown_030022D0
_08020500: .4byte gUnknown_03005BB4
_08020504: .4byte 0x040000D4
_08020508: .4byte 0x80000003
_0802050C: .4byte 0x000001FF
_08020510: .4byte 0x0000FFFC

	thumb_func_start sub_8020514
sub_8020514: @ 0x08020514
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	ldr r0, _08020694 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _08020698 @ =IWRAM_START + 0x30
	adds r5, r1, r0
	ldr r2, [sp, #4]
	mov sb, r2
	ldr r3, _0802069C @ =IWRAM_START + 0x2B0
	adds r0, r1, r3
	ldr r0, [r0]
	str r0, [sp, #8]
	ldr r4, _080206A0 @ =IWRAM_START + 0x2B4
	adds r1, r1, r4
	ldrh r1, [r1]
	str r1, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	mov r0, sb
	bl sub_8004558
	movs r1, #0
	mov sl, r1
_08020554:
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	bne _0802055C
	b _0802068A
_0802055C:
	movs r3, #8
	ldrsh r0, [r5, r3]
	ldr r1, [r5]
	adds r1, r1, r0
	str r1, [r5]
	movs r4, #0xa
	ldrsh r2, [r5, r4]
	ldr r0, [r5, #4]
	adds r0, r0, r2
	str r0, [r5, #4]
	asrs r6, r1, #8
	asrs r7, r0, #8
	ldr r1, _080206A4 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r6, r0
	str r0, [sp, #0x14]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	str r0, [sp, #0x18]
	ldr r2, _080206A8 @ =gUnknown_030059E0
	mov ip, r2
	mov r0, ip
	adds r0, #0x90
	ldr r2, [r0]
	adds r3, r5, #0
	adds r3, #0x14
	str r3, [sp, #0x20]
	ldrh r4, [r5, #0xc]
	mov r8, r4
	mov r0, sl
	adds r0, #1
	str r0, [sp, #0x1c]
	ldr r1, [sp, #0xc]
	cmp r8, r1
	ble _080205A4
	b _080207E8
_080205A4:
	mov r0, ip
	adds r0, #0x64
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0x14
	bne _080205BC
	mov r4, ip
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080205BC
	b _080206C0
_080205BC:
	mov r3, ip
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080205CA
	b _080206C0
_080205CA:
	adds r4, r2, #0
	adds r4, #0x38
	adds r2, r6, #0
	subs r2, #8
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	movs r3, #0
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _080205EC
	adds r0, r6, #0
	adds r0, #8
	cmp r0, r1
	bge _080205F8
	cmp r2, r1
	blt _080206C0
_080205EC:
	movs r0, #2
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _080206C0
_080205F8:
	adds r2, r7, #0
	subs r2, #0x10
	mov r1, ip
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	movs r3, #1
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _08020614
	cmp r7, r1
	bge _08020620
	cmp r2, r1
	blt _080206C0
_08020614:
	movs r0, #3
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _080206C0
_08020620:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	ldr r1, _080206AC @ =gUnknown_030053F0
	ldrh r6, [r1]
	adds r0, r6, #1
	strh r0, [r1]
	ldr r0, _080206B0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _08020672
	ldrh r0, [r1]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0x64
	bl Div
	cmp r4, r0
	beq _08020672
	ldr r0, _080206B4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08020672
	ldr r1, _080206B8 @ =gUnknown_03005448
	ldrb r0, [r1]
	adds r0, #1
	cmp r0, #0xff
	bls _0802066A
	movs r0, #0xff
_0802066A:
	strb r0, [r1]
	ldr r1, _080206BC @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08020672:
	ldr r0, _080206B4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08020686
	ldr r1, _080206AC @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0xff
	bls _08020686
	movs r0, #0xff
	strh r0, [r1]
_08020686:
	movs r0, #0
	strh r0, [r5, #0xc]
_0802068A:
	adds r5, #0x14
	mov r2, sl
	adds r2, #1
	str r2, [sp, #0x1c]
	b _08020966
	.align 2, 0
_08020694: .4byte gCurTask
_08020698: .4byte IWRAM_START + 0x30
_0802069C: .4byte IWRAM_START + 0x2B0
_080206A0: .4byte IWRAM_START + 0x2B4
_080206A4: .4byte gUnknown_03005960
_080206A8: .4byte gUnknown_030059E0
_080206AC: .4byte gUnknown_030053F0
_080206B0: .4byte gUnknown_030055B4
_080206B4: .4byte gUnknown_030054CC
_080206B8: .4byte gUnknown_03005448
_080206BC: .4byte gUnknown_030054A8
_080206C0:
	adds r3, r5, #0
	adds r3, #0x14
	str r3, [sp, #0x20]
	mov r4, sl
	adds r4, #1
	str r4, [sp, #0x1c]
	ldr r0, [sp, #0xc]
	cmp r8, r0
	ble _080206D4
	b _080207E8
_080206D4:
	movs r1, #0
	mov r8, r1
_080206D8:
	ldr r0, _08020708 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r8, r0
	beq _080207D8
	ldr r1, _0802070C @ =gUnknown_030055A0
	mov r2, r8
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080207D8
	ldrh r4, [r0, #6]
	movs r3, #0xc0
	lsls r3, r3, #0x12
	adds r3, r3, r4
	mov ip, r3
	ldr r0, _08020710 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08020714
	ldrb r0, [r3, #0xa]
	b _08020738
	.align 2, 0
_08020708: .4byte 0x04000128
_0802070C: .4byte gUnknown_030055A0
_08020710: .4byte gUnknown_030054CC
_08020714:
	mov r0, ip
	ldrb r1, [r0, #0xa]
	ldr r2, _080207CC @ =gUnknown_080D672C
	mov sl, r2
	ldr r2, _080207D0 @ =gUnknown_03005500
	ldr r3, _080207D4 @ =IWRAM_START + 0x56
	adds r0, r4, r3
	ldrb r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	add r0, sl
	ldrb r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
_08020738:
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08020750
	mov r0, ip
	adds r0, #0x54
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080207D8
_08020750:
	adds r3, r6, #0
	subs r3, #8
	mov r0, ip
	adds r0, #0x50
	movs r4, #0
	ldrsh r1, [r0, r4]
	subs r0, #0x24
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r1, r1, r2
	cmp r3, r1
	bgt _08020774
	adds r0, r6, #0
	adds r0, #8
	cmp r0, r1
	bge _08020786
	cmp r3, r1
	blt _080207D8
_08020774:
	mov r0, ip
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _080207D8
_08020786:
	adds r3, r7, #0
	subs r3, #0x10
	mov r0, ip
	adds r0, #0x52
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r1, ip
	adds r1, #0x2d
	movs r2, #0
	ldrsb r2, [r1, r2]
	adds r1, r0, r2
	cmp r3, r1
	bgt _080207A8
	cmp r7, r1
	bge _080207BA
	cmp r3, r1
	blt _080207D8
_080207A8:
	mov r0, ip
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _080207D8
_080207BA:
	lsls r0, r6, #0x10
	lsls r1, r7, #0x10
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	movs r0, #0
	b _08020962
	.align 2, 0
_080207CC: .4byte gUnknown_080D672C
_080207D0: .4byte gUnknown_03005500
_080207D4: .4byte IWRAM_START + 0x56
_080207D8:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bhi _080207E8
	b _080206D8
_080207E8:
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _08020826
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020826
	adds r0, r7, #0
	subs r0, #0x10
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r1, _080208D0 @ =sub_801EC3C
	str r1, [sp]
	adds r1, r6, #0
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801F100
	cmp r0, #0
	bgt _08020826
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020826:
	ldr r4, [sp, #4]
	ldr r1, _080208D4 @ =0x000002B6
	adds r0, r4, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08020870
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _08020870
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020870
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r0, _080208D0 @ =sub_801EC3C
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bgt _08020870
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020870:
	ldrh r0, [r5, #0xa]
	ldr r4, [sp, #8]
	subs r0, r0, r4
	strh r0, [r5, #0xa]
	ldr r0, [sp, #0x14]
	adds r0, #7
	cmp r0, #0xfe
	bhi _0802094A
	movs r0, #8
	rsbs r0, r0, #0
	ldr r1, [sp, #0x18]
	cmp r1, r0
	ble _0802094A
	cmp r1, #0xa7
	bgt _0802094A
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _080208A0
	ldr r0, _080208D8 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0802094A
_080208A0:
	mov r2, sb
	adds r2, #0x23
	ldr r3, [sp, #0x10]
	cmp r3, #0
	beq _080208B2
	adds r1, r2, #0
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _080208DC
_080208B2:
	movs r0, #0xff
	strb r0, [r2]
	mov r4, sp
	ldrh r0, [r4, #0x14]
	mov r4, sb
	strh r0, [r4, #0x16]
	mov r1, sp
	ldrh r1, [r1, #0x18]
	strh r1, [r4, #0x18]
	mov r0, sb
	bl sub_80051E8
	movs r2, #1
	str r2, [sp, #0x10]
	b _0802094A
	.align 2, 0
_080208D0: .4byte sub_801EC3C
_080208D4: .4byte 0x000002B6
_080208D8: .4byte gUnknown_03005590
_080208DC:
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r1, _08020980 @ =gUnknown_030022D0
	adds r4, r0, r1
	mov r3, sb
	ldrh r0, [r3, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _08020984 @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _0802094A
	ldr r1, _08020988 @ =0x040000D4
	str r4, [r1]
	str r3, [r1, #4]
	ldr r0, _0802098C @ =0x80000003
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrh r2, [r3]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	strh r2, [r3]
	mov r1, sb
	ldr r0, [r1, #0xc]
	ldrh r0, [r0, #0xa]
	ldr r4, [sp, #0x18]
	subs r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3]
	ldrh r2, [r3, #2]
	movs r1, #0xfe
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	strh r2, [r3, #2]
	mov r4, sb
	ldr r0, [r4, #0xc]
	ldrh r0, [r0, #8]
	ldr r1, [sp, #0x14]
	subs r0, r1, r0
	ldr r4, _08020990 @ =0x000001FF
	adds r1, r4, #0
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3, #2]
_0802094A:
	ldrh r1, [r5, #0x10]
	ldr r2, _08020994 @ =0x0000FFFC
	adds r0, r2, #0
	adds r2, r1, #0
	ands r2, r0
	adds r1, #1
	movs r0, #3
	ands r1, r0
	orrs r2, r1
	strh r2, [r5, #0x10]
	ldrh r0, [r5, #0xc]
	subs r0, #1
_08020962:
	strh r0, [r5, #0xc]
	ldr r5, [sp, #0x20]
_08020966:
	ldr r3, [sp, #0x1c]
	mov sl, r3
	cmp r3, #0x1f
	bgt _08020970
	b _08020554
_08020970:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08020980: .4byte gUnknown_030022D0
_08020984: .4byte gUnknown_03005BB4
_08020988: .4byte 0x040000D4
_0802098C: .4byte 0x80000003
_08020990: .4byte 0x000001FF
_08020994: .4byte 0x0000FFFC

	thumb_func_start sub_8020998
sub_8020998: @ 0x08020998
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r0, _080209E8 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _080209EC @ =IWRAM_START + 0x30
	adds r5, r1, r0
	ldr r2, [sp, #4]
	mov sl, r2
	ldr r3, _080209F0 @ =IWRAM_START + 0x2B0
	adds r0, r1, r3
	ldr r0, [r0]
	str r0, [sp, #8]
	ldr r4, _080209F4 @ =IWRAM_START + 0x2B4
	adds r1, r1, r4
	ldrh r1, [r1]
	str r1, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	mov r0, sl
	bl sub_8004558
	movs r1, #0
	str r1, [sp, #0x14]
_080209D8:
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	bne _080209F8
	adds r5, #0x14
	ldr r2, [sp, #0x14]
	adds r2, #1
	str r2, [sp, #0x20]
	b _08020DEE
	.align 2, 0
_080209E8: .4byte gCurTask
_080209EC: .4byte IWRAM_START + 0x30
_080209F0: .4byte IWRAM_START + 0x2B0
_080209F4: .4byte IWRAM_START + 0x2B4
_080209F8:
	movs r3, #8
	ldrsh r0, [r5, r3]
	ldr r1, [r5]
	adds r1, r1, r0
	str r1, [r5]
	movs r4, #0xa
	ldrsh r2, [r5, r4]
	ldr r0, [r5, #4]
	adds r0, r0, r2
	str r0, [r5, #4]
	asrs r1, r1, #8
	mov sb, r1
	mov r8, sb
	asrs r6, r0, #8
	ldr r1, _08020B34 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, sb
	subs r2, r2, r0
	str r2, [sp, #0x18]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	str r0, [sp, #0x1c]
	ldr r3, _08020B38 @ =gUnknown_030059E0
	mov ip, r3
	mov r0, ip
	adds r0, #0x90
	ldr r2, [r0]
	adds r4, r5, #0
	adds r4, #0x14
	str r4, [sp, #0x24]
	ldrh r7, [r5, #0xc]
	ldr r0, [sp, #0x14]
	adds r0, #1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0xc]
	cmp r7, r1
	ble _08020A44
	b _08020C70
_08020A44:
	mov r0, ip
	adds r0, #0x64
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0x14
	bne _08020A5C
	mov r4, ip
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08020A5C
	b _08020B50
_08020A5C:
	mov r3, ip
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08020B50
	adds r4, r2, #0
	adds r4, #0x38
	mov r2, sb
	subs r2, #8
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	movs r3, #0
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _08020A8A
	mov r0, sb
	adds r0, #8
	cmp r0, r1
	bge _08020A96
	cmp r2, r1
	blt _08020B50
_08020A8A:
	movs r0, #2
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020B50
_08020A96:
	adds r2, r6, #0
	subs r2, #0x10
	mov r1, ip
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	movs r3, #1
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _08020AB2
	cmp r6, r1
	bge _08020ABE
	cmp r2, r1
	blt _08020B50
_08020AB2:
	movs r0, #3
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08020B50
_08020ABE:
	mov r2, r8
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	ldr r1, _08020B3C @ =gUnknown_030053F0
	ldrh r6, [r1]
	adds r0, r6, #1
	strh r0, [r1]
	ldr r0, _08020B40 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _08020B12
	ldrh r0, [r1]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0x64
	bl Div
	cmp r4, r0
	beq _08020B12
	ldr r0, _08020B44 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08020B12
	ldr r1, _08020B48 @ =gUnknown_03005448
	ldrb r0, [r1]
	adds r0, #1
	cmp r0, #0xff
	bls _08020B0A
	movs r0, #0xff
_08020B0A:
	strb r0, [r1]
	ldr r1, _08020B4C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08020B12:
	ldr r0, _08020B44 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08020B26
	ldr r1, _08020B3C @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0xff
	bls _08020B26
	movs r0, #0xff
	strh r0, [r1]
_08020B26:
	movs r0, #0
	strh r0, [r5, #0xc]
	adds r5, #0x14
	ldr r3, [sp, #0x14]
	adds r3, #1
	str r3, [sp, #0x20]
	b _08020DEE
	.align 2, 0
_08020B34: .4byte gUnknown_03005960
_08020B38: .4byte gUnknown_030059E0
_08020B3C: .4byte gUnknown_030053F0
_08020B40: .4byte gUnknown_030055B4
_08020B44: .4byte gUnknown_030054CC
_08020B48: .4byte gUnknown_03005448
_08020B4C: .4byte gUnknown_030054A8
_08020B50:
	adds r4, r5, #0
	adds r4, #0x14
	str r4, [sp, #0x24]
	ldr r0, [sp, #0x14]
	adds r0, #1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0xc]
	cmp r7, r1
	ble _08020B64
	b _08020C70
_08020B64:
	movs r7, #0
_08020B66:
	ldr r0, _08020B94 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r7, r0
	beq _08020C64
	ldr r1, _08020B98 @ =gUnknown_030055A0
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08020C64
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r2, r4
	mov ip, r2
	ldr r0, _08020B9C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08020BA0
	ldrb r0, [r2, #0xa]
	b _08020BC2
	.align 2, 0
_08020B94: .4byte 0x04000128
_08020B98: .4byte gUnknown_030055A0
_08020B9C: .4byte gUnknown_030054CC
_08020BA0:
	mov r3, ip
	ldrb r1, [r3, #0xa]
	ldr r2, _08020C58 @ =gUnknown_03005500
	ldr r3, _08020C5C @ =IWRAM_START + 0x56
	adds r0, r4, r3
	ldrb r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	ldr r4, _08020C60 @ =gUnknown_080D672C
	adds r0, r0, r4
	ldrb r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
_08020BC2:
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08020BDA
	mov r0, ip
	adds r0, #0x54
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08020C64
_08020BDA:
	mov r3, r8
	subs r3, #8
	mov r0, ip
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	subs r0, #0x24
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r1, r1, r2
	cmp r3, r1
	bgt _08020BFE
	mov r0, r8
	adds r0, #8
	cmp r0, r1
	bge _08020C10
	cmp r3, r1
	blt _08020C64
_08020BFE:
	mov r0, ip
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _08020C64
_08020C10:
	adds r3, r6, #0
	subs r3, #0x10
	mov r0, ip
	adds r0, #0x52
	movs r4, #0
	ldrsh r0, [r0, r4]
	mov r1, ip
	adds r1, #0x2d
	movs r2, #0
	ldrsb r2, [r1, r2]
	adds r1, r0, r2
	cmp r3, r1
	bgt _08020C32
	cmp r6, r1
	bge _08020C44
	cmp r3, r1
	blt _08020C64
_08020C32:
	mov r0, ip
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _08020C64
_08020C44:
	mov r1, r8
	lsls r0, r1, #0x10
	lsls r1, r6, #0x10
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	movs r0, #0
	b _08020DEA
	.align 2, 0
_08020C58: .4byte gUnknown_03005500
_08020C5C: .4byte IWRAM_START + 0x56
_08020C60: .4byte gUnknown_080D672C
_08020C64:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bhi _08020C70
	b _08020B66
_08020C70:
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _08020CAA
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020CAA
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r0, _08020D58 @ =sub_801EC3C
	str r0, [sp]
	adds r0, r6, #0
	mov r1, sb
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bgt _08020CAA
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020CAA:
	ldr r4, [sp, #4]
	ldr r1, _08020D5C @ =0x000002B6
	adds r0, r4, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08020CF8
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _08020CF8
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08020CF8
	adds r0, r6, #0
	subs r0, #0x10
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r1, _08020D58 @ =sub_801EC3C
	str r1, [sp]
	mov r1, sb
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801F100
	cmp r0, #0
	bgt _08020CF8
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_08020CF8:
	ldrh r0, [r5, #0xa]
	ldr r4, [sp, #8]
	adds r0, r0, r4
	strh r0, [r5, #0xa]
	ldr r0, [sp, #0x18]
	adds r0, #7
	cmp r0, #0xfe
	bhi _08020DD2
	movs r0, #8
	rsbs r0, r0, #0
	ldr r1, [sp, #0x1c]
	cmp r1, r0
	ble _08020DD2
	cmp r1, #0xa7
	bgt _08020DD2
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _08020D28
	ldr r0, _08020D60 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08020DD2
_08020D28:
	mov r2, sl
	adds r2, #0x23
	ldr r3, [sp, #0x10]
	cmp r3, #0
	beq _08020D3A
	adds r1, r2, #0
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08020D64
_08020D3A:
	movs r0, #0xff
	strb r0, [r2]
	mov r4, sp
	ldrh r0, [r4, #0x18]
	mov r4, sl
	strh r0, [r4, #0x16]
	mov r1, sp
	ldrh r1, [r1, #0x1c]
	strh r1, [r4, #0x18]
	mov r0, sl
	bl sub_80051E8
	movs r2, #1
	str r2, [sp, #0x10]
	b _08020DD2
	.align 2, 0
_08020D58: .4byte sub_801EC3C
_08020D5C: .4byte 0x000002B6
_08020D60: .4byte gUnknown_03005590
_08020D64:
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r1, _08020E08 @ =gUnknown_030022D0
	adds r4, r0, r1
	mov r3, sl
	ldrh r0, [r3, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _08020E0C @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _08020DD2
	ldr r1, _08020E10 @ =0x040000D4
	str r4, [r1]
	str r3, [r1, #4]
	ldr r0, _08020E14 @ =0x80000003
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrh r2, [r3]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	strh r2, [r3]
	mov r1, sl
	ldr r0, [r1, #0xc]
	ldrh r0, [r0, #0xa]
	ldr r4, [sp, #0x1c]
	subs r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3]
	ldrh r2, [r3, #2]
	movs r1, #0xfe
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	strh r2, [r3, #2]
	mov r4, sl
	ldr r0, [r4, #0xc]
	ldrh r0, [r0, #8]
	ldr r1, [sp, #0x18]
	subs r0, r1, r0
	ldr r4, _08020E18 @ =0x000001FF
	adds r1, r4, #0
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3, #2]
_08020DD2:
	ldrh r1, [r5, #0x10]
	ldr r2, _08020E1C @ =0x0000FFFC
	adds r0, r2, #0
	adds r2, r1, #0
	ands r2, r0
	adds r1, #1
	movs r0, #3
	ands r1, r0
	orrs r2, r1
	strh r2, [r5, #0x10]
	ldrh r0, [r5, #0xc]
	subs r0, #1
_08020DEA:
	strh r0, [r5, #0xc]
	ldr r5, [sp, #0x24]
_08020DEE:
	ldr r3, [sp, #0x20]
	str r3, [sp, #0x14]
	cmp r3, #0x1f
	bgt _08020DF8
	b _080209D8
_08020DF8:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08020E08: .4byte gUnknown_030022D0
_08020E0C: .4byte gUnknown_03005BB4
_08020E10: .4byte 0x040000D4
_08020E14: .4byte 0x80000003
_08020E18: .4byte 0x000001FF
_08020E1C: .4byte 0x0000FFFC

	thumb_func_start sub_8020E20
sub_8020E20: @ 0x08020E20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r0, _08020E70 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _08020E74 @ =IWRAM_START + 0x30
	adds r5, r1, r0
	ldr r2, [sp, #4]
	str r2, [sp, #8]
	ldr r3, _08020E78 @ =IWRAM_START + 0x2B0
	adds r0, r1, r3
	ldr r0, [r0]
	str r0, [sp, #0xc]
	ldr r4, _08020E7C @ =IWRAM_START + 0x2B4
	adds r1, r1, r4
	ldrh r1, [r1]
	str r1, [sp, #0x10]
	movs r0, #0
	str r0, [sp, #0x14]
	adds r0, r2, #0
	bl sub_8004558
	movs r1, #0
	str r1, [sp, #0x18]
_08020E60:
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	bne _08020E80
	adds r5, #0x14
	ldr r2, [sp, #0x18]
	adds r2, #1
	str r2, [sp, #0x20]
	b _0802131E
	.align 2, 0
_08020E70: .4byte gCurTask
_08020E74: .4byte IWRAM_START + 0x30
_08020E78: .4byte IWRAM_START + 0x2B0
_08020E7C: .4byte IWRAM_START + 0x2B4
_08020E80:
	movs r3, #8
	ldrsh r1, [r5, r3]
	ldr r0, [r5]
	adds r2, r0, r1
	str r2, [r5]
	movs r4, #0xa
	ldrsh r1, [r5, r4]
	ldr r0, [r5, #4]
	adds r3, r0, r1
	str r3, [r5, #4]
	movs r0, #0x80
	lsls r0, r0, #5
	adds r1, r2, r0
	movs r0, #0xf4
	lsls r0, r0, #0xb
	cmp r1, r0
	bls _08020EAE
	movs r0, #0
	strh r0, [r5, #0xc]
	ldr r1, [sp, #0x18]
	adds r1, #1
	str r1, [sp, #0x20]
	b _0802131E
_08020EAE:
	ldr r0, _08020ECC @ =0x0000EFFF
	cmp r2, r0
	bgt _08020ED4
	ldr r0, _08020ED0 @ =0x00011FFF
	cmp r3, r0
	bgt _08020ED4
	movs r4, #0xb4
	lsls r4, r4, #0xb
	adds r0, r2, r4
	str r0, [r5]
	movs r1, #0xd8
	lsls r1, r1, #0xa
	adds r0, r3, r1
	b _08020EF2
	.align 2, 0
_08020ECC: .4byte 0x0000EFFF
_08020ED0: .4byte 0x00011FFF
_08020ED4:
	ldr r2, [r5]
	movs r0, #0xd2
	lsls r0, r0, #0xb
	cmp r2, r0
	ble _08020EF4
	ldr r1, [r5, #4]
	movs r0, #0xd8
	lsls r0, r0, #0xa
	cmp r1, r0
	ble _08020EF4
	ldr r3, _08021020 @ =0xFFFA6000
	adds r0, r2, r3
	str r0, [r5]
	ldr r4, _08021024 @ =0xFFFCA000
	adds r0, r1, r4
_08020EF2:
	str r0, [r5, #4]
_08020EF4:
	ldr r0, [r5]
	asrs r0, r0, #8
	str r0, [sp, #0x1c]
	mov sb, r0
	ldr r0, [r5, #4]
	asrs r6, r0, #8
	ldr r1, _08021028 @ =gUnknown_03005960
	ldr r0, [r1]
	ldr r2, [sp, #0x1c]
	subs r2, r2, r0
	mov sl, r2
	ldr r0, [r1, #4]
	subs r0, r6, r0
	mov r8, r0
	ldr r3, _0802102C @ =gUnknown_030059E0
	mov ip, r3
	mov r0, ip
	adds r0, #0x90
	ldr r2, [r0]
	adds r4, r5, #0
	adds r4, #0x14
	str r4, [sp, #0x24]
	ldrh r7, [r5, #0xc]
	ldr r0, [sp, #0x18]
	adds r0, #1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x10]
	cmp r7, r1
	ble _08020F30
	b _08021164
_08020F30:
	mov r0, ip
	adds r0, #0x64
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0x14
	bne _08020F48
	mov r4, ip
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08020F48
	b _08021044
_08020F48:
	mov r3, ip
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08021044
	adds r4, r2, #0
	adds r4, #0x38
	ldr r2, [sp, #0x1c]
	subs r2, #8
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	movs r3, #0
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _08020F76
	ldr r0, [sp, #0x1c]
	adds r0, #8
	cmp r0, r1
	bge _08020F82
	cmp r2, r1
	blt _08021044
_08020F76:
	movs r0, #2
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08021044
_08020F82:
	adds r2, r6, #0
	subs r2, #0x10
	mov r1, ip
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	movs r3, #1
	ldrsb r3, [r4, r3]
	adds r1, r0, r3
	cmp r2, r1
	bgt _08020F9E
	cmp r6, r1
	bge _08020FAA
	cmp r2, r1
	blt _08021044
_08020F9E:
	movs r0, #3
	ldrsb r0, [r4, r0]
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _08021044
_08020FAA:
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	ldr r1, _08021030 @ =gUnknown_030053F0
	ldrh r6, [r1]
	adds r0, r6, #1
	strh r0, [r1]
	ldr r0, _08021034 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	beq _08020FFE
	ldrh r0, [r1]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	adds r0, r6, #0
	movs r1, #0x64
	bl Div
	cmp r4, r0
	beq _08020FFE
	ldr r0, _08021038 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08020FFE
	ldr r1, _0802103C @ =gUnknown_03005448
	ldrb r0, [r1]
	adds r0, #1
	cmp r0, #0xff
	bls _08020FF6
	movs r0, #0xff
_08020FF6:
	strb r0, [r1]
	ldr r1, _08021040 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08020FFE:
	ldr r0, _08021038 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08021012
	ldr r1, _08021030 @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0xff
	bls _08021012
	movs r0, #0xff
	strh r0, [r1]
_08021012:
	movs r0, #0
	strh r0, [r5, #0xc]
	adds r5, #0x14
	ldr r3, [sp, #0x18]
	adds r3, #1
	str r3, [sp, #0x20]
	b _0802131E
	.align 2, 0
_08021020: .4byte 0xFFFA6000
_08021024: .4byte 0xFFFCA000
_08021028: .4byte gUnknown_03005960
_0802102C: .4byte gUnknown_030059E0
_08021030: .4byte gUnknown_030053F0
_08021034: .4byte gUnknown_030055B4
_08021038: .4byte gUnknown_030054CC
_0802103C: .4byte gUnknown_03005448
_08021040: .4byte gUnknown_030054A8
_08021044:
	adds r4, r5, #0
	adds r4, #0x14
	str r4, [sp, #0x24]
	ldr r0, [sp, #0x18]
	adds r0, #1
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x10]
	cmp r7, r1
	ble _08021058
	b _08021164
_08021058:
	movs r7, #0
_0802105A:
	ldr r0, _08021088 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r7, r0
	beq _08021158
	ldr r1, _0802108C @ =gUnknown_030055A0
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08021158
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r2, r4
	mov ip, r2
	ldr r0, _08021090 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _08021094
	ldrb r0, [r2, #0xa]
	b _080210B6
	.align 2, 0
_08021088: .4byte 0x04000128
_0802108C: .4byte gUnknown_030055A0
_08021090: .4byte gUnknown_030054CC
_08021094:
	mov r3, ip
	ldrb r1, [r3, #0xa]
	ldr r2, _0802114C @ =gUnknown_03005500
	ldr r3, _08021150 @ =IWRAM_START + 0x56
	adds r0, r4, r3
	ldrb r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	ldr r4, _08021154 @ =gUnknown_080D672C
	adds r0, r0, r4
	ldrb r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
_080210B6:
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080210CE
	mov r0, ip
	adds r0, #0x54
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08021158
_080210CE:
	mov r3, sb
	subs r3, #8
	mov r0, ip
	adds r0, #0x50
	movs r2, #0
	ldrsh r1, [r0, r2]
	subs r0, #0x24
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r1, r1, r2
	cmp r3, r1
	bgt _080210F2
	mov r0, sb
	adds r0, #8
	cmp r0, r1
	bge _08021104
	cmp r3, r1
	blt _08021158
_080210F2:
	mov r0, ip
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _08021158
_08021104:
	adds r3, r6, #0
	subs r3, #0x10
	mov r0, ip
	adds r0, #0x52
	movs r4, #0
	ldrsh r0, [r0, r4]
	mov r1, ip
	adds r1, #0x2d
	movs r2, #0
	ldrsb r2, [r1, r2]
	adds r1, r0, r2
	cmp r3, r1
	bgt _08021126
	cmp r6, r1
	bge _08021138
	cmp r3, r1
	blt _08021158
_08021126:
	mov r0, ip
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	blt _08021158
_08021138:
	mov r1, sb
	lsls r0, r1, #0x10
	lsls r1, r6, #0x10
	asrs r0, r0, #0x10
	asrs r1, r1, #0x10
	bl sub_800AEA0
	movs r0, #0
	b _0802131A
	.align 2, 0
_0802114C: .4byte gUnknown_03005500
_08021150: .4byte IWRAM_START + 0x56
_08021154: .4byte gUnknown_080D672C
_08021158:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bhi _08021164
	b _0802105A
_08021164:
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _0802119E
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0802119E
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r0, _08021220 @ =sub_801EC3C
	str r0, [sp]
	adds r0, r6, #0
	ldr r1, [sp, #0x1c]
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bgt _0802119E
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_0802119E:
	ldr r4, [sp, #4]
	ldr r1, _08021224 @ =0x000002B6
	adds r0, r4, r1
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080211EC
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _080211EC
	ldrh r1, [r5, #0x10]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080211EC
	adds r0, r6, #0
	subs r0, #0x10
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	ldr r1, _08021220 @ =sub_801EC3C
	str r1, [sp]
	ldr r1, [sp, #0x1c]
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801F100
	cmp r0, #0
	bgt _080211EC
	lsls r1, r0, #8
	ldr r0, [r5, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x12
	subs r0, r0, r1
	strh r0, [r5, #0xa]
_080211EC:
	ldrh r0, [r5, #0xa]
	ldr r4, [sp, #0xc]
	adds r0, r0, r4
	strh r0, [r5, #0xa]
	mov r0, sl
	adds r0, #7
	cmp r0, #0xfe
	bhi _0802120A
	movs r0, #8
	rsbs r0, r0, #0
	cmp r8, r0
	ble _0802120A
	mov r0, r8
	cmp r0, #0xa7
	ble _0802123C
_0802120A:
	ldr r1, [r5]
	movs r0, #0xf0
	lsls r0, r0, #0xa
	cmp r1, r0
	ble _08021230
	ldr r1, _08021228 @ =0xFFFFFA60
	add sl, r1
	ldr r2, _0802122C @ =0xFFFFFCA0
	add r8, r2
	b _0802123C
	.align 2, 0
_08021220: .4byte sub_801EC3C
_08021224: .4byte 0x000002B6
_08021228: .4byte 0xFFFFFA60
_0802122C: .4byte 0xFFFFFCA0
_08021230:
	movs r3, #0xb4
	lsls r3, r3, #3
	add sl, r3
	movs r4, #0xd8
	lsls r4, r4, #2
	add r8, r4
_0802123C:
	mov r0, sl
	adds r0, #7
	cmp r0, #0xfe
	bhi _08021302
	movs r0, #8
	rsbs r0, r0, #0
	cmp r8, r0
	ble _08021302
	mov r0, r8
	cmp r0, #0xa7
	bgt _08021302
	ldrh r0, [r5, #0xc]
	cmp r0, #0x1f
	bhi _08021264
	ldr r0, _08021290 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08021302
_08021264:
	ldr r2, [sp, #8]
	adds r2, #0x23
	ldr r1, [sp, #0x14]
	cmp r1, #0
	beq _08021276
	adds r1, r2, #0
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08021294
_08021276:
	movs r0, #0xff
	strb r0, [r2]
	mov r3, sl
	ldr r2, [sp, #8]
	strh r3, [r2, #0x16]
	mov r4, r8
	strh r4, [r2, #0x18]
	ldr r0, [sp, #8]
	bl sub_80051E8
	movs r0, #1
	str r0, [sp, #0x14]
	b _08021302
	.align 2, 0
_08021290: .4byte gUnknown_03005590
_08021294:
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r1, _08021338 @ =gUnknown_030022D0
	adds r4, r0, r1
	ldr r1, [sp, #8]
	ldrh r0, [r1, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _0802133C @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _08021302
	ldr r1, _08021340 @ =0x040000D4
	str r4, [r1]
	str r3, [r1, #4]
	ldr r0, _08021344 @ =0x80000003
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldrh r2, [r3]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	strh r2, [r3]
	ldr r1, [sp, #8]
	ldr r0, [r1, #0xc]
	ldrh r0, [r0, #0xa]
	mov r4, r8
	subs r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3]
	ldrh r2, [r3, #2]
	movs r1, #0xfe
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	strh r2, [r3, #2]
	ldr r4, [sp, #8]
	ldr r0, [r4, #0xc]
	ldrh r0, [r0, #8]
	mov r1, sl
	subs r0, r1, r0
	ldr r4, _08021348 @ =0x000001FF
	adds r1, r4, #0
	ands r0, r1
	adds r2, r2, r0
	strh r2, [r3, #2]
_08021302:
	ldrh r1, [r5, #0x10]
	ldr r2, _0802134C @ =0x0000FFFC
	adds r0, r2, #0
	adds r2, r1, #0
	ands r2, r0
	adds r1, #1
	movs r0, #3
	ands r1, r0
	orrs r2, r1
	strh r2, [r5, #0x10]
	ldrh r0, [r5, #0xc]
	subs r0, #1
_0802131A:
	strh r0, [r5, #0xc]
	ldr r5, [sp, #0x24]
_0802131E:
	ldr r3, [sp, #0x20]
	str r3, [sp, #0x18]
	cmp r3, #0x1f
	bgt _08021328
	b _08020E60
_08021328:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08021338: .4byte gUnknown_030022D0
_0802133C: .4byte gUnknown_03005BB4
_08021340: .4byte 0x040000D4
_08021344: .4byte 0x80000003
_08021348: .4byte 0x000001FF
_0802134C: .4byte 0x0000FFFC

	thumb_func_start sub_8021350
sub_8021350: @ 0x08021350
	push {r4, lr}
	ldr r4, _08021364 @ =gUnknown_030059D8
	ldr r0, [r4]
	bl TaskDestroy
	movs r0, #0
	str r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08021364: .4byte gUnknown_030059D8

	thumb_func_start sub_8021368
sub_8021368: @ 0x08021368
	push {lr}
	ldr r0, _0802137C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021380
	bl sub_801FE78
	b _08021384
	.align 2, 0
_0802137C: .4byte gUnknown_03005424
_08021380:
	bl sub_80201B8
_08021384:
	pop {r0}
	bx r0

	thumb_func_start sub_8021388
sub_8021388: @ 0x08021388
	push {lr}
	ldr r0, _0802139C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080213A0
	bl sub_8020514
	b _080213A4
	.align 2, 0
_0802139C: .4byte gUnknown_03005424
_080213A0:
	bl sub_8020998
_080213A4:
	pop {r0}
	bx r0

	thumb_func_start sub_80213A8
sub_80213A8: @ 0x080213A8
	push {lr}
	bl sub_8020E20
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80213B4
sub_80213B4: @ 0x080213B4
	ldr r1, _080213BC @ =gUnknown_030059D8
	movs r0, #0
	str r0, [r1]
	bx lr
	.align 2, 0
_080213BC: .4byte gUnknown_030059D8

	thumb_func_start sub_80213C0
sub_80213C0: @ 0x080213C0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r2, #0
	adds r0, r5, #0
	adds r0, #0x60
	movs r4, #0
	ldrsb r4, [r0, r4]
	ldr r0, _08021408 @ =sub_8023FC0
	movs r2, #0xc0
	lsls r2, r2, #6
	ldr r1, _0802140C @ =sub_802A07C
	str r1, [sp]
	movs r1, #8
	movs r3, #0
	bl TaskCreate
	adds r1, r5, #0
	adds r1, #0x8c
	str r0, [r1]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r1, #0
	strb r4, [r0]
	str r1, [r0, #4]
	ldr r0, _08021410 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0802141C
	cmp r0, #5
	beq _08021418
	ldr r1, _08021414 @ =gUnknown_030053F0
	movs r0, #1
	strh r0, [r1]
	b _0802141C
	.align 2, 0
_08021408: .4byte sub_8023FC0
_0802140C: .4byte sub_802A07C
_08021410: .4byte gUnknown_030054CC
_08021414: .4byte gUnknown_030053F0
_08021418:
	ldr r0, _08021474 @ =gUnknown_030053F0
	strh r1, [r0]
_0802141C:
	adds r0, r5, #0
	bl sub_8021694
	ldr r1, _08021478 @ =gUnknown_030059E0
	ldr r0, _0802147C @ =sub_8025318
	str r0, [r1]
	bl sub_801F754
	bl sub_801FC2C
	ldr r6, _08021480 @ =gUnknown_030053C0
	ldrb r4, [r6, #8]
	cmp r4, #1
	beq _0802143C
	cmp r4, #2
	bne _08021442
_0802143C:
	bl sub_8007D38
	strb r4, [r6, #8]
_08021442:
	ldr r0, _08021484 @ =gUnknown_030054D0
	movs r1, #0
	str r1, [r0]
	ldr r0, _08021488 @ =gUnknown_030054FC
	str r1, [r0]
	ldr r0, _0802148C @ =gUnknown_030054E0
	str r1, [r0]
	bl sub_800E16C
	adds r0, r5, #0
	adds r0, #0x90
	ldr r1, [r0]
	adds r0, r5, #0
	bl sub_8021490
	adds r0, r5, #0
	adds r0, #0x94
	ldr r1, [r0]
	adds r0, r5, #0
	bl sub_8021554
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08021474: .4byte gUnknown_030053F0
_08021478: .4byte gUnknown_030059E0
_0802147C: .4byte sub_8025318
_08021480: .4byte gUnknown_030053C0
_08021484: .4byte gUnknown_030054D0
_08021488: .4byte gUnknown_030054FC
_0802148C: .4byte gUnknown_030054E0

	thumb_func_start sub_8021490
sub_8021490: @ 0x08021490
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r0, #0x60
	movs r7, #0
	ldrsb r7, [r0, r7]
	adds r4, r6, #0
	adds r4, #0xc
	cmp r7, #0
	bne _080214AC
	ldr r0, _080214A8 @ =0x06010000
	b _080214B2
	.align 2, 0
_080214A8: .4byte 0x06010000
_080214AC:
	movs r0, #0x40
	bl sub_8007C10
_080214B2:
	str r0, [r4, #4]
	movs r2, #0
	strh r2, [r4, #8]
	adds r0, r5, #0
	adds r0, #0x68
	ldrh r0, [r0]
	strh r0, [r4, #0xa]
	adds r0, r5, #0
	adds r0, #0x6a
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	strh r0, [r4, #0x18]
	adds r0, r7, #0
	adds r0, #0x10
	lsls r0, r0, #6
	strh r0, [r4, #0x1a]
	strh r2, [r4, #0x1c]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08021508 @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #2
	bls _08021510
	ldr r0, _0802150C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r1, r4, #0
	adds r1, #0x25
	b _08021516
	.align 2, 0
_08021508: .4byte gUnknown_030054CC
_0802150C: .4byte 0x04000128
_08021510:
	adds r1, r4, #0
	adds r1, #0x25
	movs r0, #0
_08021516:
	strb r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r4, #0x10]
	ldrb r0, [r2]
	cmp r0, #2
	bls _0802152C
	movs r0, #0xc0
	lsls r0, r0, #0xc
	orrs r0, r1
	str r0, [r4, #0x10]
_0802152C:
	ldr r0, [r4, #0x10]
	movs r1, #0x20
	orrs r0, r1
	orrs r0, r7
	str r0, [r4, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x30]
	movs r1, #0
	strh r1, [r6]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	strh r0, [r6, #4]
	strh r1, [r6, #6]
	strh r1, [r6, #8]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8021554
sub_8021554: @ 0x08021554
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r0, r1, #0
	adds r4, r0, #0
	adds r4, #0xc
	adds r6, r0, #0
	adds r0, r7, #0
	adds r0, #0x85
	movs r5, #0
	ldrsb r5, [r0, r5]
	cmp r5, #1
	bne _08021580
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r4, #4]
	movs r0, #0x5f
	strh r0, [r4, #0xa]
	adds r0, r6, #0
	adds r0, #0x2c
	strb r5, [r0]
	b _08021598
_08021580:
	cmp r5, #2
	bne _080215F8
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r4, #4]
	movs r0, #0xba
	strh r0, [r4, #0xa]
	adds r1, r6, #0
	adds r1, #0x2c
	movs r0, #1
	strb r0, [r1]
_08021598:
	movs r1, #0
	strh r1, [r4, #8]
	adds r2, r4, #0
	adds r2, #0x21
	movs r0, #0xff
	strb r0, [r2]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	strh r0, [r4, #0x18]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r1, [r4, #0x1c]
	adds r1, r4, #0
	adds r1, #0x22
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080215D4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _080215DC
	ldr r0, _080215D8 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r1, #3
	b _080215E2
	.align 2, 0
_080215D4: .4byte gUnknown_030054CC
_080215D8: .4byte 0x04000128
_080215DC:
	adds r1, r4, #0
	adds r1, #0x25
	movs r0, #0
_080215E2:
	strb r0, [r1]
	ldr r0, _08021600 @ =0x00042024
	str r0, [r4, #0x10]
	movs r1, #0
	strh r1, [r6]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	strh r0, [r6, #4]
	strh r1, [r6, #6]
	strh r1, [r6, #8]
_080215F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08021600: .4byte 0x00042024

	thumb_func_start sub_8021604
sub_8021604: @ 0x08021604
	push {r4, lr}
	adds r4, r1, #0
	mov ip, r3
	mov r1, ip
	adds r1, #0x60
	strb r2, [r1]
	adds r1, #0x25
	strb r0, [r1]
	ldr r0, _08021638 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _08021640
	ldr r1, _0802163C @ =gSpawnPositions
	lsls r2, r4, #2
	adds r0, r2, r1
	ldrh r3, [r0]
	mov r0, ip
	adds r0, #0x74
	strh r3, [r0]
	adds r1, #2
	adds r2, r2, r1
	ldrh r0, [r2]
	mov r3, ip
	adds r3, #0x76
	strh r0, [r3]
	b _0802166A
	.align 2, 0
_08021638: .4byte gUnknown_030054CC
_0802163C: .4byte gSpawnPositions
_08021640:
	ldr r0, _08021688 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r0, r2, #0
	subs r0, r0, r1
	mov r1, ip
	adds r1, #0x74
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xb1
	strh r0, [r1]
	subs r0, #0xb2
	mov r1, ip
	str r0, [r1, #8]
	str r0, [r1, #0xc]
_0802166A:
	mov r1, ip
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	mov r2, ip
	str r0, [r2, #0x78]
	subs r1, #8
	ldr r0, _0802168C @ =gUnknown_03005AF0
	str r0, [r1]
	adds r1, #4
	ldr r0, _08021690 @ =gUnknown_03005AA0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08021688: .4byte 0x04000128
_0802168C: .4byte gUnknown_03005AF0
_08021690: .4byte gUnknown_03005AA0

	thumb_func_start sub_8021694
sub_8021694: @ 0x08021694
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _080216B4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _080216B8
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	ands r0, r1
	adds r0, #1
	cmp r0, #0
	beq _080216B8
	movs r0, #0xe6
	lsls r0, r0, #9
	b _080216C2
	.align 2, 0
_080216B4: .4byte gUnknown_030054CC
_080216B8:
	adds r0, r5, #0
	adds r0, #0x74
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
_080216C2:
	str r0, [r5, #8]
	adds r0, r5, #0
	adds r0, #0x76
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	str r0, [r5, #0xc]
	ldr r0, _0802181C @ =sub_8025318
	str r0, [r5]
	ldr r0, _08021820 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r1, [r0, #2]
	orrs r2, r1
	ldrh r0, [r0, #4]
	orrs r2, r0
	adds r0, r5, #0
	adds r0, #0x5c
	movs r3, #0
	movs r4, #0
	strh r2, [r0]
	adds r0, #2
	strh r2, [r0]
	strh r4, [r5, #0x10]
	strh r4, [r5, #0x12]
	strh r4, [r5, #0x14]
	movs r0, #0x80
	lsls r0, r0, #0xe
	str r0, [r5, #0x20]
	adds r0, r5, #0
	adds r0, #0x24
	strb r3, [r0]
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #0xe
	strb r0, [r5, #0x17]
	adds r1, r5, #0
	adds r1, #0x25
	movs r0, #0x78
	strb r0, [r1]
	strh r4, [r5, #0x26]
	adds r0, r5, #0
	adds r0, #0x29
	strb r3, [r0]
	subs r0, #1
	strb r3, [r0]
	adds r1, #0x13
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x90
	lsls r0, r0, #4
	str r0, [r5, #0x40]
	movs r0, #0xc0
	lsls r0, r0, #3
	str r0, [r5, #0x44]
	movs r0, #8
	str r0, [r5, #0x48]
	movs r0, #0x40
	str r0, [r5, #0x4c]
	adds r0, r5, #0
	adds r0, #0x64
	strh r4, [r0]
	adds r1, #0x2e
	ldr r0, _08021824 @ =0x0000FFFF
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	strh r4, [r5, #0x2c]
	strh r4, [r5, #0x2e]
	strh r4, [r5, #0x30]
	strh r4, [r5, #0x32]
	str r4, [r5, #0x3c]
	adds r0, r5, #0
	adds r0, #0x37
	strb r3, [r0]
	strh r4, [r5, #0x2a]
	adds r1, #8
	movs r0, #0xb4
	lsls r0, r0, #1
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x7e
	strh r4, [r0]
	subs r0, #2
	strh r4, [r0]
	adds r0, #6
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #4
	strb r3, [r0]
	subs r0, #0x23
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r1, r5, #0
	adds r1, #0x86
	movs r0, #0x1e
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x3c
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xa
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x6d
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	subs r0, #0x15
	strb r3, [r0]
	subs r0, #2
	strh r4, [r0]
	adds r0, #0x14
	strb r3, [r0]
	adds r0, #5
	strb r3, [r0]
	subs r0, #1
	strb r3, [r0]
	subs r0, #0x3a
	strb r3, [r0]
	bl sub_8015750
	bl sub_801561C
	adds r0, r5, #0
	bl sub_802989C
	adds r1, r5, #0
	adds r1, #0x99
	movs r2, #3
	adds r6, r1, #0
	adds r4, r5, #0
	adds r4, #0x60
	movs r0, #0x85
	adds r0, r0, r5
	mov ip, r0
	movs r3, #0
_080217EA:
	stm r1!, {r3}
	adds r0, r2, #0
	subs r2, #1
	cmp r0, #0
	bne _080217EA
	movs r0, #0x7f
	strb r0, [r6]
	movs r2, #0
	ldrsb r2, [r4, r2]
	cmp r2, #0
	bne _08021840
	ldr r0, _08021828 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08021840
	ldr r3, _0802182C @ =gUnknown_03005490
	ldr r1, [r3]
	ldr r0, _08021830 @ =0x00008C9F
	cmp r1, r0
	bls _08021838
	ldr r0, _08021834 @ =gUnknown_030053E4
	str r2, [r0]
	str r2, [r3]
	str r2, [r5, #0x78]
	b _08021840
	.align 2, 0
_0802181C: .4byte sub_8025318
_08021820: .4byte gUnknown_03005B38
_08021824: .4byte 0x0000FFFF
_08021828: .4byte gUnknown_030054CC
_0802182C: .4byte gUnknown_03005490
_08021830: .4byte 0x00008C9F
_08021834: .4byte gUnknown_030053E4
_08021838:
	ldr r1, _08021854 @ =gUnknown_030053E4
	ldr r0, [r5, #0x78]
	str r0, [r1]
	str r0, [r3]
_08021840:
	mov r1, ip
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #4
	bhi _080218C2
	lsls r0, r0, #2
	ldr r1, _08021858 @ =_0802185C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08021854: .4byte gUnknown_030053E4
_08021858: .4byte _0802185C
_0802185C: @ jump table
	.4byte _08021870 @ case 0
	.4byte _08021882 @ case 1
	.4byte _08021896 @ case 2
	.4byte _080218A8 @ case 3
	.4byte _080218BA @ case 4
_08021870:
	adds r0, r5, #0
	adds r0, #0xac
	movs r1, #0
	strb r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _080218C2
_08021882:
	adds r0, r5, #0
	adds r0, #0xae
	movs r2, #0
	movs r1, #0
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #4
	strb r2, [r0]
	b _080218C2
_08021896:
	adds r0, r5, #0
	adds r0, #0xac
	movs r1, #0
	strb r1, [r0]
	adds r0, #4
	str r1, [r0]
	subs r0, #3
	strb r1, [r0]
	b _080218C2
_080218A8:
	adds r0, r5, #0
	adds r0, #0xac
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	b _080218C2
_080218BA:
	adds r1, r5, #0
	adds r1, #0xac
	movs r0, #0
	strb r0, [r1]
_080218C2:
	ldr r1, _080218D8 @ =gUnknown_03005B7C
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080218DC @ =gUnknown_03005840
	movs r1, #0
	str r1, [r0]
	ldr r0, _080218E0 @ =gUnknown_0300583C
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080218D8: .4byte gUnknown_03005B7C
_080218DC: .4byte gUnknown_03005840
_080218E0: .4byte gUnknown_0300583C

	thumb_func_start sub_80218E4
sub_80218E4: @ 0x080218E4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xa
	ands r0, r1
	cmp r0, #0
	beq _080218FA
	ldr r0, _08021950 @ =0x00000119
	bl m4aSongNumStop
_080218FA:
	ldr r0, [r4, #0x20]
	ldr r1, _08021954 @ =0xCEF118CF
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	adds r0, #0x61
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #0xe
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	adds r5, r4, #0
	adds r5, #0x85
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #2
	bne _0802192C
	movs r0, #0x78
	bl m4aSongNumStop
_0802192C:
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #1
	bne _0802193A
	movs r0, #0xe3
	bl m4aSongNumStop
_0802193A:
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bne _0802194A
	ldr r0, [r4, #0x20]
	ldr r1, _08021958 @ =0xFDFFFFFF
	ands r0, r1
	str r0, [r4, #0x20]
_0802194A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08021950: .4byte 0x00000119
_08021954: .4byte 0xCEF118CF
_08021958: .4byte 0xFDFFFFFF

	thumb_func_start sub_802195C
sub_802195C: @ 0x0802195C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r6, #0
	bne _08021974
	add r6, sp, #8
_08021974:
	cmp r7, #0
	bne _0802197A
	add r7, sp, #0xc
_0802197A:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	subs r1, r0, r1
	movs r0, #0x38
	adds r0, r0, r4
	mov r8, r0
	ldrb r2, [r0]
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	ldr r5, _08021A10 @ =0x000002FF
	cmp r0, r5
	bgt _080219A6
	movs r0, #0x80
	orrs r2, r0
_080219A6:
	movs r0, #9
	add r0, sp
	mov sb, r0
	str r0, [sp]
	ldr r5, _08021A14 @ =sub_801ED24
	mov sl, r5
	str r5, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r5, r0, #0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r0, r0, r1
	mov ip, r0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r1, r0, r1
	mov r0, r8
	ldrb r2, [r0]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08021A10 @ =0x000002FF
	cmp r0, r3
	bgt _080219EA
	movs r0, #0x80
	orrs r2, r0
_080219EA:
	mov r4, sp
	adds r4, #0xa
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	mov r0, ip
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r5, r1
	bge _08021A18
	adds r2, r5, #0
	mov r3, sb
	ldrb r0, [r3]
	strb r0, [r6]
	str r1, [r7]
	b _08021A20
	.align 2, 0
_08021A10: .4byte 0x000002FF
_08021A14: .4byte sub_801ED24
_08021A18:
	adds r2, r1, #0
	ldrb r0, [r4]
	strb r0, [r6]
	str r5, [r7]
_08021A20:
	adds r0, r2, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8021A34
sub_8021A34: @ 0x08021A34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r6, #0
	bne _08021A4C
	add r6, sp, #8
_08021A4C:
	cmp r7, #0
	bne _08021A52
	add r7, sp, #0xc
_08021A52:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	subs r1, r0, r1
	movs r0, #0x38
	adds r0, r0, r4
	mov r8, r0
	ldrb r2, [r0]
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	ldr r5, _08021AE4 @ =0x000002FF
	cmp r0, r5
	bgt _08021A7E
	movs r0, #0x80
	orrs r2, r0
_08021A7E:
	movs r0, #9
	add r0, sp
	mov sb, r0
	str r0, [sp]
	ldr r5, _08021AE8 @ =sub_801ED24
	mov sl, r5
	str r5, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r5, r0, #0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	mov ip, r0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r1, r0, r1
	mov r0, r8
	ldrb r2, [r0]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08021AE4 @ =0x000002FF
	cmp r0, r3
	bgt _08021AC0
	movs r0, #0x80
	orrs r2, r0
_08021AC0:
	mov r4, sp
	adds r4, #0xa
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	mov r0, ip
	movs r3, #8
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r5, r1
	bge _08021AEC
	adds r2, r5, #0
	mov r3, sb
	ldrb r0, [r3]
	strb r0, [r6]
	str r1, [r7]
	b _08021AF4
	.align 2, 0
_08021AE4: .4byte 0x000002FF
_08021AE8: .4byte sub_801ED24
_08021AEC:
	adds r2, r1, #0
	ldrb r0, [r4]
	strb r0, [r6]
	str r5, [r7]
_08021AF4:
	adds r0, r2, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8021B08
sub_8021B08: @ 0x08021B08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r6, #0
	bne _08021B20
	add r6, sp, #8
_08021B20:
	cmp r7, #0
	bne _08021B26
	add r7, sp, #0xc
_08021B26:
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	subs r3, r0, r1
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r1, r0, r1
	movs r0, #0x38
	adds r0, r0, r4
	mov r8, r0
	ldrb r2, [r0]
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	ldr r5, _08021BBC @ =0x000002FF
	cmp r0, r5
	bgt _08021B52
	movs r0, #0x80
	orrs r2, r0
_08021B52:
	movs r0, #9
	add r0, sp
	mov sb, r0
	str r0, [sp]
	ldr r5, _08021BC0 @ =sub_801EE64
	mov sl, r5
	str r5, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	subs r0, r0, r1
	mov ip, r0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r1, r0, r1
	mov r0, r8
	ldrb r2, [r0]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08021BBC @ =0x000002FF
	cmp r0, r3
	bgt _08021B96
	movs r0, #0x80
	orrs r2, r0
_08021B96:
	mov r4, sp
	adds r4, #0xa
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	mov r0, ip
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r5, r1
	bge _08021BC4
	adds r2, r5, #0
	mov r3, sb
	ldrb r0, [r3]
	strb r0, [r6]
	str r1, [r7]
	b _08021BCC
	.align 2, 0
_08021BBC: .4byte 0x000002FF
_08021BC0: .4byte sub_801EE64
_08021BC4:
	adds r2, r1, #0
	ldrb r0, [r4]
	strb r0, [r6]
	str r5, [r7]
_08021BCC:
	adds r0, r2, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8021BE0
sub_8021BE0: @ 0x08021BE0
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x20]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r2
	cmp r0, #0
	bne _08021C34
	movs r0, #0x80
	lsls r0, r0, #0x10
	ands r0, r2
	cmp r0, #0
	bne _08021C08
	ldr r0, _08021C2C @ =gUnknown_030059E0
	ldr r1, _08021C30 @ =sub_8025318
	str r1, [r0]
	movs r0, #0x13
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r4, #0x20]
_08021C08:
	ldr r1, [r4, #0x20]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08021C22
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
_08021C22:
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	b _08021C3C
	.align 2, 0
_08021C2C: .4byte gUnknown_030059E0
_08021C30: .4byte sub_8025318
_08021C34:
	movs r0, #0x13
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r4, #0x20]
_08021C3C:
	adds r1, r4, #0
	adds r1, #0x84
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8021C4C
sub_8021C4C: @ 0x08021C4C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r0, #0x38
	ldrb r5, [r0]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r7, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08021CF8 @ =0x000002FF
	mov sb, r3
	cmp r0, sb
	bgt _08021C7E
	movs r2, #0x80
	orrs r2, r5
_08021C7E:
	movs r3, #8
	rsbs r3, r3, #0
	movs r6, #0
	str r6, [sp]
	ldr r0, _08021CFC @ =sub_801ED24
	mov r8, r0
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021CA2
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	strh r6, [r4, #0x10]
_08021CA2:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	cmp r0, sb
	bgt _08021CC0
	movs r0, #0x80
	orrs r2, r0
_08021CC0:
	str r6, [sp]
	mov r0, r8
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021CDE
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	strh r6, [r4, #0x10]
_08021CDE:
	add r2, sp, #0xc
	ldr r0, _08021D00 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021D04
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029AC0
	b _08021D0C
	.align 2, 0
_08021CF8: .4byte 0x000002FF
_08021CFC: .4byte sub_801ED24
_08021D00: .4byte gUnknown_03005424
_08021D04:
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029B0C
_08021D0C:
	adds r2, r0, #0
	cmp r2, #0
	bge _08021DAA
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x18
	adds r1, #6
	rsbs r1, r1, #0
	cmp r2, r1
	bge _08021D26
	ldr r0, [sp, #0xc]
	cmp r0, r1
	blt _08021DAA
_08021D26:
	add r0, sp, #8
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	ldr r0, _08021D70 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021D3E
	rsbs r2, r2, #0
_08021D3E:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8021BE0
	add r0, sp, #8
	ldrb r2, [r0]
	adds r0, r2, #0
	adds r0, #0x20
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08021D74
	movs r0, #0
	strh r0, [r4, #0x10]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xbd
	lsls r1, r1, #4
	cmp r0, r1
	ble _08021D8E
	strh r1, [r4, #0x12]
	b _08021D8E
	.align 2, 0
_08021D70: .4byte gUnknown_03005424
_08021D74:
	adds r1, r2, #0
	adds r1, #0x10
	movs r0, #0x20
	ands r1, r0
	cmp r1, #0
	bne _08021D86
	strh r1, [r4, #0x12]
	ldrh r0, [r4, #0x10]
	b _08021DA8
_08021D86:
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #0x12]
_08021D8E:
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _08021D98
	rsbs r1, r1, #0
_08021D98:
	strh r1, [r4, #0x14]
	add r0, sp, #8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08021DAA
	rsbs r0, r1, #0
_08021DA8:
	strh r0, [r4, #0x14]
_08021DAA:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8021DB8
sub_8021DB8: @ 0x08021DB8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r0, #0x38
	ldrb r5, [r0]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r7, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08021E64 @ =0x000002FF
	mov sb, r3
	cmp r0, sb
	bgt _08021DEA
	movs r2, #0x80
	orrs r2, r5
_08021DEA:
	movs r3, #8
	rsbs r3, r3, #0
	movs r6, #0
	str r6, [sp]
	ldr r0, _08021E68 @ =sub_801ED24
	mov r8, r0
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021E0E
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	strh r6, [r4, #0x10]
_08021E0E:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	cmp r0, sb
	bgt _08021E2C
	movs r0, #0x80
	orrs r2, r0
_08021E2C:
	str r6, [sp]
	mov r0, r8
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021E4A
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	strh r6, [r4, #0x10]
_08021E4A:
	add r2, sp, #0xc
	ldr r0, _08021E6C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021E70
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029B0C
	b _08021E78
	.align 2, 0
_08021E64: .4byte 0x000002FF
_08021E68: .4byte sub_801ED24
_08021E6C: .4byte gUnknown_03005424
_08021E70:
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029AC0
_08021E78:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021ED4
	ldr r0, _08021ECC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021E8C
	rsbs r2, r2, #0
_08021E8C:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	str r0, [r4, #0xc]
	add r0, sp, #8
	ldrb r2, [r0]
	adds r0, r2, #0
	adds r0, #0x20
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08021ED0
	add r0, sp, #8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #0x40
	cmp r0, #0
	ble _08021ED0
	adds r0, r4, #0
	adds r0, #0x24
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_8021BE0
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08021EC8
	rsbs r0, r0, #0
_08021EC8:
	strh r0, [r4, #0x14]
	b _08021ED4
	.align 2, 0
_08021ECC: .4byte gUnknown_03005424
_08021ED0:
	movs r0, #0
	strh r0, [r4, #0x12]
_08021ED4:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8021EE4
sub_8021EE4: @ 0x08021EE4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r0, #0x38
	ldrb r0, [r0]
	mov ip, r0
	ldr r0, _08021F20 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r3, #0x80
	adds r0, r3, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _08021F28
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r5, r1]
	subs r0, r0, r1
	ldr r1, [r5, #0xc]
	asrs r1, r1, #8
	subs r3, #0x88
	movs r2, #0
	str r2, [sp]
	ldr r2, _08021F24 @ =sub_801ED24
	str r2, [sp, #4]
	mov r2, ip
	b _08021F54
	.align 2, 0
_08021F20: .4byte gUnknown_03005424
_08021F24: .4byte sub_801ED24
_08021F28:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r5, r1]
	subs r7, r0, r1
	ldr r0, [r5, #0xc]
	asrs r6, r0, #8
	mov r2, ip
	movs r0, #0x12
	ldrsh r1, [r5, r0]
	ldr r0, _08021F88 @ =0x000002FF
	cmp r1, r0
	bgt _08021F46
	orrs r2, r3
_08021F46:
	movs r3, #8
	rsbs r3, r3, #0
	str r4, [sp]
	ldr r0, _08021F8C @ =sub_801ED24
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
_08021F54:
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021F6E
	lsls r1, r2, #8
	ldr r0, [r5, #8]
	subs r0, r0, r1
	str r0, [r5, #8]
	movs r0, #0
	strh r0, [r5, #0x10]
	ldrh r0, [r5, #0x12]
	strh r0, [r5, #0x14]
_08021F6E:
	ldr r0, _08021F90 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	add r4, sp, #0xc
	cmp r0, #0
	beq _08021F94
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029B0C
	b _08021F9E
	.align 2, 0
_08021F88: .4byte 0x000002FF
_08021F8C: .4byte sub_801ED24
_08021F90: .4byte gUnknown_03005424
_08021F94:
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029AC0
_08021F9E:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08021FCC
	ldr r0, _08021FC8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021FB2
	rsbs r2, r2, #0
_08021FB2:
	lsls r0, r2, #8
	ldr r1, [r5, #0xc]
	subs r1, r1, r0
	str r1, [r5, #0xc]
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bge _0802202E
	movs r0, #0
	strh r0, [r5, #0x12]
	b _0802202E
	.align 2, 0
_08021FC8: .4byte gUnknown_03005424
_08021FCC:
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0
	blt _0802202E
	ldr r0, _08021FEC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08021FF0
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029AC0
	b _08021FFA
	.align 2, 0
_08021FEC: .4byte gUnknown_03005424
_08021FF0:
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029B0C
_08021FFA:
	adds r2, r0, #0
	cmp r2, #0
	bgt _0802202E
	ldr r0, _08022038 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802200E
	rsbs r2, r2, #0
_0802200E:
	lsls r1, r2, #8
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	add r0, sp, #8
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x24
	movs r4, #0
	strb r1, [r0]
	adds r0, r5, #0
	bl sub_8021BE0
	strh r4, [r5, #0x12]
	ldrh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
_0802202E:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08022038: .4byte gUnknown_03005424

	thumb_func_start sub_802203C
sub_802203C: @ 0x0802203C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r0, #0x38
	ldrb r7, [r0]
	ldr r0, _08022074 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	mov ip, r0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0802207C
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	ldr r1, [r5, #0xc]
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _08022078 @ =sub_801ED24
	str r2, [sp, #4]
	adds r2, r7, #0
	b _080220A6
	.align 2, 0
_08022074: .4byte gUnknown_03005424
_08022078: .4byte sub_801ED24
_0802207C:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r5, r1]
	adds r6, r0, r1
	ldr r0, [r5, #0xc]
	asrs r4, r0, #8
	adds r2, r7, #0
	movs r0, #0x12
	ldrsh r1, [r5, r0]
	ldr r0, _080220DC @ =0x000002FF
	cmp r1, r0
	bgt _0802209C
	mov r1, ip
	orrs r2, r1
_0802209C:
	str r3, [sp]
	ldr r0, _080220E0 @ =sub_801ED24
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r1, r4, #0
_080220A6:
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _080220C2
	lsls r1, r2, #8
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	movs r0, #0
	strh r0, [r5, #0x10]
	ldrh r0, [r5, #0x12]
	strh r0, [r5, #0x14]
_080220C2:
	ldr r0, _080220E4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	add r4, sp, #0xc
	cmp r0, #0
	beq _080220E8
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029B0C
	b _080220F2
	.align 2, 0
_080220DC: .4byte 0x000002FF
_080220E0: .4byte sub_801ED24
_080220E4: .4byte gUnknown_03005424
_080220E8:
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029AC0
_080220F2:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022120
	ldr r0, _0802211C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022106
	rsbs r2, r2, #0
_08022106:
	lsls r0, r2, #8
	ldr r1, [r5, #0xc]
	subs r1, r1, r0
	str r1, [r5, #0xc]
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bge _08022182
	movs r0, #0
	strh r0, [r5, #0x12]
	b _08022182
	.align 2, 0
_0802211C: .4byte gUnknown_03005424
_08022120:
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0
	blt _08022182
	ldr r0, _08022140 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022144
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029AC0
	b _0802214E
	.align 2, 0
_08022140: .4byte gUnknown_03005424
_08022144:
	adds r0, r5, #0
	add r1, sp, #8
	adds r2, r4, #0
	bl sub_8029B0C
_0802214E:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022182
	ldr r0, _0802218C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022162
	rsbs r2, r2, #0
_08022162:
	lsls r1, r2, #8
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	add r0, sp, #8
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x24
	movs r4, #0
	strb r1, [r0]
	adds r0, r5, #0
	bl sub_8021BE0
	strh r4, [r5, #0x12]
	ldrh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
_08022182:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802218C: .4byte gUnknown_03005424

	thumb_func_start sub_8022190
sub_8022190: @ 0x08022190
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r3, [r4, #0x12]
	adds r5, r3, #0
	ldr r0, _080221E4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r2, #0x80
	adds r0, r2, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	rsbs r0, r0, #0
	asrs r0, r0, #0x1f
	ands r0, r2
	movs r1, #0x10
	ldrsh r2, [r4, r1]
	cmp r2, #0
	bne _080221B8
	cmp r3, #0
	beq _080221C6
_080221B8:
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	adds r0, r2, #0
	bl ArcTan2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x18
_080221C6:
	subs r0, #0x20
	movs r2, #0x40
	rsbs r2, r2, #0
	adds r1, r2, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _08022202
	cmp r0, #1
	bgt _080221E8
	cmp r0, #0
	beq _080221F2
	b _08022210
	.align 2, 0
_080221E4: .4byte gUnknown_03005424
_080221E8:
	cmp r0, #2
	beq _080221FA
	cmp r0, #3
	beq _0802220A
	b _08022210
_080221F2:
	adds r0, r4, #0
	bl sub_8021C4C
	b _08022210
_080221FA:
	adds r0, r4, #0
	bl sub_8021DB8
	b _08022210
_08022202:
	adds r0, r4, #0
	bl sub_8021EE4
	b _08022210
_0802220A:
	adds r0, r4, #0
	bl sub_802203C
_08022210:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8022218
sub_8022218: @ 0x08022218
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	add r2, sp, #4
	ldr r0, _08022238 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802223C
	adds r0, r5, #0
	mov r1, sp
	bl sub_8029AC0
	b _08022244
	.align 2, 0
_08022238: .4byte gUnknown_03005424
_0802223C:
	adds r0, r5, #0
	mov r1, sp
	bl sub_8029B0C
_08022244:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022278
	ldr r0, _08022280 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022258
	rsbs r2, r2, #0
_08022258:
	lsls r1, r2, #8
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	mov r0, sp
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x24
	movs r4, #0
	strb r1, [r0]
	adds r0, r5, #0
	bl sub_8021BE0
	strh r4, [r5, #0x12]
	ldrh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
_08022278:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08022280: .4byte gUnknown_03005424

	thumb_func_start sub_8022284
sub_8022284: @ 0x08022284
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	add r2, sp, #4
	ldr r0, _080222A4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080222A8
	adds r0, r4, #0
	mov r1, sp
	bl sub_8029B0C
	b _080222B0
	.align 2, 0
_080222A4: .4byte gUnknown_03005424
_080222A8:
	adds r0, r4, #0
	mov r1, sp
	bl sub_8029AC0
_080222B0:
	adds r2, r0, #0
	cmp r2, #0
	bgt _0802230A
	ldr r0, _08022314 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080222C4
	rsbs r2, r2, #0
_080222C4:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	str r0, [r4, #0xc]
	mov r0, sp
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_8021BE0
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _080222E6
	rsbs r1, r1, #0
_080222E6:
	strh r1, [r4, #0x14]
	mov r0, sp
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	blt _080222F8
	rsbs r0, r1, #0
	strh r0, [r4, #0x14]
_080222F8:
	adds r0, r4, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802230A
	ldr r0, [r4, #0x20]
	movs r1, #1
	eors r0, r1
	str r0, [r4, #0x20]
_0802230A:
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08022314: .4byte gUnknown_03005424

	thumb_func_start sub_8022318
sub_8022318: @ 0x08022318
	push {r4, lr}
	adds r3, r0, #0
	ldr r1, [r3, #0x20]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _08022334
	movs r0, #6
	strb r0, [r3, #0x16]
	movs r0, #0xe
	strb r0, [r3, #0x17]
	adds r2, r3, #0
	adds r2, #0x64
	b _0802237A
_08022334:
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r3, #0x20]
	adds r2, r3, #0
	adds r2, #0x64
	movs r0, #0
	strh r0, [r2]
	movs r0, #0x17
	ldrsb r0, [r3, r0]
	adds r4, r0, #0
	subs r4, #0xe
	ldr r0, _080223B8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802235A
	rsbs r4, r4, #0
_0802235A:
	adds r0, r3, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x40
	lsls r0, r0, #0x18
	cmp r0, #0
	bgt _0802236A
	rsbs r4, r4, #0
_0802236A:
	movs r0, #6
	strb r0, [r3, #0x16]
	movs r0, #0xe
	strb r0, [r3, #0x17]
	lsls r1, r4, #8
	ldr r0, [r3, #0xc]
	adds r0, r0, r1
	str r0, [r3, #0xc]
_0802237A:
	ldr r0, [r3, #0x20]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x1e
	ands r0, r1
	adds r1, #0x10
	ands r0, r1
	subs r1, #0xf0
	ands r0, r1
	str r0, [r3, #0x20]
	adds r0, r3, #0
	adds r0, #0x84
	movs r4, #0
	strb r4, [r0]
	adds r1, r3, #0
	adds r1, #0x25
	movs r0, #0x78
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x61
	strb r4, [r0]
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0x5b
	ble _080223B0
	strh r4, [r2]
_080223B0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080223B8: .4byte gUnknown_03005424

	thumb_func_start sub_80223BC
sub_80223BC: @ 0x080223BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r0, #0x38
	ldrb r5, [r0]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r6, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _08022480 @ =0x000002FF
	mov sb, r3
	cmp r0, sb
	bgt _080223EE
	movs r2, #0x80
	orrs r2, r5
_080223EE:
	movs r3, #8
	rsbs r3, r3, #0
	movs r7, #0
	str r7, [sp]
	ldr r0, _08022484 @ =sub_801ED24
	mov r8, r0
	str r0, [sp, #4]
	adds r0, r6, #0
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _0802241E
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_0802241E:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	cmp r0, sb
	bgt _0802243C
	movs r0, #0x80
	orrs r2, r0
_0802243C:
	str r7, [sp]
	mov r0, r8
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022466
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08022466:
	add r2, sp, #0xc
	ldr r0, _08022488 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802248C
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029AC0
	b _08022494
	.align 2, 0
_08022480: .4byte 0x000002FF
_08022484: .4byte sub_801ED24
_08022488: .4byte gUnknown_03005424
_0802248C:
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029B0C
_08022494:
	adds r2, r0, #0
	cmp r2, #0
	bgt _080224CA
	ldr r0, _080224D8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080224A8
	rsbs r2, r2, #0
_080224A8:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	add r0, sp, #8
	ldrb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	strb r2, [r0]
	strh r1, [r4, #0x12]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r2]
_080224CA:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080224D8: .4byte gUnknown_03005424

	thumb_func_start sub_80224DC
sub_80224DC: @ 0x080224DC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r0, #0x38
	ldrb r5, [r0]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r6, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	ldr r3, _080225A0 @ =0x000002FF
	mov sb, r3
	cmp r0, sb
	bgt _0802250E
	movs r2, #0x80
	orrs r2, r5
_0802250E:
	movs r3, #8
	rsbs r3, r3, #0
	movs r7, #0
	str r7, [sp]
	ldr r0, _080225A4 @ =sub_801ED24
	mov r8, r0
	str r0, [sp, #4]
	adds r0, r6, #0
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _0802253E
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_0802253E:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #3
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #0xc]
	asrs r1, r0, #8
	adds r2, r5, #0
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	cmp r0, sb
	bgt _0802255C
	movs r0, #0x80
	orrs r2, r0
_0802255C:
	str r7, [sp]
	mov r0, r8
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022586
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08022586:
	add r2, sp, #0xc
	ldr r0, _080225A8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080225AC
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029B0C
	b _080225B4
	.align 2, 0
_080225A0: .4byte 0x000002FF
_080225A4: .4byte sub_801ED24
_080225A8: .4byte gUnknown_03005424
_080225AC:
	adds r0, r4, #0
	add r1, sp, #8
	bl sub_8029AC0
_080225B4:
	adds r2, r0, #0
	cmp r2, #0
	bgt _080225D4
	ldr r0, _080225E4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080225C8
	rsbs r2, r2, #0
_080225C8:
	lsls r0, r2, #8
	ldr r1, [r4, #0xc]
	subs r1, r1, r0
	str r1, [r4, #0xc]
	movs r0, #0
	strh r0, [r4, #0x12]
_080225D4:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080225E4: .4byte gUnknown_03005424

	thumb_func_start sub_80225E8
sub_80225E8: @ 0x080225E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x38
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r6, r0, r1
	ldr r0, [r4, #0xc]
	asrs r5, r0, #8
	ldrb r2, [r2]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, _0802265C @ =0x000002FF
	cmp r1, r0
	bgt _08022612
	movs r0, #0x80
	orrs r2, r0
_08022612:
	movs r3, #8
	rsbs r3, r3, #0
	movs r7, #0
	str r7, [sp]
	ldr r0, _08022660 @ =sub_801ED24
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022642
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	strh r7, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08022642:
	ldr r0, _08022664 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	add r5, sp, #0xc
	cmp r0, #0
	beq _08022668
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029B0C
	b _08022672
	.align 2, 0
_0802265C: .4byte 0x000002FF
_08022660: .4byte sub_801ED24
_08022664: .4byte gUnknown_03005424
_08022668:
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029AC0
_08022672:
	adds r2, r0, #0
	cmp r2, #0
	bgt _080226A0
	ldr r0, _0802269C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022686
	rsbs r2, r2, #0
_08022686:
	lsls r0, r2, #8
	ldr r1, [r4, #0xc]
	subs r1, r1, r0
	str r1, [r4, #0xc]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08022704
	movs r0, #0
	strh r0, [r4, #0x12]
	b _08022704
	.align 2, 0
_0802269C: .4byte gUnknown_03005424
_080226A0:
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _08022704
	ldr r0, _080226C0 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080226C4
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029AC0
	b _080226CE
	.align 2, 0
_080226C0: .4byte gUnknown_03005424
_080226C4:
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029B0C
_080226CE:
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022704
	ldr r0, _0802270C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080226E2
	rsbs r2, r2, #0
_080226E2:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	add r0, sp, #8
	ldrb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	strb r2, [r0]
	strh r1, [r4, #0x12]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r2]
_08022704:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802270C: .4byte gUnknown_03005424

	thumb_func_start sub_8022710
sub_8022710: @ 0x08022710
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x38
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r5, r0, r1
	ldr r0, [r4, #0xc]
	asrs r3, r0, #8
	ldrb r2, [r2]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, _08022784 @ =0x000002FF
	cmp r1, r0
	bgt _0802273A
	movs r0, #0x80
	orrs r2, r0
_0802273A:
	movs r6, #0
	str r6, [sp]
	ldr r0, _08022788 @ =sub_801ED24
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bgt _08022768
	lsls r1, r2, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	strh r6, [r4, #0x10]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
_08022768:
	ldr r0, _0802278C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	add r5, sp, #0xc
	cmp r0, #0
	beq _08022790
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029B0C
	b _0802279A
	.align 2, 0
_08022784: .4byte 0x000002FF
_08022788: .4byte sub_801ED24
_0802278C: .4byte gUnknown_03005424
_08022790:
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029AC0
_0802279A:
	adds r2, r0, #0
	cmp r2, #0
	bgt _080227C8
	ldr r0, _080227C4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080227AE
	rsbs r2, r2, #0
_080227AE:
	lsls r0, r2, #8
	ldr r1, [r4, #0xc]
	subs r1, r1, r0
	str r1, [r4, #0xc]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _0802282C
	movs r0, #0
	strh r0, [r4, #0x12]
	b _0802282C
	.align 2, 0
_080227C4: .4byte gUnknown_03005424
_080227C8:
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _0802282C
	ldr r0, _080227E8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080227EC
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029AC0
	b _080227F6
	.align 2, 0
_080227E8: .4byte gUnknown_03005424
_080227EC:
	adds r0, r4, #0
	add r1, sp, #8
	adds r2, r5, #0
	bl sub_8029B0C
_080227F6:
	adds r2, r0, #0
	cmp r2, #0
	bgt _0802282C
	ldr r0, _08022834 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802280A
	rsbs r2, r2, #0
_0802280A:
	lsls r1, r2, #8
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	add r0, sp, #8
	ldrb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	strb r2, [r0]
	strh r1, [r4, #0x12]
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r2]
_0802282C:
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08022834: .4byte gUnknown_03005424

	thumb_func_start sub_8022838
sub_8022838: @ 0x08022838
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r2, [r4, #0x10]
	ldrh r5, [r4, #0x12]
	movs r3, #0
	ldr r0, [r4, #0x20]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08022864
	adds r2, r4, #0
	adds r2, #0xac
	ldrb r1, [r2]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x29
	strb r3, [r0]
	subs r0, #1
	strb r3, [r0]
	b _080228BA
_08022864:
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	bl ArcTan2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x18
	adds r0, r3, #0
	subs r0, #0x20
	movs r2, #0x40
	rsbs r2, r2, #0
	adds r1, r2, #0
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _080228AC
	cmp r0, #1
	bgt _08022892
	cmp r0, #0
	beq _0802289C
	b _080228BA
_08022892:
	cmp r0, #2
	beq _080228A4
	cmp r0, #3
	beq _080228B4
	b _080228BA
_0802289C:
	adds r0, r4, #0
	bl sub_80223BC
	b _080228BA
_080228A4:
	adds r0, r4, #0
	bl sub_80224DC
	b _080228BA
_080228AC:
	adds r0, r4, #0
	bl sub_80225E8
	b _080228BA
_080228B4:
	adds r0, r4, #0
	bl sub_8022710
_080228BA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80228C0
sub_80228C0: @ 0x080228C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r4, [r7, #8]
	ldr r0, [r7, #0xc]
	mov sl, r0
	adds r0, r7, #0
	adds r0, #0x38
	ldrb r0, [r0]
	mov r8, r0
	mov r1, sl
	asrs r5, r1, #8
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	adds r0, r5, r0
	asrs r4, r4, #8
	subs r1, r4, #2
	movs r2, #0x16
	ldrsb r2, [r7, r2]
	subs r1, r1, r2
	adds r2, r7, #0
	adds r2, #0x28
	str r2, [sp, #8]
	str r2, [sp]
	ldr r3, _08022954 @ =sub_801EE64
	str r3, [sp, #4]
	mov r2, r8
	movs r3, #8
	bl sub_801E4E4
	adds r6, r0, #0
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	adds r5, r5, r0
	adds r4, #2
	movs r0, #0x16
	ldrsb r0, [r7, r0]
	adds r4, r4, r0
	movs r0, #0x29
	adds r0, r0, r7
	mov sb, r0
	str r0, [sp]
	ldr r1, _08022954 @ =sub_801EE64
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	adds r1, r2, #0
	cmp r2, r6
	ble _08022936
	adds r1, r6, #0
_08022936:
	cmp r1, #0
	beq _08022996
	cmp r1, #0
	bge _0802295E
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r1, r0
	blt _080229D6
	lsls r0, r1, #8
	add sl, r0
	cmp r6, r2
	bge _08022958
	ldr r2, [sp, #8]
	ldrb r0, [r2]
	b _080229A4
	.align 2, 0
_08022954: .4byte sub_801EE64
_08022958:
	mov r3, sb
	ldrb r0, [r3]
	b _080229A4
_0802295E:
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bge _08022968
	rsbs r0, r0, #0
_08022968:
	asrs r0, r0, #8
	adds r0, #3
	cmp r0, #0xb
	ble _08022972
	movs r0, #0xb
_08022972:
	cmp r1, r0
	bgt _08022988
	lsls r0, r1, #8
	add sl, r0
	cmp r6, r2
	bge _08022982
	ldr r1, [sp, #8]
	b _080229A2
_08022982:
	mov r2, sb
	ldrb r0, [r2]
	b _080229A4
_08022988:
	ldr r0, [r7, #0x20]
	movs r1, #2
	orrs r0, r1
	subs r1, #0x23
	ands r0, r1
	str r0, [r7, #0x20]
	b _080229D6
_08022996:
	cmp r6, r2
	bge _080229A0
	ldr r3, [sp, #8]
	ldrb r0, [r3]
	b _080229A4
_080229A0:
	mov r1, sb
_080229A2:
	ldrb r0, [r1]
_080229A4:
	adds r1, r0, #0
	mov r2, sl
	str r2, [r7, #0xc]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080229D6
	adds r2, r7, #0
	adds r2, #0x24
	strb r1, [r2]
	ldr r0, _080229E8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080229D6
	ldrb r1, [r2]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r1, r0, #0x18
	adds r0, r1, #0
	subs r0, #0x40
	strb r0, [r2]
_080229D6:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080229E8: .4byte gUnknown_03005424

	thumb_func_start sub_80229EC
sub_80229EC: @ 0x080229EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r4, [r7, #8]
	ldr r0, [r7, #0xc]
	str r0, [sp, #8]
	adds r0, r7, #0
	adds r0, #0x38
	ldrb r0, [r0]
	mov sb, r0
	ldr r1, [sp, #8]
	asrs r5, r1, #8
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	subs r0, r5, r0
	asrs r4, r4, #8
	adds r1, r4, #2
	movs r2, #0x16
	ldrsb r2, [r7, r2]
	adds r1, r1, r2
	movs r2, #0x28
	adds r2, r2, r7
	mov r8, r2
	str r2, [sp]
	ldr r3, _08022A84 @ =sub_801EE64
	str r3, [sp, #4]
	mov r2, sb
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r6, r0, #0
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	subs r5, r5, r0
	subs r4, #2
	movs r0, #0x16
	ldrsb r0, [r7, r0]
	subs r4, r4, r0
	movs r0, #0x29
	adds r0, r0, r7
	mov sl, r0
	str r0, [sp]
	ldr r1, _08022A84 @ =sub_801EE64
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, sb
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r2, r0, #0
	adds r1, r2, #0
	cmp r2, r6
	ble _08022A66
	adds r1, r6, #0
_08022A66:
	cmp r1, #0
	beq _08022AC4
	cmp r1, #0
	bge _08022A88
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r1, r0
	blt _08022B04
	lsls r0, r1, #8
	ldr r3, [sp, #8]
	subs r3, r3, r0
	str r3, [sp, #8]
	cmp r6, r2
	blt _08022AC8
	b _08022ACE
	.align 2, 0
_08022A84: .4byte sub_801EE64
_08022A88:
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bge _08022A92
	rsbs r0, r0, #0
_08022A92:
	asrs r0, r0, #8
	adds r0, #3
	cmp r0, #0xb
	ble _08022A9C
	movs r0, #0xb
_08022A9C:
	cmp r1, r0
	bgt _08022AB6
	lsls r0, r1, #8
	ldr r1, [sp, #8]
	subs r1, r1, r0
	str r1, [sp, #8]
	cmp r6, r2
	bge _08022AB0
	mov r2, r8
	b _08022AD0
_08022AB0:
	mov r3, sl
	ldrb r0, [r3]
	b _08022AD2
_08022AB6:
	ldr r0, [r7, #0x20]
	movs r1, #2
	orrs r0, r1
	subs r1, #0x23
	ands r0, r1
	str r0, [r7, #0x20]
	b _08022B04
_08022AC4:
	cmp r6, r2
	bge _08022ACE
_08022AC8:
	mov r1, r8
	ldrb r0, [r1]
	b _08022AD2
_08022ACE:
	mov r2, sl
_08022AD0:
	ldrb r0, [r2]
_08022AD2:
	adds r1, r0, #0
	ldr r3, [sp, #8]
	str r3, [r7, #0xc]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08022B04
	adds r2, r7, #0
	adds r2, #0x24
	strb r1, [r2]
	ldr r0, _08022B14 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022B04
	ldrb r1, [r2]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r1, r0, #0x18
	adds r0, r1, #0
	subs r0, #0x40
	strb r0, [r2]
_08022B04:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08022B14: .4byte gUnknown_03005424

	thumb_func_start sub_8022B18
sub_8022B18: @ 0x08022B18
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #8]
	str r0, [sp, #8]
	ldr r4, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0x38
	ldrb r0, [r0]
	mov sb, r0
	ldr r1, [sp, #8]
	asrs r5, r1, #8
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	subs r0, r5, r0
	asrs r4, r4, #8
	subs r1, r4, #2
	movs r2, #0x16
	ldrsb r2, [r7, r2]
	subs r1, r1, r2
	movs r2, #0x28
	adds r2, r2, r7
	mov r8, r2
	str r2, [sp]
	ldr r3, _08022BB0 @ =sub_801ED24
	str r3, [sp, #4]
	mov r2, sb
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r6, r0, #0
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	subs r5, r5, r0
	adds r4, #2
	movs r0, #0x16
	ldrsb r0, [r7, r0]
	adds r4, r4, r0
	movs r0, #0x29
	adds r0, r0, r7
	mov sl, r0
	str r0, [sp]
	ldr r1, _08022BB0 @ =sub_801ED24
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, sb
	movs r3, #8
	rsbs r3, r3, #0
	bl sub_801E4E4
	adds r2, r0, #0
	adds r1, r2, #0
	cmp r2, r6
	ble _08022B92
	adds r1, r6, #0
_08022B92:
	cmp r1, #0
	beq _08022BF0
	cmp r1, #0
	bge _08022BB4
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r1, r0
	blt _08022C30
	lsls r0, r1, #8
	ldr r3, [sp, #8]
	subs r3, r3, r0
	str r3, [sp, #8]
	cmp r6, r2
	blt _08022BF4
	b _08022BFA
	.align 2, 0
_08022BB0: .4byte sub_801ED24
_08022BB4:
	movs r3, #0x12
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bge _08022BBE
	rsbs r0, r0, #0
_08022BBE:
	asrs r0, r0, #8
	adds r0, #3
	cmp r0, #0xb
	ble _08022BC8
	movs r0, #0xb
_08022BC8:
	cmp r1, r0
	bgt _08022BE2
	lsls r0, r1, #8
	ldr r1, [sp, #8]
	subs r1, r1, r0
	str r1, [sp, #8]
	cmp r6, r2
	bge _08022BDC
	mov r2, r8
	b _08022BFC
_08022BDC:
	mov r3, sl
	ldrb r0, [r3]
	b _08022BFE
_08022BE2:
	ldr r0, [r7, #0x20]
	movs r1, #2
	orrs r0, r1
	subs r1, #0x23
	ands r0, r1
	str r0, [r7, #0x20]
	b _08022C30
_08022BF0:
	cmp r6, r2
	bge _08022BFA
_08022BF4:
	mov r1, r8
	ldrb r0, [r1]
	b _08022BFE
_08022BFA:
	mov r2, sl
_08022BFC:
	ldrb r0, [r2]
_08022BFE:
	adds r1, r0, #0
	ldr r3, [sp, #8]
	str r3, [r7, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08022C30
	adds r2, r7, #0
	adds r2, #0x24
	strb r1, [r2]
	ldr r0, _08022C40 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022C30
	ldrb r1, [r2]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r1, r0, #0x18
	adds r0, r1, #0
	subs r0, #0x40
	strb r0, [r2]
_08022C30:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08022C40: .4byte gUnknown_03005424

	thumb_func_start sub_8022C44
sub_8022C44: @ 0x08022C44
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #8]
	str r0, [sp, #8]
	ldr r4, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0x38
	ldrb r0, [r0]
	mov r8, r0
	ldr r1, [sp, #8]
	asrs r5, r1, #8
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	adds r0, r5, r0
	asrs r4, r4, #8
	adds r1, r4, #2
	movs r2, #0x16
	ldrsb r2, [r7, r2]
	adds r1, r1, r2
	movs r2, #0x28
	adds r2, r2, r7
	mov sl, r2
	str r2, [sp]
	ldr r3, _08022CD8 @ =sub_801ED24
	str r3, [sp, #4]
	mov r2, r8
	movs r3, #8
	bl sub_801E4E4
	adds r6, r0, #0
	movs r0, #0x17
	ldrsb r0, [r7, r0]
	adds r5, r5, r0
	subs r4, #2
	movs r0, #0x16
	ldrsb r0, [r7, r0]
	subs r4, r4, r0
	movs r0, #0x29
	adds r0, r0, r7
	mov sb, r0
	str r0, [sp]
	ldr r1, _08022CD8 @ =sub_801ED24
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	movs r3, #8
	bl sub_801E4E4
	adds r2, r0, #0
	adds r1, r2, #0
	cmp r2, r6
	ble _08022CBA
	adds r1, r6, #0
_08022CBA:
	cmp r1, #0
	beq _08022D18
	cmp r1, #0
	bge _08022CDC
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r1, r0
	blt _08022D58
	lsls r0, r1, #8
	ldr r3, [sp, #8]
	adds r3, r3, r0
	str r3, [sp, #8]
	cmp r6, r2
	blt _08022D1C
	b _08022D22
	.align 2, 0
_08022CD8: .4byte sub_801ED24
_08022CDC:
	movs r3, #0x12
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bge _08022CE6
	rsbs r0, r0, #0
_08022CE6:
	asrs r0, r0, #8
	adds r0, #3
	cmp r0, #0xb
	ble _08022CF0
	movs r0, #0xb
_08022CF0:
	cmp r1, r0
	bgt _08022D0A
	lsls r0, r1, #8
	ldr r1, [sp, #8]
	adds r1, r1, r0
	str r1, [sp, #8]
	cmp r6, r2
	bge _08022D04
	mov r2, sl
	b _08022D24
_08022D04:
	mov r3, sb
	ldrb r0, [r3]
	b _08022D26
_08022D0A:
	ldr r0, [r7, #0x20]
	movs r1, #2
	orrs r0, r1
	subs r1, #0x23
	ands r0, r1
	str r0, [r7, #0x20]
	b _08022D58
_08022D18:
	cmp r6, r2
	bge _08022D22
_08022D1C:
	mov r1, sl
	ldrb r0, [r1]
	b _08022D26
_08022D22:
	mov r2, sb
_08022D24:
	ldrb r0, [r2]
_08022D26:
	adds r1, r0, #0
	ldr r3, [sp, #8]
	str r3, [r7, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08022D58
	adds r2, r7, #0
	adds r2, #0x24
	strb r1, [r2]
	ldr r0, _08022D68 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022D58
	ldrb r1, [r2]
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r1, r0, #0x18
	adds r0, r1, #0
	subs r0, #0x40
	strb r0, [r2]
_08022D58:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08022D68: .4byte gUnknown_03005424

	thumb_func_start sub_8022D6C
sub_8022D6C: @ 0x08022D6C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	movs r1, #0
	ldr r3, [r4, #0x20]
	movs r0, #8
	ands r0, r3
	cmp r0, #0
	beq _08022D8C
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	b _08022F4E
_08022D8C:
	ldr r0, _08022E40 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r7, r4, #0
	adds r7, #0x24
	cmp r0, #0
	bne _08022E90
	ldr r0, _08022E44 @ =gUnknown_03005660
	mov ip, r0
	ldrb r0, [r0]
	cmp r0, #1
	bne _08022E90
	ldr r0, [r4, #0xc]
	lsls r0, r0, #8
	asrs r5, r0, #0x10
	movs r2, #4
	rsbs r2, r2, #0
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	mov r8, r1
	mov r6, ip
	movs r1, #4
	ldrsh r0, [r6, r1]
	mov r6, r8
	subs r0, r0, r6
	ands r0, r2
	lsls r0, r0, #0x10
	ands r5, r2
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	cmp r5, r0
	bne _08022E78
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _08022E78
	ldrb r0, [r7]
	adds r0, #0x18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x30
	bhi _08022E78
	movs r0, #2
	ands r3, r0
	cmp r3, #0
	bne _08022E78
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08022DF4
	rsbs r1, r1, #0
_08022DF4:
	ldr r0, _08022E48 @ =0x000005FF
	cmp r1, r0
	ble _08022E78
	adds r0, r4, #0
	bl sub_80228C0
	lsls r1, r5, #8
	ldr r0, [r4, #0xc]
	cmp r0, r1
	blt _08022E54
	ldr r1, [r4, #0x20]
	movs r2, #0x80
	lsls r2, r2, #0xa
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _08022E26
	orrs r1, r2
	str r1, [r4, #0x20]
	ldr r0, _08022E4C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08022E26
	bl sub_80117F0
_08022E26:
	ldr r0, _08022E50 @ =0x00000119
	bl m4aSongNumStartOrContinue
	lsls r0, r6, #0x10
	asrs r0, r0, #8
	str r0, [r4, #0xc]
	movs r0, #0
	strb r0, [r7]
	ldr r0, [r4, #0x20]
	movs r1, #3
	rsbs r1, r1, #0
	b _08022E6A
	.align 2, 0
_08022E40: .4byte gUnknown_030055B4
_08022E44: .4byte gUnknown_03005660
_08022E48: .4byte 0x000005FF
_08022E4C: .4byte gUnknown_030054CC
_08022E50: .4byte 0x00000119
_08022E54:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xa
	ands r0, r1
	cmp r0, #0
	beq _08022E66
	ldr r0, _08022E70 @ =0x00000119
	bl m4aSongNumStop
_08022E66:
	ldr r0, [r4, #0x20]
	ldr r1, _08022E74 @ =0xFFFDFFFF
_08022E6A:
	ands r0, r1
	str r0, [r4, #0x20]
	b _08022F4E
	.align 2, 0
_08022E70: .4byte 0x00000119
_08022E74: .4byte 0xFFFDFFFF
_08022E78:
	ldr r1, [r4, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _08022E90
	ldr r0, _08022EC0 @ =0xFFFDFFFF
	ands r1, r0
	str r1, [r4, #0x20]
	ldr r0, _08022EC4 @ =0x00000119
	bl m4aSongNumStop
_08022E90:
	ldr r0, _08022EC8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08022EF4
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	asrs r0, r0, #0x18
	subs r0, #0x40
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, r0, #0
	adds r1, #0x20
	cmp r1, #0
	ble _08022ECC
	cmp r0, #0
	bgt _08022ED4
	lsls r0, r1, #0x18
	b _08022ED8
	.align 2, 0
_08022EC0: .4byte 0xFFFDFFFF
_08022EC4: .4byte 0x00000119
_08022EC8: .4byte gUnknown_03005424
_08022ECC:
	cmp r0, #0
	ble _08022ED4
	lsls r0, r1, #0x18
	b _08022ED8
_08022ED4:
	adds r0, #0x1f
	lsls r0, r0, #0x18
_08022ED8:
	lsrs r1, r0, #0x18
	lsrs r0, r1, #6
	cmp r0, #1
	beq _08022F40
	cmp r0, #1
	ble _08022F20
	cmp r0, #2
	beq _08022F38
	cmp r0, #3
	bne _08022F4E
	adds r0, r4, #0
	bl sub_8022C44
	b _08022F4E
_08022EF4:
	movs r0, #0
	ldrsb r0, [r7, r0]
	adds r1, r0, #0
	adds r1, #0x20
	cmp r1, #0
	ble _08022F08
	cmp r0, #0
	bgt _08022F10
	lsls r0, r1, #0x18
	b _08022F14
_08022F08:
	cmp r0, #0
	ble _08022F10
	lsls r0, r1, #0x18
	b _08022F14
_08022F10:
	adds r0, #0x1f
	lsls r0, r0, #0x18
_08022F14:
	lsrs r1, r0, #0x18
	lsrs r0, r1, #6
	cmp r0, #1
	beq _08022F40
	cmp r0, #1
	bgt _08022F26
_08022F20:
	cmp r0, #0
	beq _08022F30
	b _08022F4E
_08022F26:
	cmp r0, #2
	beq _08022F38
	cmp r0, #3
	beq _08022F48
	b _08022F4E
_08022F30:
	adds r0, r4, #0
	bl sub_80228C0
	b _08022F4E
_08022F38:
	adds r0, r4, #0
	bl sub_80229EC
	b _08022F4E
_08022F40:
	adds r0, r4, #0
	bl sub_8022B18
	b _08022F4E
_08022F48:
	adds r0, r4, #0
	bl sub_8022C44
_08022F4E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8022F58
sub_8022F58: @ 0x08022F58
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r3, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r6, #0
	adds r1, #0x29
	strb r0, [r1]
	subs r1, #1
	strb r0, [r1]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	asrs r4, r0, #6
	cmp r4, #1
	beq _08022FA6
	cmp r4, #1
	bgt _08022F82
	cmp r4, #0
	beq _08022F8C
	b _0802301C
_08022F82:
	cmp r4, #2
	beq _08022FDC
	cmp r4, #3
	beq _08022FEA
	b _0802301C
_08022F8C:
	mov r4, sp
	add r2, sp, #4
	adds r0, r3, #0
	mov r1, sp
	bl sub_8029BB8
_08022F98:
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _08023002
	b _08023006
_08022FA6:
	mov r5, sp
	add r2, sp, #8
	adds r0, r3, #0
	mov r1, sp
	bl sub_802195C
	adds r3, r0, #0
	ldrb r2, [r5]
	ands r4, r2
	cmp r4, #0
	beq _08022FC0
	strb r6, [r5]
	b _0802301A
_08022FC0:
	ldr r0, _08022FD8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802301A
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
	strb r0, [r5]
	b _0802301A
	.align 2, 0
_08022FD8: .4byte gUnknown_03005424
_08022FDC:
	mov r4, sp
	add r2, sp, #0xc
	adds r0, r3, #0
	mov r1, sp
	bl sub_8021B08
	b _08022F98
_08022FEA:
	mov r4, sp
	add r2, sp, #0x10
	adds r0, r3, #0
	mov r1, sp
	bl sub_8021A34
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08023006
_08023002:
	strb r6, [r4]
	b _0802301A
_08023006:
	ldr r0, _08023028 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802301A
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
	strb r0, [r4]
_0802301A:
	adds r6, r3, #0
_0802301C:
	adds r0, r6, #0
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08023028: .4byte gUnknown_03005424

	thumb_func_start sub_802302C
sub_802302C: @ 0x0802302C
	push {r4, r5, lr}
	sub sp, #8
	mov ip, r1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, [r1, #8]
	asrs r5, r0, #8
	ldr r0, [r1, #0xc]
	asrs r4, r0, #8
	mov r0, ip
	adds r0, #0x29
	strb r2, [r0]
	lsls r0, r2, #0x18
	asrs r3, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x28
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x20
	lsls r0, r0, #0x18
	cmp r0, #0
	ble _0802305E
	cmp r3, #0
	bgt _08023062
	b _08023068
_0802305E:
	cmp r3, #0
	bgt _08023068
_08023062:
	adds r0, r2, #0
	adds r0, #0x1f
	lsls r0, r0, #0x18
_08023068:
	lsrs r2, r0, #0x18
	lsrs r3, r2, #6
	cmp r3, #1
	beq _080230CC
	cmp r3, #1
	bgt _0802307A
	cmp r3, #0
	beq _08023084
	b _0802311C
_0802307A:
	cmp r3, #2
	beq _080230A4
	cmp r3, #3
	beq _080230F4
	b _0802311C
_08023084:
	adds r0, r4, #2
	mov r2, ip
	movs r1, #0x16
	ldrsb r1, [r2, r1]
	adds r0, r0, r1
	mov r1, ip
	adds r1, #0x38
	ldrb r2, [r1]
	str r3, [sp]
	ldr r1, _080230A0 @ =sub_801EE64
	str r1, [sp, #4]
	adds r1, r5, #0
	b _0802310E
	.align 2, 0
_080230A0: .4byte sub_801EE64
_080230A4:
	subs r0, r4, #2
	mov r2, ip
	movs r1, #0x16
	ldrsb r1, [r2, r1]
	subs r0, r0, r1
	mov r1, ip
	adds r1, #0x38
	ldrb r2, [r1]
	movs r3, #8
	rsbs r3, r3, #0
	movs r1, #0
	str r1, [sp]
	ldr r1, _080230C8 @ =sub_801EE64
	str r1, [sp, #4]
	adds r1, r5, #0
	bl sub_801E4E4
	b _0802311E
	.align 2, 0
_080230C8: .4byte sub_801EE64
_080230CC:
	subs r0, r5, #2
	mov r2, ip
	movs r1, #0x16
	ldrsb r1, [r2, r1]
	subs r0, r0, r1
	mov r1, ip
	adds r1, #0x38
	ldrb r2, [r1]
	movs r3, #8
	rsbs r3, r3, #0
	movs r1, #0
	str r1, [sp]
	ldr r1, _080230F0 @ =sub_801ED24
	str r1, [sp, #4]
	adds r1, r4, #0
	bl sub_801E4E4
	b _0802311E
	.align 2, 0
_080230F0: .4byte sub_801ED24
_080230F4:
	adds r0, r5, #2
	mov r2, ip
	movs r1, #0x16
	ldrsb r1, [r2, r1]
	adds r0, r0, r1
	mov r1, ip
	adds r1, #0x38
	ldrb r2, [r1]
	movs r1, #0
	str r1, [sp]
	ldr r1, _08023118 @ =sub_801ED24
	str r1, [sp, #4]
	adds r1, r4, #0
_0802310E:
	movs r3, #8
	bl sub_801E4E4
	b _0802311E
	.align 2, 0
_08023118: .4byte sub_801ED24
_0802311C:
	movs r0, #0
_0802311E:
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8023128
sub_8023128: @ 0x08023128
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080231BA
	movs r1, #0x40
	cmp r0, #0
	blt _0802313C
	movs r1, #0xc0
_0802313C:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_802302C
	lsls r2, r0, #8
	cmp r2, #0
	bgt _080231BA
	adds r0, r5, #0
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	asrs r1, r0, #6
	cmp r1, #1
	beq _08023182
	cmp r1, #1
	bgt _0802316E
	cmp r1, #0
	beq _08023178
	b _080231AE
_0802316E:
	cmp r1, #2
	beq _08023188
	cmp r1, #3
	beq _0802319A
	b _080231AE
_08023178:
	ldr r0, [r4, #0xc]
	adds r0, r0, r2
	str r0, [r4, #0xc]
	strh r1, [r4, #0x12]
	b _080231AE
_08023182:
	ldr r0, [r4, #8]
	subs r0, r0, r2
	b _0802319E
_08023188:
	ldr r0, [r4, #0xc]
	subs r0, r0, r2
	str r0, [r4, #0xc]
	movs r0, #0
	strh r0, [r4, #0x12]
	ldr r0, [r4, #0x20]
	orrs r0, r1
	str r0, [r4, #0x20]
	b _080231AE
_0802319A:
	ldr r0, [r4, #8]
	adds r0, r0, r2
_0802319E:
	str r0, [r4, #8]
	movs r2, #0
	strh r2, [r4, #0x10]
	ldr r0, [r4, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x20]
	strh r2, [r4, #0x14]
_080231AE:
	adds r0, r4, #0
	adds r0, #0x62
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_080231BA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80231C0
sub_80231C0: @ 0x080231C0
	push {r4, r5, lr}
	adds r5, r0, #0
	movs r1, #0x14
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08023258
	movs r1, #0x40
	cmp r0, #0
	blt _080231D4
	movs r1, #0xc0
_080231D4:
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_802302C
	lsls r2, r0, #8
	cmp r2, #0
	bgt _08023258
	adds r0, r4, #0
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	asrs r1, r0, #6
	cmp r1, #1
	beq _0802321A
	cmp r1, #1
	bgt _08023206
	cmp r1, #0
	beq _08023210
	b _08023258
_08023206:
	cmp r1, #2
	beq _08023220
	cmp r1, #3
	beq _08023232
	b _08023258
_08023210:
	ldr r0, [r5, #0xc]
	adds r0, r0, r2
	str r0, [r5, #0xc]
	strh r1, [r5, #0x12]
	b _08023258
_0802321A:
	ldr r0, [r5, #8]
	subs r0, r0, r2
	b _08023236
_08023220:
	ldr r0, [r5, #0xc]
	subs r0, r0, r2
	str r0, [r5, #0xc]
	movs r0, #0
	strh r0, [r5, #0x12]
	ldr r0, [r5, #0x20]
	orrs r0, r1
	str r0, [r5, #0x20]
	b _08023258
_08023232:
	ldr r0, [r5, #8]
	adds r0, r0, r2
_08023236:
	str r0, [r5, #8]
	movs r4, #0
	strh r4, [r5, #0x10]
	ldr r0, [r5, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x20]
	adds r0, r5, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #0xe
	strb r0, [r5, #0x17]
	strh r4, [r5, #0x14]
_08023258:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8023260
sub_8023260: @ 0x08023260
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r4, [r2, #0x40]
	movs r0, #0x14
	ldrsh r1, [r2, r0]
	lsls r0, r4, #0x10
	asrs r3, r0, #0x10
	cmp r1, r3
	ble _08023276
	strh r4, [r2, #0x14]
	b _08023282
_08023276:
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	cmn r0, r3
	bge _08023282
	rsbs r0, r4, #0
	strh r0, [r2, #0x14]
_08023282:
	movs r0, #0x14
	ldrsh r4, [r2, r0]
	adds r0, r2, #0
	adds r0, #0x24
	ldr r5, _080232CC @ =gUnknown_08097AA4
	ldrb r3, [r0]
	lsls r0, r3, #3
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r4, r0
	asrs r0, r0, #8
	strh r0, [r2, #0x10]
	ldr r1, [r2, #0x20]
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	bne _080232B0
	strh r1, [r2, #0x12]
_080232B0:
	lsls r0, r3, #3
	adds r0, r0, r5
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r4, r0
	asrs r0, r0, #8
	ldrh r1, [r2, #0x12]
	adds r0, r0, r1
	strh r0, [r2, #0x12]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080232CC: .4byte gUnknown_08097AA4

	thumb_func_start sub_80232D0
sub_80232D0: @ 0x080232D0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldr r4, _080233A0 @ =gUnknown_03005960
	ldr r0, [r7, #8]
	mov r8, r0
	ldr r1, [r7, #0xc]
	mov sb, r1
	adds r0, r7, #0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _080232F4
	b _08023486
_080232F4:
	ldr r1, _080233A4 @ =gUnknown_030055B4
	ldrb r2, [r1]
	movs r0, #3
	ands r0, r2
	mov ip, r1
	cmp r0, #2
	beq _08023316
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _08023312
	ldr r0, _080233A8 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08023316
_08023312:
	cmp r1, #0x1d
	bne _080233C4
_08023316:
	mov r2, ip
	ldrb r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08023324
	b _08023486
_08023324:
	ldr r0, _080233AC @ =gUnknown_080D650C
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r2, r1, #3
	adds r0, r2, r0
	ldr r1, [r0]
	cmp r1, #0
	bge _08023336
	b _08023486
_08023336:
	lsls r0, r1, #8
	cmp r8, r0
	bge _0802333E
	b _08023486
_0802333E:
	ldr r0, _080233B0 @ =gUnknown_080D661C
	adds r1, r2, r0
	ldr r5, [r1]
	adds r0, #4
	adds r0, r2, r0
	ldr r6, [r0]
	lsls r3, r5, #8
	add r8, r3
	lsls r1, r6, #8
	add sb, r1
	ldr r0, _080233B4 @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _08023366
	ldr r0, [r2]
	adds r0, r0, r3
	str r0, [r2]
	ldr r0, [r2, #4]
	adds r0, r0, r1
	str r0, [r2, #4]
_08023366:
	ldr r0, _080233B8 @ =gUnknown_030054FC
	str r3, [r0]
	ldr r0, _080233BC @ =gUnknown_030054E0
	str r1, [r0]
	adds r0, r3, #0
	bl sub_8039F14
	ldr r1, _080233C0 @ =gUnknown_03005430
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r4]
	adds r0, r0, r5
	str r0, [r4]
	ldr r0, [r4, #0x20]
	adds r0, r0, r5
	str r0, [r4, #0x20]
	ldr r0, [r4, #0x10]
	adds r0, r0, r5
	str r0, [r4, #0x10]
	ldr r0, [r4, #4]
	adds r0, r0, r6
	str r0, [r4, #4]
	ldr r0, [r4, #0x24]
	adds r0, r0, r6
	str r0, [r4, #0x24]
	ldr r0, [r4, #0x14]
	adds r0, r0, r6
	str r0, [r4, #0x14]
	b _08023486
	.align 2, 0
_080233A0: .4byte gUnknown_03005960
_080233A4: .4byte gUnknown_030055B4
_080233A8: .4byte gUnknown_030054B0
_080233AC: .4byte gUnknown_080D650C
_080233B0: .4byte gUnknown_080D661C
_080233B4: .4byte gUnknown_030056A4
_080233B8: .4byte gUnknown_030054FC
_080233BC: .4byte gUnknown_030054E0
_080233C0: .4byte gUnknown_03005430
_080233C4:
	ldr r0, _080234B4 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _08023486
	ldr r0, _080234B8 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _08023486
	ldr r0, _080234BC @ =gUnknown_080D650C
	mov r2, ip
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r2, r1, #3
	adds r1, r2, r0
	ldr r1, [r1]
	adds r5, r0, #0
	cmp r1, #0
	blt _08023432
	lsls r0, r1, #8
	cmp r8, r0
	blt _08023432
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _08023432
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08023432
	ldr r0, _080234C0 @ =gUnknown_080D661C
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r3, r1, #8
	add r8, r3
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r0, [r4, #0x20]
	adds r0, r0, r1
	str r0, [r4, #0x20]
	ldr r0, [r4, #0x10]
	adds r0, r0, r1
	str r0, [r4, #0x10]
	ldr r0, _080234C4 @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _08023432
	ldr r0, [r2]
	adds r0, r0, r3
	str r0, [r2]
_08023432:
	mov r1, ip
	movs r0, #0
	ldrsb r0, [r1, r0]
	lsls r2, r0, #3
	adds r0, r5, #4
	adds r0, r2, r0
	ldr r0, [r0]
	cmp r0, #0
	blt _08023486
	lsls r0, r0, #8
	cmp sb, r0
	blt _08023486
	ldr r0, [r4, #0xc]
	cmp r0, #0
	beq _08023486
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08023486
	ldr r0, _080234C0 @ =gUnknown_080D661C
	adds r0, #4
	adds r0, r2, r0
	ldr r0, [r0]
	lsls r1, r0, #8
	lsls r3, r0, #0x10
	add sb, r3
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldr r0, [r4, #0x24]
	adds r0, r0, r1
	str r0, [r4, #0x24]
	ldr r0, _080234C4 @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _08023486
	ldr r0, [r2, #4]
	adds r0, r0, r3
	str r0, [r2, #4]
_08023486:
	ldr r1, [r7, #0x20]
	ldr r0, _080234C8 @ =0x80000080
	ands r0, r1
	adds r6, r1, #0
	cmp r0, #0x80
	bne _08023494
	b _08023604
_08023494:
	ldr r5, _080234CC @ =gUnknown_03005960
	ldr r3, [r7, #0xc]
	cmp r6, #0
	blt _0802351C
	ldr r2, _080234D0 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080234D4
	ldr r0, [r5, #0x28]
	lsls r0, r0, #8
	cmp r3, r0
	bgt _080234E0
	b _080234E6
	.align 2, 0
_080234B4: .4byte gUnknown_030059E0
_080234B8: .4byte gUnknown_030054F4
_080234BC: .4byte gUnknown_080D650C
_080234C0: .4byte gUnknown_080D661C
_080234C4: .4byte gUnknown_030056A4
_080234C8: .4byte 0x80000080
_080234CC: .4byte gUnknown_03005960
_080234D0: .4byte gUnknown_03005424
_080234D4:
	ldr r0, [r5, #0x2c]
	lsls r0, r0, #8
	subs r0, #1
	movs r1, #1
	cmp r3, r0
	bge _080234E2
_080234E0:
	movs r1, #0
_080234E2:
	cmp r1, #0
	beq _0802351C
_080234E6:
	movs r0, #0x80
	orrs r0, r6
	str r0, [r7, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080234FC
	ldr r0, _080234F8 @ =0x0000FD60
	b _080234FE
	.align 2, 0
_080234F8: .4byte 0x0000FD60
_080234FC:
	ldr r0, _08023510 @ =0x0000FB20
_080234FE:
	strh r0, [r7, #0x12]
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023514
	ldr r0, [r4, #0x28]
	lsls r0, r0, #8
	b _0802351A
	.align 2, 0
_08023510: .4byte 0x0000FB20
_08023514:
	ldr r0, [r4, #0x2c]
	lsls r0, r0, #8
	subs r0, #1
_0802351A:
	mov sb, r0
_0802351C:
	ldr r1, _08023548 @ =gUnknown_030055B4
	ldrb r2, [r1]
	movs r0, #3
	ands r0, r2
	mov ip, r1
	cmp r0, #2
	beq _0802353E
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0802353A
	ldr r0, _0802354C @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802353E
_0802353A:
	cmp r1, #0x1d
	bne _08023558
_0802353E:
	ldr r0, _08023550 @ =gUnknown_03005440
	ldrh r2, [r0]
	ldr r0, _08023554 @ =gUnknown_030054BC
	ldrh r3, [r0]
	b _0802355C
	.align 2, 0
_08023548: .4byte gUnknown_030055B4
_0802354C: .4byte gUnknown_030054B0
_08023550: .4byte gUnknown_03005440
_08023554: .4byte gUnknown_030054BC
_08023558:
	ldr r2, [r4, #0x28]
	ldr r3, [r4, #0x2c]
_0802355C:
	mov r5, r8
	mov r6, sb
	ldr r0, [r4, #0x30]
	lsls r0, r0, #8
	cmp r8, r0
	blt _08023576
	ldr r0, [r4, #0x34]
	lsls r0, r0, #8
	subs r1, r0, #1
	mov r0, r8
	cmp r0, r1
	ble _08023576
	adds r0, r1, #0
_08023576:
	mov r8, r0
	lsls r0, r2, #8
	cmp sb, r0
	blt _0802358A
	lsls r0, r3, #8
	subs r1, r0, #1
	mov r0, sb
	cmp r0, r1
	ble _0802358A
	adds r0, r1, #0
_0802358A:
	mov sb, r0
	cmp r8, r5
	beq _08023596
	movs r0, #0
	strh r0, [r7, #0x10]
	strh r0, [r7, #0x14]
_08023596:
	cmp sb, r6
	beq _080235A0
	movs r0, #0
	strh r0, [r7, #0x12]
	strh r0, [r7, #0x14]
_080235A0:
	mov r2, ip
	ldrb r1, [r2]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _080235C0
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _080235BC
	ldr r0, _080235E4 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080235C0
_080235BC:
	cmp r1, #0x1d
	bne _080235FC
_080235C0:
	ldr r0, [r4, #0x10]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r0, r2
	cmp r8, r1
	bge _080235E8
	mov r8, r1
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x10]
	ldr r0, [r7, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r7, #0x20]
	b _080235FC
	.align 2, 0
_080235E4: .4byte gUnknown_030054B0
_080235E8:
	movs r1, #0x9c
	lsls r1, r1, #9
	adds r0, r0, r1
	cmp r8, r0
	ble _080235FC
	mov r8, r0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x10]
_080235FC:
	mov r2, r8
	str r2, [r7, #8]
	mov r0, sb
	str r0, [r7, #0xc]
_08023604:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8023610
sub_8023610: @ 0x08023610
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	ldr r0, [r0, #0x48]
	lsls r5, r0, #1
	mov r0, ip
	ldr r6, [r0, #0x44]
	adds r0, #0x64
	movs r1, #0
	ldrsh r4, [r0, r1]
	cmp r4, #0x14
	beq _080236C0
	mov r0, ip
	ldr r1, [r0, #0x20]
	movs r7, #0x10
	adds r0, r1, #0
	ands r0, r7
	cmp r0, #0
	bne _080236C0
	mov r0, ip
	ldrh r2, [r0, #0x10]
	adds r0, #0x5c
	ldrh r3, [r0]
	movs r0, #0x20
	ands r0, r3
	cmp r0, #0
	beq _0802367C
	cmp r4, #0x3f
	beq _0802365A
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0802365A
	movs r0, #1
	orrs r1, r0
	mov r0, ip
	str r1, [r0, #0x20]
_0802365A:
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r1, r6, #0
	cmp r0, r1
	bge _080236BC
	adds r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r1
	ble _080236BC
	lsls r0, r1, #0x10
	b _080236BA
_0802367C:
	adds r0, r7, #0
	ands r0, r3
	cmp r0, #0
	beq _080236BC
	cmp r4, #0x3f
	beq _0802369C
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0802369C
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	mov r0, ip
	str r1, [r0, #0x20]
_0802369C:
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r6
	ble _080236BC
	subs r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r6
	bge _080236BC
	lsls r0, r6, #0x10
_080236BA:
	lsrs r2, r0, #0x10
_080236BC:
	mov r1, ip
	strh r2, [r1, #0x10]
_080236C0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80236C8
sub_80236C8: @ 0x080236C8
	push {lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	ldr r0, _080236EC @ =0x0000BCFF
	cmp r1, r0
	bls _08023702
	ldrh r1, [r2, #0x10]
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	asrs r0, r0, #0x15
	cmp r0, #0
	bge _080236F0
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	ble _08023700
	b _080236FE
	.align 2, 0
_080236EC: .4byte 0x0000BCFF
_080236F0:
	cmp r0, #0
	ble _08023702
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _08023700
_080236FE:
	movs r1, #0
_08023700:
	strh r1, [r2, #0x10]
_08023702:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8023708
sub_8023708: @ 0x08023708
	push {lr}
	adds r2, r0, #0
	ldrh r1, [r2, #0x12]
	ldr r0, _0802372C @ =0x0000BCFF
	cmp r1, r0
	bls _08023742
	ldrh r1, [r2, #0x10]
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	asrs r0, r0, #0x16
	cmp r0, #0
	bge _08023730
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	ble _08023740
	b _0802373E
	.align 2, 0
_0802372C: .4byte 0x0000BCFF
_08023730:
	cmp r0, #0
	ble _08023742
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _08023740
_0802373E:
	movs r1, #0
_08023740:
	strh r1, [r2, #0x10]
_08023742:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8023748
sub_8023748: @ 0x08023748
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x37
	ldrb r1, [r4]
	cmp r1, #0
	beq _08023850
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0802377C
	ldrh r0, [r5, #0x30]
	subs r0, #1
	strh r0, [r5, #0x30]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0802377C
	ldr r0, _080237E0 @ =gMPlayInfo_BGM
	movs r1, #0x80
	lsls r1, r1, #1
	bl m4aMPlayTempoControl
	ldrb r1, [r4]
	movs r0, #0xfb
	ands r0, r1
	strb r0, [r4]
_0802377C:
	adds r2, r5, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x10
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _080237AA
	ldrh r0, [r5, #0x30]
	subs r0, #1
	strh r0, [r5, #0x30]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080237AA
	ldr r0, _080237E0 @ =gMPlayInfo_BGM
	movs r1, #0x80
	lsls r1, r1, #1
	bl m4aMPlayTempoControl
	ldrb r1, [r4]
	movs r0, #0xef
	ands r0, r1
	strb r0, [r4]
_080237AA:
	ldrb r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08023822
	ldrh r0, [r5, #0x2e]
	subs r0, #1
	strh r0, [r5, #0x2e]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08023822
	ldrb r0, [r4]
	movs r1, #0xfd
	ands r1, r0
	strb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080237E8
	ldr r0, _080237E4 @ =gUnknown_030059E0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_802A7A8
	b _080237FE
	.align 2, 0
_080237E0: .4byte gMPlayInfo_BGM
_080237E4: .4byte gUnknown_030059E0
_080237E8:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080237FE
	ldr r0, _08023858 @ =gUnknown_030059E0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_802A8F8
_080237FE:
	ldr r0, _0802385C @ =gMPlayTable
	ldr r1, [r0]
	ldr r0, _08023860 @ =gSongTable
	adds r0, #0xe8
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _08023822
	ldr r1, _08023864 @ =gUnknown_080D5204
	ldr r0, _08023868 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStartOrContinue
_08023822:
	ldrb r1, [r4]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08023850
	ldrh r0, [r5, #0x34]
	subs r0, #1
	strh r0, [r5, #0x34]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08023850
	ldrb r1, [r4]
	movs r0, #0xdf
	ands r0, r1
	strb r0, [r4]
	ldr r2, _0802386C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08023870 @ =0x00007FFF
	ands r0, r1
	strh r0, [r2]
	ldr r1, _08023874 @ =gWinRegs
	movs r0, #0x3f
	strh r0, [r1, #0xa]
_08023850:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08023858: .4byte gUnknown_030059E0
_0802385C: .4byte gMPlayTable
_08023860: .4byte gSongTable
_08023864: .4byte gUnknown_080D5204
_08023868: .4byte gUnknown_030055B4
_0802386C: .4byte gDispCnt
_08023870: .4byte 0x00007FFF
_08023874: .4byte gWinRegs

	thumb_func_start sub_8023878
sub_8023878: @ 0x08023878
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x20]
	ldr r0, _08023944 @ =0xFFFFEFFF
	ands r2, r0
	str r2, [r4, #0x20]
	ldr r0, _08023948 @ =gUnknown_03005660
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #1
	beq _08023890
	b _08023A60
_08023890:
	movs r1, #4
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bge _0802389A
	b _08023A60
_0802389A:
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	subs r0, #4
	movs r5, #4
	ldrsh r1, [r3, r5]
	cmp r0, r1
	bge _080238AA
	b _08023A60
_080238AA:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x88
	cmp r0, #0
	bne _08023912
	orrs r2, r1
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r2, r0
	str r2, [r4, #0x20]
	ldrh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #0x10]
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	strh r0, [r4, #0x12]
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	bne _080238EE
	adds r0, r4, #0
	adds r0, #0x61
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #9
	beq _08023912
_080238EE:
	adds r0, r4, #0
	adds r0, #0x88
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bgt _08023912
	movs r0, #0xa
	strb r0, [r5]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	movs r2, #4
	ldrsh r1, [r3, r2]
	bl sub_80118FC
	movs r0, #0x9c
	bl m4aSongNumStart
_08023912:
	adds r1, r4, #0
	adds r1, #0x87
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	adds r7, r1, #0
	cmp r0, #0
	bgt _08023A00
	adds r0, r4, #0
	adds r0, #0x86
	ldrb r1, [r0]
	subs r2, r1, #1
	strb r2, [r0]
	subs r1, #2
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r6, r0, #0
	cmp r1, #0xa
	bhi _080239D2
	lsls r0, r1, #2
	ldr r1, _0802394C @ =_08023950
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08023944: .4byte 0xFFFFEFFF
_08023948: .4byte gUnknown_03005660
_0802394C: .4byte _08023950
_08023950: @ jump table
	.4byte _080239CA @ case 0
	.4byte _080239D2 @ case 1
	.4byte _080239C0 @ case 2
	.4byte _080239D2 @ case 3
	.4byte _080239B6 @ case 4
	.4byte _080239D2 @ case 5
	.4byte _080239AC @ case 6
	.4byte _080239D2 @ case 7
	.4byte _080239A2 @ case 8
	.4byte _0802397C @ case 9
	.4byte _08023998 @ case 10
_0802397C:
	adds r0, r4, #0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080239D2
	ldr r1, _08023994 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #4]
	b _080239D2
	.align 2, 0
_08023994: .4byte gUnknown_030054A8
_08023998:
	adds r0, r4, #0
	movs r1, #5
	bl sub_802AF60
	b _080239D2
_080239A2:
	adds r0, r4, #0
	movs r1, #4
	bl sub_802AF60
	b _080239D2
_080239AC:
	adds r0, r4, #0
	movs r1, #3
	bl sub_802AF60
	b _080239D2
_080239B6:
	adds r0, r4, #0
	movs r1, #2
	bl sub_802AF60
	b _080239D2
_080239C0:
	adds r0, r4, #0
	movs r1, #1
	bl sub_802AF60
	b _080239D2
_080239CA:
	adds r0, r4, #0
	movs r1, #0
	bl sub_802AF60
_080239D2:
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bge _080239FC
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0
	strh r0, [r4, #0x12]
	ldr r0, [r4, #8]
	ldr r1, [r4, #0xc]
	ldr r2, _08023A48 @ =0xFFFFF400
	adds r1, r1, r2
	movs r2, #0
	movs r3, #1
	bl sub_802B018
	adds r0, r4, #0
	bl sub_802B3BC
_080239FC:
	movs r0, #0x3c
	strb r0, [r7]
_08023A00:
	ldr r0, _08023A4C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08023B02
	ldr r2, _08023A50 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08023A54 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08023A58 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xc0
	lsls r1, r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08023B02
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #3
	cmp r0, #0
	beq _08023A34
	ldr r1, _08023A5C @ =0xFFFFFC00
_08023A34:
	ldr r0, [r4, #8]
	adds r0, r0, r1
	ldr r1, [r4, #0xc]
	ldr r2, _08023A5C @ =0xFFFFFC00
	adds r1, r1, r2
	movs r2, #0
	movs r3, #0
	bl sub_802B018
	b _08023B02
	.align 2, 0
_08023A48: .4byte 0xFFFFF400
_08023A4C: .4byte gUnknown_03005590
_08023A50: .4byte gUnknown_030053B8
_08023A54: .4byte 0x00196225
_08023A58: .4byte 0x3C6EF35F
_08023A5C: .4byte 0xFFFFFC00
_08023A60:
	ldr r1, [r4, #0x20]
	movs r0, #0x40
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x88
	cmp r0, #0
	beq _08023AC2
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	str r1, [r4, #0x20]
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #1
	strh r0, [r4, #0x12]
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	bne _08023A9E
	adds r0, r4, #0
	adds r0, #0x61
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #9
	beq _08023AC2
_08023A9E:
	adds r0, r4, #0
	adds r0, #0x88
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bgt _08023AC2
	movs r0, #0xa
	strb r0, [r5]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	movs r2, #4
	ldrsh r1, [r3, r2]
	bl sub_80118FC
	movs r0, #0x9c
	bl m4aSongNumStart
_08023AC2:
	adds r1, r4, #0
	adds r1, #0x87
	movs r0, #0x3c
	strb r0, [r1]
	subs r1, #1
	movs r0, #0x1e
	strb r0, [r1]
	ldr r0, _08023B1C @ =gMPlayTable
	ldr r1, [r0]
	ldr r0, _08023B20 @ =gSongTable
	adds r0, #0xf8
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _08023B02
	adds r0, r4, #0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08023B02
	ldr r1, _08023B24 @ =gUnknown_080D5204
	ldr r0, _08023B28 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStartOrContinue
_08023B02:
	adds r0, r4, #0
	adds r0, #0x37
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08023B2C
	ldr r0, [r4, #0x48]
	lsls r0, r0, #1
	str r0, [r4, #0x48]
	ldr r0, [r4, #0x4c]
	lsls r0, r0, #1
	b _08023B44
	.align 2, 0
_08023B1C: .4byte gMPlayTable
_08023B20: .4byte gSongTable
_08023B24: .4byte gUnknown_080D5204
_08023B28: .4byte gUnknown_030055B4
_08023B2C:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08023B46
	ldr r0, [r4, #0x40]
	asrs r0, r0, #2
	str r0, [r4, #0x40]
	ldr r0, [r4, #0x48]
	asrs r0, r0, #2
	str r0, [r4, #0x48]
	ldr r0, [r4, #0x4c]
	asrs r0, r0, #2
_08023B44:
	str r0, [r4, #0x4c]
_08023B46:
	ldrb r1, [r5]
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	beq _08023B54
	subs r0, r1, #1
	strb r0, [r5]
_08023B54:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8023B5C
sub_8023B5C: @ 0x08023B5C
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	movs r0, #0x17
	ldrsb r0, [r3, r0]
	cmp r0, r4
	beq _08023C0A
	adds r0, r3, #0
	adds r0, #0x24
	ldrb r2, [r0]
	ldr r0, _08023BA0 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023B8E
	adds r0, r2, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r2, r0, #0x18
	adds r0, r2, #0
	subs r0, #0x40
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_08023B8E:
	adds r0, r2, #0
	adds r0, #0x20
	cmp r0, #0
	ble _08023BA8
	cmp r2, #0
	beq _08023BA4
	subs r0, #1
	b _08023BAC
	.align 2, 0
_08023BA0: .4byte gUnknown_03005424
_08023BA4:
	movs r2, #0x20
	b _08023BB4
_08023BA8:
	cmp r2, #0
	beq _08023BB2
_08023BAC:
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08023BB4
_08023BB2:
	movs r2, #0x1f
_08023BB4:
	lsrs r0, r2, #6
	cmp r0, #1
	beq _08023BEE
	cmp r0, #1
	bgt _08023BC4
	cmp r0, #0
	beq _08023BCE
	b _08023C0A
_08023BC4:
	cmp r0, #2
	beq _08023BDE
	cmp r0, #3
	beq _08023BFC
	b _08023C0A
_08023BCE:
	movs r1, #0x17
	ldrsb r1, [r3, r1]
	subs r1, r4, r1
	lsls r1, r1, #8
	ldr r0, [r3, #0xc]
	subs r0, r0, r1
	str r0, [r3, #0xc]
	b _08023C0A
_08023BDE:
	movs r1, #0x17
	ldrsb r1, [r3, r1]
	subs r1, r4, r1
	lsls r1, r1, #8
	ldr r0, [r3, #0xc]
	adds r0, r0, r1
	str r0, [r3, #0xc]
	b _08023C0A
_08023BEE:
	movs r1, #0x17
	ldrsb r1, [r3, r1]
	subs r1, r4, r1
	lsls r1, r1, #8
	ldr r0, [r3, #8]
	adds r0, r0, r1
	b _08023C08
_08023BFC:
	movs r1, #0x17
	ldrsb r1, [r3, r1]
	subs r1, r4, r1
	lsls r1, r1, #8
	ldr r0, [r3, #8]
	subs r0, r0, r1
_08023C08:
	str r0, [r3, #8]
_08023C0A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8023C10
sub_8023C10: @ 0x08023C10
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	cmp r0, #0
	bge _08023CFE
	movs r0, #0x14
	ldrsh r3, [r4, r0]
	ldr r2, _08023C40 @ =gInput
	ldrh r1, [r2]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08023C4A
	adds r3, #0x20
	cmp r3, #0
	blt _08023C44
	adds r0, r3, #0
	movs r1, #0x80
	lsls r1, r1, #5
	cmp r0, r1
	ble _08023C46
	adds r0, r1, #0
	b _08023C46
	.align 2, 0
_08023C40: .4byte gInput
_08023C44:
	movs r0, #0
_08023C46:
	adds r3, r0, #0
	b _08023C4C
_08023C4A:
	movs r3, #0
_08023C4C:
	strh r3, [r4, #0x14]
	ldrh r0, [r2]
	movs r1, #0x30
	ands r1, r0
	cmp r1, #0x10
	beq _08023C60
	cmp r1, #0x20
	bne _08023C64
	rsbs r0, r3, #0
	b _08023C66
_08023C60:
	strh r3, [r4, #0x10]
	b _08023C68
_08023C64:
	movs r0, #0
_08023C66:
	strh r0, [r4, #0x10]
_08023C68:
	ldrh r0, [r2]
	movs r1, #0xc0
	ands r1, r0
	cmp r1, #0x40
	beq _08023C7C
	cmp r1, #0x80
	beq _08023C82
	movs r0, #0
	strh r0, [r4, #0x12]
	b _08023C84
_08023C7C:
	rsbs r0, r3, #0
	strh r0, [r4, #0x12]
	b _08023C84
_08023C82:
	strh r3, [r4, #0x12]
_08023C84:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08023CCC @ =gUnknown_03005424
	ldr r1, _08023CD0 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023CA6
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08023CA6:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08023CB6
	adds r2, r1, #0
_08023CB6:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023CD4
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08023CDC
	.align 2, 0
_08023CCC: .4byte gUnknown_03005424
_08023CD0: .4byte gUnknown_0300544C
_08023CD4:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08023CDC:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, _08023D04 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08023CFE
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #0xc]
	asrs r1, r1, #8
	movs r2, #1
	bl sub_801FD34
_08023CFE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08023D04: .4byte gPressedKeys

	thumb_func_start sub_8023D08
sub_8023D08: @ 0x08023D08
	push {r4, r5, r6, lr}
	ldr r0, _08023D70 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r5, [r1, #4]
	cmp r5, #0
	beq _08023D1E
	b _08023E84
_08023D1E:
	ldr r0, _08023D74 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08023DA0
	adds r0, r2, #0
	bl TaskDestroy
	ldr r0, _08023D78 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #5]
	cmp r0, #0
	bne _08023D50
	ldr r0, _08023D7C @ =gUnknown_03005490
	ldr r2, [r0]
	ldr r0, _08023D80 @ =0x00008CA0
	cmp r2, r0
	bhi _08023D68
	ldr r0, _08023D84 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08023D50
	cmp r2, #0
	beq _08023D68
_08023D50:
	ldr r0, _08023D74 @ =gUnknown_030054CC
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08023D88
	ldr r0, _08023D7C @ =gUnknown_03005490
	ldr r1, [r0]
	ldr r0, _08023D80 @ =0x00008CA0
	cmp r1, r0
	bls _08023D88
_08023D68:
	bl sub_801B6B4
	b _08023E88
	.align 2, 0
_08023D70: .4byte gCurTask
_08023D74: .4byte gUnknown_030054CC
_08023D78: .4byte gLoadedSaveGame
_08023D7C: .4byte gUnknown_03005490
_08023D80: .4byte 0x00008CA0
_08023D84: .4byte gUnknown_03005424
_08023D88:
	ldr r0, _08023D98 @ =gUnknown_030053F0
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08023D9C @ =gUnknown_030054F4
	strb r1, [r0]
	bl sub_801AE48
	b _08023E88
	.align 2, 0
_08023D98: .4byte gUnknown_030053F0
_08023D9C: .4byte gUnknown_030054F4
_08023DA0:
	ldr r1, _08023E50 @ =gUnknown_030053F0
	strh r5, [r1]
	cmp r0, #3
	bne _08023DAC
	movs r0, #1
	strh r0, [r1]
_08023DAC:
	ldr r1, _08023E54 @ =gUnknown_030054F4
	movs r0, #0
	strb r0, [r1]
	ldr r6, _08023E58 @ =gUnknown_030059E0
	adds r0, r6, #0
	bl sub_8021694
	ldr r4, _08023E5C @ =gUnknown_03005960
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #0x18]
	adds r0, r0, r1
	subs r0, #0x78
	str r0, [r4]
	ldr r0, [r6, #0xc]
	asrs r0, r0, #8
	ldr r1, [r4, #0x1c]
	adds r0, r0, r1
	subs r0, #0x50
	str r0, [r4, #4]
	ldr r0, _08023E60 @ =gMPlayInfo_BGM
	movs r1, #0x80
	lsls r1, r1, #1
	bl m4aMPlayTempoControl
	str r5, [r6, #0x20]
	ldr r2, _08023E64 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08023E68 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
	adds r2, r6, #0
	adds r2, #0x90
	ldr r1, [r2]
	ldr r0, [r1, #0x1c]
	ldr r5, _08023E6C @ =0xFFFFCFFF
	ands r0, r5
	str r0, [r1, #0x1c]
	ldr r1, [r2]
	ldr r0, [r1, #0x1c]
	movs r3, #0x80
	lsls r3, r3, #6
	orrs r0, r3
	str r0, [r1, #0x1c]
	adds r2, #4
	ldr r1, [r2]
	ldr r0, [r1, #0x1c]
	ands r0, r5
	str r0, [r1, #0x1c]
	ldr r1, [r2]
	ldr r0, [r1, #0x1c]
	orrs r0, r3
	str r0, [r1, #0x1c]
	adds r4, #0x50
	ldrh r1, [r4]
	ldr r0, _08023E70 @ =0x0000FFFC
	ands r0, r1
	strh r0, [r4]
	adds r0, r6, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08023E3E
	ldr r0, _08023E74 @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _08023E3E
	ldr r0, [r6, #8]
	str r0, [r1]
	ldr r0, [r6, #0xc]
	str r0, [r1, #4]
_08023E3E:
	ldr r0, _08023E78 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08023E7C @ =sub_8023FC0
	str r0, [r1, #8]
	ldr r1, _08023E58 @ =gUnknown_030059E0
	ldr r0, _08023E80 @ =sub_8025318
	str r0, [r1]
	b _08023E88
	.align 2, 0
_08023E50: .4byte gUnknown_030053F0
_08023E54: .4byte gUnknown_030054F4
_08023E58: .4byte gUnknown_030059E0
_08023E5C: .4byte gUnknown_03005960
_08023E60: .4byte gMPlayInfo_BGM
_08023E64: .4byte gUnknown_03005424
_08023E68: .4byte 0x0000FF7F
_08023E6C: .4byte 0xFFFFCFFF
_08023E70: .4byte 0x0000FFFC
_08023E74: .4byte gUnknown_030056A4
_08023E78: .4byte gCurTask
_08023E7C: .4byte sub_8023FC0
_08023E80: .4byte sub_8025318
_08023E84:
	subs r5, #1
	str r5, [r1, #4]
_08023E88:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8023E90
sub_8023E90: @ 0x08023E90
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r4, _08023EB4 @ =gUnknown_030059E0
	adds r0, r4, #0
	adds r0, #0x90
	ldr r6, [r0]
	adds r0, #4
	ldr r0, [r0]
	mov r8, r0
	ldr r5, _08023EB8 @ =gUnknown_03005960
	ldr r3, [r4, #0xc]
	ldr r0, [r4, #0x20]
	adds r7, r4, #0
	cmp r0, #0
	bge _08023EC0
	ldr r2, _08023EBC @ =gUnknown_03005424
	b _08023F34
	.align 2, 0
_08023EB4: .4byte gUnknown_030059E0
_08023EB8: .4byte gUnknown_03005960
_08023EBC: .4byte gUnknown_03005424
_08023EC0:
	ldr r2, _08023ED8 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023EDC
	ldr r0, [r5, #4]
	subs r0, #0x50
	lsls r0, r0, #8
	cmp r3, r0
	bgt _08023EEA
	b _08023EF0
	.align 2, 0
_08023ED8: .4byte gUnknown_03005424
_08023EDC:
	ldr r0, [r5, #4]
	lsls r0, r0, #8
	ldr r1, _08023F24 @ =0x0000EFFF
	adds r0, r0, r1
	movs r1, #1
	cmp r3, r0
	bge _08023EEC
_08023EEA:
	movs r1, #0
_08023EEC:
	cmp r1, #0
	beq _08023F34
_08023EF0:
	ldr r5, _08023F28 @ =gCurTask
	ldr r0, [r5]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r1, #0x3c
	str r1, [r0, #4]
	ldr r0, [r7, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	str r0, [r7, #0x20]
	ldr r0, _08023F2C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08023F1A
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_8024B10
_08023F1A:
	ldr r1, [r5]
	ldr r0, _08023F30 @ =sub_8023D08
	str r0, [r1, #8]
	b _08023FB6
	.align 2, 0
_08023F24: .4byte 0x0000EFFF
_08023F28: .4byte gCurTask
_08023F2C: .4byte gUnknown_030054CC
_08023F30: .4byte sub_8023D08
_08023F34:
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08023F44
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08023F48
_08023F44:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08023F48:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r1, _08023F90 @ =gUnknown_0300544C
	ldrh r0, [r2]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023F6A
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08023F6A:
	ldrh r3, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08023F7A
	adds r3, r1, #0
_08023F7A:
	strh r3, [r4, #0x12]
	ldrh r1, [r2]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08023F94
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08023F9C
	.align 2, 0
_08023F90: .4byte gUnknown_0300544C
_08023F94:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08023F9C:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_802486C
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_8024B10
	adds r0, r4, #0
	mov r1, r8
	bl sub_8024F74
_08023FB6:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8023FC0
sub_8023FC0: @ 0x08023FC0
	push {r4, r5, r6, r7, lr}
	ldr r5, _08024014 @ =gUnknown_030059E0
	adds r0, r5, #0
	bl sub_802989C
	adds r0, r5, #0
	bl sub_80298DC
	adds r0, r5, #0
	bl sub_802A1C8
	adds r0, r5, #0
	bl sub_8029990
	ldr r0, _08024018 @ =gUnknown_030054FC
	movs r1, #0
	str r1, [r0]
	ldr r0, _0802401C @ =gUnknown_030054E0
	str r1, [r0]
	adds r0, r5, #0
	bl sub_802460C
	adds r0, r5, #0
	bl sub_800DF8C
	adds r0, r5, #0
	bl sub_8023878
	adds r0, r5, #0
	bl sub_8024228
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08024020
	ldr r1, [r5]
	adds r0, r5, #0
	bl _call_via_r1
	b _08024046
	.align 2, 0
_08024014: .4byte gUnknown_030059E0
_08024018: .4byte gUnknown_030054FC
_0802401C: .4byte gUnknown_030054E0
_08024020:
	ldr r0, _080240EC @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08024040
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0802403C
	ldr r0, _080240F0 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08024040
_0802403C:
	cmp r1, #0x1d
	bne _08024046
_08024040:
	adds r0, r5, #0
	bl sub_80232D0
_08024046:
	adds r4, r5, #0
	adds r4, #0x90
	ldr r1, [r4]
	adds r0, r5, #0
	bl sub_802486C
	ldr r1, [r4]
	adds r0, r5, #0
	bl sub_8024B10
	adds r0, r5, #0
	adds r0, #0x94
	ldr r1, [r0]
	adds r0, r5, #0
	bl sub_8024F74
	adds r0, r5, #0
	adds r0, #0x64
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r6, r0, #0
	cmp r1, #0x14
	beq _08024082
	ldrh r1, [r5, #0x2c]
	movs r2, #0x2c
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _08024082
	subs r0, r1, #1
	strh r0, [r5, #0x2c]
_08024082:
	adds r1, r5, #0
	adds r1, #0x36
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08024094
	subs r0, r2, #1
	strb r0, [r1]
_08024094:
	adds r0, r5, #0
	bl sub_8023748
	bl sub_8015790
	bl sub_80156D0
	ldr r2, [r5, #0x20]
	ldr r0, _080240F4 @ =0xFFFFF7FF
	ands r2, r0
	str r2, [r5, #0x20]
	ldr r1, _080240F8 @ =gUnknown_030054C0
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [r1]
	movs r3, #0
	strh r3, [r1, #4]
	ldr r1, _080240FC @ =gUnknown_03005498
	ldr r0, _08024100 @ =0x00009C40
	str r0, [r1]
	str r3, [r1, #4]
	movs r0, #0x80
	ands r2, r0
	cmp r2, #0
	bne _080240C8
	b _08024222
_080240C8:
	ldr r7, _08024104 @ =gUnknown_03005960
	ldr r0, _08024108 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0802410C @ =sub_8023E90
	str r0, [r1, #8]
	movs r0, #0x16
	strh r0, [r6]
	strh r3, [r5, #0x10]
	movs r0, #0x12
	ldrsh r1, [r5, r0]
	ldr r0, _08024110 @ =0xFFFFFC00
	cmp r1, r0
	bge _08024114
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r5, #0x12]
	b _0802411A
	.align 2, 0
_080240EC: .4byte gUnknown_030055B4
_080240F0: .4byte gUnknown_030054B0
_080240F4: .4byte 0xFFFFF7FF
_080240F8: .4byte gUnknown_030054C0
_080240FC: .4byte gUnknown_03005498
_08024100: .4byte 0x00009C40
_08024104: .4byte gUnknown_03005960
_08024108: .4byte gCurTask
_0802410C: .4byte sub_8023E90
_08024110: .4byte 0xFFFFFC00
_08024114:
	cmp r1, #0
	ble _0802411A
	strh r3, [r5, #0x12]
_0802411A:
	movs r1, #0
	movs r2, #0
	movs r0, #2
	strh r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0x37
	strb r1, [r0]
	ldr r0, [r5, #0x20]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	adds r1, #0x18
	ands r0, r1
	str r0, [r5, #0x20]
	str r2, [r5, #0x3c]
	adds r2, r7, #0
	adds r2, #0x50
	ldrh r0, [r2]
	movs r1, #3
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _08024200 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08024156
	ldr r0, _08024204 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r2, #1
	orrs r1, r2
	strh r1, [r0]
_08024156:
	ldr r2, [r4]
	ldr r0, [r2, #0x1c]
	ldr r1, _08024208 @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r4]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r0, r5, #0
	adds r0, #0x80
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r6, _0802420C @ =gMPlayTable
	ldr r1, [r6]
	ldr r4, _08024210 @ =gSongTable
	adds r0, r4, #0
	adds r0, #0xf8
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _080241A0
	ldr r1, _08024214 @ =gUnknown_080D5204
	ldr r0, _08024218 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStartOrContinue
_080241A0:
	ldr r0, [r6]
	adds r1, r4, #0
	adds r1, #0xe8
	ldr r2, [r0]
	ldr r0, [r1]
	cmp r2, r0
	bne _080241C2
	ldr r1, _08024214 @ =gUnknown_080D5204
	ldr r0, _08024218 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStartOrContinue
_080241C2:
	movs r0, #0x1f
	bl m4aSongNumStop
	adds r4, r5, #0
	adds r4, #0x85
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #2
	bne _080241DA
	movs r0, #0x78
	bl m4aSongNumStop
_080241DA:
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #1
	bne _080241E8
	movs r0, #0xe3
	bl m4aSongNumStop
_080241E8:
	adds r0, r5, #0
	adds r0, #0x86
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _0802421C
	movs r0, #0x9d
	bl m4aSongNumStart
	b _08024222
	.align 2, 0
_08024200: .4byte gUnknown_030054CC
_08024204: .4byte gUnknown_03005424
_08024208: .4byte 0xFFFFCFFF
_0802420C: .4byte gMPlayTable
_08024210: .4byte gSongTable
_08024214: .4byte gUnknown_080D5204
_08024218: .4byte gUnknown_030055B4
_0802421C:
	movs r0, #0x77
	bl m4aSongNumStart
_08024222:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8024228
sub_8024228: @ 0x08024228
	push {lr}
	mov ip, r0
	mov r1, ip
	adds r1, #0x6d
	ldrb r0, [r1]
	cmp r0, #0
	bne _08024238
	b _080245EE
_08024238:
	subs r0, #1
	cmp r0, #0x1b
	bls _08024240
	b _080245EE
_08024240:
	lsls r0, r0, #2
	ldr r1, _0802424C @ =_08024250
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0802424C: .4byte _08024250
_08024250: @ jump table
	.4byte _080242C0 @ case 0
	.4byte _080242D0 @ case 1
	.4byte _080242E0 @ case 2
	.4byte _08024300 @ case 3
	.4byte _0802434C @ case 4
	.4byte _08024330 @ case 5
	.4byte _08024320 @ case 6
	.4byte _08024368 @ case 7
	.4byte _08024378 @ case 8
	.4byte _08024388 @ case 9
	.4byte _08024578 @ case 10
	.4byte _08024588 @ case 11
	.4byte _08024598 @ case 12
	.4byte _080243E8 @ case 13
	.4byte _08024414 @ case 14
	.4byte _08024440 @ case 15
	.4byte _0802445C @ case 16
	.4byte _08024478 @ case 17
	.4byte _080244B0 @ case 18
	.4byte _080244E8 @ case 19
	.4byte _08024520 @ case 20
	.4byte _08024558 @ case 21
	.4byte _080245A8 @ case 22
	.4byte _08024568 @ case 23
	.4byte _080245B8 @ case 24
	.4byte _080245D8 @ case 25
	.4byte _080245E8 @ case 26
	.4byte _080245C8 @ case 27
_080242C0:
	ldr r1, _080242C8 @ =gUnknown_030059E0
	ldr r0, _080242CC @ =sub_8025318
	b _080245EC
	.align 2, 0
_080242C8: .4byte gUnknown_030059E0
_080242CC: .4byte sub_8025318
_080242D0:
	ldr r1, _080242D8 @ =gUnknown_030059E0
	ldr r0, _080242DC @ =sub_8025A0C
	b _080245EC
	.align 2, 0
_080242D8: .4byte gUnknown_030059E0
_080242DC: .4byte sub_8025A0C
_080242E0:
	mov r1, ip
	ldr r0, [r1, #0x20]
	ldr r1, _080242F4 @ =0xFF9FFFFF
	ands r0, r1
	mov r3, ip
	str r0, [r3, #0x20]
	ldr r1, _080242F8 @ =gUnknown_030059E0
	ldr r0, _080242FC @ =sub_8025D00
	b _080245EC
	.align 2, 0
_080242F4: .4byte 0xFF9FFFFF
_080242F8: .4byte gUnknown_030059E0
_080242FC: .4byte sub_8025D00
_08024300:
	mov r1, ip
	ldr r0, [r1, #0x20]
	ldr r1, _08024314 @ =0xFF9FFFFF
	ands r0, r1
	mov r3, ip
	str r0, [r3, #0x20]
	ldr r1, _08024318 @ =gUnknown_030059E0
	ldr r0, _0802431C @ =sub_8025F84
	b _080245EC
	.align 2, 0
_08024314: .4byte 0xFF9FFFFF
_08024318: .4byte gUnknown_030059E0
_0802431C: .4byte sub_8025F84
_08024320:
	ldr r1, _08024328 @ =gUnknown_030059E0
	ldr r0, _0802432C @ =sub_8028D74
	b _080245EC
	.align 2, 0
_08024328: .4byte gUnknown_030059E0
_0802432C: .4byte sub_8028D74
_08024330:
	mov r1, ip
	ldr r0, [r1, #0x20]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	mov r3, ip
	str r0, [r3, #0x20]
	ldr r1, _08024344 @ =gUnknown_030059E0
	ldr r0, _08024348 @ =sub_8026060
	b _080245EC
	.align 2, 0
_08024344: .4byte gUnknown_030059E0
_08024348: .4byte sub_8026060
_0802434C:
	mov r1, ip
	ldr r0, [r1, #0x20]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	mov r3, ip
	str r0, [r3, #0x20]
	ldr r1, _08024360 @ =gUnknown_030059E0
	ldr r0, _08024364 @ =sub_802611C
	b _080245EC
	.align 2, 0
_08024360: .4byte gUnknown_030059E0
_08024364: .4byte sub_802611C
_08024368:
	ldr r1, _08024370 @ =gUnknown_030059E0
	ldr r0, _08024374 @ =sub_801225C
	b _080245EC
	.align 2, 0
_08024370: .4byte gUnknown_030059E0
_08024374: .4byte sub_801225C
_08024378:
	ldr r1, _08024380 @ =gUnknown_030059E0
	ldr r0, _08024384 @ =sub_8027250
	b _080245EC
	.align 2, 0
_08024380: .4byte gUnknown_030059E0
_08024384: .4byte sub_8027250
_08024388:
	ldr r0, _080243C4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	bne _0802439E
	ldr r0, _080243C8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
_0802439E:
	mov r0, ip
	ldr r1, [r0, #0x20]
	ldr r0, _080243CC @ =0x3000200A
	ands r0, r1
	cmp r0, #0
	beq _080243D0
	movs r0, #0x82
	lsls r0, r0, #0x14
	orrs r1, r0
	mov r3, ip
	str r1, [r3, #0x20]
	mov r0, ip
	adds r0, #0x5c
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _080245EE
	.align 2, 0
_080243C4: .4byte gUnknown_030054CC
_080243C8: .4byte gUnknown_03005424
_080243CC: .4byte 0x3000200A
_080243D0:
	movs r0, #0x80
	lsls r0, r0, #0x14
	orrs r1, r0
	mov r0, ip
	str r1, [r0, #0x20]
	ldr r1, _080243E0 @ =gUnknown_030059E0
	ldr r0, _080243E4 @ =sub_80273D0
	b _080245EC
	.align 2, 0
_080243E0: .4byte gUnknown_030059E0
_080243E4: .4byte sub_80273D0
_080243E8:
	ldr r0, _08024408 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08024400
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
_08024400:
	ldr r1, _0802440C @ =gUnknown_030059E0
	ldr r0, _08024410 @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024408: .4byte gUnknown_03005424
_0802440C: .4byte gUnknown_030059E0
_08024410: .4byte sub_8028E24
_08024414:
	ldr r0, _08024434 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0802442C
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r2]
_0802442C:
	ldr r1, _08024438 @ =gUnknown_030059E0
	ldr r0, _0802443C @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024434: .4byte gUnknown_03005424
_08024438: .4byte gUnknown_030059E0
_0802443C: .4byte sub_8028E24
_08024440:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x20
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _08024454 @ =gUnknown_030059E0
	ldr r0, _08024458 @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024454: .4byte gUnknown_030059E0
_08024458: .4byte sub_8028E24
_0802445C:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x30
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _08024470 @ =gUnknown_030059E0
	ldr r0, _08024474 @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024470: .4byte gUnknown_030059E0
_08024474: .4byte sub_8028E24
_08024478:
	ldr r0, _08024490 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08024494
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x60
	b _0802449C
	.align 2, 0
_08024490: .4byte gUnknown_03005424
_08024494:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x40
_0802449C:
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _080244A8 @ =gUnknown_030059E0
	ldr r0, _080244AC @ =sub_8028E24
	b _080245EC
	.align 2, 0
_080244A8: .4byte gUnknown_030059E0
_080244AC: .4byte sub_8028E24
_080244B0:
	ldr r0, _080244C8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080244CC
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x70
	b _080244D4
	.align 2, 0
_080244C8: .4byte gUnknown_03005424
_080244CC:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x50
_080244D4:
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _080244E0 @ =gUnknown_030059E0
	ldr r0, _080244E4 @ =sub_8028E24
	b _080245EC
	.align 2, 0
_080244E0: .4byte gUnknown_030059E0
_080244E4: .4byte sub_8028E24
_080244E8:
	ldr r0, _08024500 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08024504
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x40
	b _0802450C
	.align 2, 0
_08024500: .4byte gUnknown_03005424
_08024504:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x60
_0802450C:
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _08024518 @ =gUnknown_030059E0
	ldr r0, _0802451C @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024518: .4byte gUnknown_030059E0
_0802451C: .4byte sub_8028E24
_08024520:
	ldr r0, _08024538 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802453C
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x50
	b _08024544
	.align 2, 0
_08024538: .4byte gUnknown_03005424
_0802453C:
	mov r2, ip
	adds r2, #0x6e
	ldrb r1, [r2]
	movs r0, #0x70
_08024544:
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _08024550 @ =gUnknown_030059E0
	ldr r0, _08024554 @ =sub_8028E24
	b _080245EC
	.align 2, 0
_08024550: .4byte gUnknown_030059E0
_08024554: .4byte sub_8028E24
_08024558:
	ldr r1, _08024560 @ =gUnknown_030059E0
	ldr r0, _08024564 @ =sub_8029158
	b _080245EC
	.align 2, 0
_08024560: .4byte gUnknown_030059E0
_08024564: .4byte sub_8029158
_08024568:
	ldr r1, _08024570 @ =gUnknown_030059E0
	ldr r0, _08024574 @ =sub_802A300
	b _080245EC
	.align 2, 0
_08024570: .4byte gUnknown_030059E0
_08024574: .4byte sub_802A300
_08024578:
	ldr r1, _08024580 @ =gUnknown_030059E0
	ldr r0, _08024584 @ =sub_8026764
	b _080245EC
	.align 2, 0
_08024580: .4byte gUnknown_030059E0
_08024584: .4byte sub_8026764
_08024588:
	ldr r1, _08024590 @ =gUnknown_030059E0
	ldr r0, _08024594 @ =sub_80269C0
	b _080245EC
	.align 2, 0
_08024590: .4byte gUnknown_030059E0
_08024594: .4byte sub_80269C0
_08024598:
	ldr r1, _080245A0 @ =gUnknown_030059E0
	ldr r0, _080245A4 @ =sub_8026A4C
	b _080245EC
	.align 2, 0
_080245A0: .4byte gUnknown_030059E0
_080245A4: .4byte sub_8026A4C
_080245A8:
	ldr r1, _080245B0 @ =gUnknown_030059E0
	ldr r0, _080245B4 @ =sub_802A258
	b _080245EC
	.align 2, 0
_080245B0: .4byte gUnknown_030059E0
_080245B4: .4byte sub_802A258
_080245B8:
	ldr r1, _080245C0 @ =gUnknown_030059E0
	ldr r0, _080245C4 @ =sub_8026E24
	b _080245EC
	.align 2, 0
_080245C0: .4byte gUnknown_030059E0
_080245C4: .4byte sub_8026E24
_080245C8:
	ldr r1, _080245D0 @ =gUnknown_030059E0
	ldr r0, _080245D4 @ =sub_8026F10
	b _080245EC
	.align 2, 0
_080245D0: .4byte gUnknown_030059E0
_080245D4: .4byte sub_8026F10
_080245D8:
	ldr r1, _080245E0 @ =gUnknown_030059E0
	ldr r0, _080245E4 @ =sub_8026FC8
	b _080245EC
	.align 2, 0
_080245E0: .4byte gUnknown_030059E0
_080245E4: .4byte sub_8026FC8
_080245E8:
	ldr r1, _08024604 @ =gUnknown_030059E0
	ldr r0, _08024608 @ =sub_8027114
_080245EC:
	str r0, [r1]
_080245EE:
	mov r3, ip
	adds r3, #0x6d
	ldrb r0, [r3]
	mov r1, ip
	adds r1, #0x6f
	movs r2, #0
	strb r0, [r1]
	strb r2, [r3]
	pop {r0}
	bx r0
	.align 2, 0
_08024604: .4byte gUnknown_030059E0
_08024608: .4byte sub_8027114

	thumb_func_start sub_802460C
sub_802460C: @ 0x0802460C
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r0, _0802463C @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #2
	bls _08024648
	ldr r0, _08024640 @ =0x04000128
	ldr r1, [r0]
	lsls r1, r1, #0x1a
	ldr r0, _08024644 @ =gUnknown_03005960
	adds r0, #0x66
	lsrs r1, r1, #0x1e
	ldrb r0, [r0]
	cmp r1, r0
	beq _08024648
	adds r1, r3, #0
	adds r1, #0x5c
	movs r0, #0
	strh r0, [r1]
	movs r6, #0
	adds r5, r1, #0
	b _080246BE
	.align 2, 0
_0802463C: .4byte gUnknown_030054CC
_08024640: .4byte 0x04000128
_08024644: .4byte gUnknown_03005960
_08024648:
	adds r0, r3, #0
	adds r0, #0x5c
	ldrh r6, [r0]
	ldr r1, [r3, #0x20]
	movs r2, #0x80
	lsls r2, r2, #0xe
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0
	bne _080246BE
	ldr r0, _080246D0 @ =gInput
	ldrh r4, [r0]
	strh r4, [r5]
	ldrb r0, [r7]
	cmp r0, #2
	bls _080246BE
	movs r0, #0x37
	adds r0, r0, r3
	mov ip, r0
	ldrb r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080246BE
	movs r0, #0xf0
	ands r0, r4
	lsrs r2, r0, #4
	ldr r0, _080246D4 @ =gUnknown_03005590
	ldr r1, [r0]
	ldrh r0, [r3, #0x32]
	adds r1, r0, r1
	movs r0, #3
	ands r1, r0
	cmp r1, #0
	bne _08024690
	movs r1, #1
_08024690:
	lsls r2, r1
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x1c
	lsrs r0, r0, #0x18
	orrs r0, r1
	lsls r0, r0, #0x1c
	lsrs r2, r0, #0x18
	ldr r0, _080246D8 @ =0x0000FF0F
	ands r0, r4
	orrs r0, r2
	strh r0, [r5]
	ldrh r0, [r3, #0x32]
	subs r0, #1
	strh r0, [r3, #0x32]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080246BE
	mov r0, ip
	ldrb r1, [r0]
	movs r0, #0xbf
	ands r0, r1
	mov r1, ip
	strb r0, [r1]
_080246BE:
	ldrh r0, [r5]
	eors r6, r0
	ands r6, r0
	adds r0, r3, #0
	adds r0, #0x5e
	strh r6, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080246D0: .4byte gInput
_080246D4: .4byte gUnknown_03005590
_080246D8: .4byte 0x0000FF0F

	thumb_func_start sub_80246DC
sub_80246DC: @ 0x080246DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	adds r0, #0x90
	ldr r0, [r0]
	adds r6, r0, #0
	adds r6, #0xc
	adds r0, r4, #0
	adds r0, #0x64
	ldrh r5, [r0]
	mov sb, r5
	movs r0, #0x68
	adds r0, r0, r4
	mov r8, r0
	ldrh r3, [r0]
	movs r1, #0x6a
	adds r1, r1, r4
	mov ip, r1
	ldrh r2, [r1]
	mov sl, r2
	ldr r1, _0802476C @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r7, [r0]
	subs r0, r3, r7
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r0, r5, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080247CC
	cmp r2, #0
	bne _08024770
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08024770
	adds r0, r3, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _08024770
	movs r0, #1
	mov r1, ip
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	b _0802485C
	.align 2, 0
_0802476C: .4byte gUnknown_080D672C
_08024770:
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0802485C
	adds r5, r4, #0
	adds r5, #0x6a
	ldrh r0, [r5]
	cmp r0, #1
	bne _0802485C
	adds r0, r3, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0802485C
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	ldr r1, [r4, #8]
	asrs r1, r1, #8
	adds r2, r4, #0
	adds r2, #0x38
	ldrb r2, [r2]
	movs r3, #0
	str r3, [sp]
	ldr r3, _080247C4 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801E6D4
	adds r1, r0, #0
	ldr r0, _080247C8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0802485C
	cmp r1, #0x20
	bgt _0802485C
	movs r0, #2
	strh r0, [r5]
	b _0802485C
	.align 2, 0
_080247C4: .4byte sub_801EE64
_080247C8: .4byte gUnknown_030054CC
_080247CC:
	cmp r5, #0x26
	bne _080247EA
	cmp r3, #0x34
	bne _0802485C
	cmp r2, #0
	bne _080247E4
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0802485C
	movs r0, #1
	b _08024858
_080247E4:
	cmp r2, #1
	bne _0802485C
	b _0802484A
_080247EA:
	cmp r5, #0x27
	bne _0802480C
	cmp r3, #0x35
	bne _0802485C
	cmp r2, #0
	bne _0802485C
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802485C
	adds r0, r7, #0
	adds r0, #0x34
	mov r1, r8
	strh r0, [r1]
	b _08024856
_0802480C:
	cmp r5, #0x25
	bne _0802482A
	cmp r3, #0x41
	bne _0802485C
	cmp r2, #0
	bne _08024824
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0802485C
	movs r0, #1
	b _08024858
_08024824:
	cmp r2, #1
	bne _0802485C
	b _0802484A
_0802482A:
	mov r0, sb
	cmp r0, #0x39
	bne _0802485C
	cmp r3, #0x42
	bne _0802485C
	cmp r2, #0
	bne _08024844
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0802485C
	movs r0, #1
	b _08024858
_08024844:
	mov r0, sl
	cmp r0, #1
	bne _0802485C
_0802484A:
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802485C
_08024856:
	movs r0, #2
_08024858:
	mov r1, ip
	strh r0, [r1]
_0802485C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802486C
sub_802486C: @ 0x0802486C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	adds r6, r1, #0
	movs r0, #0xc
	adds r0, r0, r6
	mov ip, r0
	adds r2, r3, #0
	adds r2, #0x64
	movs r4, #0
	ldrsh r1, [r2, r4]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _080248E0
	adds r0, r3, #0
	adds r0, #0x66
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r1, r0
	beq _080248E0
	ldr r7, _08024908 @ =gUnknown_080D6736
	adds r0, r1, #0
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrh r4, [r0]
	adds r5, r3, #0
	adds r5, #0x68
	strh r4, [r5]
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0x4f
	bgt _080248C6
	ldr r0, _0802490C @ =gUnknown_080D672C
	adds r1, r3, #0
	adds r1, #0x85
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, r4, r0
	strh r0, [r5]
_080248C6:
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #2
	adds r1, r7, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r2, r3, #0
	adds r2, #0x6a
	strh r0, [r2]
	adds r1, r6, #0
	adds r1, #0x2e
	movs r0, #0x10
	strb r0, [r1]
_080248E0:
	adds r1, r3, #0
	adds r1, #0x64
	ldrh r0, [r1]
	subs r0, #9
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r1
	adds r4, r3, #0
	adds r4, #0x68
	adds r2, r3, #0
	adds r2, #0x6a
	cmp r0, #0x34
	bls _080248FC
	b _08024A96
_080248FC:
	lsls r0, r0, #2
	ldr r1, _08024910 @ =_08024914
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08024908: .4byte gUnknown_080D6736
_0802490C: .4byte gUnknown_080D672C
_08024910: .4byte _08024914
_08024914: @ jump table
	.4byte _080249E8 @ case 0
	.4byte _08024A96 @ case 1
	.4byte _08024A96 @ case 2
	.4byte _08024A96 @ case 3
	.4byte _08024A96 @ case 4
	.4byte _08024A96 @ case 5
	.4byte _08024A96 @ case 6
	.4byte _08024A3A @ case 7
	.4byte _08024A96 @ case 8
	.4byte _08024A96 @ case 9
	.4byte _08024A96 @ case 10
	.4byte _08024A96 @ case 11
	.4byte _08024A96 @ case 12
	.4byte _08024A96 @ case 13
	.4byte _08024A96 @ case 14
	.4byte _08024A96 @ case 15
	.4byte _08024A96 @ case 16
	.4byte _08024A96 @ case 17
	.4byte _08024A96 @ case 18
	.4byte _08024A96 @ case 19
	.4byte _08024A96 @ case 20
	.4byte _08024A96 @ case 21
	.4byte _08024A96 @ case 22
	.4byte _08024A96 @ case 23
	.4byte _08024A96 @ case 24
	.4byte _08024A96 @ case 25
	.4byte _08024A96 @ case 26
	.4byte _08024A96 @ case 27
	.4byte _08024A96 @ case 28
	.4byte _08024A96 @ case 29
	.4byte _08024A96 @ case 30
	.4byte _08024A96 @ case 31
	.4byte _08024A96 @ case 32
	.4byte _08024A96 @ case 33
	.4byte _08024A96 @ case 34
	.4byte _08024A96 @ case 35
	.4byte _08024A96 @ case 36
	.4byte _08024A96 @ case 37
	.4byte _08024A96 @ case 38
	.4byte _08024A96 @ case 39
	.4byte _08024A96 @ case 40
	.4byte _08024A96 @ case 41
	.4byte _08024A70 @ case 42
	.4byte _08024A70 @ case 43
	.4byte _08024A76 @ case 44
	.4byte _08024A76 @ case 45
	.4byte _08024A96 @ case 46
	.4byte _08024A96 @ case 47
	.4byte _08024A96 @ case 48
	.4byte _08024A96 @ case 49
	.4byte _08024A10 @ case 50
	.4byte _08024A10 @ case 51
	.4byte _08024A10 @ case 52
_080249E8:
	ldr r1, _08024A2C @ =gUnknown_080D672C
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #9
	adds r1, r3, #0
	adds r1, #0x68
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x54
	ldrh r0, [r0]
	adds r2, r3, #0
	adds r2, #0x6a
	strh r0, [r2]
	adds r4, r1, #0
_08024A10:
	movs r1, #0x14
	ldrsh r0, [r3, r1]
	asrs r1, r0, #5
	asrs r0, r0, #6
	adds r0, r1, r0
	cmp r0, #0
	bge _08024A20
	rsbs r0, r0, #0
_08024A20:
	cmp r0, #7
	ble _08024A30
	cmp r0, #0x80
	ble _08024A32
	movs r0, #0x80
	b _08024A32
	.align 2, 0
_08024A2C: .4byte gUnknown_080D672C
_08024A30:
	movs r0, #8
_08024A32:
	mov r1, ip
	adds r1, #0x22
	strb r0, [r1]
	b _08024A96
_08024A3A:
	adds r0, r3, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r3, #0
	adds r4, #0x68
	adds r2, r3, #0
	adds r2, #0x6a
	cmp r0, #1
	bne _08024A96
	movs r4, #0x14
	ldrsh r0, [r3, r4]
	asrs r1, r0, #5
	asrs r0, r0, #6
	adds r0, r1, r0
	cmp r0, #0
	bge _08024A60
	rsbs r0, r0, #0
_08024A60:
	cmp r0, #7
	ble _08024A6C
	cmp r0, #0x80
	ble _08024A88
	movs r0, #0x80
	b _08024A88
_08024A6C:
	movs r0, #8
	b _08024A88
_08024A70:
	movs r1, #0x12
	ldrsh r0, [r3, r1]
	b _08024A7A
_08024A76:
	movs r4, #0x14
	ldrsh r0, [r3, r4]
_08024A7A:
	cmp r0, #0
	bge _08024A80
	rsbs r0, r0, #0
_08024A80:
	asrs r1, r0, #8
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, #8
_08024A88:
	mov r1, ip
	adds r1, #0x22
	strb r0, [r1]
	adds r4, r3, #0
	adds r4, #0x68
	adds r2, r3, #0
	adds r2, #0x6a
_08024A96:
	ldr r0, _08024B0C @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #2
	bls _08024AA8
	adds r1, r3, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
_08024AA8:
	adds r0, r3, #0
	adds r0, #0x6c
	ldrb r1, [r0]
	adds r6, r0, #0
	mov r5, ip
	adds r5, #0x20
	cmp r1, #0
	bne _08024ACA
	mov r1, ip
	ldrh r0, [r1, #0xa]
	ldrh r1, [r4]
	cmp r0, r1
	bne _08024ACA
	ldrb r0, [r5]
	ldrh r1, [r2]
	cmp r0, r1
	beq _08024AF6
_08024ACA:
	movs r0, #0
	strb r0, [r6]
	ldrh r0, [r4]
	mov r4, ip
	strh r0, [r4, #0xa]
	ldrh r0, [r2]
	strb r0, [r5]
	mov r1, ip
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	str r0, [r4, #0x30]
	ldrb r0, [r7]
	cmp r0, #2
	bls _08024AF6
	adds r1, r3, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
_08024AF6:
	mov r0, r8
	ldrh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x66
	strh r1, [r0]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08024B0C: .4byte gUnknown_030054CC

	thumb_func_start sub_8024B10
sub_8024B10: @ 0x08024B10
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r5, #0xc
	adds r6, r1, #0
	ldr r0, _08024BBC @ =gUnknown_03005960
	ldrh r3, [r0]
	ldrh r4, [r0, #4]
	movs r2, #0
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _08024B3A
	ldrh r1, [r5, #0x1e]
	ldr r0, _08024BC0 @ =0x0000FFFF
	cmp r1, r0
	bne _08024B3C
_08024B3A:
	movs r2, #1
_08024B3C:
	mov sb, r2
	ldr r2, [r7, #8]
	asrs r2, r2, #8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	subs r2, r2, r0
	strh r2, [r5, #0x16]
	ldr r1, [r7, #0xc]
	asrs r1, r1, #8
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	strh r1, [r5, #0x18]
	strh r2, [r6, #6]
	strh r1, [r6, #8]
	adds r0, r7, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #9
	beq _08024B84
	cmp r0, #0x29
	beq _08024B84
	cmp r0, #0x3e
	beq _08024B84
	cmp r0, #0x3f
	beq _08024B84
	cmp r0, #0x57
	bne _08024C68
	adds r0, r7, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08024C68
_08024B84:
	adds r0, r7, #0
	adds r0, #0x24
	ldrb r0, [r0]
	lsls r0, r0, #2
	strh r0, [r6]
	ldr r1, [r5, #0x10]
	ldr r0, _08024BC4 @ =0xFFFFF3FF
	ands r1, r0
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r1, r0
	adds r0, r7, #0
	adds r0, #0x60
	ldrb r0, [r0]
	movs r2, #0x20
	orrs r0, r2
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	orrs r1, r0
	str r1, [r5, #0x10]
	ldr r0, [r7, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08024BC8
	movs r0, #0xff
	lsls r0, r0, #8
	b _08024BCC
	.align 2, 0
_08024BBC: .4byte gUnknown_03005960
_08024BC0: .4byte 0x0000FFFF
_08024BC4: .4byte 0xFFFFF3FF
_08024BC8:
	movs r0, #0x80
	lsls r0, r0, #1
_08024BCC:
	strh r0, [r6, #2]
	ldr r2, _08024C14 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r3, #0x80
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08024BE2
	ldrh r0, [r6, #2]
	rsbs r0, r0, #0
	strh r0, [r6, #2]
_08024BE2:
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bge _08024BF0
	ldrh r0, [r6, #6]
	subs r0, #1
	strh r0, [r6, #6]
_08024BF0:
	ldrh r1, [r2]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08024C20
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #4]
	ldrh r1, [r6]
	adds r1, r1, r0
	ldr r2, _08024C18 @ =0xFFFFFF00
	adds r0, r2, #0
	subs r0, r0, r1
	ldr r1, _08024C1C @ =0x000003FF
	ands r0, r1
	strh r0, [r6]
	b _08024C26
	.align 2, 0
_08024C14: .4byte gUnknown_03005424
_08024C18: .4byte 0xFFFFFF00
_08024C1C: .4byte 0x000003FF
_08024C20:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #4]
_08024C26:
	movs r3, #2
	ldrsh r1, [r6, r3]
	adds r0, r7, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r1, r0, r1
	asrs r1, r1, #8
	movs r3, #4
	ldrsh r2, [r6, r3]
	adds r0, r7, #0
	adds r0, #0x82
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #8
	strh r1, [r6, #2]
	strh r0, [r6, #4]
	adds r0, r5, #0
	bl sub_8004558
	ldr r0, _08024C64 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08024D02
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	b _08024CC2
	.align 2, 0
_08024C64: .4byte gUnknown_030054CC
_08024C68:
	movs r0, #0
	strh r0, [r6]
	ldr r2, [r5, #0x10]
	subs r0, #0x40
	ands r2, r0
	str r2, [r5, #0x10]
	ldr r0, [r7, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08024C88
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r2, r0
	str r2, [r5, #0x10]
	b _08024C94
_08024C88:
	ldr r0, _08024CAC @ =0xFFFFFBFF
	ands r2, r0
	str r2, [r5, #0x10]
	ldrh r0, [r5, #0x16]
	adds r0, #1
	strh r0, [r5, #0x16]
_08024C94:
	ldr r0, _08024CB0 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08024CB4
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	b _08024CBA
	.align 2, 0
_08024CAC: .4byte 0xFFFFFBFF
_08024CB0: .4byte gUnknown_03005424
_08024CB4:
	ldr r0, [r5, #0x10]
	ldr r1, _08024D9C @ =0xFFFFF7FF
	ands r0, r1
_08024CBA:
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
_08024CC2:
	ldr r0, _08024DA0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08024D02
	ldr r1, [r7, #0x20]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08024CF2
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r1, r0
	cmp r1, #0
	bne _08024CF8
	movs r1, #0x2c
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _08024CF2
	ldr r0, _08024DA4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08024CF8
_08024CF2:
	adds r0, r5, #0
	bl sub_80051E8
_08024CF8:
	ldr r0, _08024DA0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08024D02
	b _08024F5C
_08024D02:
	ldr r4, _08024DA8 @ =gMultiSioSend
	ldr r2, _08024DAC @ =gUnknown_030055A0
	ldr r0, _08024DB0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov ip, r1
	movs r0, #0xa0
	lsls r0, r0, #7
	strh r0, [r4]
	ldr r0, [r7, #8]
	adds r1, r7, #0
	adds r1, #0x7c
	asrs r0, r0, #8
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r4, #2]
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	strh r0, [r4, #4]
	ldrh r3, [r5, #0xa]
	strh r3, [r4, #6]
	adds r0, r7, #0
	adds r0, #0x37
	ldrb r0, [r0]
	strb r0, [r4, #0xa]
	ldr r0, _08024DA0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	mov r8, r2
	cmp r0, #5
	bne _08024D6C
	ldr r1, _08024DB4 @ =gUnknown_080D672C
	adds r0, r7, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	subs r1, r3, r1
	ldr r0, _08024DB8 @ =gUnknown_030053F0
	ldrh r0, [r0]
	lsls r0, r0, #8
	orrs r1, r0
	strh r1, [r4, #6]
_08024D6C:
	adds r1, r5, #0
	adds r1, #0x20
	ldrb r0, [r7, #0x17]
	lsls r0, r0, #4
	ldrb r1, [r1]
	orrs r0, r1
	strb r0, [r4, #0xb]
	adds r0, r5, #0
	adds r0, #0x22
	ldrb r0, [r0]
	strb r0, [r4, #0xc]
	ldrh r0, [r6]
	lsrs r0, r0, #2
	strb r0, [r4, #0xd]
	ldr r0, [r5, #0x10]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08024DBC
	ldrh r0, [r4, #8]
	movs r1, #1
	orrs r0, r1
	b _08024DC2
	.align 2, 0
_08024D9C: .4byte 0xFFFFF7FF
_08024DA0: .4byte gUnknown_030054CC
_08024DA4: .4byte gUnknown_03005590
_08024DA8: .4byte gMultiSioSend
_08024DAC: .4byte gUnknown_030055A0
_08024DB0: .4byte 0x04000128
_08024DB4: .4byte gUnknown_080D672C
_08024DB8: .4byte gUnknown_030053F0
_08024DBC:
	ldrh r1, [r4, #8]
	ldr r0, _08024DD8 @ =0x0000FFFE
	ands r0, r1
_08024DC2:
	strh r0, [r4, #8]
	ldr r1, [r7, #0x20]
	movs r0, #1
	ands r0, r1
	adds r2, r1, #0
	cmp r0, #0
	bne _08024DDC
	ldrh r1, [r4, #8]
	movs r0, #2
	orrs r0, r1
	b _08024DE2
	.align 2, 0
_08024DD8: .4byte 0x0000FFFE
_08024DDC:
	ldrh r1, [r4, #8]
	ldr r0, _08024DF8 @ =0x0000FFFD
	ands r0, r1
_08024DE2:
	strh r0, [r4, #8]
	ldr r0, _08024DFC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08024E00
	ldrh r1, [r4, #8]
	movs r0, #8
	orrs r0, r1
	b _08024E06
	.align 2, 0
_08024DF8: .4byte 0x0000FFFD
_08024DFC: .4byte gUnknown_03005424
_08024E00:
	ldrh r1, [r4, #8]
	ldr r0, _08024E38 @ =0x0000FFF7
	ands r0, r1
_08024E06:
	strh r0, [r4, #8]
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	bne _08024E2E
	mov r3, ip
	ldr r0, [r3, #0x5c]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08024E2E
	movs r0, #0x80
	lsls r0, r0, #0x17
	ands r0, r2
	cmp r0, #0
	bne _08024E2E
	movs r1, #0x2c
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _08024E3C
_08024E2E:
	ldrh r1, [r4, #8]
	movs r0, #4
	orrs r0, r1
	b _08024E42
	.align 2, 0
_08024E38: .4byte 0x0000FFF7
_08024E3C:
	ldrh r1, [r4, #8]
	ldr r0, _08024E5C @ =0x0000FFFB
	ands r0, r1
_08024E42:
	strh r0, [r4, #8]
	mov r3, ip
	ldr r0, [r3, #0x5c]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08024E60
	ldrh r1, [r4, #8]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	b _08024E66
	.align 2, 0
_08024E5C: .4byte 0x0000FFFB
_08024E60:
	ldrh r1, [r4, #8]
	ldr r0, _08024E7C @ =0x0000FEFF
	ands r0, r1
_08024E66:
	strh r0, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r0, r2
	cmp r0, #0
	beq _08024E80
	ldrh r1, [r4, #8]
	movs r0, #0x40
	orrs r0, r1
	b _08024E86
	.align 2, 0
_08024E7C: .4byte 0x0000FEFF
_08024E80:
	ldrh r1, [r4, #8]
	ldr r0, _08024EB8 @ =0x0000FFBF
	ands r0, r1
_08024E86:
	strh r0, [r4, #8]
	ldrh r0, [r4, #8]
	ldr r2, _08024EBC @ =0x0000FFCF
	ands r2, r0
	strh r2, [r4, #8]
	ldr r3, _08024EC0 @ =gUnknown_030059E0
	adds r0, r3, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0xc0
	lsls r1, r1, #6
	ands r0, r1
	lsrs r1, r0, #8
	orrs r1, r2
	strh r1, [r4, #8]
	adds r0, r7, #0
	adds r0, #0x38
	ldrb r0, [r0]
	cmp r0, #0
	beq _08024EC4
	movs r0, #0x80
	orrs r1, r0
	b _08024EC8
	.align 2, 0
_08024EB8: .4byte 0x0000FFBF
_08024EBC: .4byte 0x0000FFCF
_08024EC0: .4byte gUnknown_030059E0
_08024EC4:
	ldr r0, _08024EDC @ =0x0000FF7F
	ands r1, r0
_08024EC8:
	strh r1, [r4, #8]
	mov r0, sb
	cmp r0, #0
	beq _08024EE0
	ldrh r1, [r4, #8]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r2, #0
	orrs r0, r1
	b _08024EE6
	.align 2, 0
_08024EDC: .4byte 0x0000FF7F
_08024EE0:
	ldrh r1, [r4, #8]
	ldr r0, _08024F68 @ =0x0000F7FF
	ands r0, r1
_08024EE6:
	strh r0, [r4, #8]
	ldr r6, _08024F6C @ =0x04000128
	ldr r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	mov r2, ip
	adds r2, #0x64
	strb r0, [r2]
	ldr r0, [r3, #0x20]
	movs r1, #8
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	beq _08024F4C
	movs r2, #0
	ldr r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #0
	beq _08024F2C
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	beq _08024F4C
_08024F16:
	lsls r0, r2, #2
	add r0, r8
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r0, [r3, #0x3c]
	cmp r0, r1
	bne _08024F2C
	strb r2, [r5]
_08024F2C:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bhi _08024F4C
	ldr r0, _08024F6C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, r2
	beq _08024F2C
	lsls r0, r2, #2
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bne _08024F16
_08024F4C:
	ldrh r0, [r4, #8]
	ldr r1, _08024F70 @ =0x0000F9FF
	ands r1, r0
	strh r1, [r4, #8]
	ldrb r0, [r5]
	lsls r0, r0, #9
	orrs r0, r1
	strh r0, [r4, #8]
_08024F5C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08024F68: .4byte 0x0000F7FF
_08024F6C: .4byte 0x04000128
_08024F70: .4byte 0x0000F9FF

	thumb_func_start sub_8024F74
sub_8024F74: @ 0x08024F74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r6, #0xc
	adds r4, r1, #0
	ldr r0, _08024FB4 @ =gUnknown_03005960
	ldrh r3, [r0]
	ldrh r7, [r0, #4]
	ldr r0, _08024FB8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08024FC4
	ldr r0, _08024FBC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _08024FC0 @ =gMultiSioRecv
	adds r1, r1, r0
	ldrh r2, [r1, #2]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	subs r2, r2, r0
	strh r2, [r4, #6]
	ldrh r1, [r1, #4]
	b _08024FD4
	.align 2, 0
_08024FB4: .4byte gUnknown_03005960
_08024FB8: .4byte gUnknown_030054CC
_08024FBC: .4byte 0x04000128
_08024FC0: .4byte gMultiSioRecv
_08024FC4:
	ldr r1, [r5, #8]
	asrs r1, r1, #8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	strh r1, [r4, #6]
	ldr r1, [r5, #0xc]
	asrs r1, r1, #8
_08024FD4:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	strh r1, [r4, #8]
	adds r2, r6, #0
	adds r2, #0x22
	movs r0, #0x10
	strb r0, [r2]
	ldr r1, [r5, #0x20]
	movs r0, #0x40
	ands r0, r1
	mov sl, r1
	cmp r0, #0
	beq _08024FF4
	movs r0, #8
	strb r0, [r2]
_08024FF4:
	adds r0, r5, #0
	adds r0, #0x85
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r7, r0, #0
	cmp r1, #4
	bls _08025004
	b _08025306
_08025004:
	lsls r0, r1, #2
	ldr r1, _08025010 @ =_08025014
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08025010: .4byte _08025014
_08025014: @ jump table
	.4byte _08025306 @ case 0
	.4byte _08025028 @ case 1
	.4byte _08025180 @ case 2
	.4byte _08025306 @ case 3
	.4byte _08025306 @ case 4
_08025028:
	adds r0, r5, #0
	adds r0, #0x68
	ldrh r3, [r0]
	adds r0, #2
	ldrh r2, [r0]
	mov ip, r2
	ldr r1, _080250B0 @ =gUnknown_080D672C
	movs r0, #0
	ldrsb r0, [r7, r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	subs r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r3, r1, #0
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _08025058
	cmp r2, #1
	beq _0802506E
_08025058:
	cmp r1, #4
	bne _08025060
	cmp r2, #0
	beq _0802506E
_08025060:
	cmp r3, #0x46
	beq _08025066
	b _08025306
_08025066:
	mov r0, ip
	cmp r0, #0
	beq _0802506E
	b _08025306
_0802506E:
	adds r0, r5, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0xb0
	strb r0, [r1]
	lsls r0, r0, #2
	strh r0, [r4]
	ldr r0, [r6, #0x10]
	movs r1, #0x20
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #0x10]
	ldr r2, _080250B4 @ =gUnknown_030054B8
	ldrb r1, [r2]
	adds r0, r1, #1
	strb r0, [r2]
	movs r0, #0x20
	orrs r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [r6, #0x10]
	orrs r0, r1
	str r0, [r6, #0x10]
	ldr r0, [r5, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080250B8
	movs r0, #0xff
	lsls r0, r0, #8
	b _080250BC
	.align 2, 0
_080250B0: .4byte gUnknown_080D672C
_080250B4: .4byte gUnknown_030054B8
_080250B8:
	movs r0, #0x80
	lsls r0, r0, #1
_080250BC:
	strh r0, [r4, #2]
	ldr r2, _08025104 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r3, #0x80
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080250D2
	ldrh r0, [r4, #2]
	rsbs r0, r0, #0
	strh r0, [r4, #2]
_080250D2:
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _080250E0
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
_080250E0:
	ldrh r1, [r2]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08025110
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #4]
	ldrh r1, [r4]
	adds r1, r1, r0
	ldr r2, _08025108 @ =0xFFFFFF00
	adds r0, r2, #0
	subs r0, r0, r1
	ldr r1, _0802510C @ =0x000003FF
	ands r0, r1
	strh r0, [r4]
	b _08025116
	.align 2, 0
_08025104: .4byte gUnknown_03005424
_08025108: .4byte 0xFFFFFF00
_0802510C: .4byte 0x000003FF
_08025110:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #4]
_08025116:
	movs r3, #2
	ldrsh r1, [r4, r3]
	adds r0, r5, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r1, r0, r1
	asrs r1, r1, #8
	movs r3, #4
	ldrsh r2, [r4, r3]
	adds r0, r5, #0
	adds r0, #0x82
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #8
	strh r1, [r4, #2]
	strh r0, [r4, #4]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_8004860
	ldr r1, [r5, #0x20]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08025174
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r1, r0
	cmp r1, #0
	beq _0802515E
	b _08025306
_0802515E:
	movs r1, #0x2c
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08025174
	ldr r0, _0802517C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08025174
	b _08025306
_08025174:
	adds r0, r6, #0
	bl sub_80051E8
	b _08025306
	.align 2, 0
_0802517C: .4byte gUnknown_03005590
_08025180:
	movs r3, #0x10
	ldrsh r2, [r5, r3]
	mov ip, r2
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	mov sb, r0
	adds r0, r5, #0
	adds r0, #0x68
	ldrh r3, [r0]
	adds r0, #2
	ldrh r2, [r0]
	mov r8, r2
	ldr r1, _080251F4 @ =gUnknown_080D672C
	movs r0, #0
	ldrsb r0, [r7, r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	subs r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r3, r1, #0
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080251BC
	cmp r2, #1
	beq _080251D2
_080251BC:
	cmp r1, #4
	bne _080251C4
	cmp r2, #0
	beq _080251D2
_080251C4:
	cmp r3, #0x46
	beq _080251CA
	b _08025306
_080251CA:
	mov r2, r8
	cmp r2, #0
	beq _080251D2
	b _08025306
_080251D2:
	mov r3, ip
	cmp r3, #0
	bne _080251DE
	mov r0, sb
	cmp r0, #0
	beq _080251F8
_080251DE:
	mov r0, ip
	mov r1, sb
	bl ArcTan2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x18
	adds r0, #0x40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _08025208
	.align 2, 0
_080251F4: .4byte gUnknown_080D672C
_080251F8:
	movs r0, #1
	mov r1, sl
	ands r0, r1
	movs r1, #0x40
	cmp r0, #0
	beq _08025206
	movs r1, #0xc0
_08025206:
	adds r0, r1, #0
_08025208:
	adds r1, r5, #0
	adds r1, #0xad
	strb r0, [r1]
	lsls r0, r0, #2
	strh r0, [r4]
	ldr r0, [r6, #0x10]
	movs r1, #0x20
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6, #0x10]
	ldr r2, _08025244 @ =gUnknown_030054B8
	ldrb r1, [r2]
	adds r0, r1, #1
	strb r0, [r2]
	movs r0, #0x20
	orrs r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [r6, #0x10]
	orrs r0, r1
	str r0, [r6, #0x10]
	ldr r0, [r5, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08025248
	movs r0, #0xff
	lsls r0, r0, #8
	b _0802524C
	.align 2, 0
_08025244: .4byte gUnknown_030054B8
_08025248:
	movs r0, #0x80
	lsls r0, r0, #1
_0802524C:
	strh r0, [r4, #2]
	ldr r2, _08025294 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r3, #0x80
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08025262
	ldrh r0, [r4, #2]
	rsbs r0, r0, #0
	strh r0, [r4, #2]
_08025262:
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08025270
	ldrh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #6]
_08025270:
	ldrh r1, [r2]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080252A0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #4]
	ldrh r1, [r4]
	adds r1, r1, r0
	ldr r2, _08025298 @ =0xFFFFFF00
	adds r0, r2, #0
	subs r0, r0, r1
	ldr r1, _0802529C @ =0x000003FF
	ands r0, r1
	strh r0, [r4]
	b _080252A6
	.align 2, 0
_08025294: .4byte gUnknown_03005424
_08025298: .4byte 0xFFFFFF00
_0802529C: .4byte 0x000003FF
_080252A0:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #4]
_080252A6:
	movs r3, #2
	ldrsh r1, [r4, r3]
	adds r0, r5, #0
	adds r0, #0x80
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r1, r0, r1
	asrs r1, r1, #8
	movs r3, #4
	ldrsh r2, [r4, r3]
	adds r0, r5, #0
	adds r0, #0x82
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #8
	strh r1, [r4, #2]
	strh r0, [r4, #4]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_8004860
	ldr r1, [r5, #0x20]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08025300
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r1, r0
	cmp r1, #0
	bne _08025306
	movs r1, #0x2c
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08025300
	ldr r0, _08025314 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08025306
_08025300:
	adds r0, r6, #0
	bl sub_80051E8
_08025306:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08025314: .4byte gUnknown_03005590

	thumb_func_start sub_8025318
sub_8025318: @ 0x08025318
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08025350 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _0802533E
	lsls r0, r1, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0x1c
	bne _08025338
	ldr r0, _08025354 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802533E
_08025338:
	ldr r1, [r4, #0x20]
	cmp r2, #0x1d
	bne _08025358
_0802533E:
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08025358
	adds r0, r4, #0
	bl sub_8025F84
	b _080253B4
	.align 2, 0
_08025350: .4byte gUnknown_030055B4
_08025354: .4byte gUnknown_030054B0
_08025358:
	ldr r0, _0802536C @ =0x0000080A
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	cmp r0, r1
	bne _08025370
	adds r0, r4, #0
	bl sub_802A360
	b _080253B4
	.align 2, 0
_0802536C: .4byte 0x0000080A
_08025370:
	adds r0, r4, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #7
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	beq _080253A2
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	b _080253A8
_080253A2:
	adds r0, r4, #0
	adds r0, #0x64
	strh r1, [r0]
_080253A8:
	ldr r0, _080253BC @ =gUnknown_030059E0
	ldr r1, _080253C0 @ =sub_80253C4
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
_080253B4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080253BC: .4byte gUnknown_030059E0
_080253C0: .4byte sub_80253C4

	thumb_func_start sub_80253C4
sub_80253C4: @ 0x080253C4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x20]
	ldr r0, _080253E0 @ =0x800000A
	ands r0, r2
	movs r1, #0x80
	lsls r1, r1, #0x14
	cmp r0, r1
	bne _080253E4
	adds r0, r4, #0
	bl sub_80273D0
	b _0802553A
	.align 2, 0
_080253E0: .4byte 0x800000A
_080253E4:
	ldr r0, _080253F8 @ =0x0000080A
	ands r2, r0
	subs r0, #0xa
	cmp r2, r0
	bne _080253FC
	adds r0, r4, #0
	bl sub_802A360
	b _0802553A
	.align 2, 0
_080253F8: .4byte 0x0000080A
_080253FC:
	adds r0, r4, #0
	bl sub_802A0C8
	cmp r0, #0
	beq _08025408
	b _0802553A
_08025408:
	adds r0, r4, #0
	bl sub_802A0FC
	cmp r0, #0
	beq _08025414
	b _0802553A
_08025414:
	adds r0, r4, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08025420
	b _0802553A
_08025420:
	adds r0, r4, #0
	bl sub_802A2A8
	cmp r0, #0
	beq _0802542C
	b _0802553A
_0802542C:
	adds r0, r4, #0
	bl sub_802966C
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _08025466
	ldr r1, _080254BC @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _08025466
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_08025466:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080254C0 @ =gUnknown_03005424
	ldr r1, _080254C4 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025494
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08025494:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080254A4
	adds r2, r1, #0
_080254A4:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080254C8
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080254D0
	.align 2, 0
_080254BC: .4byte gUnknown_08097AA4
_080254C0: .4byte gUnknown_03005424
_080254C4: .4byte gUnknown_0300544C
_080254C8:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080254D0:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _080254E6
	subs r0, #1
	b _0802550E
_080254E6:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08025510
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _080254FC
	rsbs r1, r1, #0
_080254FC:
	ldr r0, _08025528 @ =0x000001DF
	cmp r1, r0
	bgt _08025510
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_0802550E:
	strh r0, [r4, #0x2a]
_08025510:
	ldr r1, [r4, #0x20]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0802552C
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #0x20]
	b _0802553A
	.align 2, 0
_08025528: .4byte 0x000001DF
_0802552C:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _0802553A
	ldr r1, _08025540 @ =gUnknown_030059E0
	ldr r0, _08025544 @ =sub_8025E18
	str r0, [r1]
_0802553A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08025540: .4byte gUnknown_030059E0
_08025544: .4byte sub_8025E18

	thumb_func_start sub_8025548
sub_8025548: @ 0x08025548
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_802A0FC
	cmp r0, #0
	beq _08025556
	b _08025688
_08025556:
	adds r0, r4, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08025562
	b _08025688
_08025562:
	ldr r0, _08025618 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _08025576
	adds r0, r4, #0
	bl sub_802A2A8
	cmp r0, #0
	beq _08025576
	b _08025688
_08025576:
	adds r0, r4, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802558E
	ldr r1, _0802561C @ =gUnknown_030059E0
	ldr r0, _08025620 @ =sub_8025318
	str r0, [r1]
_0802558E:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _080255C2
	ldr r1, _08025624 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _080255C2
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_080255C2:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08025628 @ =gUnknown_03005424
	ldr r1, _0802562C @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080255F0
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080255F0:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08025600
	adds r2, r1, #0
_08025600:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025630
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08025638
	.align 2, 0
_08025618: .4byte gUnknown_030054CC
_0802561C: .4byte gUnknown_030059E0
_08025620: .4byte sub_8025318
_08025624: .4byte gUnknown_08097AA4
_08025628: .4byte gUnknown_03005424
_0802562C: .4byte gUnknown_0300544C
_08025630:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08025638:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _0802564E
	subs r0, #1
	b _08025676
_0802564E:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08025678
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _08025664
	rsbs r1, r1, #0
_08025664:
	ldr r0, _08025690 @ =0x000001DF
	cmp r1, r0
	bgt _08025678
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08025676:
	strh r0, [r4, #0x2a]
_08025678:
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08025688
	ldr r1, _08025694 @ =gUnknown_030059E0
	ldr r0, _08025698 @ =sub_8025E18
	str r0, [r1]
_08025688:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08025690: .4byte 0x000001DF
_08025694: .4byte gUnknown_030059E0
_08025698: .4byte sub_8025E18

	thumb_func_start sub_802569C
sub_802569C: @ 0x0802569C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x90
	ldr r0, [r6]
	adds r7, r0, #0
	adds r7, #0xc
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _08025718 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	adds r0, r4, #0
	bl sub_802A0FC
	cmp r0, #0
	beq _080256D4
	b _08025840
_080256D4:
	adds r0, r4, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _080256E0
	b _08025840
_080256E0:
	adds r0, r4, #0
	bl sub_802A2A8
	cmp r0, #0
	beq _080256EC
	b _08025840
_080256EC:
	adds r0, r4, #0
	adds r0, #0x5c
	ldrh r0, [r0]
	movs r1, #0xf0
	ands r1, r0
	cmp r1, #0
	bne _08025720
	cmp r5, #1
	bne _0802574A
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	cmp r0, #0
	bne _0802572A
	strh r5, [r1]
	ldr r0, [r6]
	ldr r1, [r0, #0x1c]
	ldr r2, _0802571C @ =0xFFFFBFFF
	ands r1, r2
	str r1, [r0, #0x1c]
	b _0802572A
	.align 2, 0
_08025718: .4byte gUnknown_080D672C
_0802571C: .4byte 0xFFFFBFFF
_08025720:
	cmp r1, #0x40
	beq _0802572A
	ldr r1, _080257D4 @ =gUnknown_030059E0
	ldr r0, _080257D8 @ =sub_8025318
	str r0, [r1]
_0802572A:
	cmp r5, #1
	bne _0802574A
	adds r0, r4, #0
	adds r0, #0x6a
	ldrh r0, [r0]
	cmp r0, #1
	bne _0802574A
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802574A
	ldr r1, _080257D4 @ =gUnknown_030059E0
	ldr r0, _080257D8 @ =sub_8025318
	str r0, [r1]
_0802574A:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _0802577E
	ldr r1, _080257DC @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _0802577E
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_0802577E:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080257E0 @ =gUnknown_03005424
	ldr r1, _080257E4 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080257AC
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080257AC:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080257BC
	adds r2, r1, #0
_080257BC:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080257E8
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080257F0
	.align 2, 0
_080257D4: .4byte gUnknown_030059E0
_080257D8: .4byte sub_8025318
_080257DC: .4byte gUnknown_08097AA4
_080257E0: .4byte gUnknown_03005424
_080257E4: .4byte gUnknown_0300544C
_080257E8:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080257F0:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08025806
	subs r0, #1
	b _0802582E
_08025806:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08025830
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _0802581C
	rsbs r1, r1, #0
_0802581C:
	ldr r0, _08025848 @ =0x000001DF
	cmp r1, r0
	bgt _08025830
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_0802582E:
	strh r0, [r4, #0x2a]
_08025830:
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08025840
	ldr r1, _0802584C @ =gUnknown_030059E0
	ldr r0, _08025850 @ =sub_8025E18
	str r0, [r1]
_08025840:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08025848: .4byte 0x000001DF
_0802584C: .4byte gUnknown_030059E0
_08025850: .4byte sub_8025E18

	thumb_func_start sub_8025854
sub_8025854: @ 0x08025854
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x90
	ldr r0, [r6]
	adds r7, r0, #0
	adds r7, #0xc
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _080258D0 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	adds r0, r4, #0
	bl sub_802A184
	cmp r0, #0
	beq _0802588C
	b _080259F8
_0802588C:
	adds r0, r4, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08025898
	b _080259F8
_08025898:
	adds r0, r4, #0
	bl sub_802A2A8
	cmp r0, #0
	beq _080258A4
	b _080259F8
_080258A4:
	adds r0, r4, #0
	adds r0, #0x5c
	ldrh r0, [r0]
	movs r1, #0xf0
	ands r1, r0
	cmp r1, #0
	bne _080258D8
	cmp r5, #2
	bne _08025902
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	cmp r0, #0
	bne _080258E2
	movs r0, #1
	strh r0, [r1]
	ldr r2, [r6]
	ldr r0, [r2, #0x1c]
	ldr r1, _080258D4 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	b _080258E2
	.align 2, 0
_080258D0: .4byte gUnknown_080D672C
_080258D4: .4byte 0xFFFFBFFF
_080258D8:
	cmp r1, #0x80
	beq _080258E2
	ldr r1, _0802598C @ =gUnknown_030059E0
	ldr r0, _08025990 @ =sub_8025318
	str r0, [r1]
_080258E2:
	cmp r5, #2
	bne _08025902
	adds r0, r4, #0
	adds r0, #0x6a
	ldrh r0, [r0]
	cmp r0, #1
	bne _08025902
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08025902
	ldr r1, _0802598C @ =gUnknown_030059E0
	ldr r0, _08025990 @ =sub_8025318
	str r0, [r1]
_08025902:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _08025936
	ldr r1, _08025994 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _08025936
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_08025936:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08025998 @ =gUnknown_03005424
	ldr r1, _0802599C @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025964
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08025964:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08025974
	adds r2, r1, #0
_08025974:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080259A0
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080259A8
	.align 2, 0
_0802598C: .4byte gUnknown_030059E0
_08025990: .4byte sub_8025318
_08025994: .4byte gUnknown_08097AA4
_08025998: .4byte gUnknown_03005424
_0802599C: .4byte gUnknown_0300544C
_080259A0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080259A8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _080259BE
	subs r0, #1
	b _080259E6
_080259BE:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _080259E8
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _080259D4
	rsbs r1, r1, #0
_080259D4:
	ldr r0, _08025A00 @ =0x000001DF
	cmp r1, r0
	bgt _080259E8
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_080259E6:
	strh r0, [r4, #0x2a]
_080259E8:
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080259F8
	ldr r1, _08025A04 @ =gUnknown_030059E0
	ldr r0, _08025A08 @ =sub_8025E18
	str r0, [r1]
_080259F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08025A00: .4byte 0x000001DF
_08025A04: .4byte gUnknown_030059E0
_08025A08: .4byte sub_8025E18

	thumb_func_start sub_8025A0C
sub_8025A0C: @ 0x08025A0C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _08025A44 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08025A32
	lsls r0, r1, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0x1c
	bne _08025A2C
	ldr r0, _08025A48 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08025A32
_08025A2C:
	ldr r1, [r6, #0x20]
	cmp r2, #0x1d
	bne _08025A4C
_08025A32:
	ldr r1, [r6, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08025A4C
	adds r0, r6, #0
	bl sub_8025F84
	b _08025AA4
	.align 2, 0
_08025A44: .4byte gUnknown_030055B4
_08025A48: .4byte gUnknown_030054B0
_08025A4C:
	ldr r0, _08025A60 @ =0x0000080A
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #4
	cmp r0, r1
	bne _08025A64
	adds r0, r6, #0
	bl sub_802A360
	b _08025AA4
	.align 2, 0
_08025A60: .4byte 0x0000080A
_08025A64:
	adds r0, r6, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08025AAC @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	adds r0, r6, #0
	adds r0, #0x64
	movs r5, #0
	movs r4, #4
	strh r4, [r0]
	adds r0, r6, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r6, #0x16]
	movs r0, #9
	strb r0, [r6, #0x17]
	ldr r0, [r6, #0x20]
	orrs r0, r4
	str r0, [r6, #0x20]
	adds r0, r6, #0
	adds r0, #0x99
	strb r5, [r0]
	ldr r0, _08025AB0 @ =gUnknown_030059E0
	ldr r1, _08025AB4 @ =sub_8025AB8
	str r1, [r0]
	adds r0, r6, #0
	bl _call_via_r1
_08025AA4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08025AAC: .4byte 0xFFFFBFFF
_08025AB0: .4byte gUnknown_030059E0
_08025AB4: .4byte sub_8025AB8

	thumb_func_start sub_8025AB8
sub_8025AB8: @ 0x08025AB8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r2, [r4, #0x20]
	ldr r0, _08025AD4 @ =0x800000A
	ands r0, r2
	movs r1, #0x80
	lsls r1, r1, #0x14
	cmp r0, r1
	bne _08025AD8
	adds r0, r4, #0
	bl sub_80273D0
	b _08025CEC
	.align 2, 0
_08025AD4: .4byte 0x800000A
_08025AD8:
	ldr r0, _08025AEC @ =0x0000080A
	ands r2, r0
	subs r0, #0xa
	cmp r2, r0
	bne _08025AF0
	adds r0, r4, #0
	bl sub_802A360
	b _08025CEC
	.align 2, 0
_08025AEC: .4byte 0x0000080A
_08025AF0:
	adds r1, r4, #0
	adds r1, #0x99
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08025B04
	subs r0, r2, #1
	strb r0, [r1]
	b _08025B66
_08025B04:
	adds r0, r4, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08025B10
	b _08025CEC
_08025B10:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08025B66
	adds r0, r4, #0
	adds r0, #0x5c
	ldrh r0, [r0]
	movs r1, #0x30
	ands r1, r0
	cmp r1, #0x10
	beq _08025B48
	cmp r1, #0x20
	bne _08025B66
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bgt _08025B3C
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
	b _08025B66
_08025B3C:
	subs r0, #0x18
	cmp r0, #0
	bge _08025B64
	movs r0, #0x60
	rsbs r0, r0, #0
	b _08025B64
_08025B48:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _08025B5C
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	b _08025B66
_08025B5C:
	adds r0, #0x18
	cmp r0, #0
	ble _08025B64
	movs r0, #0x60
_08025B64:
	strh r0, [r4, #0x14]
_08025B66:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08025B76
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #8
	b _08025B8E
_08025B76:
	cmp r0, #0
	bge _08025B88
	adds r1, r4, #0
	adds r1, #0x50
	ldr r0, _08025B84 @ =0x0000FFF8
	b _08025B8E
	.align 2, 0
_08025B84: .4byte 0x0000FFF8
_08025B88:
	adds r1, r4, #0
	adds r1, #0x50
	movs r0, #0
_08025B8E:
	strh r0, [r1]
	adds r2, r1, #0
	ldrh r0, [r4, #0x14]
	ldrh r1, [r2]
	subs r0, r0, r1
	movs r1, #0
	strh r0, [r4, #0x14]
	adds r0, #0x7f
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xfe
	bhi _08025BAA
	strh r1, [r2]
	strh r1, [r4, #0x14]
_08025BAA:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08025BC8
	ldr r0, _08025BC0 @ =gUnknown_030059E0
	ldr r1, _08025BC4 @ =sub_8025318
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	b _08025CEC
	.align 2, 0
_08025BC0: .4byte gUnknown_030059E0
_08025BC4: .4byte sub_8025318
_08025BC8:
	movs r0, #0x14
	ldrsh r3, [r4, r0]
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r5, [r0]
	adds r1, r5, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0xbf
	bgt _08025C12
	cmp r3, #0
	beq _08025C12
	ldr r1, _08025C04 @ =gUnknown_08097AA4
	lsls r0, r5, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	asrs r2, r0, #8
	cmp r3, #0
	ble _08025C08
	cmp r2, #0
	bgt _08025C0E
	b _08025C0C
	.align 2, 0
_08025C04: .4byte gUnknown_08097AA4
_08025C08:
	cmp r2, #0
	blt _08025C0E
_08025C0C:
	asrs r2, r0, #0xa
_08025C0E:
	adds r3, r3, r2
	strh r3, [r4, #0x14]
_08025C12:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	adds r0, r4, #0
	bl sub_8023128
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08025C42
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	beq _08025C3C
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08025C40
_08025C3C:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08025C40:
	strh r0, [r4, #0x12]
_08025C42:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08025C8C @ =gUnknown_03005424
	ldr r1, _08025C90 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025C64
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08025C64:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08025C74
	adds r2, r1, #0
_08025C74:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025C94
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08025C9C
	.align 2, 0
_08025C8C: .4byte gUnknown_03005424
_08025C90: .4byte gUnknown_0300544C
_08025C94:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08025C9C:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08025CB2
	subs r0, #1
	b _08025CDA
_08025CB2:
	ldrb r0, [r6]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08025CDC
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08025CC8
	rsbs r1, r1, #0
_08025CC8:
	ldr r0, _08025CF4 @ =0x000001DF
	cmp r1, r0
	bgt _08025CDC
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08025CDA:
	strh r0, [r4, #0x2a]
_08025CDC:
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08025CEC
	ldr r1, _08025CF8 @ =gUnknown_030059E0
	ldr r0, _08025CFC @ =sub_8025E18
	str r0, [r1]
_08025CEC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08025CF4: .4byte 0x000001DF
_08025CF8: .4byte gUnknown_030059E0
_08025CFC: .4byte sub_8025E18

	thumb_func_start sub_8025D00
sub_8025D00: @ 0x08025D00
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r1, [r4, #0x20]
	movs r0, #0x81
	lsls r0, r0, #1
	orrs r1, r0
	ldr r0, _08025D3C @ =0xFEFFFFDF
	ands r1, r0
	str r1, [r4, #0x20]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08025D24
	movs r0, #0x10
	orrs r1, r0
	str r1, [r4, #0x20]
_08025D24:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08025D2E
	rsbs r1, r1, #0
_08025D2E:
	ldr r0, _08025D40 @ =0x0000013F
	cmp r1, r0
	bgt _08025D44
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xa
	b _08025D4A
	.align 2, 0
_08025D3C: .4byte 0xFEFFFFDF
_08025D40: .4byte 0x0000013F
_08025D44:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xb
_08025D4A:
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x70
	movs r0, #1
	strb r0, [r1]
	ldr r3, [r4, #0x20]
	movs r0, #0x40
	ands r0, r3
	movs r5, #0x9c
	lsls r5, r5, #3
	cmp r0, #0
	beq _08025D66
	movs r5, #0xa8
	lsls r5, r5, #2
_08025D66:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r1, [r0]
	subs r1, #0x40
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08025DFC @ =gUnknown_08097AA4
	lsls r0, r1, #3
	movs r6, #0x80
	lsls r6, r6, #2
	adds r0, r0, r6
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r5, r0
	asrs r0, r0, #8
	ldrh r6, [r4, #0x10]
	adds r0, r0, r6
	strh r0, [r4, #0x10]
	lsls r1, r1, #3
	adds r1, r1, r2
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	muls r0, r5, r0
	asrs r0, r0, #8
	ldrh r1, [r4, #0x12]
	adds r0, r0, r1
	strh r0, [r4, #0x12]
	movs r0, #8
	ands r3, r0
	cmp r3, #0
	beq _08025DD6
	ldr r0, _08025E00 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08025DCA
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _08025DC6
	ldr r0, _08025E04 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08025DCA
_08025DC6:
	cmp r1, #0x1d
	bne _08025DD6
_08025DCA:
	ldr r0, _08025E08 @ =gUnknown_03005960
	ldr r1, [r0, #0x38]
	lsls r1, r1, #8
	ldrh r0, [r4, #0x10]
	subs r0, r0, r1
	strh r0, [r4, #0x10]
_08025DD6:
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08025E0C @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	movs r0, #0x74
	bl m4aSongNumStart
	ldr r0, _08025E10 @ =gUnknown_030059E0
	ldr r1, _08025E14 @ =sub_8025E18
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08025DFC: .4byte gUnknown_08097AA4
_08025E00: .4byte gUnknown_030055B4
_08025E04: .4byte gUnknown_030054B0
_08025E08: .4byte gUnknown_03005960
_08025E0C: .4byte 0xFFFFBFFF
_08025E10: .4byte gUnknown_030059E0
_08025E14: .4byte sub_8025E18

	thumb_func_start sub_8025E18
sub_8025E18: @ 0x08025E18
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0xfd
	lsls r5, r5, #8
	ldr r1, [r4, #0x20]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08025E2C
	ldr r5, _08025EBC @ =0x0000FE80
_08025E2C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08025E74
	ldr r0, _08025EC0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _08025E56
	adds r0, r4, #0
	bl sub_801251C
	cmp r0, #0
	beq _08025E4A
	b _08025F74
_08025E4A:
	adds r0, r4, #0
	bl sub_80294F4
	cmp r0, #0
	beq _08025E56
	b _08025F74
_08025E56:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _08025E74
	adds r0, r4, #0
	adds r0, #0x5c
	ldr r1, _08025EC4 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _08025E74
	strh r5, [r4, #0x12]
_08025E74:
	adds r0, r4, #0
	bl sub_80246DC
	adds r0, r4, #0
	bl sub_8023610
	ldr r0, _08025EC8 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08025EA6
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _08025E9C
	ldr r0, _08025ECC @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08025EA6
_08025E9C:
	cmp r1, #0x1d
	beq _08025EA6
	adds r0, r4, #0
	bl sub_80236C8
_08025EA6:
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08025ED0
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08025ED4
	.align 2, 0
_08025EBC: .4byte 0x0000FE80
_08025EC0: .4byte gUnknown_030054CC
_08025EC4: .4byte gUnknown_03005B38
_08025EC8: .4byte gUnknown_030055B4
_08025ECC: .4byte gUnknown_030054B0
_08025ED0:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08025ED4:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08025F20 @ =gUnknown_03005424
	ldr r1, _08025F24 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025EF8
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08025EF8:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08025F08
	adds r2, r1, #0
_08025F08:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08025F28
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08025F30
	.align 2, 0
_08025F20: .4byte gUnknown_03005424
_08025F24: .4byte gUnknown_0300544C
_08025F28:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08025F30:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08025F48
	adds r1, #2
	cmp r1, #0
	ble _08025F54
	b _08025F52
_08025F48:
	cmp r1, #0
	ble _08025F54
	subs r1, #2
	cmp r1, #0
	bge _08025F54
_08025F52:
	movs r1, #0
_08025F54:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08025F74
	ldr r1, _08025F7C @ =gUnknown_030059E0
	ldr r0, _08025F80 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08025F74:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08025F7C: .4byte gUnknown_030059E0
_08025F80: .4byte sub_8025318

	thumb_func_start sub_8025F84
sub_8025F84: @ 0x08025F84
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #0x81
	lsls r1, r1, #1
	orrs r0, r1
	ldr r1, _08025FE8 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x16
	ldrsb r0, [r4, r0]
	cmp r0, #5
	ble _08025FAA
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #8
	bgt _08026000
_08025FAA:
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _08025FEC @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #4
	beq _08025FD8
	cmp r1, #0xa
	beq _08025FD8
	cmp r1, #0xb
	beq _08025FD8
	cmp r1, #0x46
	bne _08025FF0
_08025FD8:
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	b _08025FFE
	.align 2, 0
_08025FE8: .4byte 0xFEFFFFDF
_08025FEC: .4byte gUnknown_080D672C
_08025FF0:
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
_08025FFE:
	strb r0, [r4, #0x17]
_08026000:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _0802600A
	rsbs r1, r1, #0
_0802600A:
	ldr r0, _08026018 @ =0x0000013F
	cmp r1, r0
	bgt _0802601C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xa
	b _08026022
	.align 2, 0
_08026018: .4byte 0x0000013F
_0802601C:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xb
_08026022:
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x70
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026054 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	movs r0, #0x74
	bl m4aSongNumStart
	ldr r0, _08026058 @ =gUnknown_030059E0
	ldr r1, _0802605C @ =sub_8025E18
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08026054: .4byte 0xFFFFBFFF
_08026058: .4byte gUnknown_030059E0
_0802605C: .4byte sub_8025E18

	thumb_func_start sub_8026060
sub_8026060: @ 0x08026060
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _080260C4 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x16
	ldrsb r0, [r4, r0]
	cmp r0, #5
	ble _08026084
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #8
	bgt _080260DC
_08026084:
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _080260C8 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #4
	beq _080260B2
	cmp r1, #0xa
	beq _080260B2
	cmp r1, #0xb
	beq _080260B2
	cmp r1, #0x46
	bne _080260CC
_080260B2:
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	b _080260DA
	.align 2, 0
_080260C4: .4byte 0xFEFFFFDF
_080260C8: .4byte gUnknown_080D672C
_080260CC:
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
_080260DA:
	strb r0, [r4, #0x17]
_080260DC:
	adds r1, r4, #0
	adds r1, #0x70
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	subs r1, #2
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026110 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	adds r0, r4, #0
	adds r0, #0x24
	strb r3, [r0]
	ldr r0, _08026114 @ =gUnknown_030059E0
	ldr r1, _08026118 @ =sub_80261D8
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08026110: .4byte 0xFFFFBFFF
_08026114: .4byte gUnknown_030059E0
_08026118: .4byte sub_80261D8

	thumb_func_start sub_802611C
sub_802611C: @ 0x0802611C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _08026180 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x16
	ldrsb r0, [r4, r0]
	cmp r0, #5
	ble _08026140
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #8
	bgt _08026198
_08026140:
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _08026184 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #4
	beq _0802616E
	cmp r1, #0xa
	beq _0802616E
	cmp r1, #0xb
	beq _0802616E
	cmp r1, #0x46
	bne _08026188
_0802616E:
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	b _08026196
	.align 2, 0
_08026180: .4byte 0xFEFFFFDF
_08026184: .4byte gUnknown_080D672C
_08026188:
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
_08026196:
	strb r0, [r4, #0x17]
_08026198:
	adds r1, r4, #0
	adds r1, #0x70
	movs r3, #0
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x6e
	strb r3, [r0]
	adds r0, #0x22
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _080261CC @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	adds r0, r4, #0
	adds r0, #0x24
	strb r3, [r0]
	ldr r0, _080261D0 @ =gUnknown_030059E0
	ldr r1, _080261D4 @ =sub_80261D8
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080261CC: .4byte 0xFFFFBFFF
_080261D0: .4byte gUnknown_030059E0
_080261D4: .4byte sub_80261D8

	thumb_func_start sub_80261D8
sub_80261D8: @ 0x080261D8
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80246DC
	adds r0, r4, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	cmp r0, #1
	bne _080261F2
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08026220
_080261F2:
	adds r0, r4, #0
	bl sub_8023610
	ldr r0, _0802625C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _08026220
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08026220
	adds r0, r4, #0
	bl sub_801251C
	cmp r0, #0
	bne _0802630C
	adds r0, r4, #0
	bl sub_80294F4
	cmp r0, #0
	bne _0802630C
_08026220:
	ldr r0, _08026260 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08026246
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0802623C
	ldr r0, _08026264 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08026246
_0802623C:
	cmp r1, #0x1d
	beq _08026246
	adds r0, r4, #0
	bl sub_80236C8
_08026246:
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08026268
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _0802626C
	.align 2, 0
_0802625C: .4byte gUnknown_030054CC
_08026260: .4byte gUnknown_030055B4
_08026264: .4byte gUnknown_030054B0
_08026268:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_0802626C:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080262B8 @ =gUnknown_03005424
	ldr r1, _080262BC @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026290
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08026290:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080262A0
	adds r2, r1, #0
_080262A0:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080262C0
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080262C8
	.align 2, 0
_080262B8: .4byte gUnknown_03005424
_080262BC: .4byte gUnknown_0300544C
_080262C0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080262C8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _080262E0
	adds r1, #2
	cmp r1, #0
	ble _080262EC
	b _080262EA
_080262E0:
	cmp r1, #0
	ble _080262EC
	subs r1, #2
	cmp r1, #0
	bge _080262EC
_080262EA:
	movs r1, #0
_080262EC:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _0802630C
	ldr r1, _08026314 @ =gUnknown_030059E0
	ldr r0, _08026318 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_0802630C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026314: .4byte gUnknown_030059E0
_08026318: .4byte sub_8025318

	thumb_func_start sub_802631C
sub_802631C: @ 0x0802631C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	movs r5, #0
	movs r0, #3
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	ldr r1, _0802636C @ =0x00000404
	orrs r0, r1
	movs r1, #0x23
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	strh r5, [r4, #0x26]
	strh r5, [r4, #0x10]
	strh r5, [r4, #0x12]
	strh r5, [r4, #0x14]
	movs r0, #0x6d
	bl m4aSongNumStart
	bl sub_801F7DC
	ldr r0, _08026370 @ =gUnknown_030059E0
	ldr r1, _08026374 @ =sub_8026378
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802636C: .4byte 0x00000404
_08026370: .4byte gUnknown_030059E0
_08026374: .4byte sub_8026378

	thumb_func_start sub_8026378
sub_8026378: @ 0x08026378
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r0, #0x90
	ldr r0, [r0]
	adds r0, #0xc
	mov r8, r0
	adds r2, r6, #0
	adds r2, #0x68
	ldr r1, _080263F4 @ =gUnknown_080D672C
	adds r0, r6, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	adds r0, r6, #0
	adds r0, #0x5c
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08026408
	ldr r2, [r6, #0x20]
	ldr r0, _080263F8 @ =0xFFFFFBFF
	ands r2, r0
	str r2, [r6, #0x20]
	ldrh r0, [r6, #0x26]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	ble _080263CE
	movs r1, #8
_080263CE:
	ldr r0, _080263FC @ =gUnknown_080D6920
	lsls r1, r1, #0x10
	asrs r1, r1, #0xf
	adds r1, r1, r0
	movs r0, #0
	ldrsh r1, [r1, r0]
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _080263E4
	rsbs r1, r1, #0
_080263E4:
	strh r1, [r6, #0x14]
	ldr r1, _08026400 @ =gUnknown_030059E0
	ldr r0, _08026404 @ =sub_8025A0C
	str r0, [r1]
	movs r0, #0x6e
	bl m4aSongNumStart
	b _080264B2
	.align 2, 0
_080263F4: .4byte gUnknown_080D672C
_080263F8: .4byte 0xFFFFFBFF
_080263FC: .4byte gUnknown_080D6920
_08026400: .4byte gUnknown_030059E0
_08026404: .4byte sub_8025A0C
_08026408:
	ldrh r4, [r6, #0x26]
	lsls r0, r4, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _08026420
	asrs r0, r0, #0x15
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r0, #0
	bgt _08026420
	movs r4, #0
_08026420:
	adds r1, r6, #0
	adds r1, #0x5e
	ldr r0, _080264D8 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08026490
	movs r0, #0x6d
	bl m4aSongNumStart
	ldr r2, _080264DC @ =gMPlayTable
	ldr r0, _080264E0 @ =gSongTable
	movs r1, #0xdb
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r5, [r0]
	adds r0, r5, #0
	bl m4aMPlayImmInit
	ldr r1, _080264E4 @ =0x0000FFFF
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	movs r2, #0x80
	rsbs r2, r2, #0
	ands r2, r4
	adds r0, r5, #0
	bl m4aMPlayPitchControl
	movs r0, #0x80
	lsls r0, r0, #2
	adds r4, r4, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r2, r4, #0
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #4
	cmp r0, r1
	bge _0802647E
	adds r2, r1, #0
_0802647E:
	adds r4, r2, #0
	adds r2, r6, #0
	adds r2, #0x6a
	movs r0, #1
	movs r1, #1
	strh r1, [r2]
	adds r1, r6, #0
	adds r1, #0x6c
	strb r0, [r1]
_08026490:
	strh r4, [r6, #0x26]
	cmp r7, #3
	bne _080264B2
	adds r2, r6, #0
	adds r2, #0x6a
	ldrh r0, [r2]
	cmp r0, #1
	bne _080264B2
	mov r1, r8
	ldr r0, [r1, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _080264B2
	movs r0, #0
	strh r0, [r2]
_080264B2:
	ldr r0, [r6, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08026598
	adds r0, r6, #0
	bl sub_80236C8
	adds r0, r6, #0
	bl sub_80232D0
	ldr r0, [r6, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080264E8
	ldrh r0, [r6, #0x12]
	adds r0, #0xc
	b _080264EC
	.align 2, 0
_080264D8: .4byte gUnknown_03005B38
_080264DC: .4byte gMPlayTable
_080264E0: .4byte gSongTable
_080264E4: .4byte 0x0000FFFF
_080264E8:
	ldrh r0, [r6, #0x12]
	adds r0, #0x2a
_080264EC:
	strh r0, [r6, #0x12]
	movs r0, #0x10
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #8]
	adds r0, r0, r1
	str r0, [r6, #8]
	ldr r3, _08026538 @ =gUnknown_03005424
	ldr r1, _0802653C @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026510
	ldrh r0, [r6, #0x12]
	rsbs r0, r0, #0
	strh r0, [r6, #0x12]
_08026510:
	ldrh r2, [r6, #0x12]
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08026520
	adds r2, r1, #0
_08026520:
	strh r2, [r6, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026540
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #0xc]
	subs r0, r0, r1
	b _08026548
	.align 2, 0
_08026538: .4byte gUnknown_03005424
_0802653C: .4byte gUnknown_0300544C
_08026540:
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #0xc]
	adds r0, r0, r1
_08026548:
	str r0, [r6, #0xc]
	adds r0, r6, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08026560
	adds r1, #2
	cmp r1, #0
	ble _0802656C
	b _0802656A
_08026560:
	cmp r1, #0
	ble _0802656C
	subs r1, #2
	cmp r1, #0
	bge _0802656C
_0802656A:
	movs r1, #0
_0802656C:
	strb r1, [r5]
	adds r0, r6, #0
	bl sub_8022190
	ldr r0, [r6, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	beq _08026580
	b _0802668C
_08026580:
	ldr r1, _08026590 @ =gUnknown_030059E0
	ldr r0, _08026594 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r6, #0x10]
	movs r1, #0
	strh r0, [r6, #0x14]
	strb r1, [r5]
	b _0802668C
	.align 2, 0
_08026590: .4byte gUnknown_030059E0
_08026594: .4byte sub_8025318
_08026598:
	movs r1, #0x14
	ldrsh r3, [r6, r1]
	adds r0, r6, #0
	adds r0, #0x24
	ldrb r4, [r0]
	adds r1, r4, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _080265E2
	cmp r3, #0
	beq _080265E2
	ldr r1, _080265D4 @ =gUnknown_08097AA4
	lsls r0, r4, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	asrs r2, r0, #8
	cmp r3, #0
	ble _080265D8
	cmp r2, #0
	bgt _080265DE
	b _080265DC
	.align 2, 0
_080265D4: .4byte gUnknown_08097AA4
_080265D8:
	cmp r2, #0
	blt _080265DE
_080265DC:
	asrs r2, r0, #0xa
_080265DE:
	adds r3, r3, r2
	strh r3, [r6, #0x14]
_080265E2:
	adds r0, r6, #0
	bl sub_80232D0
	adds r0, r6, #0
	bl sub_8023260
	adds r0, r6, #0
	bl sub_8023128
	movs r0, #0x10
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #8]
	adds r0, r0, r1
	str r0, [r6, #8]
	ldr r3, _0802663C @ =gUnknown_03005424
	ldr r1, _08026640 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026616
	ldrh r0, [r6, #0x12]
	rsbs r0, r0, #0
	strh r0, [r6, #0x12]
_08026616:
	ldrh r2, [r6, #0x12]
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08026626
	adds r2, r1, #0
_08026626:
	strh r2, [r6, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026644
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #0xc]
	subs r0, r0, r1
	b _0802664C
	.align 2, 0
_0802663C: .4byte gUnknown_03005424
_08026640: .4byte gUnknown_0300544C
_08026644:
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #0xc]
	adds r0, r0, r1
_0802664C:
	str r0, [r6, #0xc]
	adds r0, r6, #0
	bl sub_8022D6C
	ldrh r0, [r6, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r6, r1]
	cmp r2, #0
	beq _08026662
	subs r0, #1
	b _0802668A
_08026662:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _0802668C
	movs r0, #0x14
	ldrsh r1, [r6, r0]
	cmp r1, #0
	bge _08026678
	rsbs r1, r1, #0
_08026678:
	ldr r0, _08026698 @ =0x000001DF
	cmp r1, r0
	bgt _0802668C
	strh r2, [r6, #0x14]
	ldr r0, [r6, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r6, #0x20]
	movs r0, #0x1e
_0802668A:
	strh r0, [r6, #0x2a]
_0802668C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08026698: .4byte 0x000001DF

	thumb_func_start sub_802669C
sub_802669C: @ 0x0802669C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x38
	movs r6, #0
	strb r6, [r4]
	adds r0, #0x24
	strb r6, [r0]
	adds r3, r5, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _0802670C @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r2, r5, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r2]
	ldr r0, _08026710 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _08026718
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r5, r1]
	subs r0, r0, r1
	ldr r1, [r5, #8]
	asrs r1, r1, #8
	ldrb r2, [r4]
	movs r3, #8
	rsbs r3, r3, #0
	str r6, [sp]
	ldr r4, _08026714 @ =sub_801EE64
	str r4, [sp, #4]
	bl sub_801E6D4
	lsls r1, r0, #8
	ldr r0, [r5, #0xc]
	subs r0, r0, r1
	b _0802673A
	.align 2, 0
_0802670C: .4byte 0xFFFFCFFF
_08026710: .4byte gUnknown_03005424
_08026714: .4byte sub_801EE64
_08026718:
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	ldr r1, [r5, #8]
	asrs r1, r1, #8
	ldrb r2, [r4]
	str r3, [sp]
	ldr r3, _0802675C @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801E6D4
	lsls r1, r0, #8
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
_0802673A:
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x20]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x20]
	ldr r2, _08026760 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x17
	orrs r0, r1
	str r0, [r2, #0x20]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802675C: .4byte sub_801EE64
_08026760: .4byte gUnknown_030059E0

	thumb_func_start sub_8026764
sub_8026764: @ 0x08026764
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r5, #0x80
	lsls r5, r5, #0x11
	orrs r0, r5
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x29
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	cmp r0, #0
	beq _080267C4
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	adds r1, r0, #0
	ldr r2, _080267C0 @ =0xFFFFFF00
	cmp r0, r2
	ble _080267B4
	adds r1, r2, #0
_080267B4:
	strh r1, [r4, #0x10]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	ble _080267E8
	b _080267E6
	.align 2, 0
_080267C0: .4byte 0xFFFFFF00
_080267C4:
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	ldrh r1, [r4, #0x10]
	movs r2, #0x10
	ldrsh r0, [r4, r2]
	asrs r2, r5, #0x10
	cmp r0, r2
	bge _080267DC
	adds r1, r2, #0
_080267DC:
	strh r1, [r4, #0x10]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	bge _080267E8
_080267E6:
	adds r1, r2, #0
_080267E8:
	strh r1, [r4, #0x14]
	adds r0, r4, #0
	bl sub_802669C
	movs r0, #0x72
	bl m4aSongNumStart
	ldr r0, _08026808 @ =gUnknown_030059E0
	ldr r1, _0802680C @ =sub_8026810
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026808: .4byte gUnknown_030059E0
_0802680C: .4byte sub_8026810

	thumb_func_start sub_8026810
sub_8026810: @ 0x08026810
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08026868
	adds r3, r4, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _0802685C @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r2, r4, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x38
	movs r0, #1
	strb r0, [r1]
	ldr r2, _08026860 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _08026864 @ =0xBFFFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	movs r0, #0x72
	bl m4aSongNumStop
	b _080269B4
	.align 2, 0
_0802685C: .4byte 0xFFFFCFFF
_08026860: .4byte gUnknown_030059E0
_08026864: .4byte 0xBFFFFFFF
_08026868:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	ldrh r3, [r4, #0x14]
	cmp r0, #0
	blt _0802687C
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _08026882
_0802687C:
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
_08026882:
	str r0, [r4, #0x20]
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r2, [r0]
	adds r0, r2, #0
	adds r0, #0x60
	movs r1, #0xff
	ands r0, r1
	cmp r0, #0xbf
	bgt _080268AC
	ldr r1, _080268D0 @ =gUnknown_08097AA4
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #5
	adds r0, r3, r0
	strh r0, [r4, #0x14]
_080268AC:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080268DA
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	beq _080268D4
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _080268D8
	.align 2, 0
_080268D0: .4byte gUnknown_08097AA4
_080268D4:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_080268D8:
	strh r0, [r4, #0x12]
_080268DA:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08026924 @ =gUnknown_03005424
	ldr r1, _08026928 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080268FC
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080268FC:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _0802690C
	adds r2, r1, #0
_0802690C:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802692C
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08026934
	.align 2, 0
_08026924: .4byte gUnknown_03005424
_08026928: .4byte gUnknown_0300544C
_0802692C:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08026934:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	movs r0, #0x72
	bl m4aSongNumStartOrContinue
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080269A8
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xe
	strh r0, [r1]
	adds r3, r4, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026998 @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r2, r4, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x38
	movs r0, #1
	strb r0, [r1]
	ldr r4, _0802699C @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	ldr r1, _080269A0 @ =0xBFFFFFFF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x72
	bl m4aSongNumStop
	ldr r0, _080269A4 @ =sub_8025E18
	str r0, [r4]
	b _080269B4
	.align 2, 0
_08026998: .4byte 0xFFFFCFFF
_0802699C: .4byte gUnknown_030059E0
_080269A0: .4byte 0xBFFFFFFF
_080269A4: .4byte sub_8025E18
_080269A8:
	ldr r0, _080269BC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080269B4
	bl sub_801F488
_080269B4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080269BC: .4byte gUnknown_030054CC

	thumb_func_start sub_80269C0
sub_80269C0: @ 0x080269C0
	push {r4, r5, lr}
	adds r5, r0, #0
	bl sub_80218E4
	ldr r0, [r5, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0xfe
	ands r0, r1
	str r0, [r5, #0x20]
	adds r0, r5, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #0xe
	strb r0, [r5, #0x17]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	adds r3, r5, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026A3C @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r2, r5, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r2]
	adds r1, r5, #0
	adds r1, #0x38
	movs r0, #1
	strb r0, [r1]
	ldr r4, _08026A40 @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	ldr r1, _08026A44 @ =0xBFFFFFFF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x72
	bl m4aSongNumStop
	ldr r1, _08026A48 @ =sub_80253C4
	str r1, [r4]
	adds r0, r5, #0
	bl _call_via_r1
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026A3C: .4byte 0xFFFFCFFF
_08026A40: .4byte gUnknown_030059E0
_08026A44: .4byte 0xBFFFFFFF
_08026A48: .4byte sub_80253C4

	thumb_func_start sub_8026A4C
sub_8026A4C: @ 0x08026A4C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x81
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	ldr r0, _08026AAC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _08026AB8
	adds r0, r4, #0
	adds r0, #0x5c
	ldr r1, _08026AB0 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	beq _08026AB8
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08026A9E
	cmp r0, #4
	bne _08026AB8
_08026A9E:
	adds r0, r4, #0
	adds r0, #0x64
	movs r1, #0x2a
	strh r1, [r0]
	ldr r0, _08026AB4 @ =0x0000F880
	b _08026AC2
	.align 2, 0
_08026AAC: .4byte gUnknown_030054CC
_08026AB0: .4byte gUnknown_03005B38
_08026AB4: .4byte 0x0000F880
_08026AB8:
	adds r0, r4, #0
	adds r0, #0x64
	movs r1, #0x27
	strh r1, [r0]
	ldr r0, _08026B50 @ =0x0000FB20
_08026AC2:
	strh r0, [r4, #0x12]
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08026ADA
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	strh r0, [r4, #0x12]
_08026ADA:
	adds r3, r4, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026B54 @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r2, r4, #0
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x38
	movs r6, #1
	strb r6, [r0]
	ldr r5, _08026B58 @ =gUnknown_030059E0
	ldr r0, [r5, #0x20]
	ldr r1, _08026B5C @ =0xBFFFFFFF
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0x72
	bl m4aSongNumStop
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08026B2A
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
_08026B2A:
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08026B38
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
_08026B38:
	movs r0, #0x74
	bl m4aSongNumStart
	ldr r1, _08026B60 @ =sub_8029074
	str r1, [r5]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08026B50: .4byte 0x0000FB20
_08026B54: .4byte 0xFFFFCFFF
_08026B58: .4byte gUnknown_030059E0
_08026B5C: .4byte 0xBFFFFFFF
_08026B60: .4byte sub_8029074

	thumb_func_start sub_8026B64
sub_8026B64: @ 0x08026B64
	push {r4, lr}
	adds r4, r0, #0
	ldrh r3, [r4, #0x14]
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08026BB6
	adds r1, r4, #0
	adds r1, #0x5c
	ldrh r2, [r1]
	movs r0, #0x30
	ands r0, r2
	cmp r0, #0
	beq _08026BB6
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08026B98
	lsls r0, r3, #0x10
	asrs r2, r0, #0x10
	ldr r0, [r4, #0x44]
	cmp r2, r0
	bge _08026B98
	adds r0, r2, #0
	adds r0, #8
	b _08026BB2
_08026B98:
	ldrh r1, [r1]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08026BB6
	lsls r0, r3, #0x10
	asrs r1, r0, #0x10
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	ble _08026BB6
	adds r0, r1, #0
	subs r0, #8
_08026BB2:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_08026BB6:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	bgt _08026BC4
	adds r0, #8
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_08026BC4:
	strh r3, [r4, #0x14]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8026BCC
sub_8026BCC: @ 0x08026BCC
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8029E6C
	cmp r0, #0
	beq _08026BDA
	b _08026D18
_08026BDA:
	adds r0, r4, #0
	bl sub_8026B64
	adds r0, r4, #0
	bl sub_8023128
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _08026C1A
	ldr r1, _08026C40 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _08026C1A
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_08026C1A:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08026C4A
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	beq _08026C44
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08026C48
	.align 2, 0
_08026C40: .4byte gUnknown_08097AA4
_08026C44:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08026C48:
	strh r0, [r4, #0x12]
_08026C4A:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08026C94 @ =gUnknown_03005424
	ldr r1, _08026C98 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026C6C
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08026C6C:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08026C7C
	adds r2, r1, #0
_08026C7C:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026C9C
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08026CA4
	.align 2, 0
_08026C94: .4byte gUnknown_03005424
_08026C98: .4byte gUnknown_0300544C
_08026C9C:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08026CA4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08026CBA
	subs r0, #1
	b _08026CE2
_08026CBA:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08026CE4
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _08026CD0
	rsbs r1, r1, #0
_08026CD0:
	ldr r0, _08026CFC @ =0x000001DF
	cmp r1, r0
	bgt _08026CE4
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08026CE2:
	strh r0, [r4, #0x2a]
_08026CE4:
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08026D08
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xe
	strh r0, [r1]
	ldr r1, _08026D00 @ =gUnknown_030059E0
	ldr r0, _08026D04 @ =sub_8025E18
	b _08026D16
	.align 2, 0
_08026CFC: .4byte 0x000001DF
_08026D00: .4byte gUnknown_030059E0
_08026D04: .4byte sub_8025E18
_08026D08:
	ldr r0, _08026D20 @ =0x00000808
	ands r1, r0
	subs r0, #8
	cmp r1, r0
	beq _08026D18
	ldr r1, _08026D24 @ =gUnknown_030059E0
	ldr r0, _08026D28 @ =sub_8025318
_08026D16:
	str r0, [r1]
_08026D18:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026D20: .4byte 0x00000808
_08026D24: .4byte gUnknown_030059E0
_08026D28: .4byte sub_8025318

	thumb_func_start sub_8026D2C
sub_8026D2C: @ 0x08026D2C
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80246DC
	adds r0, r4, #0
	bl sub_8023610
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08026D56
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08026D5A
_08026D56:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08026D5A:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08026DA4 @ =gUnknown_03005424
	ldr r1, _08026DA8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026D7E
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08026D7E:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08026D8E
	adds r2, r1, #0
_08026D8E:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08026DAC
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08026DB4
	.align 2, 0
_08026DA4: .4byte gUnknown_03005424
_08026DA8: .4byte gUnknown_0300544C
_08026DAC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08026DB4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08026DCC
	adds r1, #2
	cmp r1, #0
	ble _08026DD8
	b _08026DD6
_08026DCC:
	cmp r1, #0
	ble _08026DD8
	subs r1, #2
	cmp r1, #0
	bge _08026DD8
_08026DD6:
	movs r1, #0
_08026DD8:
	strb r1, [r5]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _08026DF0
	adds r0, r4, #0
	bl sub_8022218
	adds r0, r4, #0
	bl sub_8022284
	b _08026DFC
_08026DF0:
	adds r0, r4, #0
	bl sub_8022284
	adds r0, r4, #0
	bl sub_8022218
_08026DFC:
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08026E14
	ldr r1, _08026E1C @ =gUnknown_030059E0
	ldr r0, _08026E20 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08026E14:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026E1C: .4byte gUnknown_030059E0
_08026E20: .4byte sub_8025318

	thumb_func_start sub_8026E24
sub_8026E24: @ 0x08026E24
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	ldr r1, _08026E74 @ =0x00080204
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r3, #0
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	adds r0, r4, #0
	adds r0, #0x24
	strb r3, [r0]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #4
	strh r0, [r1]
	ldr r1, [r4, #0x20]
	subs r0, #6
	ands r1, r0
	str r1, [r4, #0x20]
	adds r0, r4, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	movs r2, #0x30
	ands r2, r0
	cmp r2, #0x10
	beq _08026E96
	cmp r2, #0x10
	bgt _08026E78
	cmp r2, #0
	beq _08026E82
	b _08026ECA
	.align 2, 0
_08026E74: .4byte 0x00080204
_08026E78:
	cmp r2, #0x20
	beq _08026EA6
	cmp r2, #0x30
	beq _08026EB8
	b _08026ECA
_08026E82:
	movs r0, #2
	orrs r1, r0
	str r1, [r4, #0x20]
	strh r3, [r4, #0x10]
	movs r0, #0xf4
	lsls r0, r0, #8
	strh r0, [r4, #0x12]
	movs r0, #0xc0
	lsls r0, r0, #4
	b _08026EC8
_08026E96:
	movs r0, #2
	orrs r1, r0
	str r1, [r4, #0x20]
	strh r3, [r4, #0x10]
	movs r0, #0xc0
	lsls r0, r0, #4
	strh r0, [r4, #0x12]
	b _08026EC8
_08026EA6:
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #1
	orrs r1, r0
	str r1, [r4, #0x20]
	movs r0, #0xf4
	lsls r0, r0, #8
	b _08026EC4
_08026EB8:
	movs r0, #3
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r4, #0x20]
	movs r0, #0xc0
	lsls r0, r0, #4
_08026EC4:
	strh r0, [r4, #0x10]
	strh r3, [r4, #0x12]
_08026EC8:
	strh r0, [r4, #0x14]
_08026ECA:
	adds r3, r4, #0
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026F04 @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r2, #0x1c]
	adds r1, r4, #0
	adds r1, #0x38
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x93
	bl m4aSongNumStart
	ldr r0, _08026F08 @ =gUnknown_030059E0
	ldr r1, _08026F0C @ =sub_802A3B8
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08026F04: .4byte 0xFFFFCFFF
_08026F08: .4byte gUnknown_030059E0
_08026F0C: .4byte sub_802A3B8

	thumb_func_start sub_8026F10
sub_8026F10: @ 0x08026F10
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x20]
	ldr r1, _08026F68 @ =0x0000080A
	ands r0, r1
	subs r1, #0xa
	cmp r0, r1
	bne _08026F74
	adds r0, r5, #0
	bl sub_80218E4
	ldr r0, [r5, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x20]
	adds r0, r5, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #0xe
	strb r0, [r5, #0x17]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x3e
	strh r0, [r1]
	ldr r0, [r5, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0x92
	lsls r0, r0, #1
	bl m4aSongNumStart
	ldr r0, _08026F6C @ =gUnknown_030059E0
	ldr r1, _08026F70 @ =sub_8026BCC
	str r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	b _08026FB4
	.align 2, 0
_08026F68: .4byte 0x0000080A
_08026F6C: .4byte gUnknown_030059E0
_08026F70: .4byte sub_8026BCC
_08026F74:
	adds r0, r5, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08026FBC @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	adds r0, r5, #0
	adds r0, #0x64
	movs r4, #4
	strh r4, [r0]
	adds r0, r5, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #9
	strb r0, [r5, #0x17]
	ldr r0, [r5, #0x20]
	orrs r0, r4
	str r0, [r5, #0x20]
	adds r1, r5, #0
	adds r1, #0x99
	movs r0, #0x1e
	strb r0, [r1]
	ldr r0, _08026FC0 @ =gUnknown_030059E0
	ldr r1, _08026FC4 @ =sub_8025AB8
	str r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
_08026FB4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08026FBC: .4byte 0xFFFFBFFF
_08026FC0: .4byte gUnknown_030059E0
_08026FC4: .4byte sub_8025AB8

	thumb_func_start sub_8026FC8
sub_8026FC8: @ 0x08026FC8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r2, r4, #0
	adds r2, #0x5c
	ldrh r1, [r2]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08027000
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
_08027000:
	ldrh r1, [r2]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08027014
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
_08027014:
	adds r1, r4, #0
	adds r1, #0x64
	movs r2, #0
	movs r0, #0x3f
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x24
	strb r2, [r0]
	ldr r0, _08027038 @ =gUnknown_030059E0
	ldr r1, _0802703C @ =sub_8027040
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027038: .4byte gUnknown_030059E0
_0802703C: .4byte sub_8027040

	thumb_func_start sub_8027040
sub_8027040: @ 0x08027040
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08027058
	adds r1, r4, #0
	adds r1, #0x24
	ldrb r0, [r1]
	subs r0, #4
	b _08027060
_08027058:
	adds r1, r4, #0
	adds r1, #0x24
	ldrb r0, [r1]
	adds r0, #4
_08027060:
	strb r0, [r1]
	adds r5, r1, #0
	adds r0, r4, #0
	bl sub_8023610
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08027086
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _0802708A
_08027086:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_0802708A:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080270D4 @ =gUnknown_03005424
	ldr r1, _080270D8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080270AE
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080270AE:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080270BE
	adds r2, r1, #0
_080270BE:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080270DC
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080270E4
	.align 2, 0
_080270D4: .4byte gUnknown_03005424
_080270D8: .4byte gUnknown_0300544C
_080270DC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080270E4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08027104
	ldr r1, _0802710C @ =gUnknown_030059E0
	ldr r0, _08027110 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08027104:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802710C: .4byte gUnknown_030059E0
_08027110: .4byte sub_8025318

	thumb_func_start sub_8027114
sub_8027114: @ 0x08027114
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _08027132
	adds r0, r4, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #4
	beq _08027154
_08027132:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x2f
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
_08027154:
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	strb r1, [r0]
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0802716E
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	b _08027174
_0802716E:
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
_08027174:
	str r0, [r4, #0x20]
	ldr r0, _08027188 @ =gUnknown_030059E0
	ldr r1, _0802718C @ =sub_8027190
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027188: .4byte gUnknown_030059E0
_0802718C: .4byte sub_8027190

	thumb_func_start sub_8027190
sub_8027190: @ 0x08027190
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r3, [r4, #0x48]
	ldr r5, [r4, #0x40]
	ldrh r1, [r4, #0x14]
	adds r0, #0x5c
	ldrh r2, [r0]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _080271C8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	rsbs r2, r5, #0
	cmp r0, r2
	bge _08027202
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	ble _08027202
	lsls r0, r2, #0x10
	b _08027200
_080271C8:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _080271F0
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r5
	ble _08027202
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r5
	bge _08027202
	lsls r0, r5, #0x10
	b _08027200
_080271F0:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	ble _080271FC
	subs r0, #8
	b _080271FE
_080271FC:
	adds r0, #8
_080271FE:
	lsls r0, r0, #0x10
_08027200:
	lsrs r1, r0, #0x10
_08027202:
	strh r1, [r4, #0x14]
	adds r0, r4, #0
	bl sub_80232D0
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08027218
	subs r0, #1
	b _08027244
_08027218:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027246
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08027232
	rsbs r1, r1, #0
_08027232:
	ldr r0, _0802724C @ =0x000001DF
	cmp r1, r0
	bgt _08027246
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027244:
	strh r0, [r4, #0x2a]
_08027246:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802724C: .4byte 0x000001DF

	thumb_func_start sub_8027250
sub_8027250: @ 0x08027250
	push {r4, lr}
	adds r4, r0, #0
	movs r2, #0
	movs r0, #0x78
	strh r0, [r4, #0x2c]
	adds r0, r4, #0
	adds r0, #0x5a
	strb r2, [r0]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _0802726A
	rsbs r1, r1, #0
_0802726A:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r1, r0
	bgt _080272A8
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	cmp r1, #0xa0
	bgt _08027298
	movs r0, #0xa0
	rsbs r0, r0, #0
	cmp r1, r0
	bge _08027288
	movs r0, #0xc0
	lsls r0, r0, #1
	b _0802729A
_08027288:
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08027298
	movs r0, #0xc0
	lsls r0, r0, #1
	b _0802729A
_08027298:
	ldr r0, _080272A4 @ =0x0000FE80
_0802729A:
	strh r0, [r4, #0x10]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x14
	b _080272C0
	.align 2, 0
_080272A4: .4byte 0x0000FE80
_080272A8:
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _080272B6
	movs r0, #0xc0
	lsls r0, r0, #1
	b _080272B8
_080272B6:
	ldr r0, _08027314 @ =0x0000FE80
_080272B8:
	strh r0, [r4, #0x10]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x15
_080272C0:
	strh r0, [r1]
	movs r2, #0xfd
	lsls r2, r2, #8
	strh r2, [r4, #0x12]
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080272E0
	lsls r0, r2, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #0x12]
	ldrh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #0x10]
_080272E0:
	adds r0, r4, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _08027318 @ =0xFFFFFDF3
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	ldr r0, _0802731C @ =gUnknown_030059E0
	ldr r1, _08027320 @ =sub_8027324
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027314: .4byte 0x0000FE80
_08027318: .4byte 0xFFFFFDF3
_0802731C: .4byte gUnknown_030059E0
_08027320: .4byte sub_8027324

	thumb_func_start sub_8027324
sub_8027324: @ 0x08027324
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802733C
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08027340
_0802733C:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08027340:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _0802738C @ =gUnknown_03005424
	ldr r1, _08027390 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027364
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027364:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027374
	adds r2, r1, #0
_08027374:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027394
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _0802739C
	.align 2, 0
_0802738C: .4byte gUnknown_03005424
_08027390: .4byte gUnknown_0300544C
_08027394:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_0802739C:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080273C0
	ldr r1, _080273C8 @ =gUnknown_030059E0
	ldr r0, _080273CC @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
_080273C0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080273C8: .4byte gUnknown_030059E0
_080273CC: .4byte sub_8025318

	thumb_func_start sub_80273D0
sub_80273D0: @ 0x080273D0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080273E4 @ =gUnknown_030054CC
	ldrb r2, [r0]
	cmp r2, #2
	bls _080273E8
	adds r0, r4, #0
	bl sub_802A4B8
	b _080274A2
	.align 2, 0
_080273E4: .4byte gUnknown_030054CC
_080273E8:
	ldr r0, _08027410 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08027408
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _08027404
	ldr r0, _08027414 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08027408
_08027404:
	cmp r1, #0x1d
	bne _08027418
_08027408:
	adds r0, r4, #0
	bl sub_802A468
	b _080274A2
	.align 2, 0
_08027410: .4byte gUnknown_030055B4
_08027414: .4byte gUnknown_030054B0
_08027418:
	cmp r2, #1
	bne _08027422
	ldr r1, _08027440 @ =gUnknown_030054F4
	movs r0, #7
	strb r0, [r1]
_08027422:
	ldr r0, _08027444 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _08027448
	ldr r0, _08027440 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _08027448
	adds r0, r4, #0
	bl sub_802A40C
	b _080274A2
	.align 2, 0
_08027440: .4byte gUnknown_030054F4
_08027444: .4byte gUnknown_030059E0
_08027448:
	adds r0, r4, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #6
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bgt _08027478
	adds r0, r4, #0
	bl sub_802785C
	b _080274A2
_08027478:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _080274A8 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r0, [r4, #0x20]
	ldr r1, _080274AC @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r4, #0x20]
	ldr r0, _080274B0 @ =gUnknown_030059E0
	ldr r1, _080274B4 @ =sub_80274B8
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
_080274A2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080274A8: .4byte 0xFFFFBFFF
_080274AC: .4byte 0xFFDFFFFF
_080274B0: .4byte gUnknown_030059E0
_080274B4: .4byte sub_80274B8

	thumb_func_start sub_80274B8
sub_80274B8: @ 0x080274B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, _08027514 @ =gUnknown_030054D0
	ldr r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, _08027518 @ =0x000001FF
	cmp r1, r0
	ble _080274E2
	adds r0, r4, #0
	adds r0, #0x5e
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _080274E8
_080274E2:
	ldr r0, _0802751C @ =0x00000579
	cmp r2, r0
	bls _0802752C
_080274E8:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x19
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08027520 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	movs r0, #0xe8
	bl m4aSongNumStart
	ldr r0, _08027524 @ =gUnknown_030059E0
	ldr r1, _08027528 @ =sub_8027620
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	b _08027614
	.align 2, 0
_08027514: .4byte gUnknown_030054D0
_08027518: .4byte 0x000001FF
_0802751C: .4byte 0x00000579
_08027520: .4byte 0xFFFFBFFF
_08027524: .4byte gUnknown_030059E0
_08027528: .4byte sub_8027620
_0802752C:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08027544
	subs r0, #8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bgt _08027540
	movs r1, #0
_08027540:
	strh r1, [r4, #0x14]
	b _08027548
_08027544:
	movs r0, #0
	strh r0, [r4, #0x14]
_08027548:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bgt _08027558
	adds r0, r4, #0
	bl sub_802785C
	b _08027614
_08027558:
	ldr r2, _080275BC @ =gUnknown_03005960
	ldr r1, [r2, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r1, r0
	ble _08027568
	subs r0, r1, #1
	str r0, [r2, #0x1c]
_08027568:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080275C0 @ =gUnknown_03005424
	ldr r1, _080275C4 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027596
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027596:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080275A6
	adds r2, r1, #0
_080275A6:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080275C8
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080275D0
	.align 2, 0
_080275BC: .4byte gUnknown_03005960
_080275C0: .4byte gUnknown_03005424
_080275C4: .4byte gUnknown_0300544C
_080275C8:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080275D0:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _080275E6
	subs r0, #1
	b _08027612
_080275E6:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027614
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08027600
	rsbs r1, r1, #0
_08027600:
	ldr r0, _0802761C @ =0x000001DF
	cmp r1, r0
	bgt _08027614
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027612:
	strh r0, [r4, #0x2a]
_08027614:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802761C: .4byte 0x000001DF

	thumb_func_start sub_8027620
sub_8027620: @ 0x08027620
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	adds r2, r6, #0
	adds r2, #0x68
	ldr r1, _080276C8 @ =gUnknown_080D672C
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080276CC @ =gUnknown_03005960
	ldr r2, [r3, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r2, r0
	ble _08027656
	subs r0, r2, #1
	str r0, [r3, #0x1c]
_08027656:
	cmp r1, #0x1f
	beq _0802765C
	b _0802778C
_0802765C:
	adds r0, r6, #0
	adds r0, #0x6a
	ldrh r1, [r0]
	mov sb, r0
	cmp r1, #0
	bne _08027680
	adds r0, #0x26
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08027680
	adds r1, r6, #0
	adds r1, #0x64
	movs r0, #0x1a
	strh r0, [r1]
_08027680:
	mov r1, sb
	ldrh r0, [r1]
	cmp r0, #1
	bne _08027752
	movs r2, #0x14
	ldrsh r0, [r6, r2]
	cmp r0, #0
	bgt _08027752
	adds r1, r6, #0
	adds r1, #0x64
	movs r2, #0
	movs r0, #0x1b
	strh r0, [r1]
	strh r2, [r6, #0x14]
	movs r0, #0xe8
	bl m4aSongNumStop
	ldr r0, _080276D0 @ =gUnknown_030054D0
	ldr r1, [r0]
	cmp r1, #0
	beq _08027752
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r2, r1, #0
	movs r0, #0
	mov r8, r0
	ldr r0, _080276D4 @ =0x000002DA
	cmp r1, r0
	bhi _080276D8
	movs r1, #0xc8
	lsls r1, r1, #2
	mov r8, r1
	b _080276FC
	.align 2, 0
_080276C8: .4byte gUnknown_080D672C
_080276CC: .4byte gUnknown_03005960
_080276D0: .4byte gUnknown_030054D0
_080276D4: .4byte 0x000002DA
_080276D8:
	ldr r0, _080276E8 @ =0x0000045A
	cmp r1, r0
	bhi _080276EC
	movs r2, #0xfa
	lsls r2, r2, #1
	mov r8, r2
	b _080276FC
	.align 2, 0
_080276E8: .4byte 0x0000045A
_080276EC:
	ldr r0, _08027774 @ =0x00000579
	cmp r2, r0
	bhi _080276F6
	movs r0, #0x64
	mov r8, r0
_080276F6:
	mov r1, r8
	cmp r1, #0
	beq _08027752
_080276FC:
	ldr r1, _08027778 @ =gUnknown_03005450
	ldr r5, [r1]
	mov r2, r8
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0802777C @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08027744
	ldr r0, _08027780 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08027744
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08027784 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0802773C
	movs r0, #0xff
_0802773C:
	strb r0, [r1]
	ldr r1, _08027788 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08027744:
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r1, [r6, #0xc]
	asrs r1, r1, #8
	mov r2, r8
	bl sub_801F3A4
_08027752:
	mov r1, sb
	ldrh r0, [r1]
	cmp r0, #2
	bne _0802778C
	adds r0, r6, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802778C
	adds r0, r6, #0
	bl sub_802785C
	b _0802784C
	.align 2, 0
_08027774: .4byte 0x00000579
_08027778: .4byte gUnknown_03005450
_0802777C: .4byte 0x0000C350
_08027780: .4byte gUnknown_030054CC
_08027784: .4byte gUnknown_03005448
_08027788: .4byte gUnknown_030054A8
_0802778C:
	ldrh r0, [r6, #0x14]
	subs r0, #0x20
	strh r0, [r6, #0x14]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0802779C
	movs r0, #0
	strh r0, [r6, #0x14]
_0802779C:
	adds r0, r6, #0
	bl sub_8029FA4
	adds r0, r6, #0
	bl sub_80232D0
	adds r0, r6, #0
	bl sub_8023260
	movs r2, #0x10
	ldrsh r1, [r6, r2]
	ldr r0, [r6, #8]
	adds r0, r0, r1
	str r0, [r6, #8]
	ldr r3, _080277F8 @ =gUnknown_03005424
	ldr r1, _080277FC @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080277D0
	ldrh r0, [r6, #0x12]
	rsbs r0, r0, #0
	strh r0, [r6, #0x12]
_080277D0:
	ldrh r2, [r6, #0x12]
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080277E0
	adds r2, r1, #0
_080277E0:
	strh r2, [r6, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027800
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	ldr r0, [r6, #0xc]
	subs r0, r0, r1
	b _08027808
	.align 2, 0
_080277F8: .4byte gUnknown_03005424
_080277FC: .4byte gUnknown_0300544C
_08027800:
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #0xc]
	adds r0, r0, r1
_08027808:
	str r0, [r6, #0xc]
	adds r0, r6, #0
	bl sub_8022D6C
	ldrh r0, [r6, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r6, r1]
	cmp r2, #0
	beq _0802781E
	subs r0, #1
	b _0802784A
_0802781E:
	adds r0, r6, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _0802784C
	movs r0, #0x14
	ldrsh r1, [r6, r0]
	cmp r1, #0
	bge _08027838
	rsbs r1, r1, #0
_08027838:
	ldr r0, _08027858 @ =0x000001DF
	cmp r1, r0
	bgt _0802784C
	strh r2, [r6, #0x14]
	ldr r0, [r6, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r6, #0x20]
	movs r0, #0x1e
_0802784A:
	strh r0, [r6, #0x2a]
_0802784C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08027858: .4byte 0x000001DF

	thumb_func_start sub_802785C
sub_802785C: @ 0x0802785C
	push {lr}
	adds r1, r0, #0
	ldr r3, _08027898 @ =gUnknown_03005960
	ldr r2, [r3, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r2, r0
	ble _08027870
	subs r0, r2, #1
	str r0, [r3, #0x1c]
_08027870:
	adds r2, r1, #0
	adds r2, #0x72
	movs r0, #0x5a
	strh r0, [r2]
	ldr r0, _0802789C @ =gUnknown_030055B4
	ldrb r2, [r0]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1b
	bgt _080278CA
	movs r0, #3
	ands r0, r2
	cmp r0, #1
	beq _080278AC
	cmp r0, #1
	bgt _080278A0
	cmp r0, #0
	beq _080278A6
	b _080278D0
	.align 2, 0
_08027898: .4byte gUnknown_03005960
_0802789C: .4byte gUnknown_030055B4
_080278A0:
	cmp r0, #2
	beq _080278C4
	b _080278D0
_080278A6:
	adds r1, #0x64
	movs r0, #0x1c
	b _080278B0
_080278AC:
	adds r1, #0x64
	movs r0, #0x1d
_080278B0:
	strh r0, [r1]
	ldr r1, _080278BC @ =gUnknown_030059E0
	ldr r0, _080278C0 @ =sub_80278D4
	str r0, [r1]
	b _080278D0
	.align 2, 0
_080278BC: .4byte gUnknown_030059E0
_080278C0: .4byte sub_80278D4
_080278C4:
	adds r1, #0x64
	movs r0, #0x20
	b _080278CE
_080278CA:
	adds r1, #0x64
	movs r0, #0x1c
_080278CE:
	strh r0, [r1]
_080278D0:
	pop {r0}
	bx r0

	thumb_func_start sub_80278D4
sub_80278D4: @ 0x080278D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0802790C @ =gUnknown_03005960
	ldr r1, [r2, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r1, r0
	ble _080278E8
	subs r0, r1, #1
	str r0, [r2, #0x1c]
_080278E8:
	adds r1, r4, #0
	adds r1, #0x72
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0802792E
	ldr r0, _08027910 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	bne _08027918
	ldr r0, _08027914 @ =gUnknown_03005490
	ldr r0, [r0]
	bl sub_808916C
	b _08027928
	.align 2, 0
_0802790C: .4byte gUnknown_03005960
_08027910: .4byte gUnknown_030054CC
_08027914: .4byte gUnknown_03005490
_08027918:
	ldr r0, _08027984 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _08027988 @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0802798C @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
_08027928:
	ldr r1, _08027990 @ =gUnknown_030059E0
	ldr r0, _08027994 @ =sub_802A3F0
	str r0, [r1]
_0802792E:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027998 @ =gUnknown_03005424
	ldr r1, _0802799C @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802795C
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_0802795C:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _0802796C
	adds r2, r1, #0
_0802796C:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080279A0
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080279A8
	.align 2, 0
_08027984: .4byte gUnknown_03005490
_08027988: .4byte gUnknown_030053F0
_0802798C: .4byte gUnknown_030054F4
_08027990: .4byte gUnknown_030059E0
_08027994: .4byte sub_802A3F0
_08027998: .4byte gUnknown_03005424
_0802799C: .4byte gUnknown_0300544C
_080279A0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080279A8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _080279BE
	subs r0, #1
	b _080279EA
_080279BE:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _080279EC
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _080279D8
	rsbs r1, r1, #0
_080279D8:
	ldr r0, _080279F4 @ =0x000001DF
	cmp r1, r0
	bgt _080279EC
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_080279EA:
	strh r0, [r4, #0x2a]
_080279EC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080279F4: .4byte 0x000001DF

	thumb_func_start sub_80279F8
sub_80279F8: @ 0x080279F8
	push {r4, lr}
	adds r4, r0, #0
	ldrh r2, [r4, #0x14]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	movs r0, #0xb0
	lsls r0, r0, #3
	cmp r1, r0
	ble _08027A10
	adds r0, r2, #0
	subs r0, #0x80
	b _08027A28
_08027A10:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, _08027A20 @ =0x000004BF
	cmp r1, r0
	bgt _08027A24
	adds r0, r2, #0
	adds r0, #0x40
	b _08027A28
	.align 2, 0
_08027A20: .4byte 0x000004BF
_08027A24:
	movs r0, #0xa0
	lsls r0, r0, #3
_08027A28:
	strh r0, [r4, #0x14]
	adds r2, r4, #0
	adds r2, #0x72
	ldrh r3, [r2]
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, _08027A68 @ =0x00007FFE
	cmp r1, r0
	bgt _08027A3E
	adds r0, r3, #1
	strh r0, [r2]
_08027A3E:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0x78
	bne _08027A4E
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x20
	strh r0, [r1]
_08027A4E:
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0xb4
	bne _08027A84
	ldr r0, _08027A6C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	bne _08027A74
	ldr r0, _08027A70 @ =gUnknown_03005490
	ldr r0, [r0]
	bl sub_808916C
	b _08027A84
	.align 2, 0
_08027A68: .4byte 0x00007FFE
_08027A6C: .4byte gUnknown_030054CC
_08027A70: .4byte gUnknown_03005490
_08027A74:
	ldr r0, _08027AD8 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _08027ADC @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _08027AE0 @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
_08027A84:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027AE4 @ =gUnknown_03005424
	ldr r1, _08027AE8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027AB2
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027AB2:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027AC2
	adds r2, r1, #0
_08027AC2:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027AEC
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08027AF4
	.align 2, 0
_08027AD8: .4byte gUnknown_03005490
_08027ADC: .4byte gUnknown_030053F0
_08027AE0: .4byte gUnknown_030054F4
_08027AE4: .4byte gUnknown_03005424
_08027AE8: .4byte gUnknown_0300544C
_08027AEC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08027AF4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08027B0A
	subs r0, #1
	b _08027B36
_08027B0A:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027B38
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08027B24
	rsbs r1, r1, #0
_08027B24:
	ldr r0, _08027B84 @ =0x000001DF
	cmp r1, r0
	bgt _08027B38
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027B36:
	strh r0, [r4, #0x2a]
_08027B38:
	ldr r2, _08027B88 @ =gUnknown_03005960
	ldr r1, [r2, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r1, r0
	ble _08027B48
	subs r0, r1, #1
	str r0, [r2, #0x1c]
_08027B48:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x13
	ands r0, r1
	cmp r0, #0
	beq _08027B7E
	adds r1, r4, #0
	adds r1, #0x5a
	movs r0, #1
	strb r0, [r1]
	adds r1, #2
	movs r0, #0x10
	strh r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #4
	strh r0, [r4, #0x14]
	adds r1, #8
	movs r0, #9
	strh r0, [r1]
	bl sub_801583C
	ldr r1, _08027B8C @ =gUnknown_030059E0
	ldr r0, _08027B90 @ =sub_8027B98
	str r0, [r1]
	ldr r0, _08027B94 @ =0x00000111
	bl m4aSongNumStart
_08027B7E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027B84: .4byte 0x000001DF
_08027B88: .4byte gUnknown_03005960
_08027B8C: .4byte gUnknown_030059E0
_08027B90: .4byte sub_8027B98
_08027B94: .4byte 0x00000111

	thumb_func_start sub_8027B98
sub_8027B98: @ 0x08027B98
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027BF0 @ =gUnknown_03005424
	ldr r1, _08027BF4 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027BC8
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027BC8:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027BD8
	adds r2, r1, #0
_08027BD8:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027BF8
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08027C00
	.align 2, 0
_08027BF0: .4byte gUnknown_03005424
_08027BF4: .4byte gUnknown_0300544C
_08027BF8:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08027C00:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08027C16
	subs r0, #1
	b _08027C42
_08027C16:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027C44
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08027C30
	rsbs r1, r1, #0
_08027C30:
	ldr r0, _08027C54 @ =0x000001DF
	cmp r1, r0
	bgt _08027C44
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027C42:
	strh r0, [r4, #0x2a]
_08027C44:
	ldr r1, _08027C58 @ =gUnknown_03005960
	ldr r0, [r1, #8]
	subs r0, #0x38
	str r0, [r1, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027C54: .4byte 0x000001DF
_08027C58: .4byte gUnknown_03005960

	thumb_func_start sub_8027C5C
sub_8027C5C: @ 0x08027C5C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, _08027C74 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	cmp r0, #0x78
	ble _08027C78
	movs r0, #0x90
	lsls r0, r0, #3
	b _08027C86
	.align 2, 0
_08027C74: .4byte gUnknown_03005960
_08027C78:
	cmp r0, #0x77
	bgt _08027C82
	movs r0, #0xb0
	lsls r0, r0, #3
	b _08027C86
_08027C82:
	movs r0, #0xa0
	lsls r0, r0, #3
_08027C86:
	strh r0, [r4, #0x14]
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027CDC @ =gUnknown_03005424
	ldr r1, _08027CE0 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027CB6
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027CB6:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027CC6
	adds r2, r1, #0
_08027CC6:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027CE4
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08027CEC
	.align 2, 0
_08027CDC: .4byte gUnknown_03005424
_08027CE0: .4byte gUnknown_0300544C
_08027CE4:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08027CEC:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08027D02
	subs r0, #1
	b _08027D2E
_08027D02:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027D30
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08027D1C
	rsbs r1, r1, #0
_08027D1C:
	ldr r0, _08027D38 @ =0x000001DF
	cmp r1, r0
	bgt _08027D30
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027D2E:
	strh r0, [r4, #0x2a]
_08027D30:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08027D38: .4byte 0x000001DF

	thumb_func_start sub_8027D3C
sub_8027D3C: @ 0x08027D3C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	ldr r1, _08027D78 @ =gUnknown_030054B4
	ldr r0, _08027D7C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r0, _08027D80 @ =gUnknown_030054D0
	mov r2, r8
	lsls r1, r2, #5
	adds r1, #0x40
	ldr r0, [r0]
	adds r0, r0, r1
	lsls r5, r0, #8
	ldr r0, [r4, #8]
	cmp r0, r5
	bhs _08027D84
	adds r1, r4, #0
	adds r1, #0x5c
	movs r0, #0x10
	b _08027D96
	.align 2, 0
_08027D78: .4byte gUnknown_030054B4
_08027D7C: .4byte 0x04000128
_08027D80: .4byte gUnknown_030054D0
_08027D84:
	cmp r0, r5
	bls _08027D90
	adds r1, r4, #0
	adds r1, #0x5c
	movs r0, #0x20
	b _08027D96
_08027D90:
	adds r1, r4, #0
	adds r1, #0x5c
	movs r0, #0
_08027D96:
	strh r0, [r1]
	adds r6, r1, #0
	adds r0, r4, #0
	bl sub_802966C
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r7, r0, #0
	cmp r1, #0xbf
	bgt _08027DD4
	ldr r1, _08027E28 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _08027DD4
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_08027DD4:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027E2C @ =gUnknown_03005424
	ldr r1, _08027E30 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027E02
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027E02:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027E12
	adds r2, r1, #0
_08027E12:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027E34
	movs r2, #0x12
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08027E3C
	.align 2, 0
_08027E28: .4byte gUnknown_08097AA4
_08027E2C: .4byte gUnknown_03005424
_08027E30: .4byte gUnknown_0300544C
_08027E34:
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08027E3C:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08027E52
	subs r0, #1
	b _08027E7A
_08027E52:
	ldrb r0, [r7]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08027E7C
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _08027E68
	rsbs r1, r1, #0
_08027E68:
	ldr r0, _08027EB8 @ =0x000001DF
	cmp r1, r0
	bgt _08027E7C
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08027E7A:
	strh r0, [r4, #0x2a]
_08027E7C:
	ldr r1, [r4, #8]
	cmp r1, r5
	bls _08027E88
	ldrh r0, [r6]
	cmp r0, #0x10
	beq _08027E96
_08027E88:
	cmp r1, r5
	bhs _08027E92
	ldrh r0, [r6]
	cmp r0, #0x20
	beq _08027E96
_08027E92:
	cmp r1, r5
	bne _08027EDC
_08027E96:
	adds r0, r4, #0
	adds r0, #0x5a
	movs r1, #0
	strb r1, [r0]
	strh r1, [r4, #0x10]
	strh r1, [r4, #0x12]
	strh r1, [r4, #0x14]
	str r5, [r4, #8]
	mov r0, r8
	cmp r0, #3
	bhi _08027EBC
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x1c
	strh r0, [r1]
	b _08027EC2
	.align 2, 0
_08027EB8: .4byte 0x000001DF
_08027EBC:
	adds r0, r4, #0
	adds r0, #0x64
	strh r1, [r0]
_08027EC2:
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r1, r4, #0
	adds r1, #0x72
	movs r0, #0
	strh r0, [r1]
	strh r0, [r6]
	ldr r1, _08027EE8 @ =gUnknown_030059E0
	ldr r0, _08027EEC @ =sub_802A4FC
	str r0, [r1]
_08027EDC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08027EE8: .4byte gUnknown_030059E0
_08027EEC: .4byte sub_802A4FC

	thumb_func_start sub_8027EF0
sub_8027EF0: @ 0x08027EF0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08027FD0
	adds r0, r4, #0
	bl sub_8023610
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08027F20
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _08027F24
_08027F20:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_08027F24:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08027F70 @ =gUnknown_03005424
	ldr r1, _08027F74 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027F48
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08027F48:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08027F58
	adds r2, r1, #0
_08027F58:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08027F78
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08027F80
	.align 2, 0
_08027F70: .4byte gUnknown_03005424
_08027F74: .4byte gUnknown_0300544C
_08027F78:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08027F80:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08027F98
	adds r1, #2
	cmp r1, #0
	ble _08027FA4
	b _08027FA2
_08027F98:
	cmp r1, #0
	ble _08027FA4
	subs r1, #2
	cmp r1, #0
	bge _08027FA4
_08027FA2:
	movs r1, #0
_08027FA4:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08028080
	ldr r1, _08027FC8 @ =gUnknown_030059E0
	ldr r0, _08027FCC @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
	b _08028080
	.align 2, 0
_08027FC8: .4byte gUnknown_030059E0
_08027FCC: .4byte sub_8025318
_08027FD0:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_80231C0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _0802802C @ =gUnknown_03005424
	ldr r1, _08028030 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028004
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08028004:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08028014
	adds r2, r1, #0
_08028014:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028034
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _0802803C
	.align 2, 0
_0802802C: .4byte gUnknown_03005424
_08028030: .4byte gUnknown_0300544C
_08028034:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_0802803C:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _08028052
	subs r0, #1
	b _0802807E
_08028052:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08028080
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _0802806C
	rsbs r1, r1, #0
_0802806C:
	ldr r0, _08028088 @ =0x000001DF
	cmp r1, r0
	bgt _08028080
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_0802807E:
	strh r0, [r4, #0x2a]
_08028080:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08028088: .4byte 0x000001DF

	thumb_func_start sub_802808C
sub_802808C: @ 0x0802808C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08028148
	adds r0, r4, #0
	bl sub_80232D0
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080280E8 @ =gUnknown_03005424
	ldr r1, _080280EC @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080280C2
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080280C2:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080280D2
	adds r2, r1, #0
_080280D2:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080280F0
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080280F8
	.align 2, 0
_080280E8: .4byte gUnknown_03005424
_080280EC: .4byte gUnknown_0300544C
_080280F0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080280F8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08028110
	adds r1, #2
	cmp r1, #0
	ble _0802811C
	b _0802811A
_08028110:
	cmp r1, #0
	ble _0802811C
	subs r1, #2
	cmp r1, #0
	bge _0802811C
_0802811A:
	movs r1, #0
_0802811C:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080281F8
	ldr r1, _08028140 @ =gUnknown_030059E0
	ldr r0, _08028144 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
	b _080281F8
	.align 2, 0
_08028140: .4byte gUnknown_030059E0
_08028144: .4byte sub_8025318
_08028148:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_80231C0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080281A4 @ =gUnknown_03005424
	ldr r1, _080281A8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802817C
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_0802817C:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _0802818C
	adds r2, r1, #0
_0802818C:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080281AC
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080281B4
	.align 2, 0
_080281A4: .4byte gUnknown_03005424
_080281A8: .4byte gUnknown_0300544C
_080281AC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080281B4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _080281CA
	subs r0, #1
	b _080281F6
_080281CA:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _080281F8
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _080281E4
	rsbs r1, r1, #0
_080281E4:
	ldr r0, _08028200 @ =0x000001DF
	cmp r1, r0
	bgt _080281F8
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_080281F6:
	strh r0, [r4, #0x2a]
_080281F8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08028200: .4byte 0x000001DF

	thumb_func_start sub_8028204
sub_8028204: @ 0x08028204
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8023610
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	movs r1, #0x2a
	cmp r0, #0
	beq _08028226
	movs r1, #0xc
_08028226:
	ldrh r2, [r4, #0x12]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	cmp r0, #0
	bge _08028238
	lsls r0, r1, #0x10
	asrs r0, r0, #0x11
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_08028238:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r2, r0, r2
	strh r2, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08028288 @ =gUnknown_03005424
	ldr r1, _0802828C @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028260
	rsbs r0, r2, #0
	strh r0, [r4, #0x12]
_08028260:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08028270
	adds r2, r1, #0
_08028270:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028290
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08028298
	.align 2, 0
_08028288: .4byte gUnknown_03005424
_0802828C: .4byte gUnknown_0300544C
_08028290:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08028298:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _080282B0
	adds r1, #2
	cmp r1, #0
	ble _080282BC
	b _080282BA
_080282B0:
	cmp r1, #0
	ble _080282BC
	subs r1, #2
	cmp r1, #0
	bge _080282BC
_080282BA:
	movs r1, #0
_080282BC:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080282DC
	ldr r1, _080282E4 @ =gUnknown_030059E0
	ldr r0, _080282E8 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_080282DC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080282E4: .4byte gUnknown_030059E0
_080282E8: .4byte sub_8025318

	thumb_func_start sub_80282EC
sub_80282EC: @ 0x080282EC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x48]
	asrs r0, r0, #1
	str r0, [r4, #0x48]
	adds r0, r4, #0
	bl sub_8023610
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _08028310
	adds r0, r4, #0
	bl sub_80236C8
_08028310:
	adds r0, r4, #0
	bl sub_80232D0
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08028360 @ =gUnknown_03005424
	ldr r1, _08028364 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028338
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08028338:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08028348
	adds r2, r1, #0
_08028348:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028368
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08028370
	.align 2, 0
_08028360: .4byte gUnknown_03005424
_08028364: .4byte gUnknown_0300544C
_08028368:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08028370:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08028388
	adds r1, #2
	cmp r1, #0
	ble _08028394
	b _08028392
_08028388:
	cmp r1, #0
	ble _08028394
	subs r1, #2
	cmp r1, #0
	bge _08028394
_08028392:
	movs r1, #0
_08028394:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080283B4
	ldr r1, _080283BC @ =gUnknown_030059E0
	ldr r0, _080283C0 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_080283B4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080283BC: .4byte gUnknown_030059E0
_080283C0: .4byte sub_8025318

	thumb_func_start sub_80283C4
sub_80283C4: @ 0x080283C4
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80232D0
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08028414 @ =gUnknown_03005424
	ldr r1, _08028418 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080283EE
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080283EE:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080283FE
	adds r2, r1, #0
_080283FE:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802841C
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08028424
	.align 2, 0
_08028414: .4byte gUnknown_03005424
_08028418: .4byte gUnknown_0300544C
_0802841C:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08028424:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _0802843C
	adds r1, #2
	cmp r1, #0
	ble _08028448
	b _08028446
_0802843C:
	cmp r1, #0
	ble _08028448
	subs r1, #2
	cmp r1, #0
	bge _08028448
_08028446:
	movs r1, #0
_08028448:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08028468
	ldr r1, _08028470 @ =gUnknown_030059E0
	ldr r0, _08028474 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08028468:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08028470: .4byte gUnknown_030059E0
_08028474: .4byte sub_8025318

	thumb_func_start sub_8028478
sub_8028478: @ 0x08028478
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08028550
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080284A2
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _080284A6
_080284A2:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_080284A6:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080284F0 @ =gUnknown_03005424
	ldr r1, _080284F4 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080284CA
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080284CA:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080284DA
	adds r2, r1, #0
_080284DA:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080284F8
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08028500
	.align 2, 0
_080284F0: .4byte gUnknown_03005424
_080284F4: .4byte gUnknown_0300544C
_080284F8:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08028500:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08028518
	adds r1, #2
	cmp r1, #0
	ble _08028524
	b _08028522
_08028518:
	cmp r1, #0
	ble _08028524
	subs r1, #2
	cmp r1, #0
	bge _08028524
_08028522:
	movs r1, #0
_08028524:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	beq _08028538
	b _08028634
_08028538:
	ldr r1, _08028548 @ =gUnknown_030059E0
	ldr r0, _0802854C @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
	b _08028634
	.align 2, 0
_08028548: .4byte gUnknown_030059E0
_0802854C: .4byte sub_8025318
_08028550:
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r1, r3, #0
	adds r1, #0x60
	movs r2, #0xff
	ands r1, r2
	adds r5, r0, #0
	cmp r1, #0xbf
	bgt _08028584
	ldr r1, _080285E0 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r1, r0, #5
	ldrh r2, [r4, #0x14]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	beq _08028584
	adds r0, r2, r1
	strh r0, [r4, #0x14]
_08028584:
	adds r0, r4, #0
	bl sub_80232D0
	adds r0, r4, #0
	bl sub_80231C0
	adds r0, r4, #0
	bl sub_8023260
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080285E4 @ =gUnknown_03005424
	ldr r1, _080285E8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080285B8
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080285B8:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080285C8
	adds r2, r1, #0
_080285C8:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080285EC
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080285F4
	.align 2, 0
_080285E0: .4byte gUnknown_08097AA4
_080285E4: .4byte gUnknown_03005424
_080285E8: .4byte gUnknown_0300544C
_080285EC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080285F4:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	bl sub_8022D6C
	ldrh r0, [r4, #0x2a]
	movs r1, #0x2a
	ldrsh r2, [r4, r1]
	cmp r2, #0
	beq _0802860A
	subs r0, #1
	b _08028632
_0802860A:
	ldrb r0, [r5]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08028634
	movs r3, #0x14
	ldrsh r1, [r4, r3]
	cmp r1, #0
	bge _08028620
	rsbs r1, r1, #0
_08028620:
	ldr r0, _0802863C @ =0x000001DF
	cmp r1, r0
	bgt _08028634
	strh r2, [r4, #0x14]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x1e
_08028632:
	strh r0, [r4, #0x2a]
_08028634:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802863C: .4byte 0x000001DF

	thumb_func_start sub_8028640
sub_8028640: @ 0x08028640
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	lsls r2, r2, #0x10
	mov r8, r2
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r4, _080286D8 @ =gUnknown_030059E0
	adds r2, r4, #0
	adds r2, #0x60
	movs r3, #0
	ldrsb r3, [r2, r3]
	ldr r2, _080286DC @ =sub_801F214
	str r2, [sp]
	ldr r2, _080286E0 @ =sub_801F550
	str r2, [sp, #4]
	movs r2, #0xe8
	bl sub_801F15C
	mov sb, r0
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	adds r0, r4, #0
	adds r0, #0x68
	ldrh r0, [r0]
	strh r0, [r1, #0x16]
	adds r0, r4, #0
	adds r0, #0x6a
	ldrh r0, [r0]
	strh r0, [r1, #0x18]
	ldr r0, _080286E4 @ =IWRAM_START + 0x1C
	adds r6, r2, r0
	ldr r5, _080286E8 @ =gUnknown_080D69A6
	mov r1, r8
	lsls r4, r1, #1
	add r4, r8
	lsls r4, r4, #1
	adds r0, r4, r5
	ldrh r0, [r0]
	str r2, [sp, #8]
	bl sub_8007C10
	str r0, [r6, #4]
	adds r0, r5, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r5, #4
	adds r4, r4, r5
	ldrh r0, [r4]
	ldr r2, [sp, #8]
	ldr r1, _080286EC @ =IWRAM_START + 0x3C
	adds r2, r2, r1
	strb r0, [r2]
	movs r0, #0xe0
	lsls r0, r0, #1
	strh r0, [r6, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	mov r0, sb
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080286D8: .4byte gUnknown_030059E0
_080286DC: .4byte sub_801F214
_080286E0: .4byte sub_801F550
_080286E4: .4byte IWRAM_START + 0x1C
_080286E8: .4byte gUnknown_080D69A6
_080286EC: .4byte IWRAM_START + 0x3C

	thumb_func_start sub_80286F0
sub_80286F0: @ 0x080286F0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, #0x5b
	ldrb r6, [r0]
	adds r0, #0x2a
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _08028740 @ =gUnknown_080D6992
	lsls r0, r6, #2
	adds r0, r0, r6
	adds r1, r1, r0
	adds r1, r1, r2
	ldrb r5, [r1]
	adds r0, r4, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	ldr r1, _08028744 @ =0x00002102
	orrs r0, r1
	ldr r1, _08028748 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	movs r0, #4
	ands r0, r5
	cmp r0, #0
	beq _0802874C
	adds r1, r4, #0
	adds r1, #0x72
	movs r0, #0xa
	b _0802875A
	.align 2, 0
_08028740: .4byte gUnknown_080D6992
_08028744: .4byte 0x00002102
_08028748: .4byte 0xFEFFFFDF
_0802874C:
	movs r0, #8
	ands r5, r0
	cmp r5, #0
	beq _0802875C
	adds r1, r4, #0
	adds r1, #0x72
	movs r0, #0x2d
_0802875A:
	strh r0, [r1]
_0802875C:
	movs r0, #0
	strh r0, [r4, #0x10]
	strh r0, [r4, #0x12]
	ldr r1, _0802879C @ =gUnknown_080D698A
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x64
	strh r1, [r0]
	adds r0, #0x2c
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _080287A0 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	movs r0, #0x74
	bl m4aSongNumStart
	movs r0, #0xe6
	bl m4aSongNumStart
	ldr r0, _080287A4 @ =gUnknown_030059E0
	ldr r1, _080287A8 @ =sub_80287AC
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802879C: .4byte gUnknown_080D698A
_080287A0: .4byte 0xFFFFBFFF
_080287A4: .4byte gUnknown_030059E0
_080287A8: .4byte sub_80287AC

	thumb_func_start sub_80287AC
sub_80287AC: @ 0x080287AC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _08028848
	adds r0, r4, #0
	adds r0, #0x5b
	ldrb r5, [r0]
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r2, _08028898 @ =gUnknown_080D693A
	lsls r0, r5, #2
	adds r0, r0, r5
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrh r3, [r1]
	strh r3, [r4, #0x10]
	adds r2, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r4, #0x12]
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08028802
	rsbs r0, r3, #0
	strh r0, [r4, #0x10]
_08028802:
	ldr r1, _0802889C @ =gUnknown_030059E0
	ldr r0, _080288A0 @ =sub_802890C
	str r0, [r1]
	ldr r0, _080288A4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08028848
	cmp r5, #2
	bne _08028826
	cmp r6, #0
	bne _08028826
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #0xc]
	asrs r1, r1, #8
	movs r2, #0
	bl sub_8028640
_08028826:
	cmp r5, #0
	bne _0802883C
	cmp r6, #3
	bne _0802883C
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #0xc]
	asrs r1, r1, #8
	movs r2, #1
	bl sub_8028640
_0802883C:
	cmp r5, #2
	bne _08028848
	cmp r6, #4
	bne _08028848
	bl sub_8086998
_08028848:
	adds r0, r4, #0
	bl sub_80232D0
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080288A8 @ =gUnknown_03005424
	ldr r1, _080288AC @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028870
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08028870:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08028880
	adds r2, r1, #0
_08028880:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080288B0
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080288B8
	.align 2, 0
_08028898: .4byte gUnknown_080D693A
_0802889C: .4byte gUnknown_030059E0
_080288A0: .4byte sub_802890C
_080288A4: .4byte gUnknown_030054CC
_080288A8: .4byte gUnknown_03005424
_080288AC: .4byte gUnknown_0300544C
_080288B0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080288B8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _080288D0
	adds r1, #2
	cmp r1, #0
	ble _080288DC
	b _080288DA
_080288D0:
	cmp r1, #0
	ble _080288DC
	subs r1, #2
	cmp r1, #0
	bge _080288DC
_080288DA:
	movs r1, #0
_080288DC:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080288FC
	ldr r1, _08028904 @ =gUnknown_030059E0
	ldr r0, _08028908 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_080288FC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08028904: .4byte gUnknown_030059E0
_08028908: .4byte sub_8025318

	thumb_func_start sub_802890C
sub_802890C: @ 0x0802890C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, #0x5b
	ldrb r3, [r0]
	adds r0, #0x2a
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _0802895C @ =gUnknown_080D6992
	lsls r0, r3, #2
	adds r0, r0, r3
	adds r1, r1, r0
	adds r1, r1, r2
	ldrb r5, [r1]
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _08028948
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	cmp r0, #1
	bne _08028948
	movs r2, #0x12
	ldrsh r0, [r4, r2]
	cmp r0, #0
	ble _08028948
	movs r0, #2
	strh r0, [r1]
_08028948:
	adds r1, r4, #0
	adds r1, #0x72
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	beq _08028960
	subs r0, r2, #1
	b _08028982
	.align 2, 0
_0802895C: .4byte gUnknown_080D6992
_08028960:
	movs r0, #4
	ands r0, r5
	cmp r0, #0
	beq _0802896C
	movs r0, #0xfb
	ands r5, r0
_0802896C:
	movs r0, #8
	ands r0, r5
	cmp r0, #0
	beq _08028984
	adds r1, r4, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xe
	beq _08028984
	movs r0, #0xe
_08028982:
	strh r0, [r1]
_08028984:
	movs r0, #2
	ands r0, r5
	cmp r0, #0
	beq _08028994
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	cmp r0, #0
	ble _0802899A
_08028994:
	adds r0, r4, #0
	bl sub_8023610
_0802899A:
	movs r0, #4
	ands r0, r5
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0
	bne _080289AC
	adds r0, r4, #0
	bl sub_80236C8
_080289AC:
	adds r0, r4, #0
	bl sub_80232D0
	movs r0, #0x10
	ands r5, r0
	cmp r5, #0
	beq _080289E2
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	movs r1, #0x2a
	cmp r0, #0
	beq _080289C8
	movs r1, #0xc
_080289C8:
	ldrh r2, [r4, #0x12]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	cmp r0, #0
	bge _080289DA
	lsls r0, r1, #0x10
	asrs r0, r0, #0x11
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_080289DA:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	b _080289FA
_080289E2:
	cmp r6, #0
	bne _080289FC
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080289F6
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _080289FA
_080289F6:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_080289FA:
	strh r0, [r4, #0x12]
_080289FC:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08028A44 @ =gUnknown_03005424
	ldr r1, _08028A48 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028A1E
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08028A1E:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08028A2E
	adds r2, r1, #0
_08028A2E:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08028A4C
	movs r2, #0x12
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08028A54
	.align 2, 0
_08028A44: .4byte gUnknown_03005424
_08028A48: .4byte gUnknown_0300544C
_08028A4C:
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08028A54:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _08028A6C
	adds r1, #2
	cmp r1, #0
	ble _08028A78
	b _08028A76
_08028A6C:
	cmp r1, #0
	ble _08028A78
	subs r1, #2
	cmp r1, #0
	bge _08028A78
_08028A76:
	movs r1, #0
_08028A78:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08028A98
	ldr r1, _08028AD0 @ =gUnknown_030059E0
	ldr r0, _08028AD4 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08028A98:
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08028ACA
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	bne _08028ACA
	adds r0, r4, #0
	adds r0, #0x5b
	ldrb r0, [r0]
	cmp r0, #2
	bne _08028ACA
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r1, _08028AD0 @ =gUnknown_030059E0
	ldr r0, _08028AD8 @ =sub_802A3C4
	str r0, [r1]
_08028ACA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08028AD0: .4byte gUnknown_030059E0
_08028AD4: .4byte sub_8025318
_08028AD8: .4byte sub_802A3C4

	thumb_func_start sub_8028ADC
sub_8028ADC: @ 0x08028ADC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	ldr r0, _08028B74 @ =gUnknown_030054CC
	mov r8, r0
	ldrb r0, [r0]
	cmp r0, #5
	bne _08028AF0
	b _08028D48
_08028AF0:
	adds r0, r6, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08028B00
	b _08028D48
_08028B00:
	adds r1, r6, #0
	adds r1, #0x5e
	ldr r0, _08028B78 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0, #4]
	ands r0, r1
	cmp r0, #0
	bne _08028B12
	b _08028D48
_08028B12:
	adds r0, r6, #0
	adds r0, #0x5c
	ldrh r2, [r0]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _08028B90
	ldr r1, _08028B7C @ =gUnknown_03005450
	ldr r5, [r1]
	ldr r0, _08028B80 @ =gUnknown_080D6932
	ldrh r0, [r0]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08028B84 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08028B6A
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	bne _08028B6A
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08028B88 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08028B62
	movs r0, #0xff
_08028B62:
	strb r0, [r1]
	ldr r1, _08028B8C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08028B6A:
	adds r1, r6, #0
	adds r1, #0x5b
	movs r0, #0
	b _08028D40
	.align 2, 0
_08028B74: .4byte gUnknown_030054CC
_08028B78: .4byte gUnknown_03005B38
_08028B7C: .4byte gUnknown_03005450
_08028B80: .4byte gUnknown_080D6932
_08028B84: .4byte 0x0000C350
_08028B88: .4byte gUnknown_03005448
_08028B8C: .4byte gUnknown_030054A8
_08028B90:
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _08028C68
	ldr r1, _08028BFC @ =gUnknown_03005450
	ldr r5, [r1]
	ldr r0, _08028C00 @ =gUnknown_080D6932
	ldrh r0, [r0, #6]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08028C04 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08028BE2
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	bne _08028BE2
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08028C08 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08028BDA
	movs r0, #0xff
_08028BDA:
	strb r0, [r1]
	ldr r1, _08028C0C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08028BE2:
	adds r0, r6, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	beq _08028C30
	cmp r0, #3
	bgt _08028C10
	cmp r0, #0
	beq _08028C16
	b _08028C60
	.align 2, 0
_08028BFC: .4byte gUnknown_03005450
_08028C00: .4byte gUnknown_080D6932
_08028C04: .4byte 0x0000C350
_08028C08: .4byte gUnknown_03005448
_08028C0C: .4byte gUnknown_030054A8
_08028C10:
	cmp r0, #4
	beq _08028C48
	b _08028C60
_08028C16:
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r6, #0x20]
	ldr r1, _08028C28 @ =gUnknown_030059E0
	ldr r0, _08028C2C @ =sub_8011F1C
	b _08028D46
	.align 2, 0
_08028C28: .4byte gUnknown_030059E0
_08028C2C: .4byte sub_8011F1C
_08028C30:
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r6, #0x20]
	ldr r1, _08028C40 @ =gUnknown_030059E0
	ldr r0, _08028C44 @ =sub_8013D18
	b _08028D46
	.align 2, 0
_08028C40: .4byte gUnknown_030059E0
_08028C44: .4byte sub_8013D18
_08028C48:
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r6, #0x20]
	ldr r1, _08028C58 @ =gUnknown_030059E0
	ldr r0, _08028C5C @ =sub_8011F1C
	b _08028D46
	.align 2, 0
_08028C58: .4byte gUnknown_030059E0
_08028C5C: .4byte sub_8011F1C
_08028C60:
	adds r1, r6, #0
	adds r1, #0x5b
	movs r0, #1
	b _08028D40
_08028C68:
	ldr r0, [r6, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08028C7C
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	bne _08028C84
	b _08028CF0
_08028C7C:
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _08028CF0
_08028C84:
	ldr r1, _08028CD8 @ =gUnknown_03005450
	ldr r5, [r1]
	ldr r0, _08028CDC @ =gUnknown_080D6932
	ldrh r0, [r0, #4]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08028CE0 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08028CCE
	ldr r0, _08028CE4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08028CCE
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08028CE8 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08028CC6
	movs r0, #0xff
_08028CC6:
	strb r0, [r1]
	ldr r1, _08028CEC @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08028CCE:
	adds r1, r6, #0
	adds r1, #0x5b
	movs r0, #2
	b _08028D40
	.align 2, 0
_08028CD8: .4byte gUnknown_03005450
_08028CDC: .4byte gUnknown_080D6932
_08028CE0: .4byte 0x0000C350
_08028CE4: .4byte gUnknown_030054CC
_08028CE8: .4byte gUnknown_03005448
_08028CEC: .4byte gUnknown_030054A8
_08028CF0:
	ldr r1, _08028D54 @ =gUnknown_03005450
	ldr r5, [r1]
	ldr r0, _08028D58 @ =gUnknown_080D6932
	ldrh r0, [r0, #2]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08028D5C @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08028D3A
	ldr r0, _08028D60 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08028D3A
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08028D64 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08028D32
	movs r0, #0xff
_08028D32:
	strb r0, [r1]
	ldr r1, _08028D68 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08028D3A:
	adds r1, r6, #0
	adds r1, #0x5b
	movs r0, #3
_08028D40:
	strb r0, [r1]
	ldr r1, _08028D6C @ =gUnknown_030059E0
	ldr r0, _08028D70 @ =sub_80286F0
_08028D46:
	str r0, [r1]
_08028D48:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08028D54: .4byte gUnknown_03005450
_08028D58: .4byte gUnknown_080D6932
_08028D5C: .4byte 0x0000C350
_08028D60: .4byte gUnknown_030054CC
_08028D64: .4byte gUnknown_03005448
_08028D68: .4byte gUnknown_030054A8
_08028D6C: .4byte gUnknown_030059E0
_08028D70: .4byte sub_80286F0

	thumb_func_start sub_8028D74
sub_8028D74: @ 0x08028D74
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #0x81
	lsls r1, r1, #1
	orrs r0, r1
	ldr r1, _08028DD8 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x16
	ldrsb r0, [r4, r0]
	cmp r0, #5
	ble _08028D9A
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #8
	bgt _08028DF0
_08028D9A:
	adds r2, r4, #0
	adds r2, #0x68
	ldr r1, _08028DDC @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #4
	beq _08028DC8
	cmp r1, #0xa
	beq _08028DC8
	cmp r1, #0xb
	beq _08028DC8
	cmp r1, #0x46
	bne _08028DE0
_08028DC8:
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	b _08028DEE
	.align 2, 0
_08028DD8: .4byte 0xFEFFFFDF
_08028DDC: .4byte gUnknown_080D672C
_08028DE0:
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
_08028DEE:
	strb r0, [r4, #0x17]
_08028DF0:
	adds r0, r4, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _08028E18 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	adds r1, r4, #0
	adds r1, #0x24
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08028E1C @ =gUnknown_030059E0
	ldr r1, _08028E20 @ =sub_8029074
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08028E18: .4byte 0xFFFFBFFF
_08028E1C: .4byte gUnknown_030059E0
_08028E20: .4byte sub_8029074

	thumb_func_start sub_8028E24
sub_8028E24: @ 0x08028E24
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	lsrs r5, r0, #4
	movs r6, #3
	ands r6, r0
	adds r0, r4, #0
	bl sub_80218E4
	subs r0, r5, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08028E58
	ldr r1, [r4, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08028E58
	ldr r0, _08028E54 @ =0xFFFFFEFD
	ands r1, r0
	str r1, [r4, #0x20]
	b _08028E62
	.align 2, 0
_08028E54: .4byte 0xFFFFFEFD
_08028E58:
	ldr r0, [r4, #0x20]
	movs r1, #0x81
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
_08028E62:
	ldr r0, [r4, #0x20]
	ldr r1, _08028E90 @ =0xFEFFFFDF
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	ldr r0, _08028E94 @ =gUnknown_030055B4
	ldrb r0, [r0]
	subs r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08028E98
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x25
	b _08028EBA
	.align 2, 0
_08028E90: .4byte 0xFEFFFFDF
_08028E94: .4byte gUnknown_030055B4
_08028E98:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _08028EA2
	rsbs r1, r1, #0
_08028EA2:
	ldr r0, _08028EB0 @ =0x0000027F
	cmp r1, r0
	bgt _08028EB4
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x26
	b _08028EBA
	.align 2, 0
_08028EB0: .4byte 0x0000027F
_08028EB4:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x27
_08028EBA:
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x66
	ldr r0, _08028ED4 @ =0x0000FFFF
	strh r0, [r1]
	cmp r5, #7
	bls _08028ECA
	b _08028FCE
_08028ECA:
	lsls r0, r5, #2
	ldr r1, _08028ED8 @ =_08028EDC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08028ED4: .4byte 0x0000FFFF
_08028ED8: .4byte _08028EDC
_08028EDC: @ jump table
	.4byte _08028EFC @ case 0
	.4byte _08028F0C @ case 1
	.4byte _08028F18 @ case 2
	.4byte _08028F44 @ case 3
	.4byte _08028F70 @ case 4
	.4byte _08028F90 @ case 5
	.4byte _08028FAC @ case 6
	.4byte _08028FBC @ case 7
_08028EFC:
	ldr r0, _08028F08 @ =gUnknown_080D69B2
	lsls r1, r6, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	rsbs r0, r0, #0
	b _08028FCC
	.align 2, 0
_08028F08: .4byte gUnknown_080D69B2
_08028F0C:
	ldr r0, _08028F14 @ =gUnknown_080D69B2
	lsls r1, r6, #1
	b _08028FC8
	.align 2, 0
_08028F14: .4byte gUnknown_080D69B2
_08028F18:
	ldr r1, _08028F3C @ =gUnknown_080D69BA
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	rsbs r2, r0, #0
	strh r2, [r4, #0x10]
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08028FCE
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08028F40 @ =0xFFFFF700
	cmp r0, r1
	bge _08028FCE
	b _08028F62
	.align 2, 0
_08028F3C: .4byte gUnknown_080D69BA
_08028F40: .4byte 0xFFFFF700
_08028F44:
	ldr r1, _08028F6C @ =gUnknown_080D69BA
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	strh r2, [r4, #0x10]
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08028FCE
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x14
	cmp r1, r0
	ble _08028FCE
_08028F62:
	adds r1, r4, #0
	adds r1, #0x5a
	movs r0, #1
	strb r0, [r1]
	b _08028FCE
	.align 2, 0
_08028F6C: .4byte gUnknown_080D69BA
_08028F70:
	ldr r0, _08028F88 @ =gUnknown_080D69BA
	lsls r1, r6, #1
	adds r0, r1, r0
	ldrh r0, [r0]
	rsbs r0, r0, #0
	strh r0, [r4, #0x10]
	ldr r0, _08028F8C @ =gUnknown_080D69B2
	adds r1, r1, r0
	ldrh r0, [r1]
	rsbs r0, r0, #0
	b _08028FCC
	.align 2, 0
_08028F88: .4byte gUnknown_080D69BA
_08028F8C: .4byte gUnknown_080D69B2
_08028F90:
	ldr r0, _08028FA4 @ =gUnknown_080D69BA
	lsls r1, r6, #1
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r4, #0x10]
	ldr r0, _08028FA8 @ =gUnknown_080D69B2
	adds r1, r1, r0
	ldrh r0, [r1]
	rsbs r0, r0, #0
	b _08028FCC
	.align 2, 0
_08028FA4: .4byte gUnknown_080D69BA
_08028FA8: .4byte gUnknown_080D69B2
_08028FAC:
	ldr r0, _08028FB8 @ =gUnknown_080D69BA
	lsls r1, r6, #1
	adds r0, r1, r0
	ldrh r0, [r0]
	rsbs r0, r0, #0
	b _08028FC4
	.align 2, 0
_08028FB8: .4byte gUnknown_080D69BA
_08028FBC:
	ldr r0, _08029058 @ =gUnknown_080D69BA
	lsls r1, r6, #1
	adds r0, r1, r0
	ldrh r0, [r0]
_08028FC4:
	strh r0, [r4, #0x10]
	ldr r0, _0802905C @ =gUnknown_080D69B2
_08028FC8:
	adds r1, r1, r0
	ldrh r0, [r1]
_08028FCC:
	strh r0, [r4, #0x12]
_08028FCE:
	ldr r0, _08029060 @ =gUnknown_080D69C2
	adds r0, r6, r0
	ldrb r0, [r0]
	adds r2, r4, #0
	adds r2, #0x36
	strb r0, [r2]
	ldr r0, _08029064 @ =gUnknown_030055B4
	ldrb r0, [r0]
	subs r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0802900C
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	cmp r0, #0
	bge _08028FF6
	adds r0, #3
_08028FF6:
	asrs r0, r0, #2
	strh r0, [r4, #0x10]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	cmp r0, #0
	bge _08029008
	adds r0, #3
_08029008:
	asrs r0, r0, #2
	strh r0, [r4, #0x12]
_0802900C:
	ldr r2, [r4, #0x20]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _08029022
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	strh r0, [r4, #0x12]
_08029022:
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	movs r0, #0xa0
	lsls r0, r0, #1
	cmp r1, r0
	ble _08029036
	movs r0, #2
	rsbs r0, r0, #0
	ands r2, r0
	str r2, [r4, #0x20]
_08029036:
	ldr r0, _08029068 @ =0xFFFFFEC0
	cmp r1, r0
	bge _08029044
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
_08029044:
	ldr r0, _0802906C @ =gUnknown_030059E0
	ldr r1, _08029070 @ =sub_8029074
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08029058: .4byte gUnknown_080D69BA
_0802905C: .4byte gUnknown_080D69B2
_08029060: .4byte gUnknown_080D69C2
_08029064: .4byte gUnknown_030055B4
_08029068: .4byte 0xFFFFFEC0
_0802906C: .4byte gUnknown_030059E0
_08029070: .4byte sub_8029074

	thumb_func_start sub_8029074
sub_8029074: @ 0x08029074
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80246DC
	adds r0, r4, #0
	bl sub_8028ADC
	adds r0, r4, #0
	bl sub_8023610
	adds r0, r4, #0
	bl sub_80236C8
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080290A4
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _080290A8
_080290A4:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_080290A8:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080290F4 @ =gUnknown_03005424
	ldr r1, _080290F8 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080290CC
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_080290CC:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _080290DC
	adds r2, r1, #0
_080290DC:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080290FC
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _08029104
	.align 2, 0
_080290F4: .4byte gUnknown_03005424
_080290F8: .4byte gUnknown_0300544C
_080290FC:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_08029104:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _0802911C
	adds r1, #2
	cmp r1, #0
	ble _08029128
	b _08029126
_0802911C:
	cmp r1, #0
	ble _08029128
	subs r1, #2
	cmp r1, #0
	bge _08029128
_08029126:
	movs r1, #0
_08029128:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _08029148
	ldr r1, _08029150 @ =gUnknown_030059E0
	ldr r0, _08029154 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_08029148:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08029150: .4byte gUnknown_030059E0
_08029154: .4byte sub_8025318

	thumb_func_start sub_8029158
sub_8029158: @ 0x08029158
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _080291C8 @ =0xFEFFFFD7
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x28
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080291CC @ =0x0000FFFF
	strh r0, [r1]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	movs r0, #0xa0
	lsls r0, r0, #1
	cmp r1, r0
	ble _080291A0
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
_080291A0:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, _080291D0 @ =0xFFFFFEC0
	cmp r1, r0
	bge _080291B2
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
_080291B2:
	adds r0, r4, #0
	adds r0, #0x6e
	ldrb r0, [r0]
	cmp r0, #5
	bls _080291BE
	b _080292CC
_080291BE:
	lsls r0, r0, #2
	ldr r1, _080291D4 @ =_080291D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080291C8: .4byte 0xFEFFFFD7
_080291CC: .4byte 0x0000FFFF
_080291D0: .4byte 0xFFFFFEC0
_080291D4: .4byte _080291D8
_080291D8: @ jump table
	.4byte _080291F0 @ case 0
	.4byte _0802922C @ case 1
	.4byte _0802922C @ case 2
	.4byte _08029268 @ case 3
	.4byte _08029294 @ case 4
	.4byte _08029294 @ case 5
_080291F0:
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	cmp r0, #0
	bge _080291FE
	adds r0, #7
_080291FE:
	lsls r0, r0, #0xd
	lsrs r5, r0, #0x10
	adds r0, r1, #0
	cmp r0, #0
	bge _0802920A
	rsbs r0, r0, #0
_0802920A:
	rsbs r0, r0, #0
	movs r1, #6
	bl __divsi3
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r1, r1, r2
	strh r1, [r4, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08029228 @ =0xFFFFFC40
	b _080292C8
	.align 2, 0
_08029228: .4byte 0xFFFFFC40
_0802922C:
	movs r2, #0x14
	ldrsh r1, [r4, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	cmp r0, #0
	bge _0802923A
	adds r0, #7
_0802923A:
	lsls r0, r0, #0xd
	lsrs r5, r0, #0x10
	adds r0, r1, #0
	cmp r0, #0
	bge _08029246
	rsbs r0, r0, #0
_08029246:
	rsbs r0, r0, #0
	movs r1, #6
	bl __divsi3
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r1, r1, r2
	strh r1, [r4, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08029264 @ =0xFFFFF880
	b _080292C8
	.align 2, 0
_08029264: .4byte 0xFFFFF880
_08029268:
	movs r2, #0x14
	ldrsh r1, [r4, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	cmp r0, #0
	bge _08029276
	adds r0, #7
_08029276:
	lsls r0, r0, #0xd
	lsrs r5, r0, #0x10
	adds r0, r1, #0
	cmp r0, #0
	bge _08029282
	rsbs r0, r0, #0
_08029282:
	rsbs r0, r0, #0
	movs r1, #6
	bl __divsi3
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xb4
	lsls r2, r2, #3
	b _080292BE
_08029294:
	movs r2, #0x14
	ldrsh r1, [r4, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	cmp r0, #0
	bge _080292A2
	adds r0, #7
_080292A2:
	lsls r0, r0, #0xd
	lsrs r5, r0, #0x10
	adds r0, r1, #0
	cmp r0, #0
	bge _080292AE
	rsbs r0, r0, #0
_080292AE:
	rsbs r0, r0, #0
	movs r1, #6
	bl __divsi3
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xb4
	lsls r2, r2, #4
_080292BE:
	adds r1, r1, r2
	strh r1, [r4, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08029308 @ =0xFFFFFD80
_080292C8:
	adds r0, r0, r1
	strh r0, [r4, #0x12]
_080292CC:
	ldr r1, [r4, #0x20]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080292DE
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #0x12]
_080292DE:
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080292EC
	ldrh r0, [r4, #0x10]
	rsbs r0, r0, #0
	strh r0, [r4, #0x10]
_080292EC:
	movs r0, #0x8a
	lsls r0, r0, #1
	bl m4aSongNumStart
	ldr r0, _0802930C @ =gUnknown_030059E0
	ldr r1, _08029310 @ =sub_8029314
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08029308: .4byte 0xFFFFFD80
_0802930C: .4byte gUnknown_030059E0
_08029310: .4byte sub_8029314

	thumb_func_start sub_8029314
sub_8029314: @ 0x08029314
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x28
	bne _08029338
	adds r1, r4, #0
	adds r1, #0x6a
	ldrh r0, [r1]
	cmp r0, #0
	bne _08029338
	movs r2, #0x12
	ldrsh r0, [r4, r2]
	cmp r0, #0
	ble _08029338
	movs r0, #1
	strh r0, [r1]
_08029338:
	adds r0, r4, #0
	bl sub_8028ADC
	adds r0, r4, #0
	bl sub_8023708
	adds r0, r4, #0
	bl sub_80232D0
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802935A
	ldrh r0, [r4, #0x12]
	adds r0, #0xc
	b _0802935E
_0802935A:
	ldrh r0, [r4, #0x12]
	adds r0, #0x2a
_0802935E:
	strh r0, [r4, #0x12]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _080293A8 @ =gUnknown_03005424
	ldr r1, _080293AC @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029382
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08029382:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08029392
	adds r2, r1, #0
_08029392:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080293B0
	movs r2, #0x12
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080293B8
	.align 2, 0
_080293A8: .4byte gUnknown_03005424
_080293AC: .4byte gUnknown_0300544C
_080293B0:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080293B8:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _080293D0
	adds r1, #2
	cmp r1, #0
	ble _080293DC
	b _080293DA
_080293D0:
	cmp r1, #0
	ble _080293DC
	subs r1, #2
	cmp r1, #0
	bge _080293DC
_080293DA:
	movs r1, #0
_080293DC:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080293FC
	ldr r1, _08029404 @ =gUnknown_030059E0
	ldr r0, _08029408 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_080293FC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08029404: .4byte gUnknown_030059E0
_08029408: .4byte sub_8025318

	thumb_func_start sub_802940C
sub_802940C: @ 0x0802940C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x72
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0802942C
	ldr r1, _08029488 @ =gUnknown_030059E0
	ldr r0, _0802948C @ =sub_8029074
	str r0, [r1]
_0802942C:
	adds r0, r4, #0
	bl sub_80246DC
	adds r0, r4, #0
	bl sub_8028ADC
	adds r0, r4, #0
	bl sub_80232D0
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r3, _08029490 @ =gUnknown_03005424
	ldr r1, _08029494 @ =gUnknown_0300544C
	ldrh r0, [r3]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029460
	ldrh r0, [r4, #0x12]
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
_08029460:
	ldrh r2, [r4, #0x12]
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08029470
	adds r2, r1, #0
_08029470:
	strh r2, [r4, #0x12]
	ldrh r1, [r3]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029498
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	b _080294A0
	.align 2, 0
_08029488: .4byte gUnknown_030059E0
_0802948C: .4byte sub_8029074
_08029490: .4byte gUnknown_03005424
_08029494: .4byte gUnknown_0300544C
_08029498:
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
_080294A0:
	str r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r5, r0, #0
	cmp r1, #0
	bge _080294B8
	adds r1, #2
	cmp r1, #0
	ble _080294C4
	b _080294C2
_080294B8:
	cmp r1, #0
	ble _080294C4
	subs r1, #2
	cmp r1, #0
	bge _080294C4
_080294C2:
	movs r1, #0
_080294C4:
	strb r1, [r5]
	adds r0, r4, #0
	bl sub_8022190
	ldr r0, [r4, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _080294E4
	ldr r1, _080294EC @ =gUnknown_030059E0
	ldr r0, _080294F0 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r4, #0x10]
	movs r1, #0
	strh r0, [r4, #0x14]
	strb r1, [r5]
_080294E4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080294EC: .4byte gUnknown_030059E0
_080294F0: .4byte sub_8025318

	thumb_func_start sub_80294F4
sub_80294F4: @ 0x080294F4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	ands r0, r1
	cmp r0, #0
	beq _08029506
	b _08029664
_08029506:
	adds r2, r4, #0
	adds r2, #0x5e
	ldr r3, _08029530 @ =gUnknown_03005B38
	ldrh r1, [r2]
	ldrh r0, [r3, #2]
	ands r0, r1
	cmp r0, #0
	beq _0802956E
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _0802953E
	cmp r0, #1
	bgt _08029534
	cmp r0, #0
	beq _08029566
	b _0802956E
	.align 2, 0
_08029530: .4byte gUnknown_03005B38
_08029534:
	cmp r0, #3
	beq _0802955C
	cmp r0, #4
	beq _08029566
	b _0802956E
_0802953E:
	adds r0, r4, #0
	adds r0, #0x5c
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0x80
	bne _08029554
	adds r0, r4, #0
	bl sub_8012888
	b _08029562
_08029554:
	adds r0, r4, #0
	bl sub_80128E0
	b _08029562
_0802955C:
	adds r0, r4, #0
	bl sub_8013D18
_08029562:
	movs r0, #1
	b _08029666
_08029566:
	adds r0, r4, #0
	bl sub_8011F1C
	b _08029562
_0802956E:
	ldrh r1, [r2]
	ldrh r0, [r3]
	ands r0, r1
	cmp r0, #0
	beq _08029664
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bhi _08029664
	lsls r0, r0, #2
	ldr r1, _08029590 @ =_08029594
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08029590: .4byte _08029594
_08029594: @ jump table
	.4byte _080295A8 @ case 0
	.4byte _08029610 @ case 1
	.4byte _08029618 @ case 2
	.4byte _08029634 @ case 3
	.4byte _08029646 @ case 4
_080295A8:
	ldr r0, _080295DC @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _080295EC
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _080295C4
	ldr r0, _080295E0 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _080295EC
_080295C4:
	cmp r1, #0x1d
	beq _080295EC
	ldr r0, _080295E4 @ =gUnknown_030054C0
	ldr r1, [r0]
	ldr r0, _080295E8 @ =0x00003FFF
	cmp r1, r0
	bgt _080295EC
	adds r0, r4, #0
	bl sub_8012194
	b _08029562
	.align 2, 0
_080295DC: .4byte gUnknown_030055B4
_080295E0: .4byte gUnknown_030054B0
_080295E4: .4byte gUnknown_030054C0
_080295E8: .4byte 0x00003FFF
_080295EC:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x12
	strh r0, [r1]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #0xc]
	asrs r1, r1, #8
	movs r2, #1
	bl sub_8011B88
	movs r0, #0x71
	b _08029660
_08029610:
	adds r0, r4, #0
	bl sub_8012644
	b _08029562
_08029618:
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08029664
	adds r0, r4, #0
	bl sub_8012BC0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r4, #0x20]
	b _08029562
_08029634:
	ldr r0, [r4, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08029664
	adds r0, r4, #0
	bl sub_8013AD8
	b _08029562
_08029646:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x12
	strh r0, [r1]
	movs r0, #2
	bl sub_8015BD4
	movs r0, #0x81
_08029660:
	bl m4aSongNumStart
_08029664:
	movs r0, #0
_08029666:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_802966C
sub_802966C: @ 0x0802966C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0xff
	ldr r5, [r4, #0x48]
	ldr r7, [r4, #0x4c]
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08029680
	b _0802980C
_08029680:
	adds r0, r4, #0
	adds r0, #0x5c
	ldrh r2, [r0]
	movs r0, #0x30
	ands r0, r2
	cmp r0, #0
	bne _08029690
	b _0802980C
_08029690:
	ldrh r3, [r4, #0x14]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	mov ip, r3
	cmp r1, #0
	ble _08029734
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _080296D2
	adds r0, r1, #0
	ldr r1, [r4, #0x44]
	cmp r0, r1
	bge _080296BC
	adds r0, r3, r5
	strh r0, [r4, #0x14]
	movs r2, #0x14
	ldrsh r0, [r4, r2]
	cmp r0, r1
	ble _080296C6
	strh r1, [r4, #0x14]
	b _080296C6
_080296BC:
	adds r1, r4, #0
	adds r1, #0x58
	ldrh r0, [r1]
	adds r0, r0, r5
	strh r0, [r1]
_080296C6:
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	b _0802983C
_080296D2:
	ldr r0, _080296F0 @ =0x000001FF
	cmp r1, r0
	ble _08029708
	adds r0, r4, #0
	adds r0, #0x64
	ldrh r1, [r0]
	subs r0, r1, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080296F4
	lsls r0, r1, #0x18
	lsrs r6, r0, #0x18
	b _08029702
	.align 2, 0
_080296F0: .4byte 0x000001FF
_080296F4:
	adds r0, r4, #0
	adds r0, #0x54
	ldrh r0, [r0]
	movs r6, #7
	cmp r0, #3
	bls _08029702
	movs r6, #8
_08029702:
	mov r3, ip
	subs r0, r3, r7
	b _080297A2
_08029708:
	subs r0, r3, r7
	strh r0, [r4, #0x14]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08029714
	b _0802983C
_08029714:
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08029720
	b _0802983C
_08029720:
	adds r0, r4, #0
	adds r0, #0x64
	ldrh r0, [r0]
	subs r0, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080297FA
	movs r6, #7
	b _080297FA
_08029734:
	cmp r1, #0
	bge _080297C8
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _08029770
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x44]
	rsbs r2, r0, #0
	cmp r1, r2
	ble _0802975C
	subs r0, r3, r5
	strh r0, [r4, #0x14]
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, r2
	bge _08029766
	strh r2, [r4, #0x14]
	b _08029766
_0802975C:
	adds r1, r4, #0
	adds r1, #0x58
	ldrh r0, [r1]
	adds r0, r0, r5
	strh r0, [r1]
_08029766:
	ldr r0, [r4, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x20]
	b _0802983C
_08029770:
	ldr r0, _0802978C @ =0xFFFFFE00
	cmp r1, r0
	bgt _080297B2
	adds r0, r4, #0
	adds r0, #0x64
	ldrh r1, [r0]
	subs r0, r1, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _08029790
	lsls r0, r1, #0x18
	lsrs r6, r0, #0x18
	b _0802979E
	.align 2, 0
_0802978C: .4byte 0xFFFFFE00
_08029790:
	adds r0, r4, #0
	adds r0, #0x54
	ldrh r0, [r0]
	movs r6, #7
	cmp r0, #3
	bls _0802979E
	movs r6, #8
_0802979E:
	mov r2, ip
	adds r0, r2, r7
_080297A2:
	strh r0, [r4, #0x14]
	adds r0, r4, #0
	bl sub_8029FA4
	movs r0, #0x73
	bl m4aSongNumStart
	b _0802983C
_080297B2:
	adds r0, r3, r7
	strh r0, [r4, #0x14]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0802983C
	ldr r0, [r4, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0802983C
	b _08029720
_080297C8:
	ldr r1, [r4, #0x20]
	movs r0, #1
	ands r1, r0
	movs r0, #0x10
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x14
	cmp r1, r0
	beq _080297FA
	cmp r1, #0
	beq _080297E2
	subs r0, r3, r5
	b _080297E4
_080297E2:
	adds r0, r3, r5
_080297E4:
	strh r0, [r4, #0x14]
	movs r6, #9
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	b _0802983C
_080297FA:
	ldr r1, _08029804 @ =gUnknown_030059E0
	ldr r0, _08029808 @ =sub_802A5C4
	str r0, [r1]
	b _0802983C
	.align 2, 0
_08029804: .4byte gUnknown_030059E0
_08029808: .4byte sub_802A5C4
_0802980C:
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	cmp r0, #0
	ble _08029820
	subs r0, #8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	ble _0802982E
	b _08029834
_08029820:
	cmp r0, #0
	bge _0802983A
	adds r0, #8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	blt _08029834
_0802982E:
	movs r1, #0
	movs r6, #0
	b _08029836
_08029834:
	movs r6, #9
_08029836:
	strh r1, [r4, #0x14]
	b _0802983C
_0802983A:
	movs r6, #0
_0802983C:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08029860
	lsls r0, r6, #0x18
	asrs r1, r0, #0x18
	movs r2, #0xf9
	lsls r2, r2, #0x18
	adds r0, r0, r2
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08029890
	adds r0, r4, #0
	adds r0, #0x64
	strh r1, [r0]
	b _08029890
_08029860:
	lsls r0, r6, #0x18
	asrs r1, r0, #0x18
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0802987C
	adds r2, r4, #0
	adds r2, #0x64
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, r1
	beq _08029890
	strh r1, [r2]
	b _08029890
_0802987C:
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	subs r0, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _08029890
	movs r0, #9
	strh r0, [r1]
_08029890:
	adds r0, r4, #0
	bl sub_8023128
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802989C
sub_802989C: @ 0x0802989C
	push {lr}
	adds r1, r0, #0
	ldr r0, _080298B0 @ =gUnknown_030053F0
	ldrh r0, [r0]
	cmp r0, #0x95
	bls _080298B4
	adds r1, #0x52
	movs r0, #4
	b _080298D6
	.align 2, 0
_080298B0: .4byte gUnknown_030053F0
_080298B4:
	cmp r0, #0x63
	bls _080298BE
	adds r1, #0x52
	movs r0, #3
	b _080298D6
_080298BE:
	cmp r0, #0x31
	bls _080298C8
	adds r1, #0x52
	movs r0, #2
	b _080298D6
_080298C8:
	cmp r0, #0xa
	bls _080298D2
	adds r1, #0x52
	movs r0, #1
	b _080298D6
_080298D2:
	adds r1, #0x52
	movs r0, #0
_080298D6:
	strh r0, [r1]
	pop {r0}
	bx r0

	thumb_func_start sub_80298DC
sub_80298DC: @ 0x080298DC
	push {r4, lr}
	adds r3, r0, #0
	movs r0, #0x5a
	adds r0, r0, r3
	mov ip, r0
	ldrb r2, [r0]
	cmp r2, #0
	beq _0802992C
	ldr r4, [r3, #0x20]
	movs r0, #2
	ands r4, r0
	cmp r4, #0
	bne _0802998A
	ldr r0, _08029924 @ =gUnknown_080D6916
	adds r1, r3, #0
	adds r1, #0x52
	ldrh r1, [r1]
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r1, r3, #0
	adds r1, #0x58
	strh r0, [r1]
	movs r0, #0x14
	ldrsh r2, [r3, r0]
	cmp r2, #0
	bge _08029914
	rsbs r2, r2, #0
_08029914:
	ldr r0, _08029928 @ =0x0000047F
	cmp r2, r0
	bgt _0802998A
	movs r0, #0
	mov r2, ip
	strb r0, [r2]
	strh r4, [r1]
	b _0802998A
	.align 2, 0
_08029924: .4byte gUnknown_080D6916
_08029928: .4byte 0x0000047F
_0802992C:
	ldr r0, [r3, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08029984
	movs r0, #0x14
	ldrsh r1, [r3, r0]
	cmp r1, #0
	bge _08029940
	rsbs r1, r1, #0
_08029940:
	ldr r0, [r3, #0x44]
	cmp r1, r0
	blt _08029984
	adds r2, r3, #0
	adds r2, #0x58
	ldr r1, _0802997C @ =gUnknown_080D6916
	adds r0, r3, #0
	adds r0, #0x52
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r2, r3]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	blt _0802998A
	movs r0, #1
	mov r3, ip
	strb r0, [r3]
	ldr r1, _08029980 @ =gUnknown_03005960
	movs r0, #0x80
	lsls r0, r0, #3
	str r0, [r1, #8]
	bl sub_8089C24
	movs r0, #0xdd
	bl m4aSongNumStart
	b _0802998A
	.align 2, 0
_0802997C: .4byte gUnknown_080D6916
_08029980: .4byte gUnknown_03005960
_08029984:
	adds r0, r3, #0
	adds r0, #0x58
	strh r2, [r0]
_0802998A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8029990
sub_8029990: @ 0x08029990
	push {lr}
	adds r1, r0, #0
	movs r0, #0x14
	ldrsh r2, [r1, r0]
	cmp r2, #0
	bge _0802999E
	rsbs r2, r2, #0
_0802999E:
	movs r0, #0xa0
	lsls r0, r0, #1
	cmp r2, r0
	bgt _080299AC
	adds r1, #0x54
	movs r0, #0
	b _080299E8
_080299AC:
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r2, r0
	bgt _080299BA
	adds r1, #0x54
	movs r0, #1
	b _080299E8
_080299BA:
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r2, r0
	bgt _080299C8
	adds r1, #0x54
	movs r0, #2
	b _080299E8
_080299C8:
	movs r0, #0x90
	lsls r0, r0, #4
	cmp r2, r0
	bgt _080299D6
	adds r1, #0x54
	movs r0, #3
	b _080299E8
_080299D6:
	movs r0, #0xa0
	lsls r0, r0, #4
	cmp r2, r0
	bgt _080299E4
	adds r1, #0x54
	movs r0, #4
	b _080299E8
_080299E4:
	adds r1, #0x54
	movs r0, #5
_080299E8:
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80299F0
sub_80299F0: @ 0x080299F0
	push {lr}
	bl sub_8021604
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80299FC
sub_80299FC: @ 0x080299FC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x8c
	ldr r0, [r5]
	bl TaskDestroy
	movs r0, #0
	str r0, [r5]
	adds r4, #0x60
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _08029A20
	bl sub_801F78C
	bl sub_8021350
_08029A20:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8029A28
sub_8029A28: @ 0x08029A28
	push {r4, lr}
	sub sp, #8
	adds r4, r1, #0
	cmp r4, #0
	bne _08029A34
	mov r4, sp
_08029A34:
	cmp r2, #0
	bne _08029A3A
	add r2, sp, #4
_08029A3A:
	adds r1, r4, #0
	bl sub_802195C
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08029A50
	movs r0, #0
	b _08029A62
_08029A50:
	ldr r0, _08029A70 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029A64
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
_08029A62:
	strb r0, [r4]
_08029A64:
	adds r0, r3, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08029A70: .4byte gUnknown_03005424

	thumb_func_start sub_8029A74
sub_8029A74: @ 0x08029A74
	push {r4, lr}
	sub sp, #8
	adds r4, r1, #0
	cmp r4, #0
	bne _08029A80
	mov r4, sp
_08029A80:
	cmp r2, #0
	bne _08029A86
	add r2, sp, #4
_08029A86:
	adds r1, r4, #0
	bl sub_8021A34
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08029A9C
	movs r0, #0
	b _08029AAE
_08029A9C:
	ldr r0, _08029ABC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029AB0
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
_08029AAE:
	strb r0, [r4]
_08029AB0:
	adds r0, r3, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08029ABC: .4byte gUnknown_03005424

	thumb_func_start sub_8029AC0
sub_8029AC0: @ 0x08029AC0
	push {r4, lr}
	sub sp, #8
	adds r4, r1, #0
	cmp r4, #0
	bne _08029ACC
	mov r4, sp
_08029ACC:
	cmp r2, #0
	bne _08029AD2
	add r2, sp, #4
_08029AD2:
	adds r1, r4, #0
	bl sub_8021B08
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08029AE8
	movs r0, #0
	b _08029AFA
_08029AE8:
	ldr r0, _08029B08 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029AFC
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
_08029AFA:
	strb r0, [r4]
_08029AFC:
	adds r0, r3, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08029B08: .4byte gUnknown_03005424

	thumb_func_start sub_8029B0C
sub_8029B0C: @ 0x08029B0C
	push {r4, lr}
	sub sp, #8
	adds r4, r1, #0
	cmp r4, #0
	bne _08029B18
	mov r4, sp
_08029B18:
	cmp r2, #0
	bne _08029B1E
	add r2, sp, #4
_08029B1E:
	adds r1, r4, #0
	bl sub_8029BB8
	adds r3, r0, #0
	ldrb r2, [r4]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08029B34
	movs r0, #0
	b _08029B46
_08029B34:
	ldr r0, _08029B54 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029B48
	movs r0, #0x80
	rsbs r0, r0, #0
	subs r0, r0, r2
_08029B46:
	strb r0, [r4]
_08029B48:
	adds r0, r3, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08029B54: .4byte gUnknown_03005424

	thumb_func_start sub_8029B58
sub_8029B58: @ 0x08029B58
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	ldr r0, _08029B74 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029B78
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_8029B0C
	b _08029B80
	.align 2, 0
_08029B74: .4byte gUnknown_03005424
_08029B78:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_8029AC0
_08029B80:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8029B88
sub_8029B88: @ 0x08029B88
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	ldr r0, _08029BA4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029BA8
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_8029AC0
	b _08029BB0
	.align 2, 0
_08029BA4: .4byte gUnknown_03005424
_08029BA8:
	adds r0, r3, #0
	adds r1, r4, #0
	bl sub_8029B0C
_08029BB0:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8029BB8
sub_8029BB8: @ 0x08029BB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	cmp r6, #0
	bne _08029BD0
	add r6, sp, #8
_08029BD0:
	cmp r7, #0
	bne _08029BD6
	add r7, sp, #0xc
_08029BD6:
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r3, r0, r1
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	subs r1, r0, r1
	movs r0, #0x38
	adds r0, r0, r4
	mov r8, r0
	ldrb r2, [r0]
	movs r5, #0x12
	ldrsh r0, [r4, r5]
	cmp r0, #0
	bge _08029C00
	movs r0, #0x80
	orrs r2, r0
_08029C00:
	movs r0, #9
	add r0, sp
	mov sb, r0
	str r0, [sp]
	ldr r5, _08029C64 @ =sub_801EE64
	mov sl, r5
	str r5, [sp, #4]
	adds r0, r3, #0
	movs r3, #8
	bl sub_801E4E4
	adds r5, r0, #0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	mov ip, r0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	adds r0, #2
	movs r1, #0x16
	ldrsb r1, [r4, r1]
	adds r1, r0, r1
	mov r0, r8
	ldrb r2, [r0]
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	cmp r0, #0
	bge _08029C40
	movs r0, #0x80
	orrs r2, r0
_08029C40:
	mov r4, sp
	adds r4, #0xa
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	mov r0, ip
	movs r3, #8
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r5, r1
	bge _08029C68
	adds r2, r5, #0
	mov r3, sb
	ldrb r0, [r3]
	strb r0, [r6]
	str r1, [r7]
	b _08029C70
	.align 2, 0
_08029C64: .4byte sub_801EE64
_08029C68:
	adds r2, r1, #0
	ldrb r0, [r4]
	strb r0, [r6]
	str r5, [r7]
_08029C70:
	adds r0, r2, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8029C84
sub_8029C84: @ 0x08029C84
	push {lr}
	adds r2, r0, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x40
	movs r1, #0xff
	ands r0, r1
	cmp r0, #0x7f
	ble _08029C9A
	movs r0, #0
	strh r0, [r2, #0x14]
_08029C9A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8029CA0
sub_8029CA0: @ 0x08029CA0
	push {r4, lr}
	adds r3, r0, #0
	adds r0, #0x24
	ldrb r2, [r0]
	adds r0, r2, #0
	adds r0, #0x60
	movs r1, #0xff
	ands r0, r1
	cmp r0, #0xbf
	bgt _08029CD4
	ldr r1, _08029CDC @ =gUnknown_08097AA4
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r2, r0, #5
	ldrh r1, [r3, #0x14]
	movs r4, #0x14
	ldrsh r0, [r3, r4]
	cmp r0, #0
	beq _08029CD4
	adds r0, r1, r2
	strh r0, [r3, #0x14]
_08029CD4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08029CDC: .4byte gUnknown_08097AA4

	thumb_func_start sub_8029CE0
sub_8029CE0: @ 0x08029CE0
	push {lr}
	adds r3, r0, #0
	adds r0, #0x24
	ldrb r2, [r0]
	adds r0, r2, #0
	adds r0, #0x60
	movs r1, #0xff
	ands r0, r1
	cmp r0, #0xbf
	bgt _08029D0C
	ldr r1, _08029D10 @ =gUnknown_08097AA4
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #5
	ldrh r1, [r3, #0x14]
	adds r0, r0, r1
	strh r0, [r3, #0x14]
_08029D0C:
	pop {r0}
	bx r0
	.align 2, 0
_08029D10: .4byte gUnknown_08097AA4

	thumb_func_start sub_8029D14
sub_8029D14: @ 0x08029D14
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x14
	ldrsh r2, [r4, r0]
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r3, [r0]
	adds r0, r3, #0
	adds r0, #0x60
	movs r1, #0xff
	ands r0, r1
	cmp r0, #0xbf
	bgt _08029D5E
	cmp r2, #0
	beq _08029D5E
	ldr r1, _08029D50 @ =gUnknown_08097AA4
	lsls r0, r3, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	asrs r1, r0, #8
	cmp r2, #0
	ble _08029D54
	cmp r1, #0
	bgt _08029D5A
	b _08029D58
	.align 2, 0
_08029D50: .4byte gUnknown_08097AA4
_08029D54:
	cmp r1, #0
	blt _08029D5A
_08029D58:
	asrs r1, r0, #0xa
_08029D5A:
	adds r2, r2, r1
	strh r2, [r4, #0x14]
_08029D5E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8029D64
sub_8029D64: @ 0x08029D64
	push {r4, lr}
	adds r2, r0, #0
	movs r0, #0x10
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	ldr r4, _08029DB0 @ =gUnknown_03005424
	ldr r1, _08029DB4 @ =gUnknown_0300544C
	ldrh r0, [r4]
	ldrh r1, [r1]
	eors r0, r1
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029D8A
	ldrh r0, [r2, #0x12]
	rsbs r0, r0, #0
	strh r0, [r2, #0x12]
_08029D8A:
	ldrh r3, [r2, #0x12]
	movs r1, #0x12
	ldrsh r0, [r2, r1]
	movs r1, #0xf0
	lsls r1, r1, #4
	cmp r0, r1
	ble _08029D9A
	adds r3, r1, #0
_08029D9A:
	strh r3, [r2, #0x12]
	ldrh r1, [r4]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029DB8
	movs r0, #0x12
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #0xc]
	subs r0, r0, r1
	b _08029DC0
	.align 2, 0
_08029DB0: .4byte gUnknown_03005424
_08029DB4: .4byte gUnknown_0300544C
_08029DB8:
	movs r0, #0x12
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #0xc]
	adds r0, r0, r1
_08029DC0:
	str r0, [r2, #0xc]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8029DC8
sub_8029DC8: @ 0x08029DC8
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x20]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08029DDC
	ldrh r0, [r2, #0x12]
	adds r0, #0xc
	b _08029DE0
_08029DDC:
	ldrh r0, [r2, #0x12]
	adds r0, #0x2a
_08029DE0:
	strh r0, [r2, #0x12]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8029DE8
sub_8029DE8: @ 0x08029DE8
	push {lr}
	ldr r3, _08029E0C @ =gUnknown_03005960
	ldr r2, [r0, #0xc]
	ldr r0, [r0, #0x20]
	cmp r0, #0
	blt _08029E1E
	ldr r0, _08029E10 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029E14
	ldr r0, [r3, #0x28]
	lsls r0, r0, #8
	cmp r2, r0
	bgt _08029E1E
_08029E08:
	movs r0, #1
	b _08029E20
	.align 2, 0
_08029E0C: .4byte gUnknown_03005960
_08029E10: .4byte gUnknown_03005424
_08029E14:
	ldr r0, [r3, #0x2c]
	lsls r0, r0, #8
	subs r0, #1
	cmp r2, r0
	bge _08029E08
_08029E1E:
	movs r0, #0
_08029E20:
	pop {r1}
	bx r1

	thumb_func_start sub_8029E24
sub_8029E24: @ 0x08029E24
	push {lr}
	ldr r3, _08029E4C @ =gUnknown_03005960
	ldr r2, [r0, #0xc]
	ldr r0, [r0, #0x20]
	cmp r0, #0
	blt _08029E60
	ldr r0, _08029E50 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029E54
	ldr r0, [r3, #4]
	subs r0, #0x50
	lsls r0, r0, #8
	cmp r2, r0
	bgt _08029E60
_08029E46:
	movs r0, #1
	b _08029E62
	.align 2, 0
_08029E4C: .4byte gUnknown_03005960
_08029E50: .4byte gUnknown_03005424
_08029E54:
	ldr r0, [r3, #4]
	lsls r0, r0, #8
	ldr r1, _08029E68 @ =0x0000EFFF
	adds r0, r0, r1
	cmp r2, r0
	bge _08029E46
_08029E60:
	movs r0, #0
_08029E62:
	pop {r1}
	bx r1
	.align 2, 0
_08029E68: .4byte 0x0000EFFF

	thumb_func_start sub_8029E6C
sub_8029E6C: @ 0x08029E6C
	push {lr}
	adds r3, r0, #0
	adds r0, #0x24
	ldrb r2, [r0]
	adds r1, r3, #0
	adds r1, #0x5e
	ldr r0, _08029EC0 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08029ED0
	ldr r0, _08029EC4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029EA2
	adds r0, r2, #0
	adds r0, #0x40
	lsls r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r2, r0, #0x18
	adds r0, r2, #0
	subs r0, #0x40
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_08029EA2:
	adds r0, r2, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r3, #0
	bl sub_8022F58
	cmp r0, #3
	ble _08029ED0
	ldr r1, _08029EC8 @ =gUnknown_030059E0
	ldr r0, _08029ECC @ =sub_8025D00
	str r0, [r1]
	movs r0, #1
	b _08029ED2
	.align 2, 0
_08029EC0: .4byte gUnknown_03005B38
_08029EC4: .4byte gUnknown_03005424
_08029EC8: .4byte gUnknown_030059E0
_08029ECC: .4byte sub_8025D00
_08029ED0:
	movs r0, #0
_08029ED2:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8029ED8
sub_8029ED8: @ 0x08029ED8
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0x2a]
	movs r1, #0x2a
	ldrsh r3, [r2, r1]
	cmp r3, #0
	beq _08029EEA
	subs r0, #1
	b _08029F16
_08029EEA:
	adds r0, r2, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08029F18
	movs r0, #0x14
	ldrsh r1, [r2, r0]
	cmp r1, #0
	bge _08029F04
	rsbs r1, r1, #0
_08029F04:
	ldr r0, _08029F1C @ =0x000001DF
	cmp r1, r0
	bgt _08029F18
	strh r3, [r2, #0x14]
	ldr r0, [r2, #0x20]
	movs r1, #2
	orrs r0, r1
	str r0, [r2, #0x20]
	movs r0, #0x1e
_08029F16:
	strh r0, [r2, #0x2a]
_08029F18:
	pop {r0}
	bx r0
	.align 2, 0
_08029F1C: .4byte 0x000001DF

	thumb_func_start sub_8029F20
sub_8029F20: @ 0x08029F20
	push {lr}
	adds r2, r0, #0
	adds r0, #0x24
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	bge _08029F36
	adds r1, #2
	cmp r1, #0
	ble _08029F42
	b _08029F40
_08029F36:
	cmp r1, #0
	ble _08029F42
	subs r1, #2
	cmp r1, #0
	bge _08029F42
_08029F40:
	movs r1, #0
_08029F42:
	adds r0, r2, #0
	adds r0, #0x24
	strb r1, [r0]
	pop {r0}
	bx r0

	thumb_func_start sub_8029F4C
sub_8029F4C: @ 0x08029F4C
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x87
	movs r0, #0x3c
	strb r0, [r1]
	subs r1, #1
	movs r0, #0x1e
	strb r0, [r1]
	ldr r0, _08029F94 @ =gMPlayTable
	ldr r1, [r0]
	ldr r0, _08029F98 @ =gSongTable
	adds r0, #0xf8
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _08029F90
	adds r0, r2, #0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08029F90
	ldr r1, _08029F9C @ =gUnknown_080D5204
	ldr r0, _08029FA0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStartOrContinue
_08029F90:
	pop {r0}
	bx r0
	.align 2, 0
_08029F94: .4byte gMPlayTable
_08029F98: .4byte gSongTable
_08029F9C: .4byte gUnknown_080D5204
_08029FA0: .4byte gUnknown_030055B4

	thumb_func_start sub_8029FA4
sub_8029FA4: @ 0x08029FA4
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	movs r1, #3
	cmp r0, #0
	beq _08029FB8
	movs r1, #7
_08029FB8:
	ldr r0, _08029FE8 @ =gUnknown_03005590
	ldr r0, [r0]
	ands r0, r1
	cmp r0, #0
	bne _08029FE2
	movs r2, #0x17
	ldrsb r2, [r3, r2]
	ldr r0, _08029FEC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08029FD4
	rsbs r2, r2, #0
_08029FD4:
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	ldr r1, [r3, #0xc]
	asrs r1, r1, #8
	adds r1, r1, r2
	bl sub_801F5CC
_08029FE2:
	pop {r0}
	bx r0
	.align 2, 0
_08029FE8: .4byte gUnknown_03005590
_08029FEC: .4byte gUnknown_03005424

	thumb_func_start sub_8029FF0
sub_8029FF0: @ 0x08029FF0
	ldr r0, _0802A000 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #0x80
	lsls r2, r2, #0x17
	orrs r1, r2
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
_0802A000: .4byte gUnknown_030059E0

	thumb_func_start sub_802A004
sub_802A004: @ 0x0802A004
	ldr r0, _0802A010 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	ldr r2, _0802A014 @ =0xBFFFFFFF
	ands r1, r2
	str r1, [r0, #0x20]
	bx lr
	.align 2, 0
_0802A010: .4byte gUnknown_030059E0
_0802A014: .4byte 0xBFFFFFFF

	thumb_func_start sub_802A018
sub_802A018: @ 0x0802A018
	push {lr}
	ldr r0, _0802A044 @ =gUnknown_030059E0
	adds r0, #0x6d
	movs r1, #0xa
	strb r1, [r0]
	ldr r2, _0802A048 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x23
	orrs r1, r0
	strh r1, [r2]
	ldr r0, _0802A04C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bne _0802A03E
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r3, #0
	orrs r1, r0
	strh r1, [r2]
_0802A03E:
	pop {r0}
	bx r0
	.align 2, 0
_0802A044: .4byte gUnknown_030059E0
_0802A048: .4byte gUnknown_03005424
_0802A04C: .4byte gUnknown_030054CC

	thumb_func_start sub_802A050
sub_802A050: @ 0x0802A050
	push {lr}
	ldr r2, _0802A074 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x23
	orrs r1, r0
	strh r1, [r2]
	ldr r0, _0802A078 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bne _0802A06E
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r3, #0
	orrs r1, r0
	strh r1, [r2]
_0802A06E:
	pop {r0}
	bx r0
	.align 2, 0
_0802A074: .4byte gUnknown_03005424
_0802A078: .4byte gUnknown_030054CC

	thumb_func_start sub_802A07C
sub_802A07C: @ 0x0802A07C
	push {r4, lr}
	ldr r4, _0802A0C4 @ =gUnknown_030059E0
	adds r1, r4, #0
	adds r1, #0x8c
	movs r0, #0
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x60
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0802A0A2
	adds r0, r4, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
_0802A0A2:
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0802A0BE
	adds r0, r4, #0
	adds r0, #0x94
	ldr r0, [r0]
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
_0802A0BE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A0C4: .4byte gUnknown_030059E0

	thumb_func_start sub_802A0C8
sub_802A0C8: @ 0x0802A0C8
	push {lr}
	adds r2, r0, #0
	adds r0, #0x5c
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0x40
	bne _0802A0F4
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0802A0F4
	ldr r1, _0802A0EC @ =gUnknown_030059E0
	ldr r0, _0802A0F0 @ =sub_802A620
	str r0, [r1]
	movs r0, #1
	b _0802A0F6
	.align 2, 0
_0802A0EC: .4byte gUnknown_030059E0
_0802A0F0: .4byte sub_802A620
_0802A0F4:
	movs r0, #0
_0802A0F6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_802A0FC
sub_802A0FC: @ 0x0802A0FC
	push {lr}
	adds r2, r0, #0
	adds r0, #0x5c
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0x80
	bne _0802A17C
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	ldrh r3, [r2, #0x14]
	cmp r0, #0
	bne _0802A148
	adds r0, r2, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x20
	movs r1, #0xc0
	ands r0, r1
	cmp r0, #0
	bne _0802A148
	ldr r0, [r2, #0x20]
	ldr r1, _0802A13C @ =0x01000006
	ands r0, r1
	cmp r0, #0
	bne _0802A148
	ldr r1, _0802A140 @ =gUnknown_030059E0
	ldr r0, _0802A144 @ =sub_802A228
	str r0, [r1]
	movs r0, #1
	b _0802A17E
	.align 2, 0
_0802A13C: .4byte 0x01000006
_0802A140: .4byte gUnknown_030059E0
_0802A144: .4byte sub_802A228
_0802A148:
	adds r0, r3, #0
	adds r0, #0x7f
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xfe
	bls _0802A17C
	ldr r0, [r2, #0x20]
	ldr r1, _0802A170 @ =0x01000006
	ands r0, r1
	cmp r0, #0
	bne _0802A17C
	ldr r1, _0802A174 @ =gUnknown_030059E0
	ldr r0, _0802A178 @ =sub_8025A0C
	str r0, [r1]
	movs r0, #0x6d
	bl m4aSongNumStart
	movs r0, #1
	b _0802A17E
	.align 2, 0
_0802A170: .4byte 0x01000006
_0802A174: .4byte gUnknown_030059E0
_0802A178: .4byte sub_8025A0C
_0802A17C:
	movs r0, #0
_0802A17E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_802A184
sub_802A184: @ 0x0802A184
	push {lr}
	adds r2, r0, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _0802A1C0
	adds r1, r2, #0
	adds r1, #0x5e
	ldr r0, _0802A1B4 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0802A1C0
	ldr r0, _0802A1B8 @ =gUnknown_030059E0
	ldr r1, _0802A1BC @ =sub_802631C
	str r1, [r0]
	adds r0, r2, #0
	bl _call_via_r1
	movs r0, #1
	b _0802A1C2
	.align 2, 0
_0802A1B4: .4byte gUnknown_03005B38
_0802A1B8: .4byte gUnknown_030059E0
_0802A1BC: .4byte sub_802631C
_0802A1C0:
	movs r0, #0
_0802A1C2:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_802A1C8
sub_802A1C8: @ 0x0802A1C8
	push {r4, lr}
	adds r3, r0, #0
	adds r0, #0x52
	ldrh r2, [r0]
	adds r0, #8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802A1E4
	movs r0, #0xc0
	lsls r0, r0, #4
	str r0, [r3, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #4
	b _0802A204
_0802A1E4:
	ldr r0, [r3, #0x20]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0802A1FA
	movs r0, #0xc0
	lsls r0, r0, #3
	str r0, [r3, #0x44]
	movs r0, #0xf0
	lsls r0, r0, #4
	b _0802A204
_0802A1FA:
	movs r0, #0xc0
	lsls r0, r0, #3
	str r0, [r3, #0x44]
	movs r0, #0x90
	lsls r0, r0, #4
_0802A204:
	str r0, [r3, #0x40]
	ldr r1, _0802A224 @ =gUnknown_080D6902
	lsls r2, r2, #2
	adds r0, r2, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	str r0, [r3, #0x48]
	adds r1, #2
	adds r2, r2, r1
	movs r1, #0
	ldrsh r0, [r2, r1]
	str r0, [r3, #0x4c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A224: .4byte gUnknown_080D6902

	thumb_func_start sub_802A228
sub_802A228: @ 0x0802A228
	push {lr}
	ldr r1, [r0, #0x20]
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
	adds r2, r0, #0
	adds r2, #0x64
	movs r3, #0
	movs r1, #2
	strh r1, [r2]
	strh r3, [r0, #0x14]
	ldr r1, _0802A250 @ =gUnknown_030059E0
	ldr r2, _0802A254 @ =sub_8025854
	str r2, [r1]
	bl _call_via_r2
	pop {r0}
	bx r0
	.align 2, 0
_0802A250: .4byte gUnknown_030059E0
_0802A254: .4byte sub_8025854

	thumb_func_start sub_802A258
sub_802A258: @ 0x0802A258
	push {lr}
	adds r2, r0, #0
	ldr r1, [r2, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0802A27E
	movs r0, #4
	ands r1, r0
	cmp r1, #0
	beq _0802A276
	adds r0, r2, #0
	bl sub_8025A0C
	b _0802A296
_0802A276:
	adds r0, r2, #0
	bl sub_8025318
	b _0802A296
_0802A27E:
	movs r0, #0x80
	lsls r0, r0, #0xb
	orrs r1, r0
	ldr r0, _0802A29C @ =0xFEFFFFDF
	ands r1, r0
	str r1, [r2, #0x20]
	ldr r0, _0802A2A0 @ =gUnknown_030059E0
	ldr r1, _0802A2A4 @ =sub_8026D2C
	str r1, [r0]
	adds r0, r2, #0
	bl _call_via_r1
_0802A296:
	pop {r0}
	bx r0
	.align 2, 0
_0802A29C: .4byte 0xFEFFFFDF
_0802A2A0: .4byte gUnknown_030059E0
_0802A2A4: .4byte sub_8026D2C

	thumb_func_start sub_802A2A8
sub_802A2A8: @ 0x0802A2A8
	push {lr}
	adds r2, r0, #0
	ldr r0, _0802A2E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0802A2DE
	ldr r0, [r2, #0x20]
	movs r1, #0x84
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0802A2DE
	adds r0, r2, #0
	adds r0, #0x24
	ldrb r0, [r0]
	adds r0, #0x40
	lsls r0, r0, #0x18
	cmp r0, #0
	ble _0802A2DE
	adds r0, r2, #0
	adds r0, #0x5e
	ldr r1, _0802A2E8 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1, #2]
	ands r0, r2
	cmp r0, #0
	bne _0802A2EC
_0802A2DE:
	movs r0, #0
	b _0802A2F4
	.align 2, 0
_0802A2E4: .4byte gUnknown_030054CC
_0802A2E8: .4byte gUnknown_03005B38
_0802A2EC:
	ldr r1, _0802A2F8 @ =gUnknown_030059E0
	ldr r0, _0802A2FC @ =sub_802A714
	str r0, [r1]
	movs r0, #1
_0802A2F4:
	pop {r1}
	bx r1
	.align 2, 0
_0802A2F8: .4byte gUnknown_030059E0
_0802A2FC: .4byte sub_802A714

	thumb_func_start sub_802A300
sub_802A300: @ 0x0802A300
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _0802A34C @ =0xFEFFFFD7
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r1, #0
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r2, r4, #0
	adds r2, #0x66
	ldr r0, _0802A350 @ =0x0000FFFF
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x24
	strb r1, [r0]
	ldr r0, _0802A354 @ =0x00000115
	bl m4aSongNumStart
	ldr r0, _0802A358 @ =gUnknown_030059E0
	ldr r1, _0802A35C @ =sub_802940C
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A34C: .4byte 0xFEFFFFD7
_0802A350: .4byte 0x0000FFFF
_0802A354: .4byte 0x00000115
_0802A358: .4byte gUnknown_030059E0
_0802A35C: .4byte sub_802940C

	thumb_func_start sub_802A360
sub_802A360: @ 0x0802A360
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x3e
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	movs r0, #0x92
	lsls r0, r0, #1
	bl m4aSongNumStart
	ldr r0, _0802A3B0 @ =gUnknown_030059E0
	ldr r1, _0802A3B4 @ =sub_8026BCC
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A3B0: .4byte gUnknown_030059E0
_0802A3B4: .4byte sub_8026BCC

	thumb_func_start sub_802A3B8
sub_802A3B8: @ 0x0802A3B8
	push {lr}
	bl sub_802808C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802A3C4
sub_802A3C4: @ 0x0802A3C4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8027EF0
	adds r4, #0x90
	ldr r0, [r4]
	ldr r0, [r0, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	beq _0802A3E2
	ldr r1, _0802A3E8 @ =gUnknown_030059E0
	ldr r0, _0802A3EC @ =sub_8025A0C
	str r0, [r1]
_0802A3E2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A3E8: .4byte gUnknown_030059E0
_0802A3EC: .4byte sub_8025A0C

	thumb_func_start sub_802A3F0
sub_802A3F0: @ 0x0802A3F0
	push {lr}
	ldr r2, _0802A408 @ =gUnknown_03005960
	ldr r1, [r2, #0x1c]
	movs r0, #0x38
	rsbs r0, r0, #0
	cmp r1, r0
	ble _0802A402
	subs r0, r1, #1
	str r0, [r2, #0x1c]
_0802A402:
	pop {r0}
	bx r0
	.align 2, 0
_0802A408: .4byte gUnknown_03005960

	thumb_func_start sub_802A40C
sub_802A40C: @ 0x0802A40C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r2, #0
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r0, r4, #0
	adds r0, #0x5a
	strb r2, [r0]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	adds r0, #0x72
	strh r2, [r0]
	ldr r0, _0802A460 @ =gUnknown_030059E0
	ldr r1, _0802A464 @ =sub_80279F8
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A460: .4byte gUnknown_030059E0
_0802A464: .4byte sub_80279F8

	thumb_func_start sub_802A468
sub_802A468: @ 0x0802A468
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	ldr r0, [r4, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	ldr r0, _0802A4B0 @ =gUnknown_030059E0
	ldr r1, _0802A4B4 @ =sub_8027C5C
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A4B0: .4byte gUnknown_030059E0
_0802A4B4: .4byte sub_8027C5C

	thumb_func_start sub_802A4B8
sub_802A4B8: @ 0x0802A4B8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r4, #0x20]
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	ldr r0, _0802A4F4 @ =gUnknown_030059E0
	ldr r1, _0802A4F8 @ =sub_8027D3C
	str r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802A4F4: .4byte gUnknown_030059E0
_0802A4F8: .4byte sub_8027D3C

	thumb_func_start sub_802A4FC
sub_802A4FC: @ 0x0802A4FC
	bx lr
	.align 2, 0

	thumb_func_start sub_802A500
sub_802A500: @ 0x0802A500
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	blt _0802A51A
	adds r0, r4, #0
	bl sub_8022218
	adds r0, r4, #0
	bl sub_8022284
	b _0802A526
_0802A51A:
	adds r0, r4, #0
	bl sub_8022284
	adds r0, r4, #0
	bl sub_8022218
_0802A526:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_802A52C
sub_802A52C: @ 0x0802A52C
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x20]
	movs r1, #0xa
	ands r0, r1
	cmp r0, #8
	bne _0802A54C
	ldr r1, _0802A550 @ =gUnknown_030059E0
	ldr r0, _0802A554 @ =sub_8025318
	str r0, [r1]
	ldrh r0, [r2, #0x10]
	movs r1, #0
	strh r0, [r2, #0x14]
	adds r0, r2, #0
	adds r0, #0x24
	strb r1, [r0]
_0802A54C:
	pop {r0}
	bx r0
	.align 2, 0
_0802A550: .4byte gUnknown_030059E0
_0802A554: .4byte sub_8025318

	thumb_func_start sub_802A558
sub_802A558: @ 0x0802A558
	push {r4, lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x20]
	movs r1, #0x40
	ands r0, r1
	movs r1, #0x2a
	cmp r0, #0
	beq _0802A56A
	movs r1, #0xc
_0802A56A:
	ldrh r3, [r2, #0x12]
	movs r4, #0x12
	ldrsh r0, [r2, r4]
	cmp r0, #0
	bge _0802A57C
	lsls r0, r1, #0x10
	asrs r0, r0, #0x11
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_0802A57C:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r3
	strh r0, [r2, #0x12]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802A58C
sub_802A58C: @ 0x0802A58C
	push {lr}
	adds r1, r0, #0
	adds r0, #0x64
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0x14
	beq _0802A5A8
	ldrh r2, [r1, #0x2c]
	movs r3, #0x2c
	ldrsh r0, [r1, r3]
	cmp r0, #0
	ble _0802A5A8
	subs r0, r2, #1
	strh r0, [r1, #0x2c]
_0802A5A8:
	pop {r0}
	bx r0

	thumb_func_start sub_802A5AC
sub_802A5AC: @ 0x0802A5AC
	push {lr}
	adds r1, r0, #0
	adds r1, #0x36
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _0802A5C0
	subs r0, r2, #1
	strb r0, [r1]
_0802A5C0:
	pop {r0}
	bx r0

	thumb_func_start sub_802A5C4
sub_802A5C4: @ 0x0802A5C4
	push {lr}
	adds r3, r0, #0
	ldr r0, [r3, #0x20]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r3, #0x20]
	adds r1, r3, #0
	adds r1, #0x64
	ldrh r0, [r1]
	subs r0, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0802A5E6
	movs r0, #6
	b _0802A5E8
_0802A5E6:
	movs r0, #5
_0802A5E8:
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x90
	ldr r2, [r0]
	ldr r0, [r2, #0x1c]
	ldr r1, _0802A614 @ =0xFFFFBFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	movs r0, #0
	strh r0, [r3, #0x14]
	ldr r0, [r3, #0x20]
	movs r1, #1
	eors r0, r1
	str r0, [r3, #0x20]
	ldr r0, _0802A618 @ =gUnknown_030059E0
	ldr r1, _0802A61C @ =sub_8025548
	str r1, [r0]
	adds r0, r3, #0
	bl _call_via_r1
	pop {r0}
	bx r0
	.align 2, 0
_0802A614: .4byte 0xFFFFBFFF
_0802A618: .4byte gUnknown_030059E0
_0802A61C: .4byte sub_8025548

	thumb_func_start sub_802A620
sub_802A620: @ 0x0802A620
	push {lr}
	ldr r1, [r0, #0x20]
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
	adds r1, r0, #0
	adds r1, #0x90
	ldr r3, [r1]
	ldr r1, [r3, #0x1c]
	ldr r2, _0802A654 @ =0xFFFFBFFF
	ands r1, r2
	str r1, [r3, #0x1c]
	adds r2, r0, #0
	adds r2, #0x64
	movs r3, #0
	movs r1, #1
	strh r1, [r2]
	strh r3, [r0, #0x14]
	ldr r1, _0802A658 @ =gUnknown_030059E0
	ldr r2, _0802A65C @ =sub_802569C
	str r2, [r1]
	bl _call_via_r2
	pop {r0}
	bx r0
	.align 2, 0
_0802A654: .4byte 0xFFFFBFFF
_0802A658: .4byte gUnknown_030059E0
_0802A65C: .4byte sub_802569C

	thumb_func_start sub_802A660
sub_802A660: @ 0x0802A660
	push {lr}
	adds r2, r0, #0
	movs r1, #0x2a
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bne _0802A6BA
	adds r0, r2, #0
	adds r0, #0x5c
	ldrh r0, [r0]
	movs r1, #0x30
	ands r1, r0
	cmp r1, #0x10
	beq _0802A69C
	cmp r1, #0x20
	bne _0802A6BA
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bgt _0802A690
	ldr r0, [r2, #0x20]
	movs r1, #1
	orrs r0, r1
	str r0, [r2, #0x20]
	b _0802A6BA
_0802A690:
	subs r0, #0x18
	cmp r0, #0
	bge _0802A6B8
	movs r0, #0x60
	rsbs r0, r0, #0
	b _0802A6B8
_0802A69C:
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	cmp r0, #0
	blt _0802A6B0
	ldr r0, [r2, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #0x20]
	b _0802A6BA
_0802A6B0:
	adds r0, #0x18
	cmp r0, #0
	ble _0802A6B8
	movs r0, #0x60
_0802A6B8:
	strh r0, [r2, #0x14]
_0802A6BA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802A6C0
sub_802A6C0: @ 0x0802A6C0
	push {lr}
	mov ip, r0
	mov r3, ip
	adds r3, #0x90
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	ldr r1, _0802A708 @ =0xFFFFCFFF
	ands r0, r1
	str r0, [r2, #0x1c]
	ldr r2, [r3]
	ldr r0, [r2, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r2, #0x1c]
	mov r2, ip
	adds r2, #0x37
	ldrb r1, [r2]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r2]
	mov r1, ip
	adds r1, #0x38
	movs r0, #1
	strb r0, [r1]
	ldr r2, _0802A70C @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0802A710 @ =0xBFFFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	movs r0, #0x72
	bl m4aSongNumStop
	pop {r0}
	bx r0
	.align 2, 0
_0802A708: .4byte 0xFFFFCFFF
_0802A70C: .4byte gUnknown_030059E0
_0802A710: .4byte 0xBFFFFFFF

	thumb_func_start sub_802A714
sub_802A714: @ 0x0802A714
	push {lr}
	adds r2, r0, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	bhi _0802A7A4
	lsls r0, r0, #2
	ldr r1, _0802A730 @ =_0802A734
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0802A730: .4byte _0802A734
_0802A734: @ jump table
	.4byte _0802A748 @ case 0
	.4byte _0802A750 @ case 1
	.4byte _0802A76A @ case 2
	.4byte _0802A772 @ case 3
	.4byte _0802A78C @ case 4
_0802A748:
	adds r0, r2, #0
	bl sub_8011D48
	b _0802A7A4
_0802A750:
	adds r0, r2, #0
	adds r0, #0x5a
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802A762
	adds r0, r2, #0
	bl sub_8012548
	b _0802A7A4
_0802A762:
	adds r0, r2, #0
	bl sub_8012830
	b _0802A7A4
_0802A76A:
	adds r0, r2, #0
	bl sub_8012D3C
	b _0802A7A4
_0802A772:
	adds r0, r2, #0
	adds r0, #0x5a
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802A784
	adds r0, r2, #0
	bl sub_8012EEC
	b _0802A7A4
_0802A784:
	adds r0, r2, #0
	bl sub_8013070
	b _0802A7A4
_0802A78C:
	adds r0, r2, #0
	adds r0, #0x5a
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802A79E
	adds r0, r2, #0
	bl sub_8013F04
	b _0802A7A4
_0802A79E:
	adds r0, r2, #0
	bl sub_8011D48
_0802A7A4:
	pop {r0}
	bx r0

	thumb_func_start sub_802A7A8
sub_802A7A8: @ 0x0802A7A8
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0802A830 @ =sub_802AA48
	ldr r2, _0802A834 @ =0x00004001
	ldr r1, _0802A838 @ =sub_802AE58
	str r1, [sp]
	movs r1, #0x38
	movs r3, #0
	bl TaskCreate
	mov sb, r0
	ldrh r4, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r4, r5
	ldr r1, _0802A83C @ =IWRAM_START + 0x30
	adds r0, r4, r1
	movs r1, #0
	mov r8, r1
	strb r6, [r0]
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r5, #4]
	movs r2, #0
	mov r0, r8
	strh r0, [r5, #8]
	ldr r0, _0802A840 @ =0x00000352
	strh r0, [r5, #0xa]
	ldr r1, _0802A844 @ =IWRAM_START + 0x20
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _0802A848 @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	mov r1, r8
	strh r1, [r5, #0x1c]
	ldr r0, _0802A84C @ =IWRAM_START + 0x22
	adds r1, r4, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0802A850 @ =IWRAM_START + 0x25
	adds r4, r4, r1
	strb r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	movs r0, #0x97
	bl m4aSongNumStart
	mov r0, sb
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0802A830: .4byte sub_802AA48
_0802A834: .4byte 0x00004001
_0802A838: .4byte sub_802AE58
_0802A83C: .4byte IWRAM_START + 0x30
_0802A840: .4byte 0x00000352
_0802A844: .4byte IWRAM_START + 0x20
_0802A848: .4byte IWRAM_START + 0x21
_0802A84C: .4byte IWRAM_START + 0x22
_0802A850: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802A854
sub_802A854: @ 0x0802A854
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0802A8D8 @ =sub_802AC60
	ldr r2, _0802A8DC @ =0x00004001
	ldr r1, _0802A8E0 @ =sub_802AE58
	str r1, [sp]
	movs r1, #0x38
	movs r3, #0
	bl TaskCreate
	mov sb, r0
	ldrh r4, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r4, r5
	ldr r1, _0802A8E4 @ =IWRAM_START + 0x30
	adds r0, r4, r1
	movs r1, #0
	mov r8, r1
	strb r6, [r0]
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r5, #4]
	movs r2, #0
	mov r0, r8
	strh r0, [r5, #8]
	movs r0, #0xd5
	lsls r0, r0, #2
	strh r0, [r5, #0xa]
	ldr r1, _0802A8E8 @ =IWRAM_START + 0x20
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _0802A8EC @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	mov r1, r8
	strh r1, [r5, #0x1c]
	ldr r0, _0802A8F0 @ =IWRAM_START + 0x22
	adds r1, r4, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0802A8F4 @ =IWRAM_START + 0x25
	adds r4, r4, r1
	strb r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	mov r0, sb
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0802A8D8: .4byte sub_802AC60
_0802A8DC: .4byte 0x00004001
_0802A8E0: .4byte sub_802AE58
_0802A8E4: .4byte IWRAM_START + 0x30
_0802A8E8: .4byte IWRAM_START + 0x20
_0802A8EC: .4byte IWRAM_START + 0x21
_0802A8F0: .4byte IWRAM_START + 0x22
_0802A8F4: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802A8F8
sub_802A8F8: @ 0x0802A8F8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0802A980 @ =sub_802AB04
	ldr r2, _0802A984 @ =0x00004001
	ldr r1, _0802A988 @ =sub_802AE58
	str r1, [sp]
	movs r1, #0x38
	movs r3, #0
	bl TaskCreate
	adds r6, r0, #0
	ldrh r0, [r6, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	ldr r1, _0802A98C @ =IWRAM_START + 0x30
	adds r0, r0, r1
	movs r1, #0
	mov r8, r1
	strb r4, [r0]
	ldrh r4, [r6, #6]
	adds r5, r4, r5
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r5, #4]
	movs r2, #0
	mov r0, r8
	strh r0, [r5, #8]
	ldr r0, _0802A990 @ =0x00000353
	strh r0, [r5, #0xa]
	ldr r1, _0802A994 @ =IWRAM_START + 0x20
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _0802A998 @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	mov r1, r8
	strh r1, [r5, #0x1c]
	ldr r0, _0802A99C @ =IWRAM_START + 0x22
	adds r1, r4, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0802A9A0 @ =IWRAM_START + 0x25
	adds r4, r4, r1
	strb r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	movs r0, #0x97
	bl m4aSongNumStart
	adds r0, r6, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0802A980: .4byte sub_802AB04
_0802A984: .4byte 0x00004001
_0802A988: .4byte sub_802AE58
_0802A98C: .4byte IWRAM_START + 0x30
_0802A990: .4byte 0x00000353
_0802A994: .4byte IWRAM_START + 0x20
_0802A998: .4byte IWRAM_START + 0x21
_0802A99C: .4byte IWRAM_START + 0x22
_0802A9A0: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802A9A4
sub_802A9A4: @ 0x0802A9A4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0802AA24 @ =sub_802AD60
	ldr r2, _0802AA28 @ =0x00004001
	ldr r1, _0802AA2C @ =sub_802AE58
	str r1, [sp]
	movs r1, #0x38
	movs r3, #0
	bl TaskCreate
	adds r6, r0, #0
	ldrh r0, [r6, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	ldr r1, _0802AA30 @ =IWRAM_START + 0x30
	adds r0, r0, r1
	movs r1, #0
	mov r8, r1
	strb r4, [r0]
	ldrh r4, [r6, #6]
	adds r5, r4, r5
	movs r0, #8
	bl sub_8007C10
	str r0, [r5, #4]
	movs r2, #0
	mov r0, r8
	strh r0, [r5, #8]
	ldr r0, _0802AA34 @ =0x00000371
	strh r0, [r5, #0xa]
	ldr r1, _0802AA38 @ =IWRAM_START + 0x20
	adds r0, r4, r1
	strb r2, [r0]
	ldr r0, _0802AA3C @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	mov r1, r8
	strh r1, [r5, #0x1c]
	ldr r0, _0802AA40 @ =IWRAM_START + 0x22
	adds r1, r4, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0802AA44 @ =IWRAM_START + 0x25
	adds r4, r4, r1
	strb r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	adds r0, r6, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0802AA24: .4byte sub_802AD60
_0802AA28: .4byte 0x00004001
_0802AA2C: .4byte sub_802AE58
_0802AA30: .4byte IWRAM_START + 0x30
_0802AA34: .4byte 0x00000371
_0802AA38: .4byte IWRAM_START + 0x20
_0802AA3C: .4byte IWRAM_START + 0x21
_0802AA40: .4byte IWRAM_START + 0x22
_0802AA44: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802AA48
sub_802AA48: @ 0x0802AA48
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0802AA7C @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	ldr r3, _0802AA80 @ =IWRAM_START + 0x30
	adds r0, r1, r3
	ldrb r7, [r0]
	orrs r4, r1
	ldr r6, _0802AA84 @ =gUnknown_03005960
	ldr r3, _0802AA88 @ =gUnknown_030059E0
	adds r0, r3, #0
	adds r0, #0x37
	ldrb r1, [r0]
	movs r5, #3
	ands r5, r1
	cmp r5, #1
	beq _0802AA8C
	adds r0, r2, #0
	bl TaskDestroy
	b _0802AAFA
	.align 2, 0
_0802AA7C: .4byte gCurTask
_0802AA80: .4byte IWRAM_START + 0x30
_0802AA84: .4byte gUnknown_03005960
_0802AA88: .4byte gUnknown_030059E0
_0802AA8C:
	movs r0, #2
	mov r8, r0
	ands r0, r1
	cmp r0, #0
	bne _0802AAFA
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	ldr r1, [r6]
	adds r2, r3, #0
	adds r2, #0x7c
	subs r0, r0, r1
	ldrh r2, [r2]
	adds r0, r0, r2
	strh r0, [r4, #0x16]
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r2, [r4, #0x10]
	ldr r0, _0802AAE8 @ =0xFFFFCFFF
	ands r2, r0
	str r2, [r4, #0x10]
	adds r0, r3, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0xc0
	lsls r1, r1, #6
	ands r0, r1
	orrs r2, r0
	str r2, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r1, r5, #0
	ands r1, r7
	ldr r0, _0802AAEC @ =gUnknown_03005590
	ldr r0, [r0]
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	beq _0802AAF0
	cmp r1, r5
	bne _0802AAF4
	b _0802AAFA
	.align 2, 0
_0802AAE8: .4byte 0xFFFFCFFF
_0802AAEC: .4byte gUnknown_03005590
_0802AAF0:
	cmp r1, #0
	beq _0802AAFA
_0802AAF4:
	adds r0, r4, #0
	bl sub_80051E8
_0802AAFA:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802AB04
sub_802AB04: @ 0x0802AB04
	push {r4, r5, r6, lr}
	ldr r0, _0802AB3C @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	ldr r3, _0802AB40 @ =IWRAM_START + 0x30
	adds r0, r1, r3
	ldrb r6, [r0]
	orrs r4, r1
	ldr r5, _0802AB44 @ =gUnknown_03005960
	ldr r0, _0802AB48 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802AB8E
	ldr r3, _0802AB4C @ =gUnknown_030059E0
	adds r0, r3, #0
	adds r0, #0x37
	ldrb r1, [r0]
	movs r0, #0xa
	ands r0, r1
	cmp r0, #8
	beq _0802AB50
	adds r0, r2, #0
	bl TaskDestroy
	b _0802ABC2
	.align 2, 0
_0802AB3C: .4byte gCurTask
_0802AB40: .4byte IWRAM_START + 0x30
_0802AB44: .4byte gUnknown_03005960
_0802AB48: .4byte gUnknown_030054CC
_0802AB4C: .4byte gUnknown_030059E0
_0802AB50:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0802ABC2
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	ldr r1, [r5]
	adds r2, r3, #0
	adds r2, #0x7c
	subs r0, r0, r1
	ldrh r2, [r2]
	adds r0, r0, r2
	strh r0, [r4, #0x16]
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	ldr r1, [r5, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r2, [r4, #0x10]
	ldr r0, _0802ABB0 @ =0xFFFFCFFF
	ands r2, r0
	str r2, [r4, #0x10]
	adds r0, r3, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r0, [r0, #0x1c]
	movs r1, #0xc0
	lsls r1, r1, #6
	ands r0, r1
	orrs r2, r0
	str r2, [r4, #0x10]
_0802AB8E:
	adds r0, r4, #0
	bl sub_8004558
	lsls r0, r6, #0x18
	asrs r2, r0, #0x18
	movs r3, #1
	ands r2, r3
	ldr r0, _0802ABB4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0802ABB8
	cmp r2, r3
	bne _0802ABBC
	b _0802ABC2
	.align 2, 0
_0802ABB0: .4byte 0xFFFFCFFF
_0802ABB4: .4byte gUnknown_03005590
_0802ABB8:
	cmp r2, #0
	beq _0802ABC2
_0802ABBC:
	adds r0, r4, #0
	bl sub_80051E8
_0802ABC2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_802ABC8
sub_802ABC8: @ 0x0802ABC8
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802ABEC @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r7, _0802ABF0 @ =gUnknown_03005960
	ldr r3, [r4, #0x10]
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	beq _0802ABF4
	adds r0, r2, #0
	bl TaskDestroy
	b _0802AC4E
	.align 2, 0
_0802ABEC: .4byte gCurTask
_0802ABF0: .4byte gUnknown_03005960
_0802ABF4:
	movs r5, #0
	movs r6, #0
	movs r2, #0
	ldr r0, _0802AC54 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802AC26
	ldr r1, _0802AC58 @ =gUnknown_030059E0
	ldr r0, [r1, #8]
	adds r2, r1, #0
	adds r2, #0x7c
	asrs r0, r0, #8
	ldrh r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [r1, #0xc]
	lsls r0, r0, #8
	lsrs r6, r0, #0x10
	adds r1, #0x90
	ldr r0, [r1]
	ldr r2, [r0, #0x1c]
	movs r0, #0xc0
	lsls r0, r0, #6
	ands r2, r0
_0802AC26:
	ldr r1, [r7]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r1, [r7, #4]
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r0, _0802AC5C @ =0xFFFFCFFF
	ands r3, r0
	orrs r3, r2
	str r3, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0802AC4E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802AC54: .4byte gUnknown_030054CC
_0802AC58: .4byte gUnknown_030059E0
_0802AC5C: .4byte 0xFFFFCFFF

	thumb_func_start sub_802AC60
sub_802AC60: @ 0x0802AC60
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802ACB0 @ =gCurTask
	ldr r3, [r0]
	ldrh r1, [r3, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	ldr r2, _0802ACB4 @ =IWRAM_START + 0x30
	adds r0, r1, r2
	ldrb r7, [r0]
	orrs r5, r1
	ldr r0, _0802ACB8 @ =gUnknown_03005960
	mov ip, r0
	ldr r0, _0802ACBC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0802ACC8
	ldr r1, _0802ACC0 @ =gUnknown_030055A0
	lsls r0, r7, #0x18
	asrs r0, r0, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r6, r2, r1
	adds r1, #0x57
	adds r0, r2, r1
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0802ACD8
	ldr r1, _0802ACC4 @ =IWRAM_START + 0x50
	adds r0, r2, r1
	ldrh r4, [r0]
	adds r1, #2
	adds r0, r2, r1
	ldrh r3, [r0]
	ldr r2, [r6, #0x10]
	b _0802AD02
	.align 2, 0
_0802ACB0: .4byte gCurTask
_0802ACB4: .4byte IWRAM_START + 0x30
_0802ACB8: .4byte gUnknown_03005960
_0802ACBC: .4byte gUnknown_030054CC
_0802ACC0: .4byte gUnknown_030055A0
_0802ACC4: .4byte IWRAM_START + 0x50
_0802ACC8:
	ldr r2, _0802ACE0 @ =gUnknown_030059E0
	adds r0, r2, #0
	adds r0, #0x37
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0802ACE4
_0802ACD8:
	adds r0, r3, #0
	bl TaskDestroy
	b _0802AD5A
	.align 2, 0
_0802ACE0: .4byte gUnknown_030059E0
_0802ACE4:
	ldr r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x7c
	asrs r0, r0, #8
	ldrh r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [r2, #0xc]
	lsls r0, r0, #8
	lsrs r3, r0, #0x10
	adds r0, r2, #0
	adds r0, #0x90
	ldr r0, [r0]
	ldr r2, [r0, #0x1c]
_0802AD02:
	movs r0, #0xc0
	lsls r0, r0, #6
	ands r2, r0
	mov r0, ip
	ldr r1, [r0]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	mov r0, ip
	ldr r1, [r0, #4]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r0, [r5, #0x10]
	ldr r1, _0802AD48 @ =0xFFFFCFFF
	ands r0, r1
	orrs r0, r2
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r3, #1
	adds r2, r3, #0
	bics r2, r7
	ldr r0, _0802AD4C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0802AD50
	cmp r2, r3
	bne _0802AD54
	b _0802AD5A
	.align 2, 0
_0802AD48: .4byte 0xFFFFCFFF
_0802AD4C: .4byte gUnknown_03005590
_0802AD50:
	cmp r2, #0
	beq _0802AD5A
_0802AD54:
	adds r0, r5, #0
	bl sub_80051E8
_0802AD5A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802AD60
sub_802AD60: @ 0x0802AD60
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802ADAC @ =gCurTask
	ldr r4, [r0]
	ldrh r1, [r4, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	ldr r2, _0802ADB0 @ =IWRAM_START + 0x30
	adds r0, r1, r2
	ldrb r2, [r0]
	orrs r5, r1
	ldr r0, _0802ADB4 @ =gUnknown_03005960
	mov ip, r0
	ldr r0, _0802ADB8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0802AE4C
	ldr r1, _0802ADBC @ =gUnknown_030055A0
	lsls r2, r2, #0x18
	asrs r0, r2, #0x16
	adds r0, r0, r1
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r6, r3, r1
	adds r1, #0x57
	adds r0, r3, r1
	ldrb r1, [r0]
	movs r0, #0x50
	ands r0, r1
	adds r7, r2, #0
	cmp r0, #0
	bne _0802ADC0
	adds r0, r4, #0
	bl TaskDestroy
	b _0802AE52
	.align 2, 0
_0802ADAC: .4byte gCurTask
_0802ADB0: .4byte IWRAM_START + 0x30
_0802ADB4: .4byte gUnknown_03005960
_0802ADB8: .4byte gUnknown_030054CC
_0802ADBC: .4byte gUnknown_030055A0
_0802ADC0:
	ldr r2, _0802AE04 @ =IWRAM_START + 0x50
	adds r0, r3, r2
	mov r2, ip
	ldr r1, [r2]
	ldrh r0, [r0]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r1, _0802AE08 @ =IWRAM_START + 0x52
	adds r0, r3, r1
	ldr r1, [r2, #4]
	ldrh r0, [r0]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r1, [r5, #0x10]
	ldr r0, _0802AE0C @ =0xFFFFCFFF
	ands r1, r0
	str r1, [r5, #0x10]
	ldr r2, [r6, #0x10]
	movs r0, #0xc0
	lsls r0, r0, #6
	ands r2, r0
	orrs r2, r1
	str r2, [r5, #0x10]
	ldr r0, _0802AE10 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802AE14
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r2, r0
	b _0802AE18
	.align 2, 0
_0802AE04: .4byte IWRAM_START + 0x50
_0802AE08: .4byte IWRAM_START + 0x52
_0802AE0C: .4byte 0xFFFFCFFF
_0802AE10: .4byte gUnknown_03005424
_0802AE14:
	ldr r0, _0802AE38 @ =0xFFFFF7FF
	ands r2, r0
_0802AE18:
	str r2, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	asrs r2, r7, #0x18
	movs r3, #1
	ands r2, r3
	ldr r0, _0802AE3C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0802AE40
	cmp r2, r3
	bne _0802AE44
	b _0802AE52
	.align 2, 0
_0802AE38: .4byte 0xFFFFF7FF
_0802AE3C: .4byte gUnknown_03005590
_0802AE40:
	cmp r2, #0
	beq _0802AE52
_0802AE44:
	adds r0, r5, #0
	bl sub_80051E8
	b _0802AE52
_0802AE4C:
	adds r0, r4, #0
	bl TaskDestroy
_0802AE52:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802AE58
sub_802AE58: @ 0x0802AE58
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_802AE6C
sub_802AE6C: @ 0x0802AE6C
	push {r4, r5, r6, r7, lr}
	ldr r2, _0802AEF0 @ =gCurTask
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r4, r0, r1
	adds r1, #0x1c
	adds r6, r0, r1
	adds r1, #0x30
	adds r5, r0, r1
	ldr r0, [r4]
	asrs r0, r0, #8
	strh r0, [r5, #6]
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	strh r0, [r5, #8]
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	adds r0, #1
	lsls r3, r0, #3
	movs r7, #0x80
	lsls r7, r7, #1
	cmp r3, r7
	ble _0802AEA0
	adds r3, r7, #0
_0802AEA0:
	strh r3, [r5, #2]
	strh r3, [r5, #4]
	ldrh r1, [r4, #0x14]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0802AEB2
	rsbs r0, r3, #0
	strh r0, [r5, #2]
_0802AEB2:
	ldrh r1, [r4, #0x14]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0802AEC2
	ldrh r0, [r5, #4]
	rsbs r0, r0, #0
	strh r0, [r5, #4]
_0802AEC2:
	ldrh r0, [r5, #6]
	adds r0, #0x20
	lsls r0, r0, #0x10
	movs r1, #0x98
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0802AEE6
	ldrh r0, [r5, #8]
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xe0
	bhi _0802AEE6
	ldrh r3, [r4, #0x10]
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0x80
	ble _0802AEF4
_0802AEE6:
	ldr r0, [r2]
	bl TaskDestroy
	b _0802AF50
	.align 2, 0
_0802AEF0: .4byte gCurTask
_0802AEF4:
	cmp r0, #0x40
	bgt _0802AF1C
	ldr r1, _0802AF58 @ =gUnknown_08097AA4
	movs r2, #0x10
	ldrsh r0, [r4, r2]
	lsls r0, r0, #2
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	rsbs r0, r0, #0
	movs r2, #0xa
	ldrsh r1, [r4, r2]
	muls r1, r0, r1
	asrs r1, r1, #8
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
_0802AF1C:
	adds r0, r3, #1
	strh r0, [r4, #0x10]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	ldr r2, _0802AF5C @ =gUnknown_030054B8
	ldrb r1, [r2]
	adds r0, r1, #1
	strb r0, [r2]
	movs r0, #0x20
	orrs r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [r6, #0x10]
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_8004860
	adds r0, r6, #0
	bl sub_80051E8
_0802AF50:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802AF58: .4byte gUnknown_08097AA4
_0802AF5C: .4byte gUnknown_030054B8

	thumb_func_start sub_802AF60
sub_802AF60: @ 0x0802AF60
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	adds r6, r0, #0
	mov sb, r1
	ldr r4, _0802AFFC @ =gUnknown_03005960
	ldr r0, _0802B000 @ =sub_802AE6C
	str r0, [sp]
	ldr r0, _0802B004 @ =sub_801F550
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_801F15C
	mov r8, r0
	ldrh r5, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r5, r2
	ldr r1, [r4]
	lsls r1, r1, #8
	ldr r0, [r6, #8]
	subs r0, r0, r1
	str r0, [r2]
	ldr r1, [r4, #4]
	lsls r1, r1, #8
	ldr r0, [r6, #0xc]
	subs r0, r0, r1
	str r0, [r2, #4]
	movs r4, #0
	strh r4, [r2, #8]
	movs r0, #0x90
	lsls r0, r0, #1
	strh r0, [r2, #0xa]
	strh r4, [r2, #0x10]
	adds r6, #0x60
	ldrb r0, [r6]
	strb r0, [r2, #0x1a]
	ldr r0, _0802B008 @ =IWRAM_START + 0x1C
	adds r6, r5, r0
	movs r0, #4
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0802B00C @ =0x00000366
	strh r0, [r6, #0xa]
	movs r0, #5
	mov r1, sb
	subs r0, r0, r1
	ldr r2, _0802B010 @ =IWRAM_START + 0x3C
	adds r1, r5, r2
	strb r0, [r1]
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r6, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	ldr r0, _0802B014 @ =IWRAM_START + 0x4C
	adds r5, r5, r0
	strh r4, [r5]
	strh r4, [r5, #2]
	strh r4, [r5, #4]
	strh r4, [r5, #6]
	strh r4, [r5, #8]
	mov r0, r8
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0802AFFC: .4byte gUnknown_03005960
_0802B000: .4byte sub_802AE6C
_0802B004: .4byte sub_801F550
_0802B008: .4byte IWRAM_START + 0x1C
_0802B00C: .4byte 0x00000366
_0802B010: .4byte IWRAM_START + 0x3C
_0802B014: .4byte IWRAM_START + 0x4C

	thumb_func_start sub_802B018
sub_802B018: @ 0x0802B018
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r1, #0
	mov r8, r2
	mov sb, r3
	ldr r1, _0802B03C @ =gUnknown_03005B34
	ldrb r2, [r1]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0xb
	ble _0802B040
	movs r0, #0
	b _0802B0F2
	.align 2, 0
_0802B03C: .4byte gUnknown_03005B34
_0802B040:
	adds r0, r2, #1
	strb r0, [r1]
	ldr r0, _0802B09C @ =sub_802B1AC
	str r0, [sp]
	ldr r0, _0802B0A0 @ =sub_802B3EC
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_801F15C
	mov ip, r0
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r2, r0
	adds r0, #0x1c
	adds r4, r2, r0
	ldr r1, _0802B0A4 @ =IWRAM_START + 0x4C
	adds r5, r2, r1
	str r6, [r3]
	str r7, [r3, #4]
	movs r6, #0
	movs r1, #0
	mov r0, r8
	strh r0, [r3, #8]
	ldr r0, _0802B0A8 @ =0x0000FF80
	strh r0, [r3, #0xa]
	strh r1, [r3, #0x10]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #0x12]
	strh r1, [r3, #0x14]
	mov r1, sb
	cmp r1, #0
	bne _0802B0B8
	ldr r0, _0802B0AC @ =0x06012A40
	str r0, [r4, #4]
	ldr r0, _0802B0B0 @ =0x00000355
	strh r0, [r4, #0xa]
	ldr r1, _0802B0B4 @ =IWRAM_START + 0x3C
	adds r0, r2, r1
	strb r6, [r0]
	b _0802B0DE
	.align 2, 0
_0802B09C: .4byte sub_802B1AC
_0802B0A0: .4byte sub_802B3EC
_0802B0A4: .4byte IWRAM_START + 0x4C
_0802B0A8: .4byte 0x0000FF80
_0802B0AC: .4byte 0x06012A40
_0802B0B0: .4byte 0x00000355
_0802B0B4: .4byte IWRAM_START + 0x3C
_0802B0B8:
	ldr r0, _0802B100 @ =0x06012AC0
	str r0, [r4, #4]
	ldr r0, _0802B104 @ =0x00000356
	strh r0, [r4, #0xa]
	ldr r1, _0802B108 @ =IWRAM_START + 0x3C
	adds r0, r2, r1
	strb r6, [r0]
	ldr r2, _0802B10C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0802B110 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0802B114 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xc0
	lsls r1, r1, #0xa
	ands r0, r1
	lsrs r0, r0, #0x10
	strh r0, [r3, #0x14]
_0802B0DE:
	movs r1, #0
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r4, #0x1a]
	strh r1, [r5]
	strh r1, [r5, #2]
	strh r1, [r5, #4]
	strh r1, [r5, #6]
	strh r1, [r5, #8]
	mov r0, ip
_0802B0F2:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802B100: .4byte 0x06012AC0
_0802B104: .4byte 0x00000356
_0802B108: .4byte IWRAM_START + 0x3C
_0802B10C: .4byte gUnknown_030053B8
_0802B110: .4byte 0x00196225
_0802B114: .4byte 0x3C6EF35F

	thumb_func_start sub_802B118
sub_802B118: @ 0x0802B118
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r2, #0
	ldr r0, _0802B19C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0802B192
	ldr r7, _0802B1A0 @ =gUnknown_030053B8
	ldr r0, [r7]
	ldr r6, _0802B1A4 @ =0x00196225
	muls r0, r6, r0
	ldr r1, _0802B1A8 @ =0x3C6EF35F
	mov ip, r1
	adds r1, r0, r1
	str r1, [r7]
	movs r0, #0xc0
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0802B192
	muls r1, r6, r1
	ldr r3, _0802B1A8 @ =0x3C6EF35F
	adds r1, r1, r3
	movs r2, #0xf0
	lsls r2, r2, #4
	adds r0, r1, #0
	ands r0, r2
	lsrs r4, r0, #8
	adds r0, r1, #0
	muls r0, r6, r0
	adds r3, r0, r3
	str r3, [r7]
	adds r0, r3, #0
	ands r0, r2
	lsrs r0, r0, #8
	adds r2, r0, #0
	subs r2, #8
	ldr r0, [r5, #0x20]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0802B172
	rsbs r4, r4, #0
_0802B172:
	ldr r0, [r5, #8]
	subs r0, r0, r4
	ldr r1, [r5, #0xc]
	subs r1, r1, r2
	movs r4, #0x10
	ldrsh r2, [r5, r4]
	muls r3, r6, r3
	add r3, ip
	str r3, [r7]
	movs r4, #0x80
	lsls r4, r4, #1
	ands r3, r4
	lsrs r3, r3, #8
	bl sub_802B018
	movs r2, #1
_0802B192:
	adds r0, r2, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802B19C: .4byte gUnknown_03005590
_0802B1A0: .4byte gUnknown_030053B8
_0802B1A4: .4byte 0x00196225
_0802B1A8: .4byte 0x3C6EF35F

	thumb_func_start sub_802B1AC
sub_802B1AC: @ 0x0802B1AC
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802B268 @ =gCurTask
	mov ip, r0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r6, r0, r1
	adds r1, #0x1c
	adds r5, r0, r1
	ldr r4, _0802B26C @ =IWRAM_START + 0x4C
	adds r7, r0, r4
	ldr r1, [r6]
	ldr r4, [r6, #4]
	movs r0, #0x10
	ldrsh r2, [r6, r0]
	ldr r3, _0802B270 @ =gUnknown_08097AA4
	movs r0, #0xff
	ands r0, r2
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r1, r1, r0
	ldr r3, _0802B274 @ =gUnknown_03005960
	asrs r1, r1, #8
	ldr r0, [r3]
	subs r1, r1, r0
	strh r1, [r7, #6]
	asrs r4, r4, #8
	ldr r0, [r3, #4]
	subs r0, r4, r0
	strh r0, [r7, #8]
	adds r2, #1
	lsls r2, r2, #4
	movs r0, #0x80
	lsls r0, r0, #1
	mov r3, ip
	cmp r2, r0
	ble _0802B200
	adds r2, r0, #0
_0802B200:
	strh r2, [r7, #2]
	strh r2, [r7, #4]
	ldrh r1, [r6, #0x14]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0802B212
	rsbs r0, r2, #0
	strh r0, [r7, #2]
_0802B212:
	ldrh r1, [r6, #0x14]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0802B222
	ldrh r0, [r7, #4]
	rsbs r0, r0, #0
	strh r0, [r7, #4]
_0802B222:
	ldrh r0, [r7, #6]
	adds r0, #0x20
	lsls r0, r0, #0x10
	movs r1, #0x98
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0802B260
	ldrh r0, [r7, #8]
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xe0
	bhi _0802B260
	ldr r2, _0802B278 @ =gUnknown_03005660
	ldrb r0, [r2]
	cmp r0, #1
	bne _0802B260
	movs r1, #4
	ldrsh r0, [r2, r1]
	cmp r0, #0
	blt _0802B260
	subs r1, r4, #3
	cmp r1, r0
	blt _0802B260
	ldrh r2, [r6, #0x10]
	movs r0, #0x10
	ldrsh r1, [r6, r0]
	movs r0, #0xf0
	lsls r0, r0, #1
	cmp r1, r0
	ble _0802B27C
_0802B260:
	ldr r0, [r3]
	bl TaskDestroy
	b _0802B2CE
	.align 2, 0
_0802B268: .4byte gCurTask
_0802B26C: .4byte IWRAM_START + 0x4C
_0802B270: .4byte gUnknown_08097AA4
_0802B274: .4byte gUnknown_03005960
_0802B278: .4byte gUnknown_03005660
_0802B27C:
	movs r4, #8
	ldrsh r1, [r6, r4]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	movs r0, #0xa
	ldrsh r1, [r6, r0]
	ldr r0, [r6, #4]
	adds r0, r0, r1
	str r0, [r6, #4]
	ldrh r1, [r6, #8]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x13
	subs r1, r1, r0
	strh r1, [r6, #8]
	adds r0, r2, #1
	strh r0, [r6, #0x10]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	ldr r2, _0802B2D4 @ =gUnknown_030054B8
	ldrb r1, [r2]
	adds r0, r1, #1
	strb r0, [r2]
	movs r0, #0x20
	orrs r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [r5, #0x10]
	orrs r0, r1
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
_0802B2CE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802B2D4: .4byte gUnknown_030054B8

	thumb_func_start sub_802B2D8
sub_802B2D8: @ 0x0802B2D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0802B304 @ =gCurTask
	ldr r2, [r0]
	ldrh r0, [r2, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r7, [r0]
	ldr r0, [r7, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0802B308
	adds r0, r2, #0
	bl TaskDestroy
	b _0802B392
	.align 2, 0
_0802B304: .4byte gCurTask
_0802B308:
	ldr r0, _0802B3A0 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0802B392
	ldr r2, _0802B3A4 @ =gUnknown_030053B8
	ldr r0, [r2]
	ldr r3, _0802B3A8 @ =0x00196225
	muls r0, r3, r0
	ldr r5, _0802B3AC @ =0x3C6EF35F
	adds r1, r0, r5
	str r1, [r2]
	movs r0, #0xc0
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0802B392
	adds r0, r1, #0
	muls r0, r3, r0
	adds r0, r0, r5
	str r0, [r2]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	lsrs r4, r0, #8
	mov sl, r2
	adds r6, r3, #0
	ldr r0, _0802B3B0 @ =0x0007FF00
	mov sb, r0
	ldr r1, _0802B3B4 @ =0xFFFFFC00
	mov r8, r1
_0802B348:
	mov r2, sl
	ldr r0, [r2]
	muls r0, r6, r0
	adds r0, r0, r5
	adds r1, r0, #0
	mov r3, sb
	ands r1, r3
	lsrs r1, r1, #8
	add r1, r8
	muls r0, r6, r0
	adds r0, r0, r5
	adds r2, r0, #0
	ands r2, r3
	lsrs r2, r2, #8
	add r2, r8
	adds r3, r0, #0
	muls r3, r6, r3
	adds r3, r3, r5
	mov r0, sl
	str r3, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r3, r0
	lsrs r3, r3, #8
	ldr r0, [r7, #8]
	adds r0, r0, r1
	ldr r1, [r7, #0xc]
	adds r1, r1, r2
	ldr r2, _0802B3B8 @ =0xFFFFF400
	adds r1, r1, r2
	movs r2, #0
	bl sub_802B018
	adds r0, r4, #0
	subs r4, #1
	cmp r0, #0
	bne _0802B348
_0802B392:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802B3A0: .4byte gUnknown_03005590
_0802B3A4: .4byte gUnknown_030053B8
_0802B3A8: .4byte 0x00196225
_0802B3AC: .4byte 0x3C6EF35F
_0802B3B0: .4byte 0x0007FF00
_0802B3B4: .4byte 0xFFFFFC00
_0802B3B8: .4byte 0xFFFFF400

	thumb_func_start sub_802B3BC
sub_802B3BC: @ 0x0802B3BC
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _0802B3E4 @ =sub_802B2D8
	ldr r2, _0802B3E8 @ =0x00004001
	movs r1, #0
	str r1, [sp]
	movs r1, #4
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r1, r1, r2
	str r4, [r1]
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0802B3E4: .4byte sub_802B2D8
_0802B3E8: .4byte 0x00004001

	thumb_func_start sub_802B3EC
sub_802B3EC: @ 0x0802B3EC
	ldr r1, _0802B3F8 @ =gUnknown_03005B34
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	bx lr
	.align 2, 0
_0802B3F8: .4byte gUnknown_03005B34

	thumb_func_start sub_802B3FC
sub_802B3FC: @ 0x0802B3FC
	push {r4, r5, lr}
	ldr r0, _0802B420 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r0, [r3, #0xc]
	cmp r0, #0
	beq _0802B416
	ldr r0, [r3]
	cmp r0, #0
	bgt _0802B424
_0802B416:
	adds r0, r2, #0
	bl TaskDestroy
	b _0802B4EA
	.align 2, 0
_0802B420: .4byte gCurTask
_0802B424:
	ldr r5, _0802B448 @ =gUnknown_03005960
	ldr r0, [r3, #0x10]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0802B458
	ldr r2, _0802B44C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0802B450 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0802B454 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x17
	adds r1, r0, #0
	subs r1, #0xff
	b _0802B466
	.align 2, 0
_0802B448: .4byte gUnknown_03005960
_0802B44C: .4byte gUnknown_030053B8
_0802B450: .4byte 0x00196225
_0802B454: .4byte 0x3C6EF35F
_0802B458:
	ldr r0, _0802B480 @ =gUnknown_08097AA4
	ldr r1, [r3, #0x14]
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
_0802B466:
	ldr r0, [r3]
	muls r0, r1, r0
	asrs r2, r0, #0x10
	ldr r0, [r3, #0x10]
	movs r1, #3
	ands r1, r0
	adds r4, r0, #0
	cmp r1, #1
	beq _0802B484
	cmp r1, #2
	beq _0802B48C
	b _0802B496
	.align 2, 0
_0802B480: .4byte gUnknown_08097AA4
_0802B484:
	cmp r2, #0
	bge _0802B496
	rsbs r2, r2, #0
	b _0802B496
_0802B48C:
	adds r0, r2, #0
	cmp r2, #0
	bge _0802B494
	rsbs r0, r2, #0
_0802B494:
	rsbs r2, r0, #0
_0802B496:
	movs r0, #0x20
	ands r0, r4
	cmp r0, #0
	beq _0802B4AA
	ldr r0, _0802B4F0 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0802B4C8
_0802B4AA:
	movs r0, #0x40
	ands r0, r4
	cmp r0, #0
	beq _0802B4B8
	adds r0, r5, #0
	adds r0, #0x60
	strh r2, [r0]
_0802B4B8:
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802B4C8
	adds r0, r5, #0
	adds r0, #0x62
	strh r2, [r0]
_0802B4C8:
	ldr r0, [r3, #0xc]
	cmp r0, #0
	ble _0802B4D2
	subs r0, #1
	str r0, [r3, #0xc]
_0802B4D2:
	ldr r1, [r3]
	cmp r1, #0
	ble _0802B4DE
	ldr r0, [r3, #4]
	subs r0, r1, r0
	str r0, [r3]
_0802B4DE:
	ldr r0, [r3, #0x14]
	ldr r1, [r3, #8]
	adds r0, r0, r1
	ldr r1, _0802B4F4 @ =0x000003FF
	ands r0, r1
	str r0, [r3, #0x14]
_0802B4EA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802B4F0: .4byte gUnknown_03005590
_0802B4F4: .4byte 0x000003FF

	thumb_func_start sub_802B4F8
sub_802B4F8: @ 0x0802B4F8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	mov r8, r3
	ldr r7, [sp, #0x1c]
	ldr r0, _0802B540 @ =sub_802B3FC
	ldr r2, _0802B544 @ =0x00000EFF
	ldr r1, _0802B548 @ =sub_802B54C
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r1, r1, r2
	str r4, [r1]
	str r5, [r1, #4]
	str r6, [r1, #8]
	movs r2, #0
	str r2, [r1, #0x14]
	mov r2, r8
	str r2, [r1, #0xc]
	str r7, [r1, #0x10]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802B540: .4byte sub_802B3FC
_0802B544: .4byte 0x00000EFF
_0802B548: .4byte sub_802B54C

	thumb_func_start sub_802B54C
sub_802B54C: @ 0x0802B54C
	push {lr}
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	ldr r3, _0802B580 @ =gUnknown_03005960
	ldr r0, [r2, #0x10]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802B56A
	adds r1, r3, #0
	adds r1, #0x60
	movs r0, #0
	strh r0, [r1]
_0802B56A:
	ldr r0, [r2, #0x10]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802B57C
	adds r1, r3, #0
	adds r1, #0x62
	movs r0, #0
	strh r0, [r1]
_0802B57C:
	pop {r0}
	bx r0
	.align 2, 0
_0802B580: .4byte gUnknown_03005960

	thumb_func_start sub_802B584
sub_802B584: @ 0x0802B584
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r4, _0802B5BC @ =gUnknown_03005B38
	mov r3, sp
	strh r0, [r3]
	strh r1, [r3, #2]
	strh r2, [r3, #4]
	movs r1, #0
	ldr r7, _0802B5C0 @ =gLoadedSaveGame
	movs r5, #0x80
	lsls r5, r5, #1
	movs r6, #1
_0802B5A0:
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	lsls r1, r2, #1
	add r1, sp
	ldrh r1, [r1]
	adds r3, r0, #0
	cmp r1, #1
	beq _0802B5DA
	cmp r1, #1
	bgt _0802B5C4
	cmp r1, #0
	beq _0802B5CA
	b _0802B5F6
	.align 2, 0
_0802B5BC: .4byte gUnknown_03005B38
_0802B5C0: .4byte gLoadedSaveGame
_0802B5C4:
	cmp r1, #2
	beq _0802B5E8
	b _0802B5F6
_0802B5CA:
	cmp r2, #2
	bne _0802B5D2
	strh r5, [r4]
	b _0802B5F6
_0802B5D2:
	adds r0, r6, #0
	lsls r0, r2
	strh r0, [r4]
	b _0802B5F6
_0802B5DA:
	cmp r2, #2
	bne _0802B5E2
	strh r5, [r4, #2]
	b _0802B5F6
_0802B5E2:
	lsls r1, r2
	strh r1, [r4, #2]
	b _0802B5F6
_0802B5E8:
	cmp r2, #2
	bne _0802B5F0
	strh r5, [r4, #4]
	b _0802B5F6
_0802B5F0:
	adds r0, r6, #0
	lsls r0, r2
	strh r0, [r4, #4]
_0802B5F6:
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r3, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _0802B5A0
	ldr r1, [r7]
	ldrh r0, [r4]
	strh r0, [r1, #0x2c]
	ldrh r0, [r4, #2]
	strh r0, [r1, #0x2e]
	ldrh r0, [r4, #4]
	strh r0, [r1, #0x30]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802B61C
sub_802B61C: @ 0x0802B61C
	ldr r3, _0802B628 @ =gUnknown_03005B38
	strh r0, [r3]
	strh r1, [r3, #2]
	strh r2, [r3, #4]
	bx lr
	.align 2, 0
_0802B628: .4byte gUnknown_03005B38

	thumb_func_start sub_802B62C
sub_802B62C: @ 0x0802B62C
	ldr r3, _0802B704 @ =gUnknown_030059E0
	movs r2, #0
	movs r0, #0
	strh r0, [r3, #4]
	str r0, [r3, #8]
	str r0, [r3, #0xc]
	strh r0, [r3, #0x10]
	strh r0, [r3, #0x12]
	strh r0, [r3, #0x14]
	strb r2, [r3, #0x16]
	strb r2, [r3, #0x17]
	str r0, [r3, #0x20]
	adds r1, r3, #0
	adds r1, #0x24
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	strh r0, [r3, #0x26]
	strh r0, [r3, #0x2a]
	strh r0, [r3, #0x2c]
	strh r0, [r3, #0x2e]
	strh r0, [r3, #0x30]
	strh r0, [r3, #0x32]
	strh r0, [r3, #0x34]
	adds r1, #0x11
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	str r0, [r3, #0x3c]
	str r0, [r3, #0x40]
	str r0, [r3, #0x44]
	str r0, [r3, #0x48]
	str r0, [r3, #0x4c]
	adds r1, #0x18
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strb r2, [r1]
	adds r1, #1
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	str r0, [r3, #0x78]
	adds r1, #6
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r1, #2
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x84
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bx lr
	.align 2, 0
_0802B704: .4byte gUnknown_030059E0

	thumb_func_start sub_802B708
sub_802B708: @ 0x0802B708
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	bl sub_802B62C
	ldr r1, _0802B7D8 @ =gUnknown_030053F0
	movs r0, #0x32
	strh r0, [r1]
	ldr r0, _0802B7DC @ =gUnknown_030059E0
	movs r4, #0
	str r4, [r0, #0x20]
	str r4, [r0, #0x78]
	movs r5, #0
	movs r6, #0x80
	lsls r6, r6, #2
	strh r6, [r0, #0x10]
	strh r6, [r0, #0x14]
	ldr r0, _0802B7E0 @ =gUnknown_03005490
	str r4, [r0]
	ldr r0, _0802B7E4 @ =sub_802BC10
	movs r1, #0xc0
	lsls r1, r1, #1
	ldr r2, _0802B7E8 @ =0x00004040
	str r4, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _0802B7EC @ =gUnknown_03005B40
	str r0, [r1]
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	movs r0, #0x20
	str r0, [r1]
	movs r0, #0x96
	lsls r0, r0, #0xa
	str r0, [r1, #4]
	movs r0, #0x90
	lsls r0, r0, #9
	str r0, [r1, #8]
	str r4, [r1, #0x10]
	str r4, [r1, #0x14]
	strh r4, [r1, #0x1a]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x20]
	movs r0, #0x96
	lsls r0, r0, #1
	str r0, [r1, #0xc]
	ldr r2, _0802B7F0 @ =IWRAM_START + 0x22
	adds r0, r3, r2
	strb r5, [r0]
	ldr r0, _0802B7F4 @ =sub_802C828
	str r0, [r1, #0x24]
	ldr r7, _0802B7F8 @ =IWRAM_START + 0x128
	adds r0, r3, r7
	strb r5, [r0]
	ldr r0, _0802B7FC @ =gInput
	ldrh r0, [r0]
	strh r0, [r1, #0x1c]
	ldr r0, _0802B800 @ =gPressedKeys
	ldrh r0, [r0]
	strh r0, [r1, #0x1e]
	ldr r1, _0802B804 @ =IWRAM_START + 0x129
	adds r0, r3, r1
	strb r5, [r0]
	ldr r2, _0802B808 @ =IWRAM_START + 0x134
	adds r1, r3, r2
	ldr r0, _0802B80C @ =0x06010000
	str r0, [r1, #4]
	ldr r2, _0802B810 @ =gUnknown_080D69C8
	ldrh r0, [r2, #4]
	strh r0, [r1, #0xa]
	ldrb r2, [r2, #6]
	adds r7, #0x2c
	adds r0, r3, r7
	strb r2, [r0]
	strh r6, [r1, #0x1a]
	strh r4, [r1, #8]
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x1c]
	ldr r0, _0802B814 @ =IWRAM_START + 0x155
	adds r2, r3, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r7, #2
	adds r2, r3, r7
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, _0802B818 @ =IWRAM_START + 0x159
	adds r3, r3, r0
	strb r5, [r3]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	str r0, [r1, #0x30]
	movs r0, #0xa0
	lsls r0, r0, #5
	str r0, [r1, #0x10]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802B7D8: .4byte gUnknown_030053F0
_0802B7DC: .4byte gUnknown_030059E0
_0802B7E0: .4byte gUnknown_03005490
_0802B7E4: .4byte sub_802BC10
_0802B7E8: .4byte 0x00004040
_0802B7EC: .4byte gUnknown_03005B40
_0802B7F0: .4byte IWRAM_START + 0x22
_0802B7F4: .4byte sub_802C828
_0802B7F8: .4byte IWRAM_START + 0x128
_0802B7FC: .4byte gInput
_0802B800: .4byte gPressedKeys
_0802B804: .4byte IWRAM_START + 0x129
_0802B808: .4byte IWRAM_START + 0x134
_0802B80C: .4byte 0x06010000
_0802B810: .4byte gUnknown_080D69C8
_0802B814: .4byte IWRAM_START + 0x155
_0802B818: .4byte IWRAM_START + 0x159

	thumb_func_start sub_802B81C
sub_802B81C: @ 0x0802B81C
	push {r4, r5, r6, lr}
	ldr r0, _0802B880 @ =gUnknown_03005B40
	ldr r2, [r0]
	cmp r2, #0
	beq _0802B878
	ldrh r1, [r2, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r1, r5
	ldr r0, _0802B884 @ =sub_802C7E8
	str r0, [r2, #8]
	ldr r0, _0802B888 @ =sub_802C8A0
	str r0, [r5, #0x24]
	ldr r0, _0802B88C @ =IWRAM_START + 0x23
	adds r2, r1, r0
	movs r4, #0
	movs r0, #2
	strb r0, [r2]
	ldr r3, _0802B890 @ =gUnknown_080D69C8
	ldrh r2, [r3, #0x14]
	ldr r6, _0802B894 @ =IWRAM_START + 0x13E
	adds r0, r1, r6
	movs r6, #0
	strh r2, [r0]
	ldrb r2, [r3, #0x16]
	ldr r3, _0802B898 @ =IWRAM_START + 0x154
	adds r0, r1, r3
	strb r2, [r0]
	ldr r0, _0802B89C @ =IWRAM_START + 0x155
	adds r2, r1, r0
	movs r0, #0xff
	strb r0, [r2]
	ldr r2, _0802B8A0 @ =IWRAM_START + 0x13C
	adds r0, r1, r2
	strh r4, [r0]
	subs r3, #0xc
	adds r0, r1, r3
	strh r4, [r0]
	adds r2, #0x14
	adds r0, r1, r2
	strh r4, [r0]
	str r4, [r5, #0x10]
	str r4, [r5, #0x14]
	ldr r3, _0802B8A4 @ =IWRAM_START + 0x22
	adds r1, r1, r3
	strb r6, [r1]
_0802B878:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802B880: .4byte gUnknown_03005B40
_0802B884: .4byte sub_802C7E8
_0802B888: .4byte sub_802C8A0
_0802B88C: .4byte IWRAM_START + 0x23
_0802B890: .4byte gUnknown_080D69C8
_0802B894: .4byte IWRAM_START + 0x13E
_0802B898: .4byte IWRAM_START + 0x154
_0802B89C: .4byte IWRAM_START + 0x155
_0802B8A0: .4byte IWRAM_START + 0x13C
_0802B8A4: .4byte IWRAM_START + 0x22

	thumb_func_start sub_802B8A8
sub_802B8A8: @ 0x0802B8A8
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0
	ldr r0, [r4]
	movs r5, #0x10
	ands r0, r5
	cmp r0, #0
	beq _0802B8BA
	b _0802BA72
_0802B8BA:
	ldr r0, _0802B944 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0802B8CC
	b _0802BA72
_0802B8CC:
	ldr r0, _0802B948 @ =gUnknown_03005490
	ldr r1, [r0]
	ldr r0, _0802B94C @ =0x00008C9F
	cmp r1, r0
	bls _0802B964
	ldr r0, _0802B950 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #5]
	cmp r0, #0
	bne _0802B964
	ldr r1, _0802B954 @ =gUnknown_030059E0
	movs r0, #0x80
	str r0, [r1, #0x20]
	ldr r0, _0802B958 @ =sub_802C8EC
	str r0, [r4, #0x24]
	movs r0, #0x3c
	str r0, [r4, #0xc]
	movs r2, #0
	strh r6, [r4, #0x1a]
	strh r3, [r4, #0x18]
	str r5, [r4]
	adds r1, r4, #0
	adds r1, #0x23
	movs r0, #0x15
	strb r0, [r1]
	ldr r1, _0802B95C @ =gUnknown_080D69C8
	adds r0, r1, #0
	adds r0, #0xac
	ldrh r0, [r0]
	movs r5, #0x9f
	lsls r5, r5, #1
	adds r3, r4, r5
	strh r0, [r3]
	adds r1, #0xae
	ldrb r1, [r1]
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r0, r4, r7
	strb r1, [r0]
	ldr r0, _0802B960 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r6, [r0]
	movs r3, #0xa4
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r6, [r0]
	adds r5, #0x12
	adds r0, r4, r5
	strh r6, [r0]
	str r6, [r4, #0x10]
	str r6, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r2, [r0]
	b _0802BA72
	.align 2, 0
_0802B944: .4byte gUnknown_03005424
_0802B948: .4byte gUnknown_03005490
_0802B94C: .4byte 0x00008C9F
_0802B950: .4byte gLoadedSaveGame
_0802B954: .4byte gUnknown_030059E0
_0802B958: .4byte sub_802C8EC
_0802B95C: .4byte gUnknown_080D69C8
_0802B960: .4byte 0x00000155
_0802B964:
	ldr r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0802BA0E
	ldr r0, _0802B9F4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0x3c
	bl DivRem
	cmp r0, #0
	bne _0802BA72
	ldr r1, _0802B9F8 @ =gUnknown_030053F0
	ldrh r0, [r1]
	adds r5, r0, #0
	cmp r5, #0
	bne _0802BA08
	ldr r1, _0802B9FC @ =gUnknown_030059E0
	movs r0, #0x80
	str r0, [r1, #0x20]
	movs r1, #0x10
	ldr r0, _0802BA00 @ =sub_802C8EC
	str r0, [r4, #0x24]
	movs r0, #0x3c
	str r0, [r4, #0xc]
	movs r2, #0
	strh r5, [r4, #0x1a]
	adds r0, #0xc4
	strh r0, [r4, #0x18]
	str r1, [r4]
	adds r1, r4, #0
	adds r1, #0x23
	movs r0, #0x15
	strb r0, [r1]
	ldr r1, _0802BA04 @ =gUnknown_080D69C8
	adds r0, r1, #0
	adds r0, #0xac
	ldrh r0, [r0]
	movs r7, #0x9f
	lsls r7, r7, #1
	adds r3, r4, r7
	strh r0, [r3]
	adds r1, #0xae
	ldrb r1, [r1]
	movs r3, #0xaa
	lsls r3, r3, #1
	adds r0, r4, r3
	strb r1, [r0]
	adds r7, #0x17
	adds r1, r4, r7
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r5, [r0]
	subs r3, #0xc
	adds r0, r4, r3
	strh r5, [r0]
	subs r7, #5
	adds r0, r4, r7
	strh r5, [r0]
	str r5, [r4, #0x10]
	str r5, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r2, [r0]
	movs r0, #0x77
	bl m4aSongNumStart
	b _0802BA72
	.align 2, 0
_0802B9F4: .4byte gUnknown_03005590
_0802B9F8: .4byte gUnknown_030053F0
_0802B9FC: .4byte gUnknown_030059E0
_0802BA00: .4byte sub_802C8EC
_0802BA04: .4byte gUnknown_080D69C8
_0802BA08:
	subs r0, #1
	strh r0, [r1]
	b _0802BA72
_0802BA0E:
	bl sub_8050BB0
	cmp r0, #1
	bne _0802BA72
	ldr r2, _0802BA7C @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #3
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0802BA80 @ =sub_802C8A0
	str r0, [r4, #0x24]
	adds r1, r4, #0
	adds r1, #0x23
	movs r2, #0
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0802BA84 @ =gUnknown_080D69C8
	ldrh r0, [r1, #0x14]
	movs r3, #0x9f
	lsls r3, r3, #1
	adds r3, r3, r4
	mov ip, r3
	movs r3, #0
	mov r5, ip
	strh r0, [r5]
	ldrb r1, [r1, #0x16]
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r0, r4, r7
	strb r1, [r0]
	ldr r0, _0802BA88 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r2, [r0]
	movs r5, #0xa4
	lsls r5, r5, #1
	adds r0, r4, r5
	strh r2, [r0]
	subs r7, #4
	adds r0, r4, r7
	strh r2, [r0]
	str r2, [r4, #0x10]
	str r2, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r3, [r0]
_0802BA72:
	movs r0, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802BA7C: .4byte gUnknown_03005424
_0802BA80: .4byte sub_802C8A0
_0802BA84: .4byte gUnknown_080D69C8
_0802BA88: .4byte 0x00000155

	thumb_func_start sub_802BA8C
sub_802BA8C: @ 0x0802BA8C
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802BB2C @ =gUnknown_03005B40
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r5, r0
	bl sub_8050BB0
	cmp r0, #1
	beq _0802BB4C
	ldr r1, [r6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0802BB4C
	movs r7, #0x80
	adds r0, r1, #0
	ands r0, r7
	cmp r0, #0
	bne _0802BB4C
	movs r2, #0x80
	lsls r2, r2, #2
	adds r4, r1, #0
	ands r4, r2
	cmp r4, #0
	bne _0802BB4C
	ldr r0, _0802BB30 @ =sub_802C480
	str r0, [r6, #0x24]
	movs r3, #0
	movs r0, #0x78
	strh r0, [r6, #0x20]
	movs r0, #0x30
	str r0, [r6, #0xc]
	strh r2, [r6, #0x18]
	subs r0, #0x32
	ands r1, r0
	subs r0, #1
	ands r1, r0
	subs r0, #6
	ands r1, r0
	subs r0, #0x38
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	orrs r1, r7
	str r1, [r6]
	ldr r0, _0802BB34 @ =IWRAM_START + 0x23
	adds r1, r5, r0
	movs r0, #3
	strb r0, [r1]
	ldr r2, _0802BB38 @ =gUnknown_080D69C8
	ldrh r1, [r2, #0x1c]
	ldr r7, _0802BB3C @ =IWRAM_START + 0x13E
	adds r0, r5, r7
	strh r1, [r0]
	ldrb r1, [r2, #0x1e]
	ldr r2, _0802BB40 @ =IWRAM_START + 0x154
	adds r0, r5, r2
	strb r1, [r0]
	adds r7, #0x17
	adds r1, r5, r7
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _0802BB44 @ =IWRAM_START + 0x13C
	adds r0, r5, r1
	strh r4, [r0]
	subs r2, #0xc
	adds r0, r5, r2
	strh r4, [r0]
	subs r7, #5
	adds r0, r5, r7
	strh r4, [r0]
	str r4, [r6, #0x10]
	str r4, [r6, #0x14]
	ldr r1, _0802BB48 @ =IWRAM_START + 0x22
	adds r0, r5, r1
	strb r3, [r0]
	movs r0, #1
	b _0802BB4E
	.align 2, 0
_0802BB2C: .4byte gUnknown_03005B40
_0802BB30: .4byte sub_802C480
_0802BB34: .4byte IWRAM_START + 0x23
_0802BB38: .4byte gUnknown_080D69C8
_0802BB3C: .4byte IWRAM_START + 0x13E
_0802BB40: .4byte IWRAM_START + 0x154
_0802BB44: .4byte IWRAM_START + 0x13C
_0802BB48: .4byte IWRAM_START + 0x22
_0802BB4C:
	movs r0, #0
_0802BB4E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_802BB54
sub_802BB54: @ 0x0802BB54
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802BBF0 @ =gUnknown_03005B40
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r5, r0
	bl sub_8050BB0
	cmp r0, #1
	beq _0802BBE8
	ldr r1, [r6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0802BBE8
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0802BBE8
	movs r2, #8
	adds r4, r1, #0
	ands r4, r2
	cmp r4, #0
	bne _0802BBE8
	ldr r0, _0802BBF4 @ =sub_802C55C
	str r0, [r6, #0x24]
	movs r3, #0
	strh r4, [r6, #0x1a]
	movs r0, #0x96
	lsls r0, r0, #1
	str r0, [r6, #0xc]
	strh r4, [r6, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ands r1, r0
	subs r0, #1
	ands r1, r0
	orrs r1, r2
	str r1, [r6]
	ldr r0, _0802BBF8 @ =IWRAM_START + 0x23
	adds r1, r5, r0
	movs r0, #0x14
	strb r0, [r1]
	ldr r1, _0802BBFC @ =gUnknown_080D69C8
	adds r0, r1, #0
	adds r0, #0xa4
	ldrh r2, [r0]
	ldr r7, _0802BC00 @ =IWRAM_START + 0x13E
	adds r0, r5, r7
	strh r2, [r0]
	adds r1, #0xa6
	ldrb r1, [r1]
	ldr r2, _0802BC04 @ =IWRAM_START + 0x154
	adds r0, r5, r2
	strb r1, [r0]
	adds r7, #0x17
	adds r1, r5, r7
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _0802BC08 @ =IWRAM_START + 0x13C
	adds r0, r5, r1
	strh r4, [r0]
	subs r2, #0xc
	adds r0, r5, r2
	strh r4, [r0]
	subs r7, #5
	adds r0, r5, r7
	strh r4, [r0]
	str r4, [r6, #0x10]
	str r4, [r6, #0x14]
	ldr r1, _0802BC0C @ =IWRAM_START + 0x22
	adds r0, r5, r1
	strb r3, [r0]
_0802BBE8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802BBF0: .4byte gUnknown_03005B40
_0802BBF4: .4byte sub_802C55C
_0802BBF8: .4byte IWRAM_START + 0x23
_0802BBFC: .4byte gUnknown_080D69C8
_0802BC00: .4byte IWRAM_START + 0x13E
_0802BC04: .4byte IWRAM_START + 0x154
_0802BC08: .4byte IWRAM_START + 0x13C
_0802BC0C: .4byte IWRAM_START + 0x22

	thumb_func_start sub_802BC10
sub_802BC10: @ 0x0802BC10
	push {r4, r5, lr}
	ldr r0, _0802BC84 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	adds r0, r5, #0
	bl sub_802BCCC
	ldr r1, [r5, #0x24]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	bl sub_802C9B0
	adds r0, r5, #0
	bl sub_802B8A8
	ldr r0, _0802BC88 @ =IWRAM_START + 0x129
	adds r4, r4, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _0802BCBE
	ldr r1, _0802BC8C @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0802BC90 @ =gUnknown_03002AE4
	ldr r0, _0802BC94 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0802BC98 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0802BC9C @ =gUnknown_03004D5C
	ldr r0, _0802BCA0 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0802BCA4 @ =gUnknown_03005448
	ldrb r0, [r1]
	cmp r0, #0
	beq _0802BCB6
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0802BCB6
	ldr r0, _0802BCA8 @ =gUnknown_03005490
	ldr r1, [r0]
	ldr r0, _0802BCAC @ =0x00008C9F
	cmp r1, r0
	bls _0802BCB0
	movs r0, #2
	bl sub_8036670
	b _0802BCC4
	.align 2, 0
_0802BC84: .4byte gCurTask
_0802BC88: .4byte IWRAM_START + 0x129
_0802BC8C: .4byte 0x0000FFFF
_0802BC90: .4byte gUnknown_03002AE4
_0802BC94: .4byte gUnknown_0300287C
_0802BC98: .4byte gUnknown_03005390
_0802BC9C: .4byte gUnknown_03004D5C
_0802BCA0: .4byte gUnknown_03002A84
_0802BCA4: .4byte gUnknown_03005448
_0802BCA8: .4byte gUnknown_03005490
_0802BCAC: .4byte 0x00008C9F
_0802BCB0:
	bl sub_801A770
	b _0802BCC4
_0802BCB6:
	movs r0, #1
	bl sub_8036670
	b _0802BCC4
_0802BCBE:
	adds r0, r5, #0
	bl sub_802BE1C
_0802BCC4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802BCCC
sub_802BCCC: @ 0x0802BCCC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	ldr r0, [r6]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0802BCEE
	ldr r0, [r6, #4]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	str r0, [r6, #4]
_0802BCEE:
	ldr r7, [r6, #4]
	ldrh r1, [r6, #0x20]
	movs r2, #0x20
	ldrsh r0, [r6, r2]
	cmp r0, #0
	beq _0802BD04
	subs r0, r1, #1
	strh r0, [r6, #0x20]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0802BD0E
_0802BD04:
	ldr r0, [r6]
	movs r1, #0x81
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r6]
_0802BD0E:
	ldr r1, _0802BDC8 @ =gUnknown_080D650C
	ldr r0, _0802BDCC @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r2, r0, #3
	adds r1, r2, r1
	ldr r0, [r1]
	lsls r0, r0, #8
	adds r3, r6, #0
	adds r3, #0x28
	str r3, [sp, #4]
	adds r1, r6, #0
	adds r1, #0x2c
	str r1, [sp, #8]
	movs r3, #0x94
	lsls r3, r3, #1
	adds r3, r6, r3
	str r3, [sp]
	cmp r7, r0
	blt _0802BDAA
	ldr r0, _0802BDD0 @ =gUnknown_080D661C
	adds r1, r2, r0
	ldr r1, [r1]
	mov r8, r1
	adds r0, #4
	adds r0, r2, r0
	ldr r0, [r0]
	mov sb, r0
	lsls r4, r1, #8
	adds r7, r7, r4
	lsls r5, r0, #8
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_804D594
	movs r3, #0
	ldr r0, [sp, #4]
	mov sl, r0
	mov ip, r4
	ldr r4, [sp, #8]
_0802BD60:
	lsls r1, r3, #3
	mov r0, sl
	adds r2, r0, r1
	ldr r0, [r2]
	add r0, ip
	str r0, [r2]
	adds r1, r4, r1
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x1f
	bls _0802BD60
	ldr r1, _0802BDD4 @ =gUnknown_03005430
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0802BDD8 @ =gUnknown_03005960
	ldr r0, [r1]
	add r0, r8
	str r0, [r1]
	ldr r0, [r1, #0x20]
	add r0, r8
	str r0, [r1, #0x20]
	ldr r0, [r1, #0x10]
	add r0, r8
	str r0, [r1, #0x10]
	ldr r0, [r1, #4]
	add r0, sb
	str r0, [r1, #4]
	ldr r0, [r1, #0x24]
	add r0, sb
	str r0, [r1, #0x24]
	ldr r0, [r1, #0x14]
	add r0, sb
	str r0, [r1, #0x14]
_0802BDAA:
	ldr r1, [r6, #0x24]
	ldr r0, _0802BDDC @ =sub_802C8A0
	cmp r1, r0
	beq _0802BDEC
	ldr r0, _0802BDD8 @ =gUnknown_03005960
	ldr r0, [r0, #0x10]
	lsls r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r0, r2
	cmp r7, r1
	bge _0802BDE0
	adds r7, r1, #0
	b _0802BDEC
	.align 2, 0
_0802BDC8: .4byte gUnknown_080D650C
_0802BDCC: .4byte gUnknown_030055B4
_0802BDD0: .4byte gUnknown_080D661C
_0802BDD4: .4byte gUnknown_03005430
_0802BDD8: .4byte gUnknown_03005960
_0802BDDC: .4byte sub_802C8A0
_0802BDE0:
	movs r3, #0x9c
	lsls r3, r3, #9
	adds r0, r0, r3
	cmp r7, r0
	ble _0802BDEC
	adds r7, r0, #0
_0802BDEC:
	str r7, [r6, #4]
	ldr r0, [sp]
	ldrb r2, [r0]
	lsls r0, r2, #3
	ldr r3, [sp, #4]
	adds r1, r3, r0
	str r7, [r1]
	ldr r1, [sp, #8]
	adds r0, r1, r0
	ldr r1, [r6, #8]
	str r1, [r0]
	adds r2, #1
	movs r0, #0x1f
	ands r2, r0
	ldr r3, [sp]
	strb r2, [r3]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802BE1C
sub_802BE1C: @ 0x0802BE1C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	ldr r2, [r6]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _0802BE30
	b _0802BF96
_0802BE30:
	movs r0, #0x82
	ands r0, r2
	cmp r0, #0x80
	bne _0802BE46
	ldr r0, _0802BEB8 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0802BE46
	b _0802BF96
_0802BE46:
	movs r3, #4
	ands r2, r3
	cmp r2, #0
	beq _0802BE5A
	ldr r0, _0802BEB8 @ =gUnknown_03005590
	ldr r0, [r0]
	ands r0, r3
	cmp r0, #0
	beq _0802BE5A
	b _0802BF96
_0802BE5A:
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r5, r6, r0
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r4, r6, r1
	ldr r1, [r6, #4]
	asrs r1, r1, #8
	ldr r2, _0802BEBC @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	ldr r0, [r6, #0x10]
	asrs r0, r0, #8
	adds r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r1, [r6, #8]
	asrs r1, r1, #8
	ldr r0, [r2, #4]
	subs r1, r1, r0
	ldr r0, [r6, #0x14]
	asrs r0, r0, #8
	adds r1, r1, r0
	strh r1, [r5, #0x18]
	ldr r1, [r6]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	movs r2, #0
	cmp r0, #0
	beq _0802BE98
	movs r2, #3
_0802BE98:
	ands r1, r3
	cmp r1, #0
	beq _0802BEC4
	lsls r2, r2, #0xc
	ldr r3, _0802BEC0 @ =gUnknown_030054B8
	ldrb r0, [r3]
	adds r1, r0, #1
	strb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	orrs r2, r0
	movs r0, #0x60
	orrs r2, r0
	str r2, [r5, #0x10]
	b _0802BECE
	.align 2, 0
_0802BEB8: .4byte gUnknown_03005590
_0802BEBC: .4byte gUnknown_03005960
_0802BEC0: .4byte gUnknown_030054B8
_0802BEC4:
	lsls r0, r2, #0xc
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r5, #0x10]
_0802BECE:
	adds r0, r5, #0
	bl sub_8004558
	ldr r0, [r6]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0802BF24
	ldr r3, _0802BF1C @ =gUnknown_08097AA4
	ldr r1, [r6, #0xc]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _0802BF20 @ =0x000003FF
	ands r0, r2
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ands r0, r2
	strh r0, [r4]
	strh r1, [r4, #2]
	strh r1, [r4, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r4, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	b _0802BF96
	.align 2, 0
_0802BF1C: .4byte gUnknown_08097AA4
_0802BF20: .4byte 0x000003FF
_0802BF24:
	adds r0, r5, #0
	bl sub_80051E8
	ldr r1, [r6]
	movs r0, #0x82
	ands r0, r1
	cmp r0, #0x80
	beq _0802BF96
	movs r0, #0x86
	lsls r0, r0, #2
	ands r1, r0
	cmp r1, #0
	bne _0802BF96
	movs r4, #0
	subs r0, #0xf0
	adds r0, r0, r6
	mov r8, r0
	ldr r7, _0802BFA0 @ =gUnknown_03005960
_0802BF48:
	ldr r0, _0802BFA4 @ =gUnknown_03005590
	ldr r0, [r0]
	adds r1, r4, #2
	bl DivRem
	adds r4, #1
	cmp r0, #0
	bne _0802BF8E
	lsls r0, r4, #1
	adds r0, r0, r4
	mov r1, r8
	ldrb r2, [r1]
	subs r2, r2, r0
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #3
	adds r0, r6, #0
	adds r0, #0x28
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0x2c
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
_0802BF8E:
	lsls r0, r4, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0802BF48
_0802BF96:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802BFA0: .4byte gUnknown_03005960
_0802BFA4: .4byte gUnknown_03005590

	thumb_func_start sub_802BFA8
sub_802BFA8: @ 0x0802BFA8
	push {lr}
	adds r2, r0, #0
	ldr r0, _0802BFD4 @ =gInput
	ldrh r1, [r0]
	strh r1, [r2, #0x1c]
	ldr r0, _0802BFD8 @ =gPressedKeys
	ldrh r0, [r0]
	strh r0, [r2, #0x1e]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0802BFF8
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802BFDC
	movs r0, #0xa0
	lsls r0, r0, #2
	strh r0, [r2, #0x18]
	movs r0, #0x10
	b _0802C052
	.align 2, 0
_0802BFD4: .4byte gInput
_0802BFD8: .4byte gPressedKeys
_0802BFDC:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802BFEE
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2, #0x18]
	movs r0, #0xc
	b _0802C052
_0802BFEE:
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r2, #0x18]
	movs r0, #6
	b _0802C052
_0802BFF8:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0802C02C
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802C012
	movs r0, #0xe0
	lsls r0, r0, #2
	strh r0, [r2, #0x18]
	movs r0, #0x12
	b _0802C052
_0802C012:
	movs r3, #0x80
	adds r0, r3, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _0802C026
	strh r3, [r2, #0x18]
	movs r0, #0xe
	b _0802C052
_0802C026:
	strh r0, [r2, #0x18]
	movs r0, #4
	b _0802C052
_0802C02C:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0802C03E
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r2, #0x18]
	movs r0, #8
	b _0802C052
_0802C03E:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0802C050
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #0x18]
	movs r0, #0xa
	b _0802C052
_0802C050:
	movs r0, #0
_0802C052:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_802C058
sub_802C058: @ 0x0802C058
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x30]
	adds r0, r4, #0
	bl sub_802BFA8
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0
	bne _0802C078
	b _0802C1BC
_0802C078:
	movs r1, #0x1a
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _0802C082
	rsbs r0, r0, #0
_0802C082:
	movs r2, #0
	mov ip, r2
	movs r7, #0
	adds r0, #0x40
	strh r0, [r4, #0x1a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #2
	cmp r0, r1
	ble _0802C09A
	strh r1, [r4, #0x1a]
_0802C09A:
	ldrh r1, [r4, #0x1c]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0802C0FC
	movs r5, #0xaa
	lsls r5, r5, #1
	adds r3, r4, r5
	ldrb r0, [r3]
	cmp r0, #1
	bne _0802C0B6
	b _0802C236
_0802C0B6:
	adds r1, r4, #0
	adds r1, #0x23
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0802C0F4 @ =gUnknown_080D69C8
	ldrh r0, [r1, #0xc]
	subs r5, #0x16
	adds r2, r4, r5
	strh r0, [r2]
	ldrb r0, [r1, #0xe]
	strb r0, [r3]
	ldr r0, _0802C0F8 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r7, [r0]
	movs r2, #0xa4
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r7, [r0]
	movs r3, #0xa8
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r7, [r0]
	str r7, [r4, #0x10]
	str r7, [r4, #0x14]
	b _0802C150
	.align 2, 0
_0802C0F4: .4byte gUnknown_080D69C8
_0802C0F8: .4byte 0x00000155
_0802C0FC:
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0802C164
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r3, r4, r7
	ldrb r0, [r3]
	cmp r0, #3
	bne _0802C116
	b _0802C236
_0802C116:
	adds r1, r4, #0
	adds r1, #0x23
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0802C15C @ =gUnknown_080D69C8
	ldrh r0, [r1, #0x14]
	subs r7, #0x16
	adds r2, r4, r7
	strh r0, [r2]
	ldrb r0, [r1, #0x16]
	strb r0, [r3]
	ldr r0, _0802C160 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r5, [r0]
	movs r2, #0xa4
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r5, [r0]
	movs r3, #0xa8
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r5, [r0]
	str r5, [r4, #0x10]
	str r5, [r4, #0x14]
_0802C150:
	adds r0, r4, #0
	adds r0, #0x22
	mov r5, ip
	strb r5, [r0]
	b _0802C236
	.align 2, 0
_0802C15C: .4byte gUnknown_080D69C8
_0802C160: .4byte 0x00000155
_0802C164:
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r5, r4, r7
	ldrb r0, [r5]
	cmp r0, #2
	beq _0802C236
	adds r0, r4, #0
	adds r0, #0x23
	mov r1, ip
	strb r1, [r0]
	ldr r1, _0802C1B4 @ =gUnknown_080D69C8
	ldrh r0, [r1, #4]
	subs r7, #0x16
	adds r2, r4, r7
	strh r0, [r2]
	ldrb r0, [r1, #6]
	strb r0, [r5]
	ldr r0, _0802C1B8 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r3, [r0]
	movs r2, #0xa4
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r3, [r0]
	movs r5, #0xa8
	lsls r5, r5, #1
	adds r0, r4, r5
	strh r3, [r0]
	str r3, [r4, #0x10]
	str r3, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	mov r7, ip
	strb r7, [r0]
	b _0802C236
	.align 2, 0
_0802C1B4: .4byte gUnknown_080D69C8
_0802C1B8: .4byte 0x00000155
_0802C1BC:
	ldrh r0, [r4, #0x1a]
	movs r2, #0x1a
	ldrsh r1, [r4, r2]
	cmp r1, #0
	bge _0802C1D2
	adds r0, #0x40
	strh r0, [r4, #0x1a]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _0802C1E4
	b _0802C1E0
_0802C1D2:
	cmp r1, #0
	ble _0802C1E4
	subs r0, #0x40
	strh r0, [r4, #0x1a]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _0802C1E4
_0802C1E0:
	strh r6, [r4, #0x1a]
	strh r6, [r4, #0x18]
_0802C1E4:
	movs r3, #0xaa
	lsls r3, r3, #1
	adds r5, r4, r3
	ldrb r0, [r5]
	cmp r0, #2
	beq _0802C230
	adds r0, r4, #0
	adds r0, #0x23
	movs r1, #0
	strb r1, [r0]
	ldr r2, _0802C2B4 @ =gUnknown_080D69C8
	ldrh r0, [r2, #4]
	movs r7, #0x9f
	lsls r7, r7, #1
	movs r3, #0
	strh r0, [r7, r4]
	ldrb r0, [r2, #6]
	strb r0, [r5]
	ldr r0, _0802C2B8 @ =0x00000155
	adds r2, r4, r0
	movs r0, #0xff
	strb r0, [r2]
	movs r2, #0x9e
	lsls r2, r2, #1
	adds r0, r4, r2
	strh r1, [r0]
	movs r5, #0xa4
	lsls r5, r5, #1
	adds r0, r4, r5
	strh r1, [r0]
	adds r7, #0x12
	adds r0, r4, r7
	strh r1, [r0]
	str r1, [r4, #0x10]
	str r1, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r3, [r0]
_0802C230:
	ldr r0, [r4, #4]
	subs r0, #0x80
	str r0, [r4, #4]
_0802C236:
	ldrh r1, [r4, #0x1e]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0802C30C
	ldr r0, _0802C2BC @ =sub_802C358
	str r0, [r4, #0x24]
	movs r0, #0x14
	str r0, [r4, #0xc]
	ldr r0, [r4]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x82
	orrs r0, r1
	str r0, [r4]
	movs r0, #0x70
	bl m4aSongNumStart
	cmp r6, #0
	beq _0802C2C0
	adds r0, r4, #0
	adds r0, #0x23
	movs r2, #0
	strb r6, [r0]
	ldr r1, _0802C2B4 @ =gUnknown_080D69C8
	lsls r0, r6, #3
	adds r0, r0, r1
	ldrh r1, [r0, #4]
	movs r3, #0x9f
	lsls r3, r3, #1
	adds r3, r3, r4
	mov ip, r3
	movs r3, #0
	mov r5, ip
	strh r1, [r5]
	ldrb r1, [r0, #6]
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r0, r4, r7
	strb r1, [r0]
	ldr r0, _0802C2B8 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r2, [r0]
	movs r5, #0xa4
	lsls r5, r5, #1
	adds r0, r4, r5
	strh r2, [r0]
	subs r7, #4
	adds r0, r4, r7
	strh r2, [r0]
	str r2, [r4, #0x10]
	str r2, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r3, [r0]
	b _0802C30C
	.align 2, 0
_0802C2B4: .4byte gUnknown_080D69C8
_0802C2B8: .4byte 0x00000155
_0802C2BC: .4byte sub_802C358
_0802C2C0:
	movs r2, #0
	strh r6, [r4, #0x18]
	adds r1, r4, #0
	adds r1, #0x23
	movs r0, #4
	strb r0, [r1]
	ldr r0, _0802C34C @ =gUnknown_080D69C8
	ldrh r1, [r0, #0x24]
	movs r5, #0x9f
	lsls r5, r5, #1
	adds r3, r4, r5
	strh r1, [r3]
	adds r0, #0x26
	ldrb r1, [r0]
	movs r7, #0xaa
	lsls r7, r7, #1
	adds r0, r4, r7
	strb r1, [r0]
	ldr r0, _0802C350 @ =0x00000155
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r4, r1
	strh r6, [r0]
	movs r3, #0xa4
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r6, [r0]
	adds r5, #0x12
	adds r0, r4, r5
	strh r6, [r0]
	str r6, [r4, #0x10]
	str r6, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x22
	strb r2, [r0]
_0802C30C:
	ldr r2, _0802C354 @ =gUnknown_08097AA4
	ldrh r0, [r4, #0x18]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r5, #0x1a
	ldrsh r0, [r4, r5]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldrh r0, [r4, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r7, #0
	ldrsh r1, [r0, r7]
	movs r2, #0x1a
	ldrsh r0, [r4, r2]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802C34C: .4byte gUnknown_080D69C8
_0802C350: .4byte 0x00000155
_0802C354: .4byte gUnknown_08097AA4

	thumb_func_start sub_802C358
sub_802C358: @ 0x0802C358
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r0, [r3, #0xc]
	subs r4, r0, #1
	str r4, [r3, #0xc]
	cmp r4, #0
	bne _0802C3CC
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r2, r3, r0
	ldr r0, _0802C410 @ =sub_802C058
	str r0, [r3, #0x24]
	ldr r0, [r3]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	str r0, [r3]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x30]
	adds r0, r3, #0
	adds r0, #0x23
	strb r4, [r0]
	ldr r1, _0802C414 @ =gUnknown_080D69C8
	ldrh r0, [r1, #4]
	movs r2, #0x9f
	lsls r2, r2, #1
	adds r2, r2, r3
	mov ip, r2
	movs r2, #0
	mov r5, ip
	strh r0, [r5]
	ldrb r1, [r1, #6]
	movs r5, #0xaa
	lsls r5, r5, #1
	adds r0, r3, r5
	strb r1, [r0]
	ldr r0, _0802C418 @ =0x00000155
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r3, r1
	strh r4, [r0]
	subs r5, #0xc
	adds r0, r3, r5
	strh r4, [r0]
	adds r1, #0x14
	adds r0, r3, r1
	strh r4, [r0]
	str r4, [r3, #0x10]
	str r4, [r3, #0x14]
	adds r0, r3, #0
	adds r0, #0x22
	strb r2, [r0]
_0802C3CC:
	ldr r0, [r3, #0xc]
	cmp r0, #8
	bne _0802C41C
	ldr r1, _0802C414 @ =gUnknown_080D69C8
	adds r4, r3, #0
	adds r4, #0x23
	ldrb r0, [r4]
	adds r0, #1
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrh r0, [r0, #4]
	movs r5, #0x9f
	lsls r5, r5, #1
	adds r2, r3, r5
	strh r0, [r2]
	ldrb r0, [r4]
	adds r0, #1
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrb r1, [r0, #6]
	movs r2, #0xaa
	lsls r2, r2, #1
	adds r0, r3, r2
	strb r1, [r0]
	ldr r4, _0802C418 @ =0x00000155
	adds r1, r3, r4
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r3]
	movs r1, #0x81
	rsbs r1, r1, #0
	ands r0, r1
	b _0802C426
	.align 2, 0
_0802C410: .4byte sub_802C058
_0802C414: .4byte gUnknown_080D69C8
_0802C418: .4byte 0x00000155
_0802C41C:
	cmp r0, #8
	ble _0802C428
	ldr r0, [r3]
	movs r1, #0x80
	orrs r0, r1
_0802C426:
	str r0, [r3]
_0802C428:
	ldr r2, _0802C47C @ =gUnknown_08097AA4
	ldr r1, [r3, #0xc]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #5
	strh r0, [r3, #0x1a]
	ldrh r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	movs r5, #0x1a
	ldrsh r0, [r3, r5]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r3, #4]
	adds r0, r0, r1
	str r0, [r3, #4]
	ldrh r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r4, #0x1a
	ldrsh r0, [r3, r4]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r3, #8]
	adds r0, r0, r1
	str r0, [r3, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802C47C: .4byte gUnknown_08097AA4

	thumb_func_start sub_802C480
sub_802C480: @ 0x0802C480
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r0, [r3, #0xc]
	subs r4, r0, #1
	str r4, [r3, #0xc]
	cmp r4, #0
	bne _0802C4E8
	ldr r0, _0802C54C @ =sub_802C058
	str r0, [r3, #0x24]
	ldr r0, [r3]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	str r0, [r3]
	adds r0, r3, #0
	adds r0, #0x23
	strb r4, [r0]
	ldr r1, _0802C550 @ =gUnknown_080D69C8
	ldrh r0, [r1, #4]
	movs r2, #0x9f
	lsls r2, r2, #1
	adds r2, r2, r3
	mov ip, r2
	movs r2, #0
	mov r5, ip
	strh r0, [r5]
	ldrb r1, [r1, #6]
	movs r5, #0xaa
	lsls r5, r5, #1
	adds r0, r3, r5
	strb r1, [r0]
	ldr r0, _0802C554 @ =0x00000155
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r3, r1
	strh r4, [r0]
	subs r5, #0xc
	adds r0, r3, r5
	strh r4, [r0]
	adds r1, #0x14
	adds r0, r3, r1
	strh r4, [r0]
	str r4, [r3, #0x10]
	str r4, [r3, #0x14]
	adds r0, r3, #0
	adds r0, #0x22
	strb r2, [r0]
_0802C4E8:
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r1, r3, r2
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	str r0, [r1, #0x30]
	ldr r2, _0802C558 @ =gUnknown_08097AA4
	ldr r1, [r3, #0xc]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #5
	strh r0, [r3, #0x1a]
	ldrh r0, [r3, #0x18]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	movs r5, #0x1a
	ldrsh r0, [r3, r5]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r3, #4]
	adds r0, r0, r1
	str r0, [r3, #4]
	ldrh r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r4, #0x1a
	ldrsh r0, [r3, r4]
	muls r1, r0, r1
	asrs r1, r1, #0xe
	ldr r0, [r3, #8]
	adds r0, r0, r1
	str r0, [r3, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802C54C: .4byte sub_802C058
_0802C550: .4byte gUnknown_080D69C8
_0802C554: .4byte 0x00000155
_0802C558: .4byte gUnknown_08097AA4

	thumb_func_start sub_802C55C
sub_802C55C: @ 0x0802C55C
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	bl sub_802BFA8
	ldr r1, [r7, #0x10]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	asrs r0, r0, #7
	str r0, [r7, #0x10]
	ldr r1, [r7, #0x14]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	asrs r0, r0, #7
	str r0, [r7, #0x14]
	ldr r2, [r7, #0xc]
	subs r4, r2, #1
	str r4, [r7, #0xc]
	cmp r4, #0
	bne _0802C5F8
	ldr r0, _0802C5EC @ =sub_802C058
	str r0, [r7, #0x24]
	ldr r0, [r7]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	str r0, [r7]
	adds r0, r7, #0
	adds r0, #0x23
	strb r4, [r0]
	ldr r1, _0802C5F0 @ =gUnknown_080D69C8
	ldrh r0, [r1, #4]
	movs r2, #0x9f
	lsls r2, r2, #1
	adds r3, r7, r2
	movs r2, #0
	strh r0, [r3]
	ldrb r1, [r1, #6]
	movs r3, #0xaa
	lsls r3, r3, #1
	adds r0, r7, r3
	strb r1, [r0]
	ldr r0, _0802C5F4 @ =0x00000155
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r7, r1
	strh r4, [r0]
	subs r3, #0xc
	adds r0, r7, r3
	strh r4, [r0]
	adds r1, #0x14
	adds r0, r7, r1
	strh r4, [r0]
	str r4, [r7, #0x10]
	str r4, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #0x22
	strb r2, [r0]
	b _0802C64C
	.align 2, 0
_0802C5EC: .4byte sub_802C058
_0802C5F0: .4byte gUnknown_080D69C8
_0802C5F4: .4byte 0x00000155
_0802C5F8:
	ldrh r1, [r7, #0x1e]
	movs r0, #0xf3
	ands r0, r1
	cmp r0, #0
	beq _0802C64C
	cmp r4, #4
	bgt _0802C60A
	movs r0, #1
	b _0802C60C
_0802C60A:
	subs r0, r2, #5
_0802C60C:
	str r0, [r7, #0xc]
	adds r1, r7, #0
	adds r1, #0x22
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	ble _0802C64C
	movs r0, #0
	strb r0, [r1]
	ldr r6, _0802C654 @ =gUnknown_030053B8
	ldr r0, [r6]
	ldr r5, _0802C658 @ =0x00196225
	adds r1, r0, #0
	muls r1, r5, r1
	ldr r3, _0802C65C @ =0x3C6EF35F
	adds r1, r1, r3
	ldr r4, _0802C660 @ =0x00000FFF
	adds r0, r1, #0
	ands r0, r4
	ldr r2, _0802C664 @ =0xFFFFF801
	adds r0, r0, r2
	str r0, [r7, #0x10]
	adds r0, r1, #0
	muls r0, r5, r0
	adds r0, r0, r3
	str r0, [r6]
	ands r0, r4
	adds r0, r0, r2
	str r0, [r7, #0x14]
_0802C64C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802C654: .4byte gUnknown_030053B8
_0802C658: .4byte 0x00196225
_0802C65C: .4byte 0x3C6EF35F
_0802C660: .4byte 0x00000FFF
_0802C664: .4byte 0xFFFFF801

	thumb_func_start sub_802C668
sub_802C668: @ 0x0802C668
	push {lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r0, _0802C698 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C6A0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r0, [r1, #4]
	str r0, [r2]
	ldr r0, [r1, #8]
	str r0, [r3]
	ldr r1, [r1]
	movs r0, #0x10
	ands r1, r0
	cmp r1, #0
	bne _0802C6A4
	ldr r0, _0802C69C @ =gUnknown_030059E0
	str r1, [r0, #0x20]
	b _0802C6AA
	.align 2, 0
_0802C698: .4byte gUnknown_03005B40
_0802C69C: .4byte gUnknown_030059E0
_0802C6A0:
	str r0, [r2]
	str r0, [r3]
_0802C6A4:
	ldr r1, _0802C6B0 @ =gUnknown_030059E0
	movs r0, #0x80
	str r0, [r1, #0x20]
_0802C6AA:
	pop {r0}
	bx r0
	.align 2, 0
_0802C6B0: .4byte gUnknown_030059E0

	thumb_func_start sub_802C6B4
sub_802C6B4: @ 0x0802C6B4
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	ldr r0, _0802C6E0 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C6D8
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	ldr r0, [r2]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0802C6D8
	str r3, [r2, #4]
	str r4, [r2, #8]
_0802C6D8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802C6E0: .4byte gUnknown_03005B40

	thumb_func_start sub_802C6E4
sub_802C6E4: @ 0x0802C6E4
	push {lr}
	movs r1, #0
	ldr r0, _0802C700 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C6FA
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r1, [r0]
_0802C6FA:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_0802C700: .4byte gUnknown_03005B40

	thumb_func_start sub_802C704
sub_802C704: @ 0x0802C704
	push {r4, r5, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0802C740 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C73A
	ldrh r2, [r0, #6]
	ldr r1, _0802C744 @ =IWRAM_START + 0x128
	adds r0, r2, r1
	ldrb r1, [r0]
	subs r1, r1, r3
	movs r0, #0x1f
	ands r1, r0
	lsls r1, r1, #3
	ldr r3, _0802C748 @ =IWRAM_START + 0x28
	adds r0, r2, r3
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4]
	ldr r0, _0802C74C @ =IWRAM_START + 0x2C
	adds r2, r2, r0
	adds r2, r2, r1
	ldr r0, [r2]
	str r0, [r5]
_0802C73A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802C740: .4byte gUnknown_03005B40
_0802C744: .4byte IWRAM_START + 0x128
_0802C748: .4byte IWRAM_START + 0x28
_0802C74C: .4byte IWRAM_START + 0x2C

	thumb_func_start sub_802C750
sub_802C750: @ 0x0802C750
	push {lr}
	movs r1, #0
	ldr r0, _0802C768 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C762
	ldrh r0, [r0, #6]
	ldr r2, _0802C76C @ =IWRAM_START + 0x134
	adds r1, r0, r2
_0802C762:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_0802C768: .4byte gUnknown_03005B40
_0802C76C: .4byte IWRAM_START + 0x134

	thumb_func_start sub_802C770
sub_802C770: @ 0x0802C770
	push {lr}
	movs r1, #0
	ldr r0, _0802C790 @ =gUnknown_03005B40
	ldr r0, [r0]
	cmp r0, #0
	beq _0802C78A
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldrh r0, [r0, #0x18]
	ldr r1, _0802C794 @ =0x000003FF
	ands r1, r0
_0802C78A:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_0802C790: .4byte gUnknown_03005B40
_0802C794: .4byte 0x000003FF

	thumb_func_start sub_802C798
sub_802C798: @ 0x0802C798
	push {r4, lr}
	ldr r0, _0802C7E0 @ =gUnknown_03005B40
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	bl sub_8050BB0
	cmp r0, #1
	beq _0802C7DA
	ldr r1, [r4]
	movs r2, #0x10
	ands r2, r1
	cmp r2, #0
	bne _0802C7DA
	ldr r0, _0802C7E4 @ =sub_802C92C
	str r0, [r4, #0x24]
	movs r0, #0x14
	str r0, [r4, #0xc]
	strh r2, [r4, #0x18]
	subs r0, #0x16
	ands r1, r0
	subs r0, #1
	ands r1, r0
	subs r0, #6
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	orrs r1, r0
	movs r0, #0x80
	orrs r1, r0
	str r1, [r4]
_0802C7DA:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802C7E0: .4byte gUnknown_03005B40
_0802C7E4: .4byte sub_802C92C

	thumb_func_start sub_802C7E8
sub_802C7E8: @ 0x0802C7E8
	push {r4, lr}
	ldr r0, _0802C820 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, r4, #0
	bl sub_802BCCC
	ldr r0, [r4, #0x24]
	ldr r1, _0802C824 @ =sub_802C8A0
	cmp r0, r1
	beq _0802C806
	str r1, [r4, #0x24]
_0802C806:
	ldr r1, [r4, #0x24]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_802C9B0
	adds r0, r4, #0
	bl sub_802BE1C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802C820: .4byte gCurTask
_0802C824: .4byte sub_802C8A0

	thumb_func_start sub_802C828
sub_802C828: @ 0x0802C828
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0802C894 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0802C88C
	ldr r0, [r5, #0xc]
	subs r0, #1
	str r0, [r5, #0xc]
	cmp r0, #0
	bne _0802C856
	ldr r0, _0802C898 @ =sub_802C058
	str r0, [r5, #0x24]
	ldr r0, [r5]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	str r0, [r5]
_0802C856:
	ldr r0, _0802C89C @ =gUnknown_03005960
	ldr r1, [r0]
	adds r1, #0x50
	lsls r1, r1, #8
	ldr r4, [r0, #4]
	adds r4, #0x5a
	lsls r4, r4, #8
	ldr r0, [r5, #4]
	subs r1, r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	movs r1, #0x64
	bl Div
	ldr r1, [r5, #4]
	adds r1, r1, r0
	str r1, [r5, #4]
	ldr r0, [r5, #8]
	subs r4, r4, r0
	lsls r0, r4, #1
	adds r0, r0, r4
	movs r1, #0x64
	bl Div
	ldr r1, [r5, #8]
	adds r1, r1, r0
	str r1, [r5, #8]
_0802C88C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802C894: .4byte gUnknown_03005424
_0802C898: .4byte sub_802C058
_0802C89C: .4byte gUnknown_03005960

	thumb_func_start sub_802C8A0
sub_802C8A0: @ 0x0802C8A0
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5]
	ldr r1, _0802C8E8 @ =gUnknown_03005960
	ldr r0, [r1]
	movs r2, #0x9e
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #8
	ldr r4, [r1, #4]
	adds r4, #0x50
	lsls r4, r4, #8
	ldr r1, [r5, #4]
	subs r0, r0, r1
	movs r1, #0x64
	bl Div
	ldr r1, [r5, #4]
	adds r1, r1, r0
	str r1, [r5, #4]
	ldr r0, [r5, #8]
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0x64
	bl Div
	ldr r1, [r5, #8]
	adds r1, r1, r0
	str r1, [r5, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802C8E8: .4byte gUnknown_03005960

	thumb_func_start sub_802C8EC
sub_802C8EC: @ 0x0802C8EC
	push {lr}
	adds r2, r0, #0
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r1, #0x10]
	ldrh r0, [r2, #0x1a]
	adds r0, #0x20
	strh r0, [r2, #0x1a]
	movs r0, #0x1a
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	asrs r0, r0, #8
	ldr r1, _0802C924 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	cmp r0, #0xa0
	ble _0802C920
	ldr r0, _0802C928 @ =0x00000129
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
_0802C920:
	pop {r0}
	bx r0
	.align 2, 0
_0802C924: .4byte gUnknown_03005960
_0802C928: .4byte 0x00000129

	thumb_func_start sub_802C92C
sub_802C92C: @ 0x0802C92C
	push {r4, lr}
	adds r3, r0, #0
	ldr r0, [r3, #0xc]
	subs r0, #1
	str r0, [r3, #0xc]
	cmp r0, #0
	bne _0802C94A
	ldr r0, _0802C980 @ =sub_802C988
	str r0, [r3, #0x24]
	ldr r0, [r3]
	movs r1, #0x40
	orrs r0, r1
	str r0, [r3]
	movs r0, #0x64
	str r0, [r3, #0xc]
_0802C94A:
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r3, #0x1a]
	ldr r2, _0802C984 @ =gUnknown_08097AA4
	ldrh r0, [r3, #0x18]
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	asrs r1, r1, #6
	ldr r0, [r3, #4]
	adds r0, r0, r1
	str r0, [r3, #4]
	ldrh r0, [r3, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	asrs r1, r1, #6
	ldr r0, [r3, #8]
	adds r0, r0, r1
	str r0, [r3, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802C980: .4byte sub_802C988
_0802C984: .4byte gUnknown_08097AA4

	thumb_func_start sub_802C988
sub_802C988: @ 0x0802C988
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0xc]
	subs r0, #1
	str r0, [r2, #0xc]
	cmp r0, #0
	bne _0802C9A8
	ldr r0, [r2]
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, _0802C9AC @ =0xFFFFFDFF
	ands r0, r1
	str r0, [r2]
	bl sub_802BA8C
_0802C9A8:
	pop {r0}
	bx r0
	.align 2, 0
_0802C9AC: .4byte 0xFFFFFDFF

	thumb_func_start sub_802C9B0
sub_802C9B0: @ 0x0802C9B0
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2]
	movs r1, #0x30
	ands r0, r1
	cmp r0, #0
	bne _0802C9D6
	ldr r1, [r2, #8]
	ldr r0, _0802C9DC @ =0x000031FF
	cmp r1, r0
	bgt _0802C9CA
	adds r0, #1
	str r0, [r2, #8]
_0802C9CA:
	ldr r0, [r2, #8]
	movs r1, #0xfe
	lsls r1, r1, #8
	cmp r0, r1
	ble _0802C9D6
	str r1, [r2, #8]
_0802C9D6:
	pop {r0}
	bx r0
	.align 2, 0
_0802C9DC: .4byte 0x000031FF

	thumb_func_start sub_802C9E0
sub_802C9E0: @ 0x0802C9E0
	movs r0, #0
	bx lr

	thumb_func_start sub_802C9E4
sub_802C9E4: @ 0x0802C9E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _0802CA40 @ =sub_802CCE0
	movs r1, #0xbc
	lsls r1, r1, #2
	ldr r2, _0802CA44 @ =0x00002102
	ldr r3, _0802CA48 @ =sub_802D25C
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _0802CA4C @ =gUnknown_03005B44
	str r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	movs r5, #0
	movs r6, #0
	adds r0, #0xb2
	adds r0, r0, r1
	mov r8, r0
	ldr r2, _0802CA50 @ =gUnknown_080D6A80
	mov sb, r2
	ldr r7, _0802CA54 @ =IWRAM_START + 0x94
	adds r4, r1, r7
	mov sl, r6
	ldr r0, _0802CA58 @ =IWRAM_START + 0x90
	adds r0, r1, r0
	str r0, [sp, #0xc]
_0802CA28:
	strh r6, [r4, #0x12]
	strh r6, [r4, #0x14]
	cmp r5, #0
	bne _0802CA5C
	movs r0, #0x18
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r4]
	ldr r3, [sp, #8]
	b _0802CA68
	.align 2, 0
_0802CA40: .4byte sub_802CCE0
_0802CA44: .4byte 0x00002102
_0802CA48: .4byte sub_802D25C
_0802CA4C: .4byte gUnknown_03005B44
_0802CA50: .4byte gUnknown_080D6A80
_0802CA54: .4byte IWRAM_START + 0x94
_0802CA58: .4byte IWRAM_START + 0x90
_0802CA5C:
	adds r0, r3, #0
	adds r0, #0x94
	lsls r1, r5, #6
	ldr r0, [r0]
	adds r0, r0, r1
	str r0, [r4]
_0802CA68:
	movs r1, #0xb6
	lsls r1, r1, #2
	adds r2, r3, r1
	add r2, sl
	ldr r0, [r4]
	ldr r7, _0802CCA8 @ =0xF9FF0000
	adds r0, r0, r7
	lsrs r0, r0, #5
	ldr r1, _0802CCAC @ =0x000003FF
	ands r0, r1
	movs r7, #0xc0
	lsls r7, r7, #7
	adds r1, r7, #0
	orrs r0, r1
	strh r0, [r2]
	strh r6, [r4, #0x16]
	strh r6, [r4, #4]
	mov r1, sb
	ldrh r0, [r1]
	strh r0, [r4, #6]
	ldrh r0, [r1, #2]
	strb r0, [r4, #0x1c]
	strh r6, [r4, #0x10]
	strh r6, [r4, #0x18]
	movs r7, #1
	rsbs r7, r7, #0
	mov r2, sp
	strb r7, [r2, #4]
	movs r0, #0xff
	strb r0, [r4, #0x1d]
	movs r0, #0x10
	strb r0, [r4, #0x1e]
	mov r1, r8
	strb r6, [r1, #3]
	adds r2, r7, #0
	str r2, [r4, #0x24]
	movs r0, #0x80
	lsls r0, r0, #0xb
	str r0, [r4, #0xc]
	cmp r5, #0xb
	beq _0802CAC4
	ldr r0, [sp, #0xc]
	str r3, [sp, #8]
	bl sub_8004558
	ldr r3, [sp, #8]
_0802CAC4:
	movs r7, #0x30
	add r8, r7
	movs r0, #4
	add sb, r0
	adds r4, #0x30
	movs r1, #2
	add sl, r1
	ldr r2, [sp, #0xc]
	adds r2, #0x30
	str r2, [sp, #0xc]
	adds r5, #1
	cmp r5, #0xb
	bls _0802CA28
	ldr r4, _0802CCB0 @ =gUnknown_030054CC
	mov sb, r4
	ldrb r0, [r4]
	cmp r0, #2
	bhi _0802CBA4
	adds r7, r3, #0
	adds r7, #0x60
	movs r5, #0
	mov r8, r5
	movs r6, #0
	movs r0, #6
	strh r0, [r7, #0x16]
	movs r0, #0x8e
	strh r0, [r7, #0x18]
	ldr r4, _0802CCB4 @ =gUnknown_080D6AB0
	ldr r5, _0802CCB8 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _0802CCA8 @ =0xF9FF0000
	adds r0, r0, r1
	lsrs r0, r0, #5
	ldr r2, _0802CCAC @ =0x000003FF
	ands r0, r2
	ldr r3, [sp, #8]
	movs r1, #0xb5
	lsls r1, r1, #2
	adds r2, r3, r1
	strh r0, [r2]
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r1, r4, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r4, #4
	adds r0, r0, r4
	ldrh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x80
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	adds r1, r3, #0
	adds r1, #0x81
	ldrb r0, [r1]
	mov r4, sp
	ldrb r4, [r4, #4]
	orrs r0, r4
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x82
	movs r5, #0x10
	strb r5, [r0]
	adds r1, #4
	mov r0, r8
	strb r0, [r1]
	movs r4, #1
	rsbs r4, r4, #0
	str r4, [r7, #0x28]
	str r6, [r7, #0x10]
	mov r5, sb
	ldrb r0, [r5]
	cmp r0, #2
	bls _0802CB9A
	ldr r0, _0802CCBC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	strb r0, [r1]
	lsls r0, r0, #0xc
	ldrh r1, [r2]
	orrs r0, r1
	strh r0, [r2]
_0802CB9A:
	adds r0, r7, #0
	str r3, [sp, #8]
	bl sub_8004558
	ldr r3, [sp, #8]
_0802CBA4:
	adds r7, r3, #0
	adds r7, #0x30
	movs r4, #0
	strh r4, [r7, #0x16]
	movs r0, #1
	strh r0, [r7, #0x18]
	movs r0, #0x20
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _0802CCA8 @ =0xF9FF0000
	adds r0, r0, r1
	lsrs r0, r0, #5
	ldr r2, _0802CCAC @ =0x000003FF
	mov sl, r2
	mov r5, sl
	ands r0, r5
	ldr r3, [sp, #8]
	ldr r2, _0802CCC0 @ =0x000002D6
	adds r1, r3, r2
	movs r5, #0xc0
	lsls r5, r5, #7
	mov sb, r5
	movs r5, #0
	mov r2, sb
	orrs r0, r2
	strh r0, [r1]
	ldr r0, _0802CCC4 @ =0x00000466
	strh r0, [r7, #0xa]
	adds r0, r3, #0
	adds r0, #0x50
	strb r5, [r0]
	movs r0, #0xc0
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r3, #0
	adds r1, #0x51
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x52
	movs r1, #0x10
	mov r8, r1
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #8]
	bl sub_8004558
	movs r0, #7
	ldr r3, [sp, #8]
	strh r0, [r3, #0x16]
	movs r0, #9
	strh r0, [r3, #0x18]
	movs r0, #4
	str r3, [sp, #8]
	bl sub_8007C10
	ldr r3, [sp, #8]
	str r0, [r3, #4]
	ldr r7, _0802CCA8 @ =0xF9FF0000
	adds r0, r0, r7
	lsrs r0, r0, #5
	mov r1, sl
	ands r0, r1
	ldr r2, _0802CCC8 @ =0x000002D2
	adds r1, r3, r2
	mov r7, sb
	orrs r0, r7
	strh r0, [r1]
	ldr r0, _0802CCCC @ =0x00000467
	strh r0, [r3, #0xa]
	adds r0, r3, #0
	adds r0, #0x20
	strb r5, [r0]
	strh r4, [r3, #0x1a]
	strh r4, [r3, #8]
	strh r4, [r3, #0x14]
	strh r4, [r3, #0x1c]
	adds r1, r3, #0
	adds r1, #0x21
	adds r0, r6, #0
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x22
	mov r1, r8
	strb r1, [r0]
	adds r0, #3
	strb r5, [r0]
	str r6, [r3, #0x28]
	str r4, [r3, #0x10]
	subs r2, #2
	adds r0, r3, r2
	strh r4, [r0]
	movs r5, #0
	ldr r0, _0802CCD0 @ =gObjPalette
	ldr r2, _0802CCD4 @ =gUnknown_080D6ACE
	adds r1, r0, #0
	adds r1, #0xe0
_0802CC7C:
	ldrh r0, [r2]
	strh r0, [r1]
	adds r2, #2
	adds r1, #2
	adds r5, #1
	cmp r5, #0xf
	bls _0802CC7C
	ldr r2, _0802CCD8 @ =gFlags
	ldr r0, [r2]
	movs r1, #2
	orrs r0, r1
	str r0, [r2]
	ldr r0, _0802CCDC @ =gUnknown_03005B44
	ldr r0, [r0]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802CCA8: .4byte 0xF9FF0000
_0802CCAC: .4byte 0x000003FF
_0802CCB0: .4byte gUnknown_030054CC
_0802CCB4: .4byte gUnknown_080D6AB0
_0802CCB8: .4byte gUnknown_030054F0
_0802CCBC: .4byte 0x04000128
_0802CCC0: .4byte 0x000002D6
_0802CCC4: .4byte 0x00000466
_0802CCC8: .4byte 0x000002D2
_0802CCCC: .4byte 0x00000467
_0802CCD0: .4byte gObjPalette
_0802CCD4: .4byte gUnknown_080D6ACE
_0802CCD8: .4byte gFlags
_0802CCDC: .4byte gUnknown_03005B44

	thumb_func_start sub_802CCE0
sub_802CCE0: @ 0x0802CCE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0802CD34 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0802CCFC
	b _0802D138
_0802CCFC:
	ldr r0, _0802CD38 @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov sb, r0
	ldr r0, _0802CD3C @ =IWRAM_START + 0x90
	adds r0, r2, r0
	str r0, [sp]
	ldr r0, _0802CD40 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802CD1A
	b _0802CE6A
_0802CD1A:
	ldr r0, _0802CD44 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _0802CD74
	ldr r1, _0802CD48 @ =IWRAM_START + 0x2A0
	adds r7, r2, r1
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0
	b _0802CD6C
	.align 2, 0
_0802CD34: .4byte gUnknown_03005424
_0802CD38: .4byte gCurTask
_0802CD3C: .4byte IWRAM_START + 0x90
_0802CD40: .4byte gUnknown_030054CC
_0802CD44: .4byte gUnknown_030055B4
_0802CD48: .4byte IWRAM_START + 0x2A0
_0802CD4C:
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	movs r0, #0x1f
	strh r0, [r3]
	lsls r0, r7, #3
	adds r0, #4
	strh r0, [r3, #2]
	ldr r0, _0802CE18 @ =0x000002EE
	add r0, sb
	ldrh r0, [r0]
	strh r0, [r3, #4]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_0802CD6C:
	ldr r0, _0802CE1C @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r7, r0
	blo _0802CD4C
_0802CD74:
	ldr r0, _0802CE20 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #5]
	cmp r0, #0
	bne _0802CD9A
	ldr r0, _0802CE24 @ =gUnknown_03005490
	ldr r1, [r0]
	ldr r0, _0802CE28 @ =0x000087EF
	cmp r1, r0
	bls _0802CD9A
	adds r0, r1, #0
	movs r1, #0x3c
	bl DivRem
	cmp r0, #0
	bne _0802CD9A
	movs r0, #0x8b
	bl m4aSongNumStart
_0802CD9A:
	ldr r0, _0802CE2C @ =gUnknown_03005450
	ldr r6, [r0]
	ldr r0, _0802CE30 @ =0x000F423F
	cmp r6, r0
	ble _0802CDA6
	adds r6, r0, #0
_0802CDA6:
	movs r7, #0
	ldr r2, _0802CE34 @ =0x0000800E
	mov r8, r2
_0802CDAC:
	ldr r1, _0802CE38 @ =gUnknown_080D6AF0
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r5, [r0]
	adds r0, r6, #0
	adds r1, r5, #0
	bl Div
	adds r4, r0, #0
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	mov r0, r8
	strh r0, [r3]
	lsls r0, r7, #3
	adds r0, #0x1c
	strh r0, [r3, #2]
	lsls r1, r4, #1
	movs r0, #0xb6
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r3, #4]
	adds r0, r4, #0
	muls r0, r5, r0
	subs r6, r6, r0
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #5
	bls _0802CDAC
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	movs r0, #0x8e
	strh r0, [r3]
	ldr r0, _0802CE3C @ =0x00004006
	strh r0, [r3, #2]
	movs r0, #0xb5
	lsls r0, r0, #2
	add r0, sb
	ldrh r0, [r0]
	strh r0, [r3, #4]
	ldr r1, _0802CE40 @ =gUnknown_03005448
	ldrb r0, [r1]
	cmp r0, #0
	beq _0802CE44
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	b _0802CE46
	.align 2, 0
_0802CE18: .4byte 0x000002EE
_0802CE1C: .4byte gUnknown_030054F4
_0802CE20: .4byte gLoadedSaveGame
_0802CE24: .4byte gUnknown_03005490
_0802CE28: .4byte 0x000087EF
_0802CE2C: .4byte gUnknown_03005450
_0802CE30: .4byte 0x000F423F
_0802CE34: .4byte 0x0000800E
_0802CE38: .4byte gUnknown_080D6AF0
_0802CE3C: .4byte 0x00004006
_0802CE40: .4byte gUnknown_03005448
_0802CE44:
	movs r7, #0
_0802CE46:
	cmp r7, #9
	bls _0802CE4C
	movs r7, #9
_0802CE4C:
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _0802CF04 @ =0x0000808C
	strh r0, [r3]
	movs r0, #0x1e
	strh r0, [r3, #2]
	lsls r1, r7, #1
	movs r0, #0xb6
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r3, #4]
_0802CE6A:
	movs r0, #4
	bl sub_80058B4
	adds r3, r0, #0
	movs r0, #0x80
	lsls r0, r0, #7
	strh r0, [r3]
	ldr r0, _0802CF08 @ =0x0000C1FD
	strh r0, [r3, #2]
	ldr r0, _0802CF0C @ =0x000002D6
	add r0, sb
	ldrh r0, [r0]
	strh r0, [r3, #4]
	movs r2, #0xb4
	lsls r2, r2, #2
	add r2, sb
	ldr r0, _0802CF10 @ =gUnknown_030059E0
	ldrh r0, [r0, #0x10]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	adds r0, #0x40
	ldrh r1, [r2]
	adds r0, r0, r1
	ldr r1, _0802CF14 @ =0x000007FF
	ands r0, r1
	strh r0, [r2]
	lsrs r0, r0, #8
	mov r1, sb
	adds r1, #0x20
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	mov r0, sb
	bl sub_8004558
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	movs r0, #8
	strh r0, [r3]
	ldr r0, _0802CF18 @ =0x00004007
	strh r0, [r3, #2]
	ldr r0, _0802CF1C @ =0x000002D2
	add r0, sb
	ldrh r0, [r0]
	strh r0, [r3, #4]
	ldr r0, _0802CF20 @ =gUnknown_030053F0
	ldrh r1, [r0]
	ldr r0, _0802CF24 @ =0x000003E7
	cmp r1, r0
	bls _0802CF28
	ldr r2, [sp]
	movs r0, #0xd8
	lsls r0, r0, #1
	adds r7, r2, r0
	movs r4, #0x10
	strh r4, [r7, #0x18]
	movs r0, #0x20
	strh r0, [r7, #0x16]
	adds r0, r7, #0
	bl sub_80051E8
	strh r4, [r7, #0x18]
	movs r0, #0x28
	strh r0, [r7, #0x16]
	adds r0, r7, #0
	bl sub_80051E8
	strh r4, [r7, #0x18]
	movs r0, #0x30
	strh r0, [r7, #0x16]
	adds r0, r7, #0
	bl sub_80051E8
	b _0802CFDC
	.align 2, 0
_0802CF04: .4byte 0x0000808C
_0802CF08: .4byte 0x0000C1FD
_0802CF0C: .4byte 0x000002D6
_0802CF10: .4byte gUnknown_030059E0
_0802CF14: .4byte 0x000007FF
_0802CF18: .4byte 0x00004007
_0802CF1C: .4byte 0x000002D2
_0802CF20: .4byte gUnknown_030053F0
_0802CF24: .4byte 0x000003E7
_0802CF28:
	movs r2, #0
	mov sl, r2
	cmp r1, #0
	bne _0802CF42
	ldr r0, _0802D148 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0802CF42
	movs r0, #0xe0
	lsls r0, r0, #7
	mov sl, r0
_0802CF42:
	ldr r7, _0802D14C @ =gUnknown_030053F0
	ldrh r0, [r7]
	movs r1, #0x64
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	movs r1, #0x80
	lsls r1, r1, #8
	mov r8, r1
	mov r2, r8
	strh r2, [r3]
	movs r0, #0x1c
	strh r0, [r3, #2]
	lsls r0, r4, #1
	movs r6, #0xb6
	lsls r6, r6, #2
	add r6, sb
	adds r0, r6, r0
	ldrh r1, [r0]
	mov r0, sl
	orrs r0, r1
	strh r0, [r3, #4]
	movs r0, #0x64
	adds r5, r4, #0
	muls r5, r0, r5
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldrh r0, [r7]
	subs r0, r0, r5
	movs r1, #0xa
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	mov r0, r8
	strh r0, [r3]
	movs r0, #0x24
	strh r0, [r3, #2]
	lsls r0, r4, #1
	adds r0, r6, r0
	ldrh r1, [r0]
	mov r0, sl
	orrs r0, r1
	strh r0, [r3, #4]
	lsls r0, r4, #2
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r5, r5, r0
	ldrh r4, [r7]
	subs r4, r4, r5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	mov r1, r8
	strh r1, [r3]
	movs r0, #0x2c
	strh r0, [r3, #2]
	lsls r4, r4, #1
	adds r6, r6, r4
	ldrh r0, [r6]
	mov r2, sl
	orrs r2, r0
	strh r2, [r3, #4]
_0802CFDC:
	ldr r7, _0802D150 @ =gUnknown_03005490
	ldr r0, _0802D154 @ =0x00008C9F
	ldr r6, [r7]
	cmp r6, r0
	bls _0802CFE8
	adds r6, r0, #0
_0802CFE8:
	ldr r0, _0802D158 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0802CFF8
	b _0802D138
_0802CFF8:
	movs r0, #0xc0
	lsls r0, r0, #7
	mov sl, r0
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	movs r5, #0x80
	lsls r5, r5, #8
	strh r5, [r3]
	movs r0, #0x63
	strh r0, [r3, #2]
	movs r4, #0xbb
	lsls r4, r4, #2
	add r4, sb
	ldrh r1, [r4]
	mov r0, sl
	orrs r0, r1
	strh r0, [r3, #4]
	movs r0, #3
	bl sub_80058B4
	adds r3, r0, #0
	strh r5, [r3]
	movs r0, #0x7b
	strh r0, [r3, #2]
	ldrh r0, [r4]
	mov r1, sl
	orrs r1, r0
	strh r1, [r3, #4]
	adds r0, r6, #0
	movs r1, #0x3c
	bl Div
	adds r4, r0, #0
	movs r1, #0x3c
	bl Div
	str r0, [sp, #4]
	ldr r1, _0802D15C @ =gUnknown_080D6BF8
	adds r2, r0, #0
	lsls r2, r2, #1
	mov sb, r2
	adds r0, r2, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r4, r4, r0
	lsls r4, r4, #1
	mov r8, r4
	add r1, r8
	movs r0, #0
	ldrsh r1, [r1, r0]
	subs r1, r6, r1
	ldr r0, _0802D160 @ =gUnknown_080D6C72
	add r0, sb
	ldrh r0, [r0]
	subs r5, r1, r0
	ldr r1, [r7]
	ldr r0, _0802D164 @ =0x00007E90
	movs r2, #0
	mov sl, r2
	cmp r1, r0
	bls _0802D084
	ldr r0, _0802D148 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0x10
	ands r0, r1
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	mov sl, r0
_0802D084:
	ldr r4, _0802D168 @ =gUnknown_080D6B80
	lsls r5, r5, #1
	adds r0, r5, r4
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r1, [sp]
	adds r7, r1, r0
	movs r0, #0x88
	strh r0, [r7, #0x16]
	movs r6, #0x10
	strh r6, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x25
	mov r2, sl
	strb r2, [r0]
	adds r0, r7, #0
	bl sub_80051E8
	adds r4, #1
	adds r5, r5, r4
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r1, [sp]
	adds r7, r1, r0
	movs r0, #0x90
	strh r0, [r7, #0x16]
	strh r6, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x25
	mov r2, sl
	strb r2, [r0]
	adds r0, r7, #0
	bl sub_80051E8
	ldr r4, _0802D16C @ =gUnknown_080D6B08
	mov r1, r8
	adds r0, r1, r4
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r2, [sp]
	adds r7, r2, r0
	movs r0, #0x70
	strh r0, [r7, #0x16]
	strh r6, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x25
	mov r1, sl
	strb r1, [r0]
	adds r0, r7, #0
	bl sub_80051E8
	adds r4, #1
	add r4, r8
	ldrb r1, [r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r2, [sp]
	adds r7, r2, r0
	movs r0, #0x78
	strh r0, [r7, #0x16]
	strh r6, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x25
	mov r1, sl
	strb r1, [r0]
	adds r0, r7, #0
	bl sub_80051E8
	ldr r0, [sp, #4]
	add r0, sb
	lsls r0, r0, #4
	ldr r2, [sp]
	adds r7, r2, r0
	movs r0, #0x60
	strh r0, [r7, #0x16]
	strh r6, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x25
	mov r1, sl
	strb r1, [r0]
	adds r0, r7, #0
	bl sub_80051E8
_0802D138:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802D148: .4byte gUnknown_03005590
_0802D14C: .4byte gUnknown_030053F0
_0802D150: .4byte gUnknown_03005490
_0802D154: .4byte 0x00008C9F
_0802D158: .4byte gUnknown_03005424
_0802D15C: .4byte gUnknown_080D6BF8
_0802D160: .4byte gUnknown_080D6C72
_0802D164: .4byte 0x00007E90
_0802D168: .4byte gUnknown_080D6B80
_0802D16C: .4byte gUnknown_080D6B08

	thumb_func_start sub_802D170
sub_802D170: @ 0x0802D170
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	ldr r0, _0802D1A8 @ =gUnknown_03005B44
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r2, _0802D1AC @ =IWRAM_START + 0x90
	adds r2, r2, r0
	mov sb, r2
	movs r0, #0xa
	mov r8, r0
	movs r7, #1
	cmp r4, #9
	bhi _0802D1B0
	movs r6, #1
	b _0802D1F2
	.align 2, 0
_0802D1A8: .4byte gUnknown_03005B44
_0802D1AC: .4byte IWRAM_START + 0x90
_0802D1B0:
	cmp r4, #0x63
	bhi _0802D1B8
	movs r6, #2
	b _0802D1F2
_0802D1B8:
	ldr r0, _0802D1C4 @ =0x000003E7
	cmp r4, r0
	bhi _0802D1C8
	movs r6, #3
	b _0802D1F2
	.align 2, 0
_0802D1C4: .4byte 0x000003E7
_0802D1C8:
	ldr r0, _0802D1D4 @ =0x0000270F
	cmp r4, r0
	bhi _0802D1D8
	movs r6, #4
	b _0802D1F2
	.align 2, 0
_0802D1D4: .4byte 0x0000270F
_0802D1D8:
	ldr r0, _0802D1E4 @ =0x0001869F
	cmp r4, r0
	bhi _0802D1E8
	movs r6, #5
	b _0802D1F2
	.align 2, 0
_0802D1E4: .4byte 0x0001869F
_0802D1E8:
	ldr r0, _0802D258 @ =0x000F423F
	movs r6, #7
	cmp r4, r0
	bhi _0802D1F2
	movs r6, #6
_0802D1F2:
	cmp r7, #0
	beq _0802D246
	cmp r6, #0
	beq _0802D246
	adds r5, r1, #0
_0802D1FC:
	adds r0, r4, #0
	mov r1, r8
	bl Div
	adds r7, r0, #0
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	add r0, sb
	mov r2, r8
	muls r2, r7, r2
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #4
	subs r0, r0, r1
	strh r5, [r0, #0x16]
	mov r1, sp
	ldrh r1, [r1]
	strh r1, [r0, #0x18]
	adds r1, r0, #0
	adds r1, #0x25
	mov r2, sl
	strb r2, [r1]
	ldr r1, [r0, #0x10]
	movs r2, #0x80
	lsls r2, r2, #7
	orrs r1, r2
	str r1, [r0, #0x10]
	bl sub_80051E8
	adds r4, r7, #0
	subs r5, #8
	subs r6, #1
	cmp r4, #0
	beq _0802D246
	cmp r6, #0
	bne _0802D1FC
_0802D246:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802D258: .4byte 0x000F423F

	thumb_func_start sub_802D25C
sub_802D25C: @ 0x0802D25C
	push {r4, r5, lr}
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r0, [r4, #4]
	bl sub_8007CF0
	ldr r0, [r4, #0x34]
	bl sub_8007CF0
	ldr r0, _0802D290 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802D280
	ldr r0, [r4, #0x64]
	bl sub_8007CF0
_0802D280:
	ldr r1, _0802D294 @ =IWRAM_START + 0x94
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802D290: .4byte gUnknown_030054CC
_0802D294: .4byte IWRAM_START + 0x94

	thumb_func_start sub_802D298
sub_802D298: @ 0x0802D298
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _0802D2E4 @ =sub_802D4B4
	movs r1, #0x8d
	lsls r1, r1, #5
	movs r2, #0xe1
	lsls r2, r2, #8
	ldr r3, _0802D2E8 @ =sub_802D4B8
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	mov r8, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sb, r0
	movs r6, #0
	movs r5, #0
	ldr r0, _0802D2EC @ =IWRAM_START + 0x22
	adds r7, r1, r0
	ldr r2, _0802D2F0 @ =IWRAM_START+4
	adds r4, r1, r2
	ldr r0, _0802D2F4 @ =0x0000045F
	mov sl, r0
_0802D2D4:
	strh r5, [r4, #0x12]
	strh r5, [r4, #0x14]
	cmp r6, #0
	bne _0802D2F8
	movs r0, #0xbc
	bl sub_8007C10
	b _0802D300
	.align 2, 0
_0802D2E4: .4byte sub_802D4B4
_0802D2E8: .4byte sub_802D4B8
_0802D2EC: .4byte IWRAM_START + 0x22
_0802D2F0: .4byte IWRAM_START+4
_0802D2F4: .4byte 0x0000045F
_0802D2F8:
	lsls r1, r6, #6
	mov r2, sb
	ldr r0, [r2, #4]
	adds r0, r0, r1
_0802D300:
	str r0, [r4]
	strh r5, [r4, #0x16]
	strh r5, [r4, #4]
	mov r0, sl
	strh r0, [r4, #6]
	adds r1, r6, #1
	strb r1, [r4, #0x1c]
	strh r5, [r4, #0x10]
	strh r5, [r4, #0x18]
	movs r0, #0xff
	strb r0, [r4, #0x1d]
	movs r0, #0x10
	strb r0, [r4, #0x1e]
	strb r5, [r7, #3]
	subs r0, #0x11
	str r0, [r4, #0x24]
	str r5, [r4, #0xc]
	adds r7, #0x30
	adds r4, #0x30
	adds r6, r1, #0
	cmp r6, #0x5d
	bls _0802D2D4
	ldr r0, _0802D344 @ =gUnknown_03005B48
	mov r1, r8
	str r1, [r0]
	mov r0, r8
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802D344: .4byte gUnknown_03005B48

	thumb_func_start sub_802D348
sub_802D348: @ 0x0802D348
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	ldr r0, _0802D37C @ =gUnknown_03005B48
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r2, _0802D380 @ =IWRAM_START + 0x2D0
	adds r2, r2, r0
	mov sl, r2
	movs r0, #0xa
	mov sb, r0
	movs r2, #1
	mov r8, r2
	cmp r5, #9
	bhi _0802D384
	movs r7, #1
	b _0802D3C6
	.align 2, 0
_0802D37C: .4byte gUnknown_03005B48
_0802D380: .4byte IWRAM_START + 0x2D0
_0802D384:
	cmp r5, #0x63
	bhi _0802D38C
	movs r7, #2
	b _0802D3C6
_0802D38C:
	ldr r0, _0802D398 @ =0x000003E7
	cmp r5, r0
	bhi _0802D39C
	movs r7, #3
	b _0802D3C6
	.align 2, 0
_0802D398: .4byte 0x000003E7
_0802D39C:
	ldr r0, _0802D3A8 @ =0x0000270F
	cmp r5, r0
	bhi _0802D3AC
	movs r7, #4
	b _0802D3C6
	.align 2, 0
_0802D3A8: .4byte 0x0000270F
_0802D3AC:
	ldr r0, _0802D3B8 @ =0x0001869F
	cmp r5, r0
	bhi _0802D3BC
	movs r7, #5
	b _0802D3C6
	.align 2, 0
_0802D3B8: .4byte 0x0001869F
_0802D3BC:
	ldr r0, _0802D430 @ =0x000F423F
	movs r7, #7
	cmp r5, r0
	bhi _0802D3C6
	movs r7, #6
_0802D3C6:
	mov r0, r8
	cmp r0, #0
	beq _0802D41E
	cmp r7, #0
	beq _0802D41E
	adds r6, r1, #0
_0802D3D2:
	adds r0, r5, #0
	mov r1, sb
	bl Div
	mov r8, r0
	lsls r4, r5, #1
	adds r4, r4, r5
	lsls r4, r4, #4
	add r4, sl
	mov r2, sb
	mov r1, r8
	muls r1, r2, r1
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	subs r4, r4, r0
	strh r6, [r4, #0x16]
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_80051E8
	mov r5, r8
	subs r6, #8
	subs r7, #1
	cmp r5, #0
	beq _0802D41E
	cmp r7, #0
	bne _0802D3D2
_0802D41E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802D430: .4byte 0x000F423F

	thumb_func_start sub_802D434
sub_802D434: @ 0x0802D434
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	ldr r0, _0802D4AC @ =gUnknown_03005B48
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0802D4B0 @ =0x2FFF9D0
	adds r1, r1, r0
	mov r8, r1
	movs r5, #0
	ldrb r0, [r7]
	cmp r0, #0
	beq _0802D4A0
_0802D45C:
	adds r1, r7, r5
	ldrb r0, [r1]
	cmp r0, #0x20
	bls _0802D488
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #4
	add r4, r8
	strh r6, [r4, #0x16]
	mov r0, sb
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_80051E8
_0802D488:
	lsls r0, r6, #0x10
	movs r1, #0x80
	lsls r1, r1, #0xc
	adds r0, r0, r1
	lsrs r6, r0, #0x10
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802D45C
_0802D4A0:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802D4AC: .4byte gUnknown_03005B48
_0802D4B0: .4byte 0x2FFF9D0

	thumb_func_start sub_802D4B4
sub_802D4B4: @ 0x0802D4B4
	bx lr
	.align 2, 0

	thumb_func_start sub_802D4B8
sub_802D4B8: @ 0x0802D4B8
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_802D4CC
sub_802D4CC: @ 0x0802D4CC
	push {r4, lr}
	adds r3, r0, #0
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	beq _0802D504
	ldr r2, _0802D4FC @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #7
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0802D500 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1, #2]
	movs r0, #0xa0
	strh r0, [r1, #6]
	ldrh r2, [r1, #8]
	movs r4, #0xfc
	lsls r4, r4, #6
	adds r0, r4, #0
	b _0802D520
	.align 2, 0
_0802D4FC: .4byte gDispCnt
_0802D500: .4byte gWinRegs
_0802D504:
	ldr r2, _0802D54C @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #6
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0802D550 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1]
	movs r0, #0xa0
	strh r0, [r1, #4]
	ldrh r2, [r1, #8]
	movs r0, #0x3f
_0802D520:
	orrs r0, r2
	strh r0, [r1, #8]
	ldrh r2, [r1, #0xa]
	movs r0, #0x1f
	orrs r0, r2
	strh r0, [r1, #0xa]
	ldr r1, _0802D554 @ =gBldRegs
	ldrh r0, [r3, #8]
	strh r0, [r1]
	ldrh r0, [r3, #0xa]
	strh r0, [r1, #2]
	ldrh r2, [r3, #2]
	movs r0, #1
	ands r0, r2
	adds r2, r1, #0
	cmp r0, #0
	beq _0802D558
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	b _0802D562
	.align 2, 0
_0802D54C: .4byte gDispCnt
_0802D550: .4byte gWinRegs
_0802D554: .4byte gBldRegs
_0802D558:
	ldrh r1, [r3, #4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	movs r0, #0x20
	subs r0, r0, r1
_0802D562:
	strh r0, [r2, #4]
	ldrh r4, [r3, #4]
	adds r1, r2, #0
	ldrh r0, [r1, #4]
	cmp r0, #0x1f
	bls _0802D572
	movs r0, #0x20
	strh r0, [r1, #4]
_0802D572:
	ldrh r0, [r2, #4]
	lsrs r0, r0, #1
	strh r0, [r2, #4]
	ldrh r0, [r3, #6]
	adds r0, r4, r0
	strh r0, [r3, #4]
	lsls r0, r0, #0x10
	ldr r1, _0802D58C @ =0x1FFF0000
	cmp r0, r1
	bgt _0802D590
	movs r0, #0
	b _0802D598
	.align 2, 0
_0802D58C: .4byte 0x1FFF0000
_0802D590:
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r3, #4]
	movs r0, #1
_0802D598:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_802D5A0
sub_802D5A0: @ 0x0802D5A0
	push {r4, lr}
	adds r3, r0, #0
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	beq _0802D5D8
	ldr r2, _0802D5D0 @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #7
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0802D5D4 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1, #2]
	movs r0, #0xa0
	strh r0, [r1, #6]
	ldrh r2, [r1, #8]
	movs r4, #0xfc
	lsls r4, r4, #6
	adds r0, r4, #0
	b _0802D5F4
	.align 2, 0
_0802D5D0: .4byte gDispCnt
_0802D5D4: .4byte gWinRegs
_0802D5D8:
	ldr r2, _0802D620 @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #6
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0802D624 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1]
	movs r0, #0xa0
	strh r0, [r1, #4]
	ldrh r2, [r1, #8]
	movs r0, #0x3f
_0802D5F4:
	orrs r0, r2
	strh r0, [r1, #8]
	ldrh r2, [r1, #0xa]
	movs r0, #0x1f
	orrs r0, r2
	strh r0, [r1, #0xa]
	ldr r1, _0802D628 @ =gBldRegs
	ldrh r0, [r3, #8]
	strh r0, [r1]
	ldrh r0, [r3, #0xa]
	strh r0, [r1, #2]
	ldrh r2, [r3, #2]
	movs r0, #1
	ands r0, r2
	adds r2, r1, #0
	cmp r0, #0
	beq _0802D62C
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	b _0802D636
	.align 2, 0
_0802D620: .4byte gDispCnt
_0802D624: .4byte gWinRegs
_0802D628: .4byte gBldRegs
_0802D62C:
	ldrh r1, [r3, #4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	movs r0, #0x20
	subs r0, r0, r1
_0802D636:
	strh r0, [r2, #4]
	adds r1, r2, #0
	ldrh r0, [r1, #4]
	cmp r0, #0x1f
	bls _0802D644
	movs r0, #0x20
	strh r0, [r1, #4]
_0802D644:
	ldrh r0, [r2, #4]
	lsrs r0, r0, #1
	strh r0, [r2, #4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_802D650
sub_802D650: @ 0x0802D650
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _0802D6E4 @ =sub_802D6FC
	movs r1, #0x80
	lsls r1, r1, #6
	mov r8, r1
	movs r5, #0
	str r5, [sp]
	movs r1, #0x3c
	mov r2, r8
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r0, [r4, #0xc]
	lsls r0, r0, #8
	str r0, [r1, #0x30]
	ldr r0, [r4, #0x10]
	lsls r0, r0, #8
	str r0, [r1, #0x34]
	movs r6, #0
	movs r0, #0x90
	lsls r0, r0, #2
	strh r0, [r1, #0x38]
	ldr r0, _0802D6E8 @ =IWRAM_START + 0x3A
	adds r2, r3, r0
	movs r0, #1
	strb r0, [r2]
	ldr r0, [r4, #0xc]
	strh r0, [r1, #0x16]
	ldr r0, [r4, #0x10]
	strh r0, [r1, #0x18]
	ldr r0, [r4]
	lsls r0, r0, #5
	ldr r2, _0802D6EC @ =0x06010000
	adds r0, r0, r2
	str r0, [r1, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r5, [r1, #8]
	ldr r0, [r4, #4]
	strh r0, [r1, #0xa]
	ldr r2, [r4, #8]
	ldr r4, _0802D6F0 @ =IWRAM_START + 0x20
	adds r0, r3, r4
	strb r2, [r0]
	strh r5, [r1, #0x14]
	strh r5, [r1, #0x1c]
	ldr r0, _0802D6F4 @ =IWRAM_START + 0x21
	adds r2, r3, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r4, #2
	adds r2, r3, r4
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, _0802D6F8 @ =IWRAM_START + 0x25
	adds r3, r3, r0
	strb r6, [r3]
	mov r2, r8
	str r2, [r1, #0x10]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802D6E4: .4byte sub_802D6FC
_0802D6E8: .4byte IWRAM_START + 0x3A
_0802D6EC: .4byte 0x06010000
_0802D6F0: .4byte IWRAM_START + 0x20
_0802D6F4: .4byte IWRAM_START + 0x21
_0802D6F8: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802D6FC
sub_802D6FC: @ 0x0802D6FC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0802D738 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	adds r7, r6, #0
	ldr r5, [r6, #0x30]
	ldr r0, [r6, #0x34]
	mov r8, r0
	ldr r0, _0802D73C @ =IWRAM_START + 0x3A
	adds r2, r1, r0
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	beq _0802D740
	ldrh r0, [r6, #0x38]
	adds r0, #6
	strh r0, [r6, #0x38]
	lsls r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #0x12
	cmp r0, r1
	ble _0802D752
	movs r0, #0
	b _0802D750
	.align 2, 0
_0802D738: .4byte gCurTask
_0802D73C: .4byte IWRAM_START + 0x3A
_0802D740:
	ldrh r0, [r6, #0x38]
	subs r0, #6
	strh r0, [r6, #0x38]
	lsls r0, r0, #0x10
	ldr r1, _0802D7D0 @ =0x01FF0000
	cmp r0, r1
	bgt _0802D752
	movs r0, #1
_0802D750:
	strb r0, [r2]
_0802D752:
	ldr r1, _0802D7D4 @ =gUnknown_08097AA4
	mov sb, r1
	ldrh r1, [r7, #0x38]
	ldr r4, _0802D7D8 @ =0x000003FF
	adds r0, r4, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0x14
	bl Div
	asrs r0, r0, #3
	adds r5, r5, r0
	ldrh r0, [r7, #0x38]
	ands r4, r0
	lsls r4, r4, #1
	add r4, sb
	movs r1, #0
	ldrsh r0, [r4, r1]
	movs r1, #0x14
	bl Div
	asrs r0, r0, #1
	add r8, r0
	str r5, [r7, #0x30]
	mov r0, r8
	str r0, [r7, #0x34]
	asrs r0, r5, #8
	ldr r3, _0802D7DC @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	mov r1, r8
	asrs r2, r1, #8
	ldr r1, [r3, #4]
	subs r2, r2, r1
	strh r2, [r6, #0x18]
	adds r0, #0x20
	lsls r0, r0, #0x10
	movs r1, #0x98
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0802D7C4
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x20
	cmp r0, #0
	blt _0802D7C4
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0802D7E4
_0802D7C4:
	ldr r0, _0802D7E0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0802D7F0
	.align 2, 0
_0802D7D0: .4byte 0x01FF0000
_0802D7D4: .4byte gUnknown_08097AA4
_0802D7D8: .4byte 0x000003FF
_0802D7DC: .4byte gUnknown_03005960
_0802D7E0: .4byte gCurTask
_0802D7E4:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0802D7F0:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802D7FC
sub_802D7FC: @ 0x0802D7FC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _0802D89C @ =sub_802D8B8
	movs r1, #0x80
	lsls r1, r1, #6
	mov r8, r1
	movs r5, #0
	str r5, [sp]
	movs r1, #0x40
	mov r2, r8
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r0, [r4, #0xc]
	lsls r0, r0, #8
	str r0, [r1, #0x30]
	ldr r0, [r4, #0x10]
	lsls r0, r0, #8
	str r0, [r1, #0x34]
	movs r6, #0
	movs r0, #1
	strh r0, [r1, #0x38]
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1, #0x3a]
	ldr r2, _0802D8A0 @ =IWRAM_START + 0x3C
	adds r0, r3, r2
	strb r6, [r0]
	ldr r0, _0802D8A4 @ =IWRAM_START + 0x3D
	adds r2, r3, r0
	movs r0, #0x2a
	strb r0, [r2]
	ldr r0, [r4, #0xc]
	strh r0, [r1, #0x16]
	ldr r0, [r4, #0x10]
	strh r0, [r1, #0x18]
	ldr r0, [r4]
	lsls r0, r0, #5
	ldr r2, _0802D8A8 @ =0x06010000
	adds r0, r0, r2
	str r0, [r1, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r5, [r1, #8]
	ldr r0, [r4, #4]
	strh r0, [r1, #0xa]
	ldr r2, [r4, #8]
	ldr r4, _0802D8AC @ =IWRAM_START + 0x20
	adds r0, r3, r4
	strb r2, [r0]
	strh r5, [r1, #0x14]
	strh r5, [r1, #0x1c]
	ldr r0, _0802D8B0 @ =IWRAM_START + 0x21
	adds r2, r3, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r4, #2
	adds r2, r3, r4
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, _0802D8B4 @ =IWRAM_START + 0x25
	adds r3, r3, r0
	strb r6, [r3]
	mov r2, r8
	str r2, [r1, #0x10]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802D89C: .4byte sub_802D8B8
_0802D8A0: .4byte IWRAM_START + 0x3C
_0802D8A4: .4byte IWRAM_START + 0x3D
_0802D8A8: .4byte 0x06010000
_0802D8AC: .4byte IWRAM_START + 0x20
_0802D8B0: .4byte IWRAM_START + 0x21
_0802D8B4: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802D8B8
sub_802D8B8: @ 0x0802D8B8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _0802D8F8 @ =gCurTask
	ldr r0, [r0]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r6, r0
	adds r7, r4, #0
	ldrh r0, [r4, #0x3a]
	adds r0, #0x30
	strh r0, [r4, #0x3a]
	movs r0, #0x3a
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x34]
	adds r5, r0, r1
	str r5, [r4, #0x34]
	movs r0, #0x38
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x30]
	adds r1, r0, r1
	str r1, [r4, #0x30]
	ldr r0, _0802D8FC @ =IWRAM_START + 0x3D
	adds r3, r6, r0
	ldrb r0, [r3]
	adds r2, r0, #0
	cmp r2, #0
	beq _0802D900
	subs r0, #1
	strb r0, [r3]
	b _0802D93A
	.align 2, 0
_0802D8F8: .4byte gCurTask
_0802D8FC: .4byte IWRAM_START + 0x3D
_0802D900:
	asrs r0, r5, #8
	asrs r1, r1, #8
	str r2, [sp]
	ldr r2, _0802D978 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	adds r1, r5, r0
	ldr r0, [r4, #0x34]
	cmp r1, r0
	bgt _0802D93A
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r4, #0x3a]
	str r1, [r4, #0x34]
	ldr r0, _0802D97C @ =IWRAM_START + 0x3C
	adds r1, r6, r0
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0802D936
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r4, #0x38]
_0802D936:
	movs r0, #1
	strb r0, [r1]
_0802D93A:
	ldr r1, [r7, #0x30]
	asrs r1, r1, #8
	ldr r2, _0802D980 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r4, #0x16]
	ldr r0, [r7, #0x34]
	asrs r0, r0, #8
	ldr r2, [r2, #4]
	subs r2, r0, r2
	strh r2, [r4, #0x18]
	adds r1, #0x20
	lsls r1, r1, #0x10
	movs r0, #0x98
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0802D96E
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x20
	cmp r0, #0
	blt _0802D96E
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0802D988
_0802D96E:
	ldr r0, _0802D984 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0802D994
	.align 2, 0
_0802D978: .4byte sub_801EE64
_0802D97C: .4byte IWRAM_START + 0x3C
_0802D980: .4byte gUnknown_03005960
_0802D984: .4byte gCurTask
_0802D988:
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0802D994:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802D99C
sub_802D99C: @ 0x0802D99C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _0802DA34 @ =sub_802DA4C
	movs r1, #0x80
	lsls r1, r1, #6
	mov r8, r1
	movs r5, #0
	str r5, [sp]
	movs r1, #0x40
	mov r2, r8
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r0, [r4, #0xc]
	lsls r0, r0, #8
	str r0, [r1, #0x30]
	ldr r0, [r4, #0x10]
	lsls r0, r0, #8
	str r0, [r1, #0x34]
	movs r6, #0
	strh r5, [r1, #0x38]
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1, #0x3a]
	ldr r0, _0802DA38 @ =IWRAM_START + 0x3C
	adds r2, r3, r0
	movs r0, #0x2a
	strb r0, [r2]
	ldr r0, [r4, #0xc]
	strh r0, [r1, #0x16]
	ldr r0, [r4, #0x10]
	strh r0, [r1, #0x18]
	ldr r0, [r4]
	lsls r0, r0, #5
	ldr r2, _0802DA3C @ =0x06010000
	adds r0, r0, r2
	str r0, [r1, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r5, [r1, #8]
	ldr r0, [r4, #4]
	strh r0, [r1, #0xa]
	ldr r2, [r4, #8]
	ldr r4, _0802DA40 @ =IWRAM_START + 0x20
	adds r0, r3, r4
	strb r2, [r0]
	strh r5, [r1, #0x14]
	strh r5, [r1, #0x1c]
	ldr r0, _0802DA44 @ =IWRAM_START + 0x21
	adds r2, r3, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r4, #2
	adds r2, r3, r4
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, _0802DA48 @ =IWRAM_START + 0x25
	adds r3, r3, r0
	strb r6, [r3]
	mov r2, r8
	str r2, [r1, #0x10]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802DA34: .4byte sub_802DA4C
_0802DA38: .4byte IWRAM_START + 0x3C
_0802DA3C: .4byte 0x06010000
_0802DA40: .4byte IWRAM_START + 0x20
_0802DA44: .4byte IWRAM_START + 0x21
_0802DA48: .4byte IWRAM_START + 0x25

	thumb_func_start sub_802DA4C
sub_802DA4C: @ 0x0802DA4C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _0802DA8C @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	adds r7, r4, #0
	ldrh r0, [r4, #0x3a]
	adds r0, #0x30
	strh r0, [r4, #0x3a]
	movs r0, #0x3a
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x34]
	adds r6, r0, r1
	str r6, [r4, #0x34]
	movs r0, #0x38
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x30]
	adds r1, r0, r1
	str r1, [r4, #0x30]
	ldr r0, _0802DA90 @ =IWRAM_START + 0x3C
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r5, r0, #0
	cmp r5, #0
	beq _0802DA94
	subs r0, #1
	strb r0, [r2]
	b _0802DAB4
	.align 2, 0
_0802DA8C: .4byte gCurTask
_0802DA90: .4byte IWRAM_START + 0x3C
_0802DA94:
	asrs r0, r6, #8
	asrs r1, r1, #8
	str r5, [sp]
	ldr r2, _0802DAF4 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	adds r1, r6, r0
	ldr r0, [r4, #0x34]
	cmp r1, r0
	bgt _0802DAB4
	strh r5, [r4, #0x3a]
	str r1, [r4, #0x34]
_0802DAB4:
	ldr r1, [r7, #0x30]
	asrs r1, r1, #8
	ldr r2, _0802DAF8 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r4, #0x16]
	ldr r0, [r7, #0x34]
	asrs r0, r0, #8
	ldr r2, [r2, #4]
	subs r2, r0, r2
	strh r2, [r4, #0x18]
	adds r1, #0x20
	lsls r1, r1, #0x10
	movs r0, #0x98
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0802DAE8
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x20
	cmp r0, #0
	blt _0802DAE8
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc0
	ble _0802DB00
_0802DAE8:
	ldr r0, _0802DAFC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0802DB0C
	.align 2, 0
_0802DAF4: .4byte sub_801EE64
_0802DAF8: .4byte gUnknown_03005960
_0802DAFC: .4byte gCurTask
_0802DB00:
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0802DB0C:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802DB14
sub_802DB14: @ 0x0802DB14
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	ldr r0, _0802DBB0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #6
	ble _0802DB34
	movs r2, #6
_0802DB34:
	ldr r3, _0802DBB4 @ =gUnknown_080D6C88
	ldr r4, _0802DBB8 @ =gUnknown_03005444
	movs r1, #0
	ldrsb r1, [r4, r1]
	lsls r1, r1, #4
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #4
	adds r1, r1, r2
	adds r0, r3, #0
	adds r0, #0xc
	adds r0, r1, r0
	ldrb r5, [r0]
	adds r1, r1, r3
	ldr r0, [r1]
	str r0, [sp]
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #4
	adds r0, r0, r2
	adds r1, r3, #4
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #4
	adds r0, r0, r2
	adds r3, #8
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [sp, #8]
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #0x10]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	ble _0802DB96
	movs r0, #0
	strb r0, [r4]
_0802DB96:
	ldr r0, _0802DBBC @ =gUnknown_080D6DD8
	lsls r1, r5, #0x18
	asrs r1, r1, #0x16
	adds r1, r1, r0
	ldr r1, [r1]
	mov r0, sp
	bl _call_via_r1
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802DBB0: .4byte gUnknown_030055B4
_0802DBB4: .4byte gUnknown_080D6C88
_0802DBB8: .4byte gUnknown_03005444
_0802DBBC: .4byte gUnknown_080D6DD8

	thumb_func_start sub_802DBC0
sub_802DBC0: @ 0x0802DBC0
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _0802DC0C @ =gUnknown_03001884
	ldr r4, [r0]
	movs r5, #0
	lsls r1, r1, #0x16
	lsrs r6, r1, #0x16
	ldr r1, _0802DC10 @ =0xFFFFFF00
	adds r0, r6, r1
	lsls r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #0x12
	cmp r0, r1
	bls _0802DCBE
	cmp r6, #1
	bhi _0802DC14
	lsls r0, r7, #1
	adds r4, r4, r0
	movs r1, #0
	movs r0, #0xa0
	subs r0, r0, r7
	cmp r1, r0
	bge _0802DCBE
	movs r3, #0xf0
	adds r2, r0, #0
_0802DBF4:
	adds r4, #1
	strb r3, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	blt _0802DBF4
	b _0802DCBE
	.align 2, 0
_0802DC0C: .4byte gUnknown_03001884
_0802DC10: .4byte 0xFFFFFF00
_0802DC14:
	ldr r2, _0802DC44 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	mov ip, r3
	adds r0, r6, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r6, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802DC48
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802DC4A
	.align 2, 0
_0802DC44: .4byte gUnknown_08097AA4
_0802DC48:
	mov r3, ip
_0802DC4A:
	cmp r3, #0
	bge _0802DC50
	rsbs r3, r3, #0
_0802DC50:
	ldr r0, _0802DC8C @ =0x000001FF
	cmp r6, r0
	bhi _0802DC90
	lsls r0, r7, #1
	adds r4, r4, r0
	adds r1, r7, #0
	cmp r1, #0x9f
	bgt _0802DCBE
_0802DC60:
	adds r5, r5, r3
	lsls r0, r5, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DC72
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802DC72:
	adds r4, #1
	strb r0, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802DC60
	b _0802DCBE
	.align 2, 0
_0802DC8C: .4byte 0x000001FF
_0802DC90:
	lsls r0, r7, #1
	adds r4, r4, r0
	adds r1, r7, #0
	adds r0, r1, #0
	cmp r0, #0
	blt _0802DCBE
_0802DC9C:
	adds r5, r5, r3
	lsls r0, r5, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DCAE
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802DCAE:
	strb r0, [r4]
	subs r4, #2
	lsls r0, r1, #0x10
	ldr r1, _0802DCC4 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0802DC9C
_0802DCBE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802DCC4: .4byte 0xFFFF0000

	thumb_func_start sub_802DCC8
sub_802DCC8: @ 0x0802DCC8
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _0802DD08 @ =gUnknown_03001884
	ldr r4, [r0]
	movs r5, #0
	lsls r1, r1, #0x16
	lsrs r6, r1, #0x16
	ldr r1, _0802DD0C @ =0xFFFFFF00
	adds r0, r6, r1
	lsls r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #0x12
	cmp r0, r1
	bls _0802DDBC
	cmp r6, #1
	bhi _0802DD14
	lsls r0, r7, #1
	adds r4, r4, r0
	lsls r1, r7, #0x10
	cmp r1, #0
	beq _0802DDBC
	movs r2, #0xf0
_0802DCF6:
	subs r4, #1
	strb r2, [r4]
	subs r4, #1
	ldr r3, _0802DD10 @ =0xFFFF0000
	adds r1, r1, r3
	asrs r0, r1, #0x10
	cmp r0, #0
	bgt _0802DCF6
	b _0802DDBC
	.align 2, 0
_0802DD08: .4byte gUnknown_03001884
_0802DD0C: .4byte 0xFFFFFF00
_0802DD10: .4byte 0xFFFF0000
_0802DD14:
	ldr r2, _0802DD80 @ =gUnknown_08097AA4
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r6, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802DD46
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	cmp r3, #0
	bge _0802DD46
	rsbs r3, r3, #0
_0802DD46:
	ldr r0, _0802DD84 @ =0x000001FF
	cmp r6, r0
	bhi _0802DD8C
	lsls r0, r7, #1
	adds r4, r4, r0
	adds r1, r7, #0
	adds r0, r1, #0
	cmp r0, #0
	blt _0802DDBC
_0802DD58:
	adds r5, r5, r3
	lsls r0, r5, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DD6A
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802DD6A:
	subs r4, #1
	strb r0, [r4]
	subs r4, #1
	lsls r0, r1, #0x10
	ldr r1, _0802DD88 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0802DD58
	b _0802DDBC
	.align 2, 0
_0802DD80: .4byte gUnknown_08097AA4
_0802DD84: .4byte 0x000001FF
_0802DD88: .4byte 0xFFFF0000
_0802DD8C:
	lsls r0, r7, #1
	adds r4, r4, r0
	adds r1, r7, #0
	cmp r1, #0x9f
	bgt _0802DDBC
_0802DD96:
	adds r5, r5, r3
	lsls r0, r5, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DDA8
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802DDA8:
	strb r0, [r4]
	adds r4, #2
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802DD96
_0802DDBC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802DDC4
sub_802DDC4: @ 0x0802DDC4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0802DE1C @ =gUnknown_03001884
	ldr r4, [r0]
	movs r6, #0
	lsls r1, r1, #0x16
	lsrs r7, r1, #0x16
	ldr r1, _0802DE20 @ =0xFFFFFEFF
	adds r0, r7, r1
	lsls r0, r0, #0x10
	movs r1, #0xff
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0802DDE4
	b _0802DF0A
_0802DDE4:
	ldr r3, _0802DE24 @ =0xFFFFFE00
	adds r0, r7, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0802DE28
	lsls r0, r5, #1
	adds r4, r4, r0
	movs r1, #0
	movs r0, #0xa0
	subs r0, r0, r5
	cmp r1, r0
	blt _0802DE00
	b _0802DF0A
_0802DE00:
	movs r3, #0xf0
	adds r2, r0, #0
_0802DE04:
	adds r4, #1
	strb r3, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	blt _0802DE04
	b _0802DF0A
	.align 2, 0
_0802DE1C: .4byte gUnknown_03001884
_0802DE20: .4byte 0xFFFFFEFF
_0802DE24: .4byte 0xFFFFFE00
_0802DE28:
	ldr r2, _0802DE64 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	mov ip, r3
	adds r0, r7, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r7, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	bge _0802DE50
	rsbs r3, r3, #0
_0802DE50:
	cmp r1, #0
	bge _0802DE56
	rsbs r1, r1, #0
_0802DE56:
	cmp r3, #0
	beq _0802DE68
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802DE6A
	.align 2, 0
_0802DE64: .4byte gUnknown_08097AA4
_0802DE68:
	mov r3, ip
_0802DE6A:
	ldr r0, _0802DEA8 @ =0x000001FF
	cmp r7, r0
	bhi _0802DEAC
	lsls r0, r5, #1
	adds r4, r4, r0
	adds r1, r5, #0
	cmp r1, #0x9f
	bgt _0802DF0A
	movs r2, #0xf0
_0802DE7C:
	adds r6, r6, r3
	lsls r0, r6, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DE8E
	movs r3, #0
	movs r6, #0xf0
	lsls r6, r6, #8
	movs r0, #0xf0
_0802DE8E:
	subs r0, r2, r0
	strb r0, [r4]
	adds r4, #2
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802DE7C
	b _0802DF0A
	.align 2, 0
_0802DEA8: .4byte 0x000001FF
_0802DEAC:
	movs r0, #0xa0
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r1, #0xa0
	ldr r0, _0802DF10 @ =gUnknown_03001884
	mov ip, r0
	lsls r7, r5, #1
	cmp r1, r5
	ble _0802DED4
	movs r2, #0xf0
_0802DEC0:
	subs r4, #1
	strb r2, [r4]
	subs r4, #1
	lsls r0, r1, #0x10
	ldr r1, _0802DF14 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r5
	bgt _0802DEC0
_0802DED4:
	mov r0, ip
	ldr r4, [r0]
	adds r4, r4, r7
	adds r1, r5, #0
	adds r0, r1, #0
	cmp r0, #0
	blt _0802DF0A
	movs r2, #0xf0
_0802DEE4:
	adds r6, r6, r3
	lsls r0, r6, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802DEF6
	movs r3, #0
	movs r6, #0xf0
	lsls r6, r6, #8
	movs r0, #0xf0
_0802DEF6:
	subs r4, #1
	subs r0, r2, r0
	strb r0, [r4]
	subs r4, #1
	lsls r0, r1, #0x10
	ldr r1, _0802DF14 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0802DEE4
_0802DF0A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802DF10: .4byte gUnknown_03001884
_0802DF14: .4byte 0xFFFF0000

	thumb_func_start sub_802DF18
sub_802DF18: @ 0x0802DF18
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0802DF64 @ =gUnknown_03001884
	ldr r4, [r0]
	movs r7, #0
	lsls r1, r1, #0x16
	lsrs r6, r1, #0x16
	ldr r1, _0802DF68 @ =0xFFFFFEFF
	adds r0, r6, r1
	lsls r0, r0, #0x10
	movs r1, #0xff
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0802DF38
	b _0802E03A
_0802DF38:
	ldr r3, _0802DF6C @ =0xFFFFFE00
	adds r0, r6, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0802DF70
	movs r1, #0
	cmp r1, r5
	bge _0802E03A
	movs r2, #0xf0
_0802DF4C:
	adds r4, #1
	strb r2, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r5
	blt _0802DF4C
	b _0802E03A
	.align 2, 0
_0802DF64: .4byte gUnknown_03001884
_0802DF68: .4byte 0xFFFFFEFF
_0802DF6C: .4byte 0xFFFFFE00
_0802DF70:
	ldr r2, _0802DFAC @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	mov ip, r3
	adds r0, r6, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r6, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	bge _0802DF98
	rsbs r3, r3, #0
_0802DF98:
	cmp r1, #0
	bge _0802DF9E
	rsbs r1, r1, #0
_0802DF9E:
	cmp r3, #0
	beq _0802DFB0
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802DFB2
	.align 2, 0
_0802DFAC: .4byte gUnknown_08097AA4
_0802DFB0:
	mov r3, ip
_0802DFB2:
	ldr r0, _0802E004 @ =0x000001FF
	cmp r6, r0
	bhi _0802E008
	movs r1, #0
	cmp r1, r5
	bge _0802DFD6
	movs r2, #0xf0
_0802DFC0:
	adds r4, #1
	strb r2, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r5
	blt _0802DFC0
_0802DFD6:
	adds r1, r5, #0
	cmp r1, #0x9f
	bgt _0802E03A
	movs r2, #0xf0
_0802DFDE:
	adds r7, r7, r3
	lsls r0, r7, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bhi _0802E03A
	adds r4, #1
	subs r0, r2, r0
	strb r0, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802DFDE
	b _0802E03A
	.align 2, 0
_0802E004: .4byte 0x000001FF
_0802E008:
	lsls r0, r5, #1
	adds r4, r4, r0
	adds r1, r5, #0
	adds r0, r1, #0
	cmp r0, #0
	blt _0802E03A
	movs r2, #0xf0
_0802E016:
	adds r7, r7, r3
	lsls r0, r7, #8
	lsrs r0, r0, #0x10
	cmp r0, #0xf0
	bls _0802E028
	movs r3, #0
	movs r7, #0xf0
	lsls r7, r7, #8
	movs r0, #0xf0
_0802E028:
	subs r0, r2, r0
	strb r0, [r4]
	subs r4, #2
	lsls r0, r1, #0x10
	ldr r1, _0802E040 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0802E016
_0802E03A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802E040: .4byte 0xFFFF0000

	thumb_func_start sub_802E044
sub_802E044: @ 0x0802E044
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, _0802E08C @ =gUnknown_03001884
	ldr r6, [r0]
	lsls r1, r1, #0x16
	lsrs r5, r1, #0x16
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r5, r0
	bls _0802E0CC
	ldr r2, _0802E090 @ =gUnknown_08097AA4
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r5, r7
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r5, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802E096
	cmp r1, #0
	beq _0802E094
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802E096
	.align 2, 0
_0802E08C: .4byte gUnknown_03001884
_0802E090: .4byte gUnknown_08097AA4
_0802E094:
	adds r3, r7, #0
_0802E096:
	movs r0, #0x9f
	lsls r0, r0, #1
	adds r6, r6, r0
	movs r1, #0
_0802E09E:
	subs r4, r4, r3
	asrs r0, r4, #8
	cmp r0, #0xf0
	ble _0802E0AE
	movs r3, #0
	movs r4, #0xf0
	lsls r4, r4, #8
	movs r0, #0xf0
_0802E0AE:
	cmp r0, #0
	bge _0802E0B8
	movs r3, #0
	movs r4, #0
	movs r0, #0
_0802E0B8:
	strb r0, [r6]
	subs r6, #2
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802E09E
_0802E0CC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802E0D4
sub_802E0D4: @ 0x0802E0D4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _0802E11C @ =gUnknown_03001884
	ldr r4, [r0]
	lsls r1, r1, #0x16
	lsrs r6, r1, #0x16
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r6, r0
	bls _0802E15E
	ldr r2, _0802E120 @ =gUnknown_08097AA4
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r6, r7
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r6, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802E126
	cmp r1, #0
	beq _0802E124
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802E126
	.align 2, 0
_0802E11C: .4byte gUnknown_03001884
_0802E120: .4byte gUnknown_08097AA4
_0802E124:
	adds r3, r7, #0
_0802E126:
	movs r0, #0x9f
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r1, #0
_0802E12E:
	subs r5, r5, r3
	asrs r0, r5, #8
	cmp r0, #0xf0
	ble _0802E13E
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802E13E:
	cmp r0, #0
	bge _0802E148
	movs r3, #0
	movs r5, #0
	movs r0, #0
_0802E148:
	subs r4, #1
	strb r0, [r4]
	subs r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802E12E
_0802E15E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802E164
sub_802E164: @ 0x0802E164
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r0, _0802E1AC @ =gUnknown_03001884
	ldr r6, [r0]
	lsls r1, r1, #0x16
	lsrs r5, r1, #0x16
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r5, r0
	bhi _0802E1E6
	ldr r2, _0802E1B0 @ =gUnknown_08097AA4
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r5, r7
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r5, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802E1B6
	cmp r1, #0
	beq _0802E1B4
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802E1B6
	.align 2, 0
_0802E1AC: .4byte gUnknown_03001884
_0802E1B0: .4byte gUnknown_08097AA4
_0802E1B4:
	adds r3, r7, #0
_0802E1B6:
	movs r1, #0
_0802E1B8:
	adds r4, r4, r3
	asrs r0, r4, #8
	cmp r0, #0xf0
	ble _0802E1C8
	movs r3, #0
	movs r4, #0xf0
	lsls r4, r4, #8
	movs r0, #0xf0
_0802E1C8:
	cmp r0, #0
	bge _0802E1D2
	movs r3, #0
	movs r4, #0
	movs r0, #0
_0802E1D2:
	strb r0, [r6]
	adds r6, #2
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802E1B8
_0802E1E6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802E1EC
sub_802E1EC: @ 0x0802E1EC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _0802E234 @ =gUnknown_03001884
	ldr r4, [r0]
	lsls r1, r1, #0x16
	lsrs r6, r1, #0x16
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r6, r0
	bhi _0802E270
	ldr r2, _0802E238 @ =gUnknown_08097AA4
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r6, r7
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r3, r0, #2
	lsls r0, r6, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	cmp r3, #0
	beq _0802E23E
	cmp r1, #0
	beq _0802E23C
	adds r0, r3, #0
	bl Div
	adds r3, r0, #0
	b _0802E23E
	.align 2, 0
_0802E234: .4byte gUnknown_03001884
_0802E238: .4byte gUnknown_08097AA4
_0802E23C:
	adds r3, r7, #0
_0802E23E:
	movs r1, #0
_0802E240:
	adds r5, r5, r3
	asrs r0, r5, #8
	cmp r0, #0xf0
	ble _0802E250
	movs r3, #0
	movs r5, #0xf0
	lsls r5, r5, #8
	movs r0, #0xf0
_0802E250:
	cmp r0, #0
	bge _0802E25A
	movs r3, #0
	movs r5, #0
	movs r0, #0
_0802E25A:
	adds r4, #1
	strb r0, [r4]
	adds r4, #1
	lsls r0, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0802E240
_0802E270:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802E278
sub_802E278: @ 0x0802E278
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	movs r3, #0
	cmp r3, r5
	bge _0802E2B6
	mov r6, sp
	adds r6, #2
_0802E294:
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r2, r1, #2
	mov r0, sp
	adds r4, r0, r2
	adds r3, r7, r2
	ldrh r0, [r3]
	strh r0, [r4]
	adds r2, r6, r2
	ldrh r0, [r3, #2]
	strh r0, [r2]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, r5
	blt _0802E294
_0802E2B6:
	movs r4, #0
	subs r5, #1
	mov sb, r5
	cmp r4, sb
	bge _0802E374
	movs r1, #2
	add r1, sp
	mov sl, r1
_0802E2C6:
	ldr r0, _0802E310 @ =gUnknown_03001884
	ldr r5, [r0]
	lsls r4, r4, #0x10
	asrs r1, r4, #0x10
	lsls r2, r1, #2
	mov r3, sl
	adds r0, r3, r2
	movs r6, #0
	ldrsh r3, [r0, r6]
	lsls r0, r3, #1
	adds r5, r5, r0
	mov r7, sp
	adds r0, r7, r2
	movs r6, #0
	ldrsh r2, [r0, r6]
	lsls r6, r2, #8
	adds r1, #1
	lsls r1, r1, #2
	mov r7, sl
	adds r0, r7, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	subs r3, r3, r0
	mov r8, r4
	cmp r3, #0
	beq _0802E314
	mov r4, sp
	adds r0, r4, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	subs r0, r2, r0
	lsls r0, r0, #8
	adds r1, r3, #0
	bl Div
	adds r4, r0, #0
	b _0802E320
	.align 2, 0
_0802E310: .4byte gUnknown_03001884
_0802E314:
	mov r3, sp
	adds r0, r3, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	subs r0, r2, r0
	lsls r4, r0, #8
_0802E320:
	mov r7, r8
	asrs r0, r7, #0x10
	lsls r1, r0, #2
	add r1, sl
	adds r0, #1
	lsls r0, r0, #2
	mov r3, sl
	adds r2, r3, r0
	ldrh r3, [r1]
	movs r0, #0
	ldrsh r7, [r1, r0]
	mov ip, r7
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp ip, r0
	bgt _0802E366
_0802E340:
	asrs r0, r6, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xf0
	ble _0802E34C
	movs r0, #0xf0
_0802E34C:
	strb r0, [r5]
	adds r5, #2
	adds r6, r6, r4
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	movs r7, #0
	ldrsh r1, [r2, r7]
	cmp r0, r1
	ble _0802E340
_0802E366:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, r8
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, sb
	blt _0802E2C6
_0802E374:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802E384
sub_802E384: @ 0x0802E384
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r3, #0
	cmp r3, r5
	bge _0802E3C2
	mov r6, sp
	adds r6, #2
_0802E3A0:
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r2, r1, #2
	mov r0, sp
	adds r4, r0, r2
	adds r3, r7, r2
	ldrh r0, [r3]
	strh r0, [r4]
	adds r2, r6, r2
	ldrh r0, [r3, #2]
	strh r0, [r2]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, r5
	blt _0802E3A0
_0802E3C2:
	movs r4, #0
	subs r5, #1
	mov sb, r5
	cmp r4, sb
	bge _0802E48A
	movs r1, #2
	add r1, sp
	mov sl, r1
_0802E3D2:
	ldr r0, _0802E41C @ =gUnknown_03001884
	ldr r5, [r0]
	lsls r4, r4, #0x10
	asrs r1, r4, #0x10
	lsls r2, r1, #2
	mov r3, sl
	adds r0, r3, r2
	movs r6, #0
	ldrsh r3, [r0, r6]
	lsls r0, r3, #1
	adds r5, r5, r0
	mov r7, sp
	adds r0, r7, r2
	movs r6, #0
	ldrsh r2, [r0, r6]
	lsls r6, r2, #8
	adds r1, #1
	lsls r1, r1, #2
	mov r7, sl
	adds r0, r7, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	subs r3, r3, r0
	mov r8, r4
	cmp r3, #0
	beq _0802E420
	mov r4, sp
	adds r0, r4, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	subs r0, r2, r0
	lsls r0, r0, #8
	adds r1, r3, #0
	bl Div
	adds r4, r0, #0
	b _0802E42C
	.align 2, 0
_0802E41C: .4byte gUnknown_03001884
_0802E420:
	mov r3, sp
	adds r0, r3, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	subs r0, r2, r0
	lsls r4, r0, #8
_0802E42C:
	mov r7, r8
	asrs r0, r7, #0x10
	lsls r1, r0, #2
	add r1, sl
	adds r0, #1
	lsls r0, r0, #2
	mov r3, sl
	adds r2, r3, r0
	ldrh r3, [r1]
	movs r0, #0
	ldrsh r7, [r1, r0]
	mov ip, r7
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp ip, r0
	bgt _0802E47C
_0802E44C:
	lsls r0, r6, #8
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _0802E458
	movs r1, #0xf0
_0802E458:
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0802E460
	movs r1, #0
_0802E460:
	adds r5, #1
	strb r1, [r5]
	adds r5, #1
	adds r6, r6, r4
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	movs r7, #0
	ldrsh r1, [r2, r7]
	cmp r0, r1
	ble _0802E44C
_0802E47C:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, r8
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, sb
	blt _0802E3D2
_0802E48A:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802E49C
sub_802E49C: @ 0x0802E49C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x12c
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	cmp r1, #8
	bls _0802E4B6
	b _0802E774
_0802E4B6:
	cmp r1, #2
	bhi _0802E4BC
	b _0802E774
_0802E4BC:
	movs r4, #0
	movs r0, #2
	add r0, sp
	mov r8, r0
	subs r1, #1
	str r1, [sp, #0x118]
	mov r2, sp
	adds r2, #0x60
	str r2, [sp, #0x10c]
	mov r3, sp
	adds r3, #0x64
	str r3, [sp, #0x110]
	mov r5, sb
	subs r5, #2
	str r5, [sp, #0x114]
	mov r7, sp
	adds r7, #0x20
	str r7, [sp, #0x120]
	mov r0, sp
	adds r0, #0x40
	str r0, [sp, #0x124]
	cmp r4, sb
	bhs _0802E508
	mov r5, r8
_0802E4EC:
	lsls r1, r4, #2
	mov r2, sp
	adds r3, r2, r1
	adds r2, r6, r1
	ldrh r0, [r2]
	strh r0, [r3]
	adds r1, r5, r1
	ldrh r0, [r2, #2]
	strh r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, sb
	blo _0802E4EC
_0802E508:
	movs r4, #0
	ldr r3, [sp, #0x118]
	cmp r4, r3
	bge _0802E588
_0802E510:
	adds r1, r4, #1
	lsls r0, r1, #0x18
	lsrs r5, r0, #0x18
	str r1, [sp, #0x11c]
	cmp r5, sb
	bhs _0802E57C
	lsls r4, r4, #2
	mov ip, r4
	mov r4, r8
	str r4, [sp, #0x108]
	mov r7, r8
	add r7, ip
	str r7, [sp, #0x128]
	mov r0, sp
	add r0, ip
	mov sl, r0
_0802E530:
	lsls r0, r5, #2
	ldr r1, [sp, #0x108]
	adds r6, r1, r0
	ldr r2, [sp, #0x128]
	movs r4, #0
	ldrsh r3, [r2, r4]
	movs r7, #0
	ldrsh r1, [r6, r7]
	cmp r3, r1
	blt _0802E572
	mov r4, sp
	add r4, ip
	mov r7, sp
	adds r2, r7, r0
	cmp r3, r1
	bne _0802E55E
	mov r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r7, #0
	ldrsh r0, [r2, r7]
	cmp r1, r0
	blt _0802E572
_0802E55E:
	ldrh r1, [r4]
	ldrh r0, [r2]
	strh r0, [r4]
	strh r1, [r2]
	ldr r0, [sp, #0x128]
	ldrh r1, [r0]
	ldrh r0, [r6]
	ldr r2, [sp, #0x128]
	strh r0, [r2]
	strh r1, [r6]
_0802E572:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, sb
	blo _0802E530
_0802E57C:
	ldr r3, [sp, #0x11c]
	lsls r0, r3, #0x18
	lsrs r4, r0, #0x18
	ldr r5, [sp, #0x118]
	cmp r4, r5
	blt _0802E510
_0802E588:
	ldr r7, [sp, #0x10c]
	mov r0, sp
	ldrh r0, [r0]
	adds r1, r7, #0
	strh r0, [r1]
	mov r0, sp
	ldrh r1, [r0, #2]
	ldr r2, [sp, #0x10c]
	strh r1, [r2, #2]
	movs r4, #1
	cmp r4, sb
	bhs _0802E5EE
	mov r6, r8
	adds r0, #6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bne _0802E5EE
_0802E5B0:
	adds r2, r7, #0
	lsls r3, r4, #2
	mov r5, sp
	adds r0, r5, r3
	movs r5, #0
	ldrsh r1, [r2, r5]
	ldrh r5, [r0]
	mov sl, r5
	movs r5, #0
	ldrsh r0, [r0, r5]
	cmp r1, r0
	ble _0802E5D2
	mov r0, sl
	strh r0, [r2]
	adds r0, r6, r3
	ldrh r0, [r0]
	strh r0, [r2, #2]
_0802E5D2:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, sb
	bhs _0802E5EE
	lsls r0, r4, #2
	mov r6, r8
	add r0, r8
	movs r3, #2
	ldrsh r1, [r2, r3]
	movs r5, #0
	ldrsh r0, [r0, r5]
	cmp r1, r0
	beq _0802E5B0
_0802E5EE:
	ldr r6, [sp, #0x110]
	ldr r7, [sp, #0x118]
	lsls r1, r7, #2
	mov r2, sp
	adds r0, r2, r1
	ldrh r0, [r0]
	strh r0, [r6]
	mov sl, r8
	add r1, r8
	ldrh r1, [r1]
	ldr r3, [sp, #0x110]
	strh r1, [r3, #2]
	ldr r4, [sp, #0x114]
	lsls r0, r4, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	beq _0802E658
	lsls r5, r4, #2
	mov r7, r8
	adds r0, r7, r5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	b _0802E650
_0802E61C:
	adds r2, r6, #0
	mov r3, sp
	adds r0, r3, r5
	movs r7, #0
	ldrsh r1, [r2, r7]
	ldrh r3, [r0]
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r1, r0
	bge _0802E63A
	strh r3, [r2]
	mov r1, sl
	adds r0, r1, r5
	ldrh r0, [r0]
	strh r0, [r2, #2]
_0802E63A:
	subs r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	beq _0802E658
	lsls r5, r4, #2
	mov sl, r8
	mov r3, r8
	adds r0, r3, r5
	movs r7, #2
	ldrsh r1, [r2, r7]
_0802E650:
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	ble _0802E61C
_0802E658:
	ldr r3, [sp, #0x10c]
	movs r4, #0
	ldrsh r2, [r3, r4]
	lsls r5, r2, #8
	ldr r7, [sp, #0x110]
	movs r0, #2
	ldrsh r1, [r7, r0]
	movs r4, #2
	ldrsh r0, [r3, r4]
	subs r1, r1, r0
	cmp r1, #0
	beq _0802E682
	movs r3, #0
	ldrsh r0, [r7, r3]
	subs r0, r0, r2
	lsls r0, r0, #8
	adds r0, #0x80
	bl Div
	adds r2, r0, #0
	b _0802E68C
_0802E682:
	ldr r4, [sp, #0x110]
	movs r7, #0
	ldrsh r0, [r4, r7]
	subs r0, r0, r2
	lsls r2, r0, #8
_0802E68C:
	ldr r1, [sp, #0x10c]
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r3, [sp, #0x110]
	movs r7, #2
	ldrsh r0, [r3, r7]
	cmp r4, r0
	bgt _0802E6C8
	add r6, sp, #0x68
_0802E6A0:
	lsls r0, r5, #8
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _0802E6AC
	movs r1, #0xf0
_0802E6AC:
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0802E6B4
	movs r1, #0
_0802E6B4:
	adds r0, r6, r4
	strb r1, [r0]
	adds r5, r5, r2
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r1, #2
	ldrsh r0, [r3, r1]
	cmp r4, r0
	ble _0802E6A0
_0802E6C8:
	movs r4, #0
	movs r5, #0
	cmp r5, sb
	bhs _0802E716
	add r2, sp, #0x68
	mov ip, r2
	ldr r3, [sp, #0x120]
	mov sl, r3
	mov r7, r8
_0802E6DA:
	lsls r2, r4, #2
	adds r6, r7, r2
	movs r1, #0
	ldrsh r0, [r6, r1]
	add r0, ip
	ldrb r1, [r0]
	mov r0, sp
	adds r3, r0, r2
	movs r2, #0
	ldrsh r0, [r3, r2]
	cmp r1, r0
	bgt _0802E70C
	lsls r2, r5, #2
	mov r0, sl
	adds r1, r0, r2
	ldrh r0, [r3]
	strh r0, [r1]
	mov r0, sp
	adds r0, #0x22
	adds r0, r0, r2
	ldrh r1, [r6]
	strh r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0802E70C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, sb
	blo _0802E6DA
_0802E716:
	ldr r0, [sp, #0x120]
	adds r1, r5, #0
	bl sub_802E278
	movs r4, #0
	movs r5, #0
	cmp r5, sb
	bhs _0802E76C
	add r1, sp, #0x68
	mov ip, r1
	ldr r2, [sp, #0x124]
	mov sl, r2
	mov r7, r8
_0802E730:
	lsls r2, r4, #2
	adds r6, r7, r2
	movs r3, #0
	ldrsh r0, [r6, r3]
	add r0, ip
	ldrb r1, [r0]
	mov r0, sp
	adds r3, r0, r2
	movs r2, #0
	ldrsh r0, [r3, r2]
	cmp r1, r0
	blt _0802E762
	lsls r2, r5, #2
	mov r0, sl
	adds r1, r0, r2
	ldrh r0, [r3]
	strh r0, [r1]
	mov r0, sp
	adds r0, #0x42
	adds r0, r0, r2
	ldrh r1, [r6]
	strh r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0802E762:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, sb
	blo _0802E730
_0802E76C:
	ldr r0, [sp, #0x124]
	adds r1, r5, #0
	bl sub_802E384
_0802E774:
	add sp, #0x12c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_802E784
sub_802E784: @ 0x0802E784
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	ldr r4, [sp, #0x58]
	ldr r5, [sp, #0x5c]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x20]
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #0x24]
	lsls r3, r3, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	str r5, [sp, #0x28]
	movs r0, #0
	mov sl, r0
	ldr r1, _0802E80C @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0802E810 @ =gUnknown_03002878
	ldr r0, _0802E814 @ =0x04000040
	str r0, [r1]
	ldr r2, _0802E818 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	lsrs r1, r3, #0x10
	mov ip, r1
	asrs r2, r3, #0x10
	ldr r5, _0802E81C @ =0xFFFF0000
	adds r3, r3, r5
	lsrs r3, r3, #0x10
	cmp r3, #0xee
	bls _0802E7DC
	b _0802EABC
_0802E7DC:
	lsls r0, r4, #0x10
	asrs r1, r0, #0x10
	adds r5, r0, #0
	cmp r1, #0x9f
	ble _0802E7E8
	b _0802EABC
_0802E7E8:
	cmp r2, #0
	bgt _0802E7EE
	b _0802EABC
_0802E7EE:
	ldr r0, _0802E820 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r2, _0802E824 @ =gUnknown_03001B60
	cmp r0, r2
	bne _0802E830
	add r1, sp, #0x1c
	mov r6, sl
	strh r6, [r1]
	ldr r0, _0802E828 @ =0x040000D4
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, _0802E82C @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802E848
	.align 2, 0
_0802E80C: .4byte gUnknown_03002A80
_0802E810: .4byte gUnknown_03002878
_0802E814: .4byte 0x04000040
_0802E818: .4byte gFlags
_0802E81C: .4byte 0xFFFF0000
_0802E820: .4byte gUnknown_03001884
_0802E824: .4byte gUnknown_03001B60
_0802E828: .4byte 0x040000D4
_0802E82C: .4byte 0x81000140
_0802E830:
	add r0, sp, #0x1c
	mov r1, sl
	strh r1, [r0]
	ldr r1, _0802E938 @ =0x040000D4
	str r0, [r1]
	movs r3, #0xa0
	lsls r3, r3, #2
	adds r0, r2, r3
	str r0, [r1, #4]
	ldr r0, _0802E93C @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0802E848:
	ldr r4, [sp, #0x20]
	ldr r6, _0802E940 @ =0xFFFFFF00
	adds r1, r4, r6
	ldr r2, _0802E944 @ =0x000003FF
	adds r0, r2, #0
	ands r1, r0
	ldr r4, _0802E948 @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r6, #0
	ldrsh r3, [r0, r6]
	str r3, [sp, #0x34]
	adds r0, r3, #0
	muls r0, r7, r0
	asrs r6, r0, #0xf
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r3, #0
	ldrsh r0, [r1, r3]
	mov r8, r0
	mov r0, r8
	muls r0, r7, r0
	asrs r7, r0, #0xf
	mov r1, sp
	mov r0, ip
	lsls r3, r0, #0x10
	asrs r3, r3, #0x10
	adds r0, r3, r6
	strh r0, [r1, #4]
	asrs r5, r5, #0x10
	adds r0, r5, r7
	strh r0, [r1, #6]
	subs r0, r3, r6
	strh r0, [r1]
	subs r0, r5, r7
	strh r0, [r1, #2]
	ldr r1, [sp, #0x20]
	adds r2, r1, r2
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r0, #0
	ldrsh r6, [r2, r0]
	mov ip, r6
	ldr r1, [sp, #0x28]
	mov r0, ip
	muls r0, r1, r0
	asrs r6, r0, #0xe
	ldr r0, [sp, #0x20]
	lsls r2, r0, #1
	adds r2, r2, r4
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r4, [sp, #0x28]
	muls r0, r4, r0
	asrs r7, r0, #0xe
	mov r1, sp
	mov r0, sp
	ldrh r0, [r0, #4]
	adds r0, r0, r6
	strh r0, [r1, #4]
	mov r0, sp
	ldrh r0, [r0, #6]
	adds r0, r0, r7
	strh r0, [r1, #6]
	mov r0, sp
	ldrh r0, [r0]
	adds r0, r0, r6
	strh r0, [r1]
	mov r0, sp
	ldrh r0, [r0, #2]
	adds r0, r0, r7
	strh r0, [r1, #2]
	mov r0, sp
	ldrh r0, [r0, #4]
	str r0, [sp, #0x2c]
	mov r0, sp
	ldrh r0, [r0, #6]
	str r0, [sp, #0x30]
	mov r0, sp
	ldrh r4, [r0]
	ldrh r0, [r0, #2]
	mov sb, r0
	ldr r6, [sp, #0x34]
	ldr r1, [sp, #0x24]
	adds r0, r6, #0
	muls r0, r1, r0
	asrs r6, r0, #0xf
	mov r0, r8
	muls r0, r1, r0
	asrs r7, r0, #0xf
	mov r1, sp
	adds r0, r3, r6
	strh r0, [r1, #8]
	adds r0, r5, r7
	strh r0, [r1, #0xa]
	mov r0, sp
	subs r3, r3, r6
	strh r3, [r0, #0xc]
	subs r5, r5, r7
	strh r5, [r0, #0xe]
	mov r3, ip
	lsls r0, r3, #4
	subs r0, r0, r3
	asrs r6, r0, #2
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	asrs r7, r0, #0x16
	cmp r6, #0
	beq _0802E950
	cmp r7, #0
	beq _0802E94C
	adds r0, r6, #0
	adds r1, r7, #0
	bl Div
	adds r6, r0, #0
	b _0802E950
	.align 2, 0
_0802E938: .4byte 0x040000D4
_0802E93C: .4byte 0x81000140
_0802E940: .4byte 0xFFFFFF00
_0802E944: .4byte 0x000003FF
_0802E948: .4byte gUnknown_08097AA4
_0802E94C:
	movs r6, #0xf0
	lsls r6, r6, #8
_0802E950:
	ldr r5, [sp, #0x2c]
	lsls r0, r5, #0x10
	asrs r1, r0, #8
	ldr r0, _0802E968 @ =0x000001FF
	ldr r2, [sp, #0x20]
	cmp r2, r0
	bhi _0802E996
	ldr r2, [sp, #0x30]
	lsls r4, r4, #0x10
	mov r5, sb
	lsls r3, r5, #0x10
	b _0802E972
	.align 2, 0
_0802E968: .4byte 0x000001FF
_0802E96C:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_0802E972:
	cmp r2, #0x9e
	bhi _0802E9C0
	adds r1, r1, r6
	lsls r0, r1, #8
	lsrs r5, r0, #0x10
	mov sl, r5
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802E98A
	cmp r0, #0
	bge _0802E96C
	b _0802E9BC
_0802E98A:
	movs r1, #0xf0
	mov sl, r1
	b _0802E9C0
_0802E990:
	movs r5, #0xf0
	mov sl, r5
	b _0802E9C0
_0802E996:
	ldr r2, [sp, #0x30]
	lsls r4, r4, #0x10
	mov r0, sb
	lsls r3, r0, #0x10
	b _0802E9A6
_0802E9A0:
	subs r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_0802E9A6:
	cmp r2, #0
	beq _0802E9C0
	subs r1, r1, r6
	lsls r0, r1, #8
	lsrs r5, r0, #0x10
	mov sl, r5
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802E990
	cmp r0, #0
	bge _0802E9A0
_0802E9BC:
	movs r0, #0
	mov sl, r0
_0802E9C0:
	mov r0, sp
	mov r1, sl
	strh r1, [r0, #0x10]
	strh r2, [r0, #0x12]
	asrs r1, r4, #8
	ldr r0, _0802EA08 @ =0x000001FF
	ldr r2, [sp, #0x20]
	cmp r2, r0
	bhi _0802EA18
	lsrs r2, r3, #0x10
	cmp r2, #0x9e
	bhi _0802EA56
	adds r1, r1, r6
	lsls r0, r1, #8
	lsrs r3, r0, #0x10
	mov sl, r3
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802EA0C
	cmp r0, #0
	blt _0802EA30
_0802E9EA:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x9e
	bhi _0802EA56
	adds r1, r1, r6
	lsls r0, r1, #8
	lsrs r5, r0, #0x10
	mov sl, r5
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802EA0C
	cmp r0, #0
	bge _0802E9EA
	b _0802EA52
	.align 2, 0
_0802EA08: .4byte 0x000001FF
_0802EA0C:
	movs r0, #0xf0
	mov sl, r0
	b _0802EA56
_0802EA12:
	movs r1, #0xf0
	mov sl, r1
	b _0802EA56
_0802EA18:
	lsrs r2, r3, #0x10
	cmp r2, #0
	beq _0802EA56
	subs r1, r1, r6
	lsls r0, r1, #8
	lsrs r3, r0, #0x10
	mov sl, r3
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802EA12
	cmp r0, #0
	bge _0802EA36
_0802EA30:
	movs r4, #0
	mov sl, r4
	b _0802EA56
_0802EA36:
	subs r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0802EA56
	subs r1, r1, r6
	lsls r0, r1, #8
	lsrs r5, r0, #0x10
	mov sl, r5
	asrs r0, r0, #0x10
	cmp r0, #0xef
	bgt _0802EA12
	cmp r0, #0
	bge _0802EA36
_0802EA52:
	movs r6, #0
	mov sl, r6
_0802EA56:
	mov r0, sp
	mov r1, sl
	strh r1, [r0, #0x14]
	strh r2, [r0, #0x16]
	mov r1, sp
	ldrh r6, [r0, #0x14]
	movs r3, #0x14
	ldrsh r4, [r0, r3]
	ldrh r5, [r1, #0x10]
	movs r0, #0x10
	ldrsh r3, [r1, r0]
	cmp r4, r3
	beq _0802EAB2
	mov r0, sp
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x12
	ldrsh r0, [r0, r2]
	cmp r1, r0
	beq _0802EAB2
	cmp r3, #0
	bne _0802EA8C
	mov r0, sp
	strh r5, [r0, #0x18]
	mov r1, sp
	ldrh r0, [r0, #0x16]
	b _0802EAA6
_0802EA8C:
	cmp r4, #0
	beq _0802EA9E
	cmp r3, #0xf0
	bne _0802EA9E
	mov r0, sp
	strh r5, [r0, #0x18]
	mov r1, sp
	ldrh r0, [r0, #0x16]
	b _0802EAA6
_0802EA9E:
	mov r0, sp
	strh r6, [r0, #0x18]
	mov r1, sp
	ldrh r0, [r0, #0x12]
_0802EAA6:
	strh r0, [r1, #0x1a]
	mov r0, sp
	movs r1, #7
	bl sub_802E49C
	b _0802ED86
_0802EAB2:
	mov r0, sp
	movs r1, #6
	bl sub_802E49C
	b _0802ED86
_0802EABC:
	lsrs r0, r7, #1
	adds r2, r0, #0
	mov r8, r2
	cmp r2, #0
	bne _0802EB14
	ldr r0, _0802EAE4 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r3, _0802EAE8 @ =gUnknown_03001B60
	cmp r0, r3
	bne _0802EAF4
	add r1, sp, #0x1c
	strh r2, [r1]
	ldr r0, _0802EAEC @ =0x040000D4
	str r1, [r0]
	str r3, [r0, #4]
	ldr r1, _0802EAF0 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802ED86
	.align 2, 0
_0802EAE4: .4byte gUnknown_03001884
_0802EAE8: .4byte gUnknown_03001B60
_0802EAEC: .4byte 0x040000D4
_0802EAF0: .4byte 0x81000140
_0802EAF4:
	add r0, sp, #0x1c
	strh r2, [r0]
	ldr r1, _0802EB0C @ =0x040000D4
	str r0, [r1]
	movs r4, #0xa0
	lsls r4, r4, #2
	adds r0, r3, r4
	str r0, [r1, #4]
	ldr r0, _0802EB10 @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	b _0802ED86
	.align 2, 0
_0802EB0C: .4byte 0x040000D4
_0802EB10: .4byte 0x81000140
_0802EB14:
	ldr r5, [sp, #0x20]
	ldr r6, _0802EB6C @ =0xFFFFFEFF
	adds r0, r5, r6
	lsls r0, r0, #0x10
	movs r1, #0xff
	lsls r1, r1, #0x11
	lsls r5, r4, #0x10
	cmp r0, r1
	bhi _0802EBE8
	mov r1, ip
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0xef
	ble _0802EBE8
	ldr r1, _0802EB70 @ =gUnknown_08097AA4
	ldr r3, [sp, #0x20]
	lsls r0, r3, #1
	adds r0, r0, r1
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r0, r2, #0
	subs r0, #0xf0
	muls r0, r1, r0
	asrs r7, r0, #0xe
	asrs r0, r5, #0x10
	adds r7, r7, r0
	subs r0, r7, #1
	cmp r0, #0x9e
	bhi _0802EBE8
	movs r3, #0xf1
	ldr r0, _0802EB74 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r2, _0802EB78 @ =gUnknown_03001B60
	cmp r0, r2
	bne _0802EB84
	add r1, sp, #0x1c
	strh r3, [r1]
	ldr r0, _0802EB7C @ =0x040000D4
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, _0802EB80 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802EB9A
	.align 2, 0
_0802EB6C: .4byte 0xFFFFFEFF
_0802EB70: .4byte gUnknown_08097AA4
_0802EB74: .4byte gUnknown_03001884
_0802EB78: .4byte gUnknown_03001B60
_0802EB7C: .4byte 0x040000D4
_0802EB80: .4byte 0x81000140
_0802EB84:
	add r0, sp, #0x1c
	strh r3, [r0]
	ldr r1, _0802EBAC @ =0x040000D4
	str r0, [r1]
	movs r5, #0xa0
	lsls r5, r5, #2
	adds r0, r2, r5
	str r0, [r1, #4]
	ldr r0, _0802EBB0 @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0802EB9A:
	mov r6, r8
	subs r0, r7, r6
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802EBB4
	movs r3, #0
	b _0802EBBA
	.align 2, 0
_0802EBAC: .4byte 0x040000D4
_0802EBB0: .4byte 0x81000140
_0802EBB4:
	cmp r0, #0xa0
	ble _0802EBBA
	movs r3, #0xa0
_0802EBBA:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [sp, #0x20]
	bl sub_802DF18
	mov r1, r8
	adds r0, r7, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802EBD6
	movs r3, #0
	b _0802EBDC
_0802EBD6:
	cmp r0, #0xa0
	ble _0802EBDC
	movs r3, #0xa0
_0802EBDC:
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [sp, #0x20]
	bl sub_802DDC4
	b _0802ED86
_0802EBE8:
	movs r0, #0x80
	lsls r0, r0, #2
	ldr r2, [sp, #0x20]
	cmp r2, r0
	bls _0802ECC2
	asrs r2, r5, #0x10
	cmp r2, #0x9f
	ble _0802ECB8
	ldr r1, _0802EC40 @ =gUnknown_08097AA4
	ldr r3, [sp, #0x20]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r3, r4
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r6, #0
	ldrsh r1, [r0, r6]
	adds r0, r2, #0
	subs r0, #0xa0
	muls r0, r1, r0
	asrs r6, r0, #0xe
	mov r1, ip
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r6, r6, r0
	subs r0, r6, #1
	cmp r0, #0xee
	bhi _0802ECB8
	movs r3, #0xf1
	ldr r0, _0802EC44 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r2, _0802EC48 @ =gUnknown_03001B60
	cmp r0, r2
	bne _0802EC54
	add r1, sp, #0x1c
	strh r3, [r1]
	ldr r0, _0802EC4C @ =0x040000D4
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, _0802EC50 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802EC6A
	.align 2, 0
_0802EC40: .4byte gUnknown_08097AA4
_0802EC44: .4byte gUnknown_03001884
_0802EC48: .4byte gUnknown_03001B60
_0802EC4C: .4byte 0x040000D4
_0802EC50: .4byte 0x81000140
_0802EC54:
	add r0, sp, #0x1c
	strh r3, [r0]
	ldr r1, _0802EC7C @ =0x040000D4
	str r0, [r1]
	movs r3, #0xa0
	lsls r3, r3, #2
	adds r0, r2, r3
	str r0, [r1, #4]
	ldr r0, _0802EC80 @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0802EC6A:
	mov r4, r8
	subs r0, r6, r4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802EC84
	movs r4, #0
	b _0802EC8A
	.align 2, 0
_0802EC7C: .4byte 0x040000D4
_0802EC80: .4byte 0x81000140
_0802EC84:
	cmp r0, #0xf0
	ble _0802EC8A
	movs r4, #0xf0
_0802EC8A:
	lsls r0, r4, #0x10
	asrs r0, r0, #8
	ldr r1, [sp, #0x20]
	bl sub_802E0D4
	mov r5, r8
	adds r0, r6, r5
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802ECA6
	movs r4, #0
	b _0802ECAC
_0802ECA6:
	cmp r0, #0xf0
	ble _0802ECAC
	movs r4, #0xf0
_0802ECAC:
	lsls r0, r4, #0x10
	asrs r0, r0, #8
	ldr r1, [sp, #0x20]
	bl sub_802E044
	b _0802ED86
_0802ECB8:
	movs r0, #0x80
	lsls r0, r0, #2
	ldr r6, [sp, #0x20]
	cmp r6, r0
	bhi _0802ED86
_0802ECC2:
	asrs r5, r5, #0x10
	cmp r5, #0
	bge _0802ED86
	ldr r1, _0802ED10 @ =gUnknown_08097AA4
	ldr r2, [sp, #0x20]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r0, r5, #0
	subs r0, #0xa0
	muls r0, r1, r0
	asrs r6, r0, #0xe
	mov r5, ip
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	adds r6, r6, r0
	subs r0, r6, #1
	cmp r0, #0xee
	bhi _0802ED86
	movs r3, #0xf1
	ldr r0, _0802ED14 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r2, _0802ED18 @ =gUnknown_03001B60
	cmp r0, r2
	bne _0802ED24
	add r1, sp, #0x1c
	strh r3, [r1]
	ldr r0, _0802ED1C @ =0x040000D4
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, _0802ED20 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802ED3A
	.align 2, 0
_0802ED10: .4byte gUnknown_08097AA4
_0802ED14: .4byte gUnknown_03001884
_0802ED18: .4byte gUnknown_03001B60
_0802ED1C: .4byte 0x040000D4
_0802ED20: .4byte 0x81000140
_0802ED24:
	add r0, sp, #0x1c
	strh r3, [r0]
	ldr r1, _0802ED4C @ =0x040000D4
	str r0, [r1]
	movs r3, #0xa0
	lsls r3, r3, #2
	adds r0, r2, r3
	str r0, [r1, #4]
	ldr r0, _0802ED50 @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0802ED3A:
	mov r4, r8
	subs r0, r6, r4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802ED54
	movs r4, #0
	b _0802ED5A
	.align 2, 0
_0802ED4C: .4byte 0x040000D4
_0802ED50: .4byte 0x81000140
_0802ED54:
	cmp r0, #0xf0
	ble _0802ED5A
	movs r4, #0xf0
_0802ED5A:
	lsls r0, r4, #0x10
	asrs r0, r0, #8
	ldr r1, [sp, #0x20]
	bl sub_802E1EC
	mov r5, r8
	adds r0, r6, r5
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0802ED76
	movs r4, #0
	b _0802ED7C
_0802ED76:
	cmp r0, #0xf0
	ble _0802ED7C
	movs r4, #0xf0
_0802ED7C:
	lsls r0, r4, #0x10
	asrs r0, r0, #8
	ldr r1, [sp, #0x20]
	bl sub_802E164
_0802ED86:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802ED98
sub_802ED98: @ 0x0802ED98
	push {r4, lr}
	ldr r4, _0802EDCC @ =gCurTask
	ldr r0, [r4]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0802EE64
	ldr r0, [r4]
	bl TaskDestroy
	ldr r0, _0802EDD0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bne _0802EDD8
	ldr r0, _0802EDD4 @ =gUnknown_03005490
	ldr r0, [r0]
	bl sub_808916C
	b _0802EE64
	.align 2, 0
_0802EDCC: .4byte gCurTask
_0802EDD0: .4byte gUnknown_030054CC
_0802EDD4: .4byte gUnknown_03005490
_0802EDD8:
	ldr r3, _0802EE0C @ =gUnknown_030055B4
	ldrb r0, [r3]
	lsls r2, r0, #0x18
	cmp r0, #0x1c
	beq _0802EE64
	ldr r0, _0802EE10 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0802EE54
	ldr r0, _0802EE14 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r1, r0
	bgt _0802EE54
	asrs r0, r2, #0x1a
	cmp r0, #2
	beq _0802EE26
	cmp r0, #2
	bgt _0802EE18
	cmp r0, #0
	beq _0802EE1E
	b _0802EE36
	.align 2, 0
_0802EE0C: .4byte gUnknown_030055B4
_0802EE10: .4byte gUnknown_030054F0
_0802EE14: .4byte gLoadedSaveGame
_0802EE18:
	cmp r0, #4
	beq _0802EE2E
	b _0802EE36
_0802EE1E:
	movs r0, #0
	bl sub_808DBA4
	b _0802EE64
_0802EE26:
	movs r0, #1
	bl sub_808DBA4
	b _0802EE64
_0802EE2E:
	movs r0, #2
	bl sub_808DBA4
	b _0802EE64
_0802EE36:
	ldr r0, _0802EE48 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _0802EE4C @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0802EE50 @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
	b _0802EE64
	.align 2, 0
_0802EE48: .4byte gUnknown_03005490
_0802EE4C: .4byte gUnknown_030053F0
_0802EE50: .4byte gUnknown_030054F4
_0802EE54:
	ldr r0, _0802EE6C @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _0802EE70 @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0802EE74 @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
_0802EE64:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802EE6C: .4byte gUnknown_03005490
_0802EE70: .4byte gUnknown_030053F0
_0802EE74: .4byte gUnknown_030054F4

	thumb_func_start sub_802EE78
sub_802EE78: @ 0x0802EE78
	push {r4, r5, r6, lr}
	ldr r0, _0802EF44 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, r4, #0
	bl sub_802D4CC
	ldrb r0, [r4, #0x10]
	adds r0, #1
	movs r1, #0
	strb r0, [r4, #0x10]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bls _0802EF3C
	strh r1, [r4, #4]
	movs r0, #2
	strh r0, [r4, #2]
	strh r1, [r4, #6]
	movs r0, #0xbf
	strh r0, [r4, #8]
	strh r1, [r4, #0xa]
	ldr r3, _0802EF48 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0x1a
	beq _0802EEC0
	ldr r0, _0802EF4C @ =gFlags
	ldr r1, [r0]
	movs r2, #5
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
_0802EEC0:
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0x1c
	bne _0802EF34
	ldr r2, _0802EF50 @ =gUnknown_080D6DE4
	ldrb r1, [r4, #0x11]
	lsls r1, r1, #2
	adds r0, r1, r2
	ldrh r5, [r0]
	ldr r4, _0802EF54 @ =gUnknown_030059E0
	ldr r3, [r4, #8]
	asrs r0, r3, #8
	subs r5, r5, r0
	adds r2, #2
	adds r1, r1, r2
	ldrh r2, [r1]
	ldr r1, [r4, #0xc]
	asrs r0, r1, #8
	subs r2, r2, r0
	lsls r6, r5, #8
	adds r3, r3, r6
	str r3, [r4, #8]
	lsls r3, r2, #8
	adds r1, r1, r3
	str r1, [r4, #0xc]
	ldr r1, _0802EF58 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	ldr r0, [r1, #4]
	adds r0, r0, r2
	str r0, [r1, #4]
	ldr r0, [r1, #0x20]
	adds r0, r0, r5
	str r0, [r1, #0x20]
	ldr r0, [r1, #0x24]
	adds r0, r0, r2
	str r0, [r1, #0x24]
	ldr r0, [r1, #0x10]
	adds r0, r0, r5
	str r0, [r1, #0x10]
	ldr r0, [r1, #0x14]
	adds r0, r0, r2
	str r0, [r1, #0x14]
	ldr r0, _0802EF5C @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _0802EF2C
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	ldr r0, [r1, #4]
	adds r0, r0, r3
	str r0, [r1, #4]
_0802EF2C:
	ldr r1, _0802EF60 @ =gUnknown_030055B0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0802EF34:
	ldr r0, _0802EF44 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0802EF64 @ =sub_802F06C
	str r0, [r1, #8]
_0802EF3C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802EF44: .4byte gCurTask
_0802EF48: .4byte gUnknown_030055B4
_0802EF4C: .4byte gFlags
_0802EF50: .4byte gUnknown_080D6DE4
_0802EF54: .4byte gUnknown_030059E0
_0802EF58: .4byte gUnknown_03005960
_0802EF5C: .4byte gUnknown_030056A4
_0802EF60: .4byte gUnknown_030055B0
_0802EF64: .4byte sub_802F06C

	thumb_func_start sub_802EF68
sub_802EF68: @ 0x0802EF68
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0802EFD4 @ =sub_802EE78
	movs r2, #0xc1
	lsls r2, r2, #7
	movs r1, #0
	mov r8, r1
	str r1, [sp]
	movs r1, #0x14
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	mov r1, r8
	strb r1, [r0, #0x10]
	strh r4, [r0, #0xc]
	strh r5, [r0, #0xe]
	strb r6, [r0, #0x11]
	mov r1, r8
	strh r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0, #4]
	movs r1, #1
	strh r1, [r0, #2]
	movs r1, #0xc0
	strh r1, [r0, #6]
	movs r1, #0xbf
	strh r1, [r0, #8]
	mov r1, r8
	strh r1, [r0, #0xa]
	ldr r0, _0802EFD8 @ =0x0000014D
	bl m4aSongNumStart
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0802EFD4: .4byte sub_802EE78
_0802EFD8: .4byte 0x0000014D

	thumb_func_start sub_802EFDC
sub_802EFDC: @ 0x0802EFDC
	push {lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0802F004 @ =gUnknown_03001884
	ldr r0, [r0]
	ldr r2, _0802F008 @ =gUnknown_03001B60
	cmp r0, r2
	bne _0802F014
	mov r0, sp
	strh r1, [r0]
	ldr r0, _0802F00C @ =0x040000D4
	mov r1, sp
	str r1, [r0]
	str r2, [r0, #4]
	ldr r1, _0802F010 @ =0x81000140
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	b _0802F02A
	.align 2, 0
_0802F004: .4byte gUnknown_03001884
_0802F008: .4byte gUnknown_03001B60
_0802F00C: .4byte 0x040000D4
_0802F010: .4byte 0x81000140
_0802F014:
	mov r0, sp
	strh r1, [r0]
	ldr r1, _0802F030 @ =0x040000D4
	str r0, [r1]
	movs r3, #0xa0
	lsls r3, r3, #2
	adds r0, r2, r3
	str r0, [r1, #4]
	ldr r0, _0802F034 @ =0x81000140
	str r0, [r1, #8]
	ldr r0, [r1, #8]
_0802F02A:
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0802F030: .4byte 0x040000D4
_0802F034: .4byte 0x81000140

	thumb_func_start sub_802F038
sub_802F038: @ 0x0802F038
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0802F068 @ =gUnknown_03001884
	ldr r3, [r0]
	lsls r0, r1, #1
	adds r3, r3, r0
	cmp r1, r2
	bhs _0802F060
_0802F052:
	strh r4, [r3]
	adds r3, #2
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r2
	blo _0802F052
_0802F060:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0802F068: .4byte gUnknown_03001884

	thumb_func_start sub_802F06C
sub_802F06C: @ 0x0802F06C
	push {r4, r5, lr}
	ldr r5, _0802F0A0 @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, r4, #0
	bl sub_802D4CC
	ldrb r0, [r4, #0x10]
	adds r0, #1
	strb r0, [r4, #0x10]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x78
	bls _0802F098
	movs r0, #0x3c
	strh r0, [r4, #6]
	ldr r1, [r5]
	ldr r0, _0802F0A4 @ =sub_802ED98
	str r0, [r1, #8]
_0802F098:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0802F0A0: .4byte gCurTask
_0802F0A4: .4byte sub_802ED98

	thumb_func_start sub_802F0A8
sub_802F0A8: @ 0x0802F0A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r2, _0802F200 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #1
	orrs r0, r1
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r7, _0802F204 @ =gUnknown_030059E0
	adds r0, r7, #0
	adds r0, #0x90
	ldr r1, [r0]
	ldr r0, [r1, #0x1c]
	movs r2, #0x80
	lsls r2, r2, #0xb
	orrs r0, r2
	str r0, [r1, #0x1c]
	adds r0, r7, #0
	adds r0, #0x94
	ldr r1, [r0]
	ldr r0, [r1, #0x1c]
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r0, _0802F208 @ =gUnknown_03005B4C
	movs r4, #0
	str r4, [r0]
	ldr r0, _0802F20C @ =sub_802F75C
	movs r2, #0x88
	lsls r2, r2, #6
	ldr r1, _0802F210 @ =sub_80303CC
	str r1, [sp]
	movs r1, #8
	movs r3, #0
	bl TaskCreate
	str r0, [sp, #4]
	ldrh r0, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r0, r0, r5
	str r0, [sp, #8]
	movs r6, #2
	str r6, [r0]
	strb r4, [r0, #4]
	ldr r0, [r7, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	str r0, [r7, #0x20]
	ldr r0, _0802F214 @ =sub_802F9F8
	ldr r2, _0802F218 @ =0x00002210
	ldr r1, _0802F21C @ =sub_8030458
	mov r8, r1
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	adds r1, r0, r5
	ldr r2, [sp, #8]
	str r2, [r1]
	ldr r3, _0802F220 @ =IWRAM_START+4
	adds r0, r0, r3
	strh r4, [r0]
	strh r4, [r0, #4]
	strh r6, [r0, #2]
	strh r4, [r0, #6]
	ldr r1, _0802F224 @ =0x00003FFF
	strh r1, [r0, #8]
	strh r4, [r0, #0xa]
	bl sub_802D4CC
	ldr r0, _0802F228 @ =sub_802FD34
	ldr r2, _0802F22C @ =0x00002220
	mov r1, r8
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	adds r1, r0, r5
	ldr r2, [sp, #8]
	str r2, [r1]
	ldr r3, _0802F230 @ =IWRAM_START + 0x10
	adds r1, r0, r3
	strh r4, [r1]
	strh r4, [r1, #2]
	ldr r2, _0802F234 @ =IWRAM_START + 0x14
	adds r1, r0, r2
	strh r4, [r1]
	strh r4, [r1, #2]
	ldr r0, _0802F238 @ =sub_802FF94
	movs r1, #0xc4
	lsls r1, r1, #2
	ldr r2, _0802F23C @ =0x00002230
	ldr r3, _0802F240 @ =sub_803045C
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	adds r0, r0, r5
	mov r8, r0
	ldr r3, [sp, #8]
	str r3, [r0]
	ldr r0, _0802F244 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802F260
	ldr r2, _0802F248 @ =gUnknown_080D6E00
	ldr r0, _0802F24C @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldr r5, _0802F250 @ =gUnknown_080D6E1E
	ldr r1, _0802F254 @ =gUnknown_030055B4
	ldrb r2, [r1]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x1a
	lsls r4, r2, #1
	adds r4, r4, r2
	lsls r1, r4, #3
	adds r1, r1, r5
	ldrh r6, [r1]
	lsls r2, r2, #2
	adds r3, r2, #1
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r1, r5
	adds r0, r0, r6
	ldrh r1, [r1]
	adds r0, r0, r1
	adds r3, r2, #2
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r3, [r1]
	adds r2, #3
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r1, r5
	adds r0, r0, r3
	ldrh r1, [r1]
	adds r0, r0, r1
	ldr r1, _0802F258 @ =gUnknown_080D6F0E
	lsls r4, r4, #1
	adds r4, r4, r1
	ldrh r1, [r4]
	adds r1, #0x24
	adds r0, r0, r1
	ldr r1, _0802F25C @ =gUnknown_080D6F44
	ldrh r2, [r1]
	lsls r1, r2, #3
	adds r1, r1, r2
	b _0802F2BE
	.align 2, 0
_0802F200: .4byte gUnknown_03005424
_0802F204: .4byte gUnknown_030059E0
_0802F208: .4byte gUnknown_03005B4C
_0802F20C: .4byte sub_802F75C
_0802F210: .4byte sub_80303CC
_0802F214: .4byte sub_802F9F8
_0802F218: .4byte 0x00002210
_0802F21C: .4byte sub_8030458
_0802F220: .4byte IWRAM_START+4
_0802F224: .4byte 0x00003FFF
_0802F228: .4byte sub_802FD34
_0802F22C: .4byte 0x00002220
_0802F230: .4byte IWRAM_START + 0x10
_0802F234: .4byte IWRAM_START + 0x14
_0802F238: .4byte sub_802FF94
_0802F23C: .4byte 0x00002230
_0802F240: .4byte sub_803045C
_0802F244: .4byte gUnknown_030054CC
_0802F248: .4byte gUnknown_080D6E00
_0802F24C: .4byte gUnknown_030054F0
_0802F250: .4byte gUnknown_080D6E1E
_0802F254: .4byte gUnknown_030055B4
_0802F258: .4byte gUnknown_080D6F0E
_0802F25C: .4byte gUnknown_080D6F44
_0802F260:
	ldr r2, _0802F3E0 @ =gUnknown_080D6E00
	ldr r0, _0802F3E4 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	ldr r5, _0802F3E8 @ =gUnknown_080D6E1E
	ldr r1, _0802F3EC @ =gUnknown_030055B4
	ldrb r2, [r1]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x1a
	lsls r4, r2, #1
	adds r4, r4, r2
	lsls r1, r4, #3
	adds r1, r1, r5
	ldrh r6, [r1]
	lsls r2, r2, #2
	adds r3, r2, #1
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r1, r5
	adds r0, r0, r6
	ldrh r1, [r1]
	adds r0, r0, r1
	adds r3, r2, #2
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r3, [r1]
	adds r2, #3
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r1, r5
	adds r0, r0, r3
	ldrh r1, [r1]
	adds r0, r0, r1
	ldr r1, _0802F3F0 @ =gUnknown_080D6F0E
	lsls r4, r4, #1
	adds r4, r4, r1
	ldrh r1, [r4]
	adds r1, #0x24
_0802F2BE:
	adds r0, r0, r1
	bl sub_8007C10
	adds r6, r0, #0
	movs r5, #0xda
	lsls r5, r5, #1
	add r5, r8
	movs r4, #0
	movs r7, #0
	strh r7, [r5, #0x16]
	strh r7, [r5, #0x18]
	str r6, [r5, #4]
	ldr r2, _0802F3E0 @ =gUnknown_080D6E00
	ldr r3, _0802F3E4 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #5
	adds r6, r6, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r7, [r5, #8]
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r1, r2, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r2, #4
	adds r0, r0, r2
	ldrh r1, [r0]
	movs r0, #0xea
	lsls r0, r0, #1
	add r0, r8
	strb r1, [r0]
	strh r7, [r5, #0x14]
	strh r7, [r5, #0x1c]
	ldr r1, _0802F3F4 @ =0x000001D5
	add r1, r8
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0xeb
	lsls r1, r1, #1
	add r1, r8
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0802F3F8 @ =0x000001D9
	add r1, r8
	strb r4, [r1]
	ldr r0, _0802F3FC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0802F34C
	ldr r0, _0802F400 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	strb r0, [r1]
_0802F34C:
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r7, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r7, #0
	movs r4, #0xb1
	lsls r4, r4, #2
	add r4, r8
	str r4, [sp, #0x20]
	ldr r0, _0802F404 @ =0x000002C5
	add r0, r8
	str r0, [sp, #0x24]
	ldr r1, _0802F408 @ =0x000002C6
	add r1, r8
	str r1, [sp, #0x28]
	ldr r2, _0802F40C @ =0x000002C9
	add r2, r8
	str r2, [sp, #0x2c]
	movs r3, #0xbd
	lsls r3, r3, #2
	add r3, r8
	str r3, [sp, #0x10]
	ldr r4, _0802F410 @ =0x000002F5
	add r4, r8
	str r4, [sp, #0x14]
	ldr r0, _0802F414 @ =0x000002F6
	add r0, r8
	str r0, [sp, #0x18]
	ldr r1, _0802F418 @ =0x000002F9
	add r1, r8
	str r1, [sp, #0x1c]
	movs r2, #0
	ldr r3, _0802F3E8 @ =gUnknown_080D6E1E
	adds r4, r3, #2
	mov sl, r4
	adds r0, r3, #4
	mov ip, r0
_0802F39C:
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #4
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r4, r8
	adds r5, r4, r0
	strh r2, [r5, #0x16]
	strh r2, [r5, #0x18]
	ldr r0, _0802F3EC @ =gUnknown_030055B4
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _0802F41C
	str r6, [r5, #4]
	adds r0, r7, #0
	adds r0, #0x20
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r0, r1, r3
	ldrh r0, [r0]
	lsls r0, r0, #5
	adds r6, r6, r0
	adds r4, r1, #0
	add r4, sl
	ldrh r0, [r4]
	strh r0, [r5, #0xa]
	add r1, ip
	ldrh r1, [r1]
	b _0802F47E
	.align 2, 0
_0802F3E0: .4byte gUnknown_080D6E00
_0802F3E4: .4byte gUnknown_030054F0
_0802F3E8: .4byte gUnknown_080D6E1E
_0802F3EC: .4byte gUnknown_030055B4
_0802F3F0: .4byte gUnknown_080D6F0E
_0802F3F4: .4byte 0x000001D5
_0802F3F8: .4byte 0x000001D9
_0802F3FC: .4byte gUnknown_030054CC
_0802F400: .4byte 0x04000128
_0802F404: .4byte 0x000002C5
_0802F408: .4byte 0x000002C6
_0802F40C: .4byte 0x000002C9
_0802F410: .4byte 0x000002F5
_0802F414: .4byte 0x000002F6
_0802F418: .4byte 0x000002F9
_0802F41C:
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	bne _0802F446
	str r6, [r5, #4]
	adds r0, r7, #0
	adds r0, #0x24
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r0, r1, r3
	ldrh r0, [r0]
	lsls r0, r0, #5
	adds r6, r6, r0
	adds r4, r1, #0
	add r4, sl
	ldrh r0, [r4]
	strh r0, [r5, #0xa]
	add r1, ip
	ldrh r1, [r1]
	b _0802F47E
_0802F446:
	str r6, [r5, #4]
	ldr r1, _0802F5D8 @ =gUnknown_030055B4
	ldrb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #2
	adds r0, r0, r7
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r0, r1, r3
	ldrh r0, [r0]
	lsls r0, r0, #5
	adds r6, r6, r0
	add r1, sl
	ldrh r0, [r1]
	strh r0, [r5, #0xa]
	ldr r4, _0802F5D8 @ =gUnknown_030055B4
	ldrb r1, [r4]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x1a
	lsls r1, r1, #2
	adds r1, r1, r7
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, ip
	ldrh r1, [r0]
_0802F47E:
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r2, [r5, #8]
	strh r2, [r5, #0x14]
	strh r2, [r5, #0x1c]
	movs r1, #0x21
	movs r0, #1
	rsbs r0, r0, #0
	mov r4, sp
	strb r0, [r4, #0xc]
	movs r0, #0xff
	strb r0, [r1, r5]
	adds r0, r5, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	strb r2, [r0]
	movs r4, #1
	rsbs r4, r4, #0
	mov sb, r4
	str r4, [r5, #0x28]
	str r2, [r5, #0x10]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bhi _0802F4C0
	b _0802F39C
_0802F4C0:
	movs r5, #0xa9
	lsls r5, r5, #2
	add r5, r8
	movs r7, #0
	movs r4, #0
	strh r4, [r5, #0x16]
	strh r4, [r5, #0x18]
	str r6, [r5, #4]
	movs r0, #0x90
	lsls r0, r0, #3
	adds r6, r6, r0
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r5, #0x1a]
	strh r4, [r5, #8]
	subs r0, #0x25
	strh r0, [r5, #0xa]
	ldr r2, [sp, #0x20]
	strb r7, [r2]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	movs r0, #0xff
	ldr r3, [sp, #0x24]
	strb r0, [r3]
	movs r0, #0x20
	ldr r1, [sp, #0x28]
	strb r0, [r1]
	ldr r2, [sp, #0x2c]
	strb r7, [r2]
	mov r3, sb
	str r3, [r5, #0x28]
	str r4, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r5, #0xb5
	lsls r5, r5, #2
	add r5, r8
	strh r4, [r5, #0x16]
	strh r4, [r5, #0x18]
	str r6, [r5, #4]
	ldr r3, _0802F5DC @ =gUnknown_080D6F0E
	ldr r2, _0802F5D8 @ =gUnknown_030055B4
	ldrb r0, [r2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r0, r1, r3
	ldrh r0, [r0]
	lsls r0, r0, #5
	adds r6, r6, r0
	adds r0, r3, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r5, #0xa]
	ldrb r1, [r2]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x1a
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r1, r3, #4
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1d
	bne _0802F558
	ldrh r0, [r3, #0x32]
	strh r0, [r5, #0xa]
	ldrh r0, [r3, #0x34]
	strb r0, [r1]
_0802F558:
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r5, #0x1a]
	strh r4, [r5, #8]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	ldr r3, [sp, #0x14]
	ldrb r0, [r3]
	mov r4, sp
	ldrb r4, [r4, #0xc]
	orrs r0, r4
	strb r0, [r3]
	movs r1, #0x10
	ldr r0, [sp, #0x18]
	strb r1, [r0]
	ldr r2, [sp, #0x1c]
	strb r7, [r2]
	mov r3, sb
	str r3, [r5, #0x28]
	ldr r2, _0802F5E0 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x20
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	ldr r0, _0802F5E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802F652
	movs r7, #0
	movs r4, #0
	mov sb, r4
	movs r3, #0
	ldr r4, _0802F5E8 @ =gUnknown_080D6F44
_0802F5A8:
	lsls r0, r7, #1
	adds r1, r0, r7
	lsls r0, r1, #4
	adds r0, #4
	mov r2, r8
	adds r5, r2, r0
	strh r3, [r5, #0x16]
	ldr r0, _0802F5EC @ =0x0000FFE0
	strh r0, [r5, #0x18]
	str r6, [r5, #4]
	ldrh r0, [r4]
	lsls r0, r0, #5
	adds r6, r6, r0
	ldr r0, _0802F5D8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r2, r0, #0x18
	cmp r0, #0x1d
	bne _0802F5F0
	cmp r7, #8
	bne _0802F5FE
	ldrh r0, [r4, #0x38]
	strh r0, [r5, #0xa]
	ldrh r1, [r4, #0x3a]
	b _0802F60E
	.align 2, 0
_0802F5D8: .4byte gUnknown_030055B4
_0802F5DC: .4byte gUnknown_080D6F0E
_0802F5E0: .4byte gUnknown_030054B8
_0802F5E4: .4byte gUnknown_030054CC
_0802F5E8: .4byte gUnknown_080D6F44
_0802F5EC: .4byte 0x0000FFE0
_0802F5F0:
	asrs r0, r2, #0x1a
	cmp r7, r0
	bne _0802F5FE
	ldrh r0, [r4, #0x38]
	strh r0, [r5, #0xa]
	ldrh r1, [r4, #0x3a]
	b _0802F60E
_0802F5FE:
	lsls r1, r1, #1
	adds r0, r4, #2
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	adds r0, r4, #4
	adds r1, r1, r0
	ldrh r1, [r1]
_0802F60E:
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r3, [r5, #8]
	strh r3, [r5, #0x14]
	strh r3, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x25
	mov r1, sb
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r3, [r5, #0x10]
	adds r0, r5, #0
	str r3, [sp, #0x30]
	bl sub_8004558
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r3, [sp, #0x30]
	cmp r7, #8
	bls _0802F5A8
_0802F652:
	ldr r0, _0802F73C @ =sub_80302AC
	movs r2, #0x89
	lsls r2, r2, #6
	ldr r1, _0802F740 @ =sub_8030474
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov r8, r1
	ldr r2, [sp, #8]
	str r2, [r1]
	ldr r4, _0802F744 @ =gUnknown_080D6F80
	ldrh r0, [r4]
	lsls r0, r0, #2
	bl sub_8007C10
	adds r6, r0, #0
	movs r7, #0
	movs r3, #0
	mov sl, r3
	movs r3, #0
	mov sb, r4
_0802F688:
	lsls r1, r7, #1
	adds r1, r1, r7
	lsls r0, r1, #4
	adds r0, #4
	mov r2, r8
	adds r5, r2, r0
	strh r3, [r5, #0x16]
	ldr r0, _0802F748 @ =0x0000FFE0
	strh r0, [r5, #0x18]
	lsls r1, r1, #1
	adds r0, r4, #2
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	adds r0, r4, #4
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r2, r5, #0
	adds r2, #0x20
	strb r0, [r2]
	cmp r7, #3
	bne _0802F6C8
	ldr r0, _0802F74C @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0802F6C8
	ldrh r0, [r4, #0x1a]
	strh r0, [r5, #0xa]
	ldrh r0, [r4, #0x1c]
	strb r0, [r2]
_0802F6C8:
	str r6, [r5, #4]
	mov r1, sb
	ldrh r0, [r1]
	lsls r0, r0, #5
	adds r6, r6, r0
	movs r0, #0x80
	strh r0, [r5, #0x1a]
	strh r3, [r5, #8]
	strh r3, [r5, #0x14]
	strh r3, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x25
	mov r2, sl
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r3, [r5, #0x10]
	adds r0, r5, #0
	str r3, [sp, #0x30]
	bl sub_8004558
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r3, [sp, #0x30]
	cmp r7, #3
	bls _0802F688
	ldr r0, _0802F750 @ =sub_8030404
	ldr r2, _0802F754 @ =0x000022F0
	ldr r1, _0802F758 @ =sub_8030458
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r3, [sp, #8]
	str r3, [r1]
	ldr r0, [sp, #4]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0802F73C: .4byte sub_80302AC
_0802F740: .4byte sub_8030474
_0802F744: .4byte gUnknown_080D6F80
_0802F748: .4byte 0x0000FFE0
_0802F74C: .4byte gUnknown_030055B4
_0802F750: .4byte sub_8030404
_0802F754: .4byte 0x000022F0
_0802F758: .4byte sub_8030458

	thumb_func_start sub_802F75C
sub_802F75C: @ 0x0802F75C
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802F7E0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r5, [r6]
	adds r5, #1
	ldr r0, _0802F7E4 @ =gUnknown_030054CC
	ldrb r1, [r0]
	mov ip, r0
	cmp r1, #2
	bhi _0802F7BA
	ldr r0, _0802F7E8 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #2
	beq _0802F7BA
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0802F796
	ldr r0, _0802F7EC @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802F7BA
_0802F796:
	cmp r1, #0x1d
	beq _0802F7BA
	ldr r0, _0802F7F0 @ =gPressedKeys
	ldrh r1, [r0]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0802F7BA
	ldr r2, _0802F7F4 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0802F7F8 @ =0xFFEFFFFF
	ands r0, r1
	ldr r1, _0802F7FC @ =0xFFBFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	movs r5, #0xc8
	movs r0, #1
	strb r0, [r6, #4]
_0802F7BA:
	str r5, [r6]
	ldr r0, _0802F800 @ =gUnknown_03005AF0
	ldr r1, [r0, #0x1c]
	ldr r2, _0802F804 @ =0xFFFFFE7F
	ands r1, r2
	str r1, [r0, #0x1c]
	cmp r5, #0x95
	bhi _0802F808
	ldr r2, _0802F7F4 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r2, #0x20]
	b _0802F82E
	.align 2, 0
_0802F7E0: .4byte gCurTask
_0802F7E4: .4byte gUnknown_030054CC
_0802F7E8: .4byte gUnknown_030055B4
_0802F7EC: .4byte gUnknown_030054B0
_0802F7F0: .4byte gPressedKeys
_0802F7F4: .4byte gUnknown_030059E0
_0802F7F8: .4byte 0xFFEFFFFF
_0802F7FC: .4byte 0xFFBFFFFF
_0802F800: .4byte gUnknown_03005AF0
_0802F804: .4byte 0xFFFFFE7F
_0802F808:
	cmp r5, #0x97
	bne _0802F81C
	ldr r0, _0802F814 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	ldr r2, _0802F818 @ =0xFFEFFFFF
	b _0802F82A
	.align 2, 0
_0802F814: .4byte gUnknown_030059E0
_0802F818: .4byte 0xFFEFFFFF
_0802F81C:
	adds r0, r5, #0
	subs r0, #0x96
	cmp r0, #0x10
	bhi _0802F82E
	ldr r0, _0802F8B0 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	ldr r2, _0802F8B4 @ =0xFFBFFFFF
_0802F82A:
	ands r1, r2
	str r1, [r0, #0x20]
_0802F82E:
	ldr r0, _0802F8B8 @ =gUnknown_080D6FF0
	ldr r7, _0802F8BC @ =gUnknown_030054F0
	movs r4, #0
	ldrsb r4, [r7, r4]
	adds r0, r4, r0
	ldrb r1, [r0]
	movs r0, #0xc8
	subs r0, r0, r1
	cmp r5, r0
	bne _0802F8D8
	ldr r0, _0802F8C0 @ =gUnknown_030055B0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802F8D8
	ldr r0, _0802F8C4 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _0802F8D8
	ldr r3, _0802F8B0 @ =gUnknown_030059E0
	ldr r2, _0802F8C8 @ =gUnknown_080D6FA0
	lsls r0, r4, #3
	adds r0, r0, r2
	ldrh r1, [r0, #4]
	adds r0, r3, #0
	adds r0, #0x68
	strh r1, [r0]
	movs r0, #0
	ldrsb r0, [r7, r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r0, [r0, #6]
	adds r1, r3, #0
	adds r1, #0x6a
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strb r0, [r1]
	adds r4, r3, #0
	adds r4, #0x90
	ldr r1, [r4]
	ldr r0, [r1, #0x1c]
	movs r2, #0x80
	lsls r2, r2, #0xb
	orrs r0, r2
	str r0, [r1, #0x1c]
	adds r0, r3, #0
	adds r0, #0x94
	ldr r1, [r0]
	ldr r0, [r1, #0x1c]
	orrs r0, r2
	str r0, [r1, #0x1c]
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #2
	bls _0802F8D0
	ldr r1, [r4]
	ldr r0, _0802F8CC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r1, #0x31
	strb r0, [r1]
	b _0802F8D8
	.align 2, 0
_0802F8B0: .4byte gUnknown_030059E0
_0802F8B4: .4byte 0xFFBFFFFF
_0802F8B8: .4byte gUnknown_080D6FF0
_0802F8BC: .4byte gUnknown_030054F0
_0802F8C0: .4byte gUnknown_030055B0
_0802F8C4: .4byte gUnknown_030055B4
_0802F8C8: .4byte gUnknown_080D6FA0
_0802F8CC: .4byte 0x04000128
_0802F8D0:
	ldr r0, [r4]
	adds r0, #0x31
	movs r1, #0
	strb r1, [r0]
_0802F8D8:
	cmp r5, #0xc8
	bhi _0802F8DE
	b _0802F9E6
_0802F8DE:
	ldr r4, _0802F924 @ =gUnknown_03005424
	ldrh r0, [r4]
	ldr r3, _0802F928 @ =0x0000FEFF
	ands r3, r0
	strh r3, [r4]
	ldr r1, _0802F92C @ =gUnknown_030055B4
	ldrb r2, [r1]
	movs r0, #3
	ands r0, r2
	adds r5, r1, #0
	cmp r0, #2
	beq _0802F90A
	lsls r0, r2, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0x1c
	bne _0802F906
	ldr r0, _0802F930 @ =gUnknown_030054B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0802F90A
_0802F906:
	cmp r1, #0x1d
	bne _0802F988
_0802F90A:
	ldrb r0, [r5]
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0x1c
	bne _0802F938
	ldr r0, _0802F934 @ =gUnknown_030055B0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802F962
	movs r0, #0
	bl sub_8039EA4
	b _0802F962
	.align 2, 0
_0802F924: .4byte gUnknown_03005424
_0802F928: .4byte 0x0000FEFF
_0802F92C: .4byte gUnknown_030055B4
_0802F930: .4byte gUnknown_030054B0
_0802F934: .4byte gUnknown_030055B0
_0802F938:
	cmp r2, #0x1d
	bne _0802F958
	movs r0, #8
	bl sub_8039EA4
	ldr r0, _0802F954 @ =gDispCnt
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
	b _0802F962
	.align 2, 0
_0802F954: .4byte gDispCnt
_0802F958:
	asrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_8039EA4
_0802F962:
	ldr r2, _0802F978 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0802F97C @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	ldr r2, _0802F980 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _0802F984 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
	b _0802F9AC
	.align 2, 0
_0802F978: .4byte gUnknown_030059E0
_0802F97C: .4byte 0xFFDFFFFF
_0802F980: .4byte gUnknown_03005424
_0802F984: .4byte 0x0000FFFE
_0802F988:
	ldr r0, _0802F998 @ =gUnknown_030055B0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0802F99C
	ldrb r0, [r6, #4]
	bl sub_8036054
	b _0802F9AC
	.align 2, 0
_0802F998: .4byte gUnknown_030055B0
_0802F99C:
	ldr r2, _0802F9BC @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0802F9C0 @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	ldr r0, _0802F9C4 @ =0x0000FFFE
	ands r0, r3
	strh r0, [r4]
_0802F9AC:
	ldr r0, _0802F9C8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0802F9CC
	bl sub_8018818
	b _0802F9D6
	.align 2, 0
_0802F9BC: .4byte gUnknown_030059E0
_0802F9C0: .4byte 0xFFDFFFFF
_0802F9C4: .4byte 0x0000FFFE
_0802F9C8: .4byte gUnknown_030054CC
_0802F9CC:
	ldr r0, _0802F9EC @ =gUnknown_03005AF0
	ldr r1, [r0, #0x1c]
	ldr r2, _0802F9F0 @ =0xFFFBFFFF
	ands r1, r2
	str r1, [r0, #0x1c]
_0802F9D6:
	bl sub_802C9E4
	ldr r0, _0802F9F4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	bl sub_801583C
_0802F9E6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802F9EC: .4byte gUnknown_03005AF0
_0802F9F0: .4byte 0xFFFBFFFF
_0802F9F4: .4byte gCurTask

	thumb_func_start sub_802F9F8
sub_802F9F8: @ 0x0802F9F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0802FB04 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	ldr r0, [r0]
	str r0, [sp]
	ldr r0, _0802FB08 @ =IWRAM_START+4
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r1, [sp]
	ldr r5, [r1]
	ldr r2, _0802FB0C @ =gDispCnt
	ldrh r1, [r2]
	ldr r3, _0802FB10 @ =0x00001FFF
	adds r0, r3, #0
	ands r0, r1
	strh r0, [r2]
	cmp r5, #0x95
	bhi _0802FA30
	b _0802FC5C
_0802FA30:
	subs r5, #0x96
	cmp r5, #0xf
	bls _0802FA38
	movs r5, #0x10
_0802FA38:
	lsls r0, r5, #9
	ldr r1, [sp, #4]
	strh r0, [r1, #4]
	lsls r0, r5, #0x19
	asrs r0, r0, #0x10
	cmp r0, r3
	ble _0802FA4C
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1, #4]
_0802FA4C:
	ldr r0, _0802FB14 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0802FB28
	movs r6, #0
	ldr r3, _0802FB18 @ =gUnknown_080D6FF5
	mov ip, r3
	ldr r0, _0802FB1C @ =gObjPalette
	mov sb, r0
	mov r8, ip
	movs r1, #2
	add r1, ip
	mov sl, r1
_0802FA66:
	lsls r3, r6, #1
	adds r7, r3, r6
	ldr r1, _0802FB20 @ =gUnknown_030054F0
	movs r0, #0
	ldrsb r0, [r1, r0]
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #4
	adds r2, r7, r2
	mov r1, r8
	adds r0, r2, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov r0, r8
	adds r0, #1
	adds r0, r2, r0
	ldrb r0, [r0]
	adds r1, r0, #0
	muls r1, r5, r1
	lsrs r1, r1, #4
	lsls r1, r1, #0x18
	add r2, sl
	ldrb r0, [r2]
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	add r3, sb
	lsrs r0, r0, #0xe
	lsrs r1, r1, #0x13
	orrs r0, r1
	orrs r0, r4
	strh r0, [r3]
	ldr r3, _0802FB24 @ =gUnknown_030056A4
	ldr r0, [r3]
	cmp r0, #0
	beq _0802FAF8
	mov r0, ip
	adds r0, #0xf0
	adds r0, r7, r0
	ldrb r4, [r0]
	adds r0, r4, #0
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov r0, ip
	adds r0, #0xf1
	adds r0, r7, r0
	ldrb r0, [r0]
	adds r2, r0, #0
	muls r2, r5, r2
	lsrs r2, r2, #4
	lsls r2, r2, #0x18
	mov r0, ip
	adds r0, #0xf2
	adds r0, r7, r0
	ldrb r0, [r0]
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	adds r1, r6, #0
	adds r1, #0xe0
	lsls r1, r1, #1
	add r1, sb
	lsrs r0, r0, #0xe
	lsrs r2, r2, #0x13
	orrs r0, r2
	orrs r0, r4
	strh r0, [r1]
_0802FAF8:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xf
	bls _0802FA66
	b _0802FC12
	.align 2, 0
_0802FB04: .4byte gCurTask
_0802FB08: .4byte IWRAM_START+4
_0802FB0C: .4byte gDispCnt
_0802FB10: .4byte 0x00001FFF
_0802FB14: .4byte gUnknown_030054CC
_0802FB18: .4byte gUnknown_080D6FF5
_0802FB1C: .4byte gObjPalette
_0802FB20: .4byte gUnknown_030054F0
_0802FB24: .4byte gUnknown_030056A4
_0802FB28:
	movs r2, #0
_0802FB2A:
	ldr r0, _0802FC34 @ =gUnknown_030055B8
	ldrb r1, [r0]
	asrs r1, r2
	movs r0, #1
	ands r1, r0
	adds r3, r2, #1
	mov sb, r3
	cmp r1, #0
	beq _0802FBA8
	movs r6, #0
	ldr r0, _0802FC38 @ =gUnknown_080D6FF5
	mov ip, r0
	lsls r1, r2, #4
	mov r8, r1
	mov r7, ip
	ldr r0, _0802FC3C @ =gUnknown_03005500
	adds r2, r2, r0
	mov ip, r2
	ldr r3, _0802FC40 @ =gObjPalette
	mov sl, r3
_0802FB52:
	lsls r3, r6, #1
	adds r3, r3, r6
	mov r0, ip
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r3, r3, r0
	adds r0, r3, r7
	ldrb r4, [r0]
	adds r0, r4, #0
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r7, #1
	adds r0, r3, r0
	ldrb r0, [r0]
	adds r2, r0, #0
	muls r2, r5, r2
	lsrs r2, r2, #4
	lsls r2, r2, #0x18
	ldr r1, _0802FC44 @ =gUnknown_080D6FF7
	adds r3, r3, r1
	ldrb r0, [r3]
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	mov r3, r8
	adds r1, r3, r6
	lsls r1, r1, #1
	add r1, sl
	lsrs r0, r0, #0xe
	lsrs r2, r2, #0x13
	orrs r0, r2
	orrs r0, r4
	strh r0, [r1]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xf
	bls _0802FB52
_0802FBA8:
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _0802FB2A
	ldr r3, _0802FC48 @ =gUnknown_030056A4
	ldr r0, [r3]
	cmp r0, #0
	beq _0802FC12
	movs r6, #0
	ldr r3, _0802FC38 @ =gUnknown_080D6FF5
	movs r0, #0xf2
	adds r0, r0, r3
	mov r8, r0
	ldr r7, _0802FC40 @ =gObjPalette
_0802FBC6:
	lsls r1, r6, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0xf0
	adds r0, r1, r0
	ldrb r4, [r0]
	adds r0, r4, #0
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r3, #0
	adds r0, #0xf1
	adds r0, r1, r0
	ldrb r0, [r0]
	adds r2, r0, #0
	muls r2, r5, r2
	lsrs r2, r2, #4
	lsls r2, r2, #0x18
	add r1, r8
	ldrb r0, [r1]
	muls r0, r5, r0
	lsrs r0, r0, #4
	lsls r0, r0, #0x18
	adds r1, r6, #0
	adds r1, #0xe0
	lsls r1, r1, #1
	adds r1, r1, r7
	lsrs r0, r0, #0xe
	lsrs r2, r2, #0x13
	orrs r0, r2
	orrs r0, r4
	strh r0, [r1]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xf
	bls _0802FBC6
_0802FC12:
	ldr r1, _0802FC4C @ =gFlags
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	ldr r3, _0802FC4C @ =gFlags
	str r0, [r3]
	ldr r0, _0802FC50 @ =0x00003FCF
	ldr r1, [sp, #4]
	strh r0, [r1, #8]
	ldr r0, [sp, #4]
	bl sub_802D4CC
	ldr r1, _0802FC54 @ =gWinRegs
	ldr r0, _0802FC58 @ =0x00001F3F
	strh r0, [r1, #8]
	movs r0, #0x1f
	b _0802FC70
	.align 2, 0
_0802FC34: .4byte gUnknown_030055B8
_0802FC38: .4byte gUnknown_080D6FF5
_0802FC3C: .4byte gUnknown_03005500
_0802FC40: .4byte gObjPalette
_0802FC44: .4byte gUnknown_080D6FF7
_0802FC48: .4byte gUnknown_030056A4
_0802FC4C: .4byte gFlags
_0802FC50: .4byte 0x00003FCF
_0802FC54: .4byte gWinRegs
_0802FC58: .4byte 0x00001F3F
_0802FC5C:
	ldr r0, _0802FCC0 @ =0x000030EF
	ldr r3, [sp, #4]
	strh r0, [r3, #8]
	ldr r0, [sp, #4]
	bl sub_802D4CC
	ldr r1, _0802FCC4 @ =gWinRegs
	ldr r0, _0802FCC8 @ =0x00003F3F
	strh r0, [r1, #8]
	ldr r0, _0802FCCC @ =0x00001010
_0802FC70:
	strh r0, [r1, #0xa]
	ldr r5, _0802FCD0 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0x1d
	bne _0802FC86
	ldr r2, _0802FCC4 @ =gWinRegs
	ldrh r1, [r2, #8]
	ldr r0, _0802FCD4 @ =0x0000FFF9
	ands r0, r1
	strh r0, [r2, #8]
_0802FC86:
	ldr r1, [sp]
	ldr r0, [r1]
	cmp r0, #0xc7
	bls _0802FD0C
	ldr r4, _0802FCD8 @ =gBldRegs
	movs r0, #0
	strh r0, [r4, #4]
	strh r0, [r4]
	strh r0, [r4, #2]
	ldr r3, _0802FCC4 @ =gWinRegs
	ldr r2, _0802FCDC @ =0x0000F0F0
	strh r2, [r3]
	ldr r1, _0802FCE0 @ =0x0000A0A0
	strh r1, [r3, #4]
	strh r2, [r3, #2]
	strh r1, [r3, #6]
	strh r0, [r3, #8]
	strh r0, [r3, #0xa]
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0x1d
	beq _0802FCEC
	ldr r2, _0802FCE4 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0802FCE8 @ =0x00001FFF
	ands r0, r1
	strh r0, [r2]
	b _0802FD04
	.align 2, 0
_0802FCC0: .4byte 0x000030EF
_0802FCC4: .4byte gWinRegs
_0802FCC8: .4byte 0x00003F3F
_0802FCCC: .4byte 0x00001010
_0802FCD0: .4byte gUnknown_030055B4
_0802FCD4: .4byte 0x0000FFF9
_0802FCD8: .4byte gBldRegs
_0802FCDC: .4byte 0x0000F0F0
_0802FCE0: .4byte 0x0000A0A0
_0802FCE4: .4byte gDispCnt
_0802FCE8: .4byte 0x00001FFF
_0802FCEC:
	ldr r2, _0802FD1C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0802FD20 @ =0x000099FF
	ands r0, r1
	strh r0, [r2]
	ldr r0, _0802FD24 @ =0x00003735
	strh r0, [r3, #0xa]
	ldr r0, _0802FD28 @ =0x00001346
	strh r0, [r4]
	ldr r0, _0802FD2C @ =0x00000404
	strh r0, [r4, #2]
	strh r0, [r4, #4]
_0802FD04:
	ldr r0, _0802FD30 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_0802FD0C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802FD1C: .4byte gDispCnt
_0802FD20: .4byte 0x000099FF
_0802FD24: .4byte 0x00003735
_0802FD28: .4byte 0x00001346
_0802FD2C: .4byte 0x00000404
_0802FD30: .4byte gCurTask

	thumb_func_start sub_802FD34
sub_802FD34: @ 0x0802FD34
	push {r4, r5, r6, r7, lr}
	ldr r0, _0802FD90 @ =gCurTask
	ldr r0, [r0]
	mov ip, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	ldr r0, [r0]
	ldr r2, _0802FD94 @ =IWRAM_START + 0x10
	adds r4, r1, r2
	ldr r3, _0802FD98 @ =IWRAM_START + 0x14
	adds r6, r1, r3
	ldr r5, [r0]
	cmp r5, #1
	bls _0802FE1C
	subs r2, r5, #1
	movs r3, #0
	strh r3, [r4, #2]
	movs r0, #0xa0
	strh r0, [r4]
	movs r7, #0x80
	lsls r7, r7, #2
	strh r7, [r6, #2]
	strh r3, [r6]
	cmp r2, #9
	bhi _0802FD9C
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #3
	rsbs r0, r0, #0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	strh r0, [r4, #2]
	movs r0, #0x58
	strh r0, [r4]
	cmp r2, #6
	bls _0802FE1C
	subs r2, r5, #7
	strh r7, [r6, #2]
	lsls r0, r2, #2
	adds r0, r0, r2
	strh r0, [r6]
	b _0802FE1C
	.align 2, 0
_0802FD90: .4byte gCurTask
_0802FD94: .4byte IWRAM_START + 0x10
_0802FD98: .4byte IWRAM_START + 0x14
_0802FD9C:
	cmp r5, #0x77
	bhi _0802FDB4
	ldr r0, _0802FDB0 @ =0x0000021E
	strh r0, [r4, #2]
	movs r0, #0x89
	strh r0, [r4]
	strh r7, [r6, #2]
	movs r0, #0x10
	strh r0, [r6]
	b _0802FE1C
	.align 2, 0
_0802FDB0: .4byte 0x0000021E
_0802FDB4:
	cmp r5, #0x87
	bhi _0802FDE4
	adds r2, r5, #0
	subs r2, #0x78
	lsls r1, r2, #3
	adds r1, r1, r2
	lsls r1, r1, #1
	ldr r3, _0802FDE0 @ =0x0000021E
	adds r0, r3, #0
	subs r0, r0, r1
	strh r0, [r4, #2]
	lsls r0, r2, #1
	rsbs r0, r0, #0
	adds r0, #0x89
	strh r0, [r4]
	lsls r0, r2, #4
	subs r0, r7, r0
	strh r0, [r6, #2]
	adds r0, r5, #0
	subs r0, #0x68
	strh r0, [r6]
	b _0802FE1C
	.align 2, 0
_0802FDE0: .4byte 0x0000021E
_0802FDE4:
	cmp r5, #0x95
	bls _0802FE00
	ldr r0, _0802FDFC @ =gFlags
	ldr r1, [r0]
	movs r2, #5
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
	mov r0, ip
	bl TaskDestroy
	b _0802FE70
	.align 2, 0
_0802FDFC: .4byte gFlags
_0802FE00:
	adds r2, r5, #0
	subs r2, #0x88
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	movs r7, #0x88
	lsls r7, r7, #2
	adds r1, r7, #0
	subs r1, r1, r0
	strh r1, [r4, #2]
	lsls r0, r2, #3
	subs r0, r0, r2
	strh r0, [r4]
	strh r3, [r6, #2]
_0802FE1C:
	ldr r1, _0802FE50 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0802FE54 @ =gUnknown_03002878
	ldr r0, _0802FE58 @ =0x04000040
	str r0, [r1]
	ldr r2, _0802FE5C @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	cmp r5, #0xa
	bls _0802FE60
	ldrb r0, [r4]
	ldrh r1, [r4, #2]
	bl sub_802DDC4
	ldrb r0, [r6]
	ldrh r1, [r6, #2]
	bl sub_802DF18
	b _0802FE70
	.align 2, 0
_0802FE50: .4byte gUnknown_03002A80
_0802FE54: .4byte gUnknown_03002878
_0802FE58: .4byte 0x04000040
_0802FE5C: .4byte gFlags
_0802FE60:
	ldrb r0, [r4]
	ldrh r1, [r4, #2]
	bl sub_802DBC0
	ldrb r0, [r6]
	ldrh r1, [r6, #2]
	bl sub_802DF18
_0802FE70:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_802FE78
sub_802FE78: @ 0x0802FE78
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0802FF70 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	ldr r0, [r7]
	ldr r0, [r0]
	mov r8, r0
	ldr r0, _0802FF74 @ =IWRAM_START + 0x1B4
	adds r5, r4, r0
	adds r0, r5, #0
	bl sub_80051E8
	movs r6, #0
	ldr r1, _0802FF78 @ =IWRAM_START + 0x205
	adds r5, r4, r1
	ldr r0, _0802FF7C @ =IWRAM_START + 0x1E4
	adds r4, r4, r0
_0802FEA6:
	movs r0, #0xff
	strb r0, [r5]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r5, #0x30
	adds r4, #0x30
	adds r6, #1
	cmp r6, #3
	bls _0802FEA6
	ldr r0, _0802FF80 @ =gUnknown_030054CC
	ldrb r0, [r0]
	mov r1, r8
	lsls r1, r1, #1
	mov sb, r1
	cmp r0, #2
	bhi _0802FEE0
	movs r6, #0
	adds r4, r7, #4
_0802FED2:
	adds r0, r4, #0
	bl sub_80051E8
	adds r4, #0x30
	adds r6, #1
	cmp r6, #8
	bls _0802FED2
_0802FEE0:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r5, r7, r0
	mov r1, r8
	cmp r1, #0x1d
	bls _0802FF0C
	cmp r1, #0x1e
	bne _0802FF06
	ldr r0, _0802FF84 @ =0x0000045B
	strh r0, [r5, #0xa]
	movs r0, #0xb1
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _0802FF88 @ =0x000002C5
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
_0802FF06:
	adds r0, r5, #0
	bl sub_8004558
_0802FF0C:
	adds r0, r5, #0
	bl sub_80051E8
	movs r1, #0xb5
	lsls r1, r1, #2
	adds r5, r7, r1
	movs r0, #0xc1
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r2, _0802FF8C @ =gUnknown_08097AA4
	mov r0, sb
	add r0, r8
	lsls r0, r0, #3
	ldr r1, _0802FF90 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x16
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r1, r2
	bne _0802FF3E
	movs r1, #0xff
_0802FF3E:
	cmp r1, #0
	bne _0802FF44
	movs r1, #4
_0802FF44:
	movs r0, #0
	strh r0, [r4]
	strh r1, [r4, #2]
	strh r2, [r4, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r4, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0802FF70: .4byte gCurTask
_0802FF74: .4byte IWRAM_START + 0x1B4
_0802FF78: .4byte IWRAM_START + 0x205
_0802FF7C: .4byte IWRAM_START + 0x1E4
_0802FF80: .4byte gUnknown_030054CC
_0802FF84: .4byte 0x0000045B
_0802FF88: .4byte 0x000002C5
_0802FF8C: .4byte gUnknown_08097AA4
_0802FF90: .4byte 0x000003FF

	thumb_func_start sub_802FF94
sub_802FF94: @ 0x0802FF94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _0802FFC8 @ =gCurTask
	ldr r1, [r0]
	ldrh r6, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r6
	mov ip, r0
	ldr r0, [r0]
	ldr r3, [r0]
	adds r0, r3, #0
	subs r0, #0xa
	cmp r0, #0x7c
	bls _0803004E
	cmp r3, #0xc7
	bls _0802FFCC
	adds r0, r1, #0
	bl TaskDestroy
	b _0803029C
	.align 2, 0
_0802FFC8: .4byte gCurTask
_0802FFCC:
	cmp r3, #0x95
	bhi _0802FFD2
	b _0803029C
_0802FFD2:
	ldr r0, _08030018 @ =IWRAM_START + 0x1B4
	adds r5, r6, r0
	cmp r3, #0x96
	bne _08030030
	ldr r2, _0803001C @ =gUnknown_080D6FC8
	ldr r1, _08030020 @ =gUnknown_030054F0
	movs r0, #0
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrh r0, [r0, #4]
	movs r3, #0
	movs r4, #0
	strh r0, [r5, #0xa]
	movs r0, #0
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r0, #6]
	ldr r2, _08030024 @ =IWRAM_START + 0x1D4
	adds r0, r6, r2
	strb r1, [r0]
	ldr r7, _08030028 @ =IWRAM_START + 0x1D9
	adds r0, r6, r7
	strb r3, [r0]
	ldr r0, _0803002C @ =IWRAM_START + 0x1D5
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xf0
	strh r0, [r5, #0x16]
	movs r0, #0xa0
	strh r0, [r5, #0x18]
	str r4, [r5, #0x10]
	b _08030040
	.align 2, 0
_08030018: .4byte IWRAM_START + 0x1B4
_0803001C: .4byte gUnknown_080D6FC8
_08030020: .4byte gUnknown_030054F0
_08030024: .4byte IWRAM_START + 0x1D4
_08030028: .4byte IWRAM_START + 0x1D9
_0803002C: .4byte IWRAM_START + 0x1D5
_08030030:
	cmp r3, #0xbd
	bls _08030040
	ldrh r0, [r5, #0x16]
	adds r0, #4
	strh r0, [r5, #0x16]
	ldrh r0, [r5, #0x18]
	adds r0, #4
	strh r0, [r5, #0x18]
_08030040:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	b _0803029C
_0803004E:
	subs r3, #9
	ldr r1, _08030074 @ =IWRAM_START + 0x1B4
	adds r5, r6, r1
	cmp r3, #0xc
	bhi _08030078
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #6
	lsrs r0, r0, #8
	movs r1, #0xfe
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	lsls r0, r3, #5
	subs r0, r0, r3
	lsls r0, r0, #2
	subs r0, r0, r3
	b _080300A4
	.align 2, 0
_08030074: .4byte IWRAM_START + 0x1B4
_08030078:
	cmp r3, #0x64
	bhi _08030086
	movs r0, #0x18
	strh r0, [r5, #0x16]
	movs r0, #0x4a
	strh r0, [r5, #0x18]
	b _080300AE
_08030086:
	adds r2, r3, #0
	subs r2, #0x58
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #6
	lsrs r0, r0, #8
	movs r1, #0xfe
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	lsls r0, r2, #5
	subs r0, r0, r2
	lsls r0, r0, #2
	subs r0, r0, r2
_080300A4:
	lsls r0, r0, #3
	lsrs r0, r0, #8
	movs r1, #0x79
	subs r1, r1, r0
	strh r1, [r5, #0x18]
_080300AE:
	movs r4, #0
	lsls r2, r3, #0x18
	str r2, [sp, #8]
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #6
	lsrs r0, r0, #8
	movs r7, #0x8e
	lsls r7, r7, #1
	mov r8, r7
	mov r1, r8
	subs r0, r1, r0
	mov sl, r0
	movs r6, #0
	lsls r0, r3, #5
	subs r0, r0, r3
	lsls r0, r0, #2
	subs r0, r0, r3
	lsls r0, r0, #3
	lsrs r0, r0, #8
	movs r7, #0x7f
	subs r0, r7, r0
	mov sb, r0
	adds r2, r3, #0
	subs r2, #0x58
_080300E4:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r6, r1
	mov r1, ip
	adds r5, r1, r0
	cmp r3, #0xc
	bhi _080300FC
	mov r0, sl
	strh r0, [r5, #0x16]
	mov r1, sb
	strh r1, [r5, #0x18]
	b _0803012A
_080300FC:
	cmp r3, #0x64
	bhi _08030108
	movs r0, #0x36
	strh r0, [r5, #0x16]
	movs r0, #0x50
	b _08030128
_08030108:
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #6
	lsrs r1, r1, #8
	mov r0, r8
	subs r1, r0, r1
	strh r1, [r5, #0x16]
	lsls r0, r2, #5
	subs r0, r0, r2
	lsls r0, r0, #2
	subs r0, r0, r2
	lsls r0, r0, #3
	lsrs r0, r0, #8
	subs r0, r7, r0
_08030128:
	strh r0, [r5, #0x18]
_0803012A:
	cmp r4, #3
	bne _08030134
	ldrh r0, [r5, #0x16]
	subs r0, #0x18
	strh r0, [r5, #0x16]
_08030134:
	adds r6, #0x30
	adds r4, #1
	cmp r4, #3
	bls _080300E4
	ldr r1, [sp, #8]
	lsrs r2, r1, #0x18
	movs r4, #0
	movs r7, #1
	mov r8, r7
	movs r0, #0x14
	mov sl, r0
	movs r1, #0xc
	mov sb, r1
	adds r0, r3, #0
	subs r0, #0x64
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #1
	subs r1, #0x16
	str r1, [sp, #0xc]
	adds r6, r2, #0
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	mov r7, sl
	subs r7, r7, r1
	str r7, [sp]
	mov r0, sb
	subs r0, r0, r1
	str r0, [sp, #4]
_08030170:
	movs r0, #8
	subs r0, r0, r4
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #4
	adds r1, #4
	mov r7, ip
	adds r5, r7, r1
	lsls r1, r0, #4
	adds r1, r1, r0
	adds r1, #0x43
	strh r1, [r5, #0x16]
	movs r0, #0x16
	rsbs r0, r0, #0
	strh r0, [r5, #0x18]
	cmp r2, #0x31
	bhi _080301C8
	lsls r1, r4, #1
	cmp r2, r1
	blo _080301F8
	adds r0, r4, #0
	mov r7, r8
	ands r0, r7
	cmp r0, #0
	bne _080301B2
	cmp r6, #4
	bhi _080301AC
	mov r0, sp
	ldrh r0, [r0, #0xc]
	b _080301F6
_080301AC:
	mov r1, sl
	strh r1, [r5, #0x18]
	b _080301F8
_080301B2:
	subs r1, r2, r1
	cmp r1, #4
	bhi _080301C2
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	subs r0, #0x16
	b _080301F6
_080301C2:
	mov r7, sb
	strh r7, [r5, #0x18]
	b _080301F8
_080301C8:
	cmp r3, #0x63
	bhi _080301E0
	adds r0, r4, #0
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	bne _080301DC
	mov r7, sl
	strh r7, [r5, #0x18]
	b _080301F8
_080301DC:
	mov r0, sb
	b _080301F6
_080301E0:
	adds r0, r4, #0
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	bne _080301F2
	mov r7, sp
	ldrh r7, [r7]
	strh r7, [r5, #0x18]
	b _080301F8
_080301F2:
	mov r0, sp
	ldrh r0, [r0, #4]
_080301F6:
	strh r0, [r5, #0x18]
_080301F8:
	ldr r1, [sp, #0xc]
	subs r1, #0x14
	str r1, [sp, #0xc]
	subs r6, #2
	adds r4, #1
	cmp r4, #8
	bls _08030170
	movs r5, #0xa9
	lsls r5, r5, #2
	add r5, ip
	movs r0, #0x24
	strh r0, [r5, #0x16]
	cmp r3, #0x10
	bhi _0803021C
	ldr r0, _08030218 @ =0x0000FFD0
	b _08030240
	.align 2, 0
_08030218: .4byte 0x0000FFD0
_0803021C:
	cmp r3, #0x19
	bhi _0803022C
	adds r0, r3, #0
	subs r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	subs r0, #0x28
	b _08030240
_0803022C:
	cmp r3, #0x64
	bhi _08030234
	movs r0, #0x20
	b _08030240
_08030234:
	adds r1, r3, #0
	subs r1, #0x64
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x15
	movs r0, #0x20
	subs r0, r0, r1
_08030240:
	strh r0, [r5, #0x18]
	movs r5, #0xb5
	lsls r5, r5, #2
	add r5, ip
	ldr r2, _08030268 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x20
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	movs r0, #0x23
	strh r0, [r5, #0x16]
	cmp r3, #0x10
	bhi _08030270
	ldr r0, _0803026C @ =0x0000FFCF
	b _08030296
	.align 2, 0
_08030268: .4byte gUnknown_030054B8
_0803026C: .4byte 0x0000FFCF
_08030270:
	cmp r3, #0x19
	bhi _08030280
	adds r0, r3, #0
	subs r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	subs r0, #0x29
	b _08030296
_08030280:
	cmp r3, #0x64
	bhi _0803028A
	strh r0, [r5, #0x16]
	movs r0, #0x20
	b _08030296
_0803028A:
	adds r1, r3, #0
	subs r1, #0x64
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x15
	movs r0, #0x20
	subs r0, r0, r1
_08030296:
	strh r0, [r5, #0x18]
	bl sub_802FE78
_0803029C:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80302AC
sub_80302AC: @ 0x080302AC
	push {r4, r5, r6, r7, lr}
	ldr r1, _080302D4 @ =gCurTask
	ldr r2, [r1]
	ldrh r5, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r5, r0
	ldr r0, [r0]
	ldr r3, [r0]
	adds r0, r3, #0
	subs r0, #0x97
	mov ip, r1
	cmp r0, #0x27
	bls _080302D8
	cmp r3, #0xc7
	bls _080303BA
	adds r0, r2, #0
	bl TaskDestroy
	b _080303BA
	.align 2, 0
_080302D4: .4byte gCurTask
_080302D8:
	subs r3, #0x96
	cmp r3, #0xd
	bhi _0803031C
	movs r4, #0
	ldr r7, _08030310 @ =gUnknown_030055B4
	ldr r0, _08030314 @ =IWRAM_START + 0x1A
	adds r1, r5, r0
	ldr r5, _08030318 @ =gUnknown_080D7120
	movs r6, #0
_080302EA:
	subs r2, r3, r6
	cmp r2, #3
	ble _080302F2
	movs r2, #4
_080302F2:
	lsls r2, r2, #3
	ldrh r0, [r5]
	strh r0, [r1]
	adds r0, r2, #0
	subs r0, #0x20
	ldrh r2, [r5, #2]
	adds r0, r0, r2
	strh r0, [r1, #2]
	adds r1, #0x30
	adds r5, #4
	adds r6, #3
	adds r4, #1
	cmp r4, #3
	bls _080302EA
	b _08030378
	.align 2, 0
_08030310: .4byte gUnknown_030055B4
_08030314: .4byte IWRAM_START + 0x1A
_08030318: .4byte gUnknown_080D7120
_0803031C:
	cmp r3, #0x11
	bhi _0803035C
	subs r3, #0xd
	ldr r1, _0803034C @ =gUnknown_080D7130
	lsls r0, r3, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r2, [r0, r1]
	movs r4, #0
	ldr r7, _08030350 @ =gUnknown_030055B4
	ldr r0, _08030354 @ =IWRAM_START + 0x1A
	adds r1, r5, r0
	ldr r3, _08030358 @ =gUnknown_080D7120
_08030336:
	ldrh r0, [r3]
	strh r0, [r1]
	ldrh r0, [r3, #2]
	adds r0, r0, r2
	strh r0, [r1, #2]
	adds r1, #0x30
	adds r3, #4
	adds r4, #1
	cmp r4, #3
	bls _08030336
	b _08030378
	.align 2, 0
_0803034C: .4byte gUnknown_080D7130
_08030350: .4byte gUnknown_030055B4
_08030354: .4byte IWRAM_START + 0x1A
_08030358: .4byte gUnknown_080D7120
_0803035C:
	movs r4, #0
	ldr r7, _080303C0 @ =gUnknown_030055B4
	ldr r2, _080303C4 @ =IWRAM_START + 0x1A
	adds r1, r5, r2
	ldr r2, _080303C8 @ =gUnknown_080D7120
_08030366:
	ldrh r0, [r2]
	strh r0, [r1]
	ldrh r0, [r2, #2]
	strh r0, [r1, #2]
	adds r1, #0x30
	adds r2, #4
	adds r4, #1
	cmp r4, #3
	bls _08030366
_08030378:
	ldrb r1, [r7]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _080303BA
	lsls r0, r1, #0x18
	asrs r0, r0, #0x1a
	cmp r0, #7
	beq _080303BA
	mov r1, ip
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r5, r0, r2
	movs r4, #0
_08030398:
	lsls r0, r4, #1
	adds r1, r0, r4
	ldr r0, [r5]
	ldr r0, [r0]
	subs r0, #0x96
	cmp r1, r0
	bhs _080303B0
	lsls r0, r1, #4
	adds r0, #4
	adds r0, r5, r0
	bl sub_80051E8
_080303B0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08030398
_080303BA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080303C0: .4byte gUnknown_030055B4
_080303C4: .4byte IWRAM_START + 0x1A
_080303C8: .4byte gUnknown_080D7120

	thumb_func_start sub_80303CC
sub_80303CC: @ 0x080303CC
	push {lr}
	ldr r0, _080303F4 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080303DE
	bl sub_8011328
_080303DE:
	ldr r0, _080303F8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080303F0
	ldr r2, _080303FC @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08030400 @ =0x0000FFDF
	ands r0, r1
	strh r0, [r2]
_080303F0:
	pop {r0}
	bx r0
	.align 2, 0
_080303F4: .4byte gUnknown_030055B4
_080303F8: .4byte gUnknown_030054CC
_080303FC: .4byte gUnknown_03005424
_08030400: .4byte 0x0000FFDF

	thumb_func_start sub_8030404
sub_8030404: @ 0x08030404
	push {r4, lr}
	ldr r0, _08030444 @ =gCurTask
	ldr r4, [r0]
	ldrh r0, [r4, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r3, [r0]
	ldr r2, _08030448 @ =gBgPalette
	ldr r1, _0803044C @ =gUnknown_080D7116
	ldr r0, _08030450 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2]
	ldr r2, _08030454 @ =gFlags
	ldr r0, [r2]
	movs r1, #1
	orrs r0, r1
	str r0, [r2]
	cmp r3, #0xc7
	bls _0803043E
	adds r0, r4, #0
	bl TaskDestroy
_0803043E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08030444: .4byte gCurTask
_08030448: .4byte gBgPalette
_0803044C: .4byte gUnknown_080D7116
_08030450: .4byte gUnknown_030054F0
_08030454: .4byte gFlags

	thumb_func_start sub_8030458
sub_8030458: @ 0x08030458
	bx lr
	.align 2, 0

	thumb_func_start sub_803045C
sub_803045C: @ 0x0803045C
	push {lr}
	ldrh r0, [r0, #6]
	ldr r1, _08030470 @ =IWRAM_START + 0x1B8
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_8007CF0
	pop {r0}
	bx r0
	.align 2, 0
_08030470: .4byte IWRAM_START + 0x1B8

	thumb_func_start sub_8030474
sub_8030474: @ 0x08030474
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #8]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8030488
sub_8030488: @ 0x08030488
	push {r4, r5, lr}
	ldr r0, _080304D4 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _080304CE
	lsls r0, r1, #0x18
	asrs r0, r0, #0x1a
	cmp r0, #7
	beq _080304CE
	ldr r0, _080304D8 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	movs r4, #0
_080304AC:
	lsls r0, r4, #1
	adds r1, r0, r4
	ldr r0, [r5]
	ldr r0, [r0]
	subs r0, #0x96
	cmp r1, r0
	bhs _080304C4
	lsls r0, r1, #4
	adds r0, #4
	adds r0, r5, r0
	bl sub_80051E8
_080304C4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _080304AC
_080304CE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080304D4: .4byte gUnknown_030055B4
_080304D8: .4byte gCurTask

	thumb_func_start sub_80304DC
sub_80304DC: @ 0x080304DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	movs r7, #0
	ldr r0, _0803056C @ =gLoadedSaveGame
	ldr r1, [r0]
	movs r0, #0xdd
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r0, _08030570 @ =gUnknown_030053F0
	movs r3, #0
	ldrsh r2, [r0, r3]
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
	ldr r0, _08030574 @ =sub_8030A4C
	movs r1, #0xba
	lsls r1, r1, #1
	movs r2, #0xc1
	lsls r2, r2, #8
	ldr r3, _08030578 @ =sub_8031370
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r1, r0
	mov sl, r1
	ldr r2, _0803057C @ =IWRAM_START + 0x168
	adds r1, r0, r2
	str r7, [r1]
	ldr r3, _08030580 @ =IWRAM_START + 0x170
	adds r0, r0, r3
	strb r7, [r0]
	mov r0, sl
	strh r7, [r0]
	movs r0, #1
	mov r1, sl
	strh r0, [r1, #2]
	adds r0, #0xff
	strh r0, [r1, #6]
	strh r7, [r1, #4]
	ldr r0, _08030584 @ =0x00003FFF
	strh r0, [r1, #8]
	strh r7, [r1, #0xa]
	ldr r0, _08030588 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _08030594
	ldr r0, _0803058C @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _08030594
	movs r0, #0x40
	mov r2, sl
	strh r0, [r2, #6]
	ldr r0, _08030590 @ =0x00003FBF
	strh r0, [r2, #8]
	b _080305B4
	.align 2, 0
_0803056C: .4byte gLoadedSaveGame
_08030570: .4byte gUnknown_030053F0
_08030574: .4byte sub_8030A4C
_08030578: .4byte sub_8031370
_0803057C: .4byte IWRAM_START + 0x168
_08030580: .4byte IWRAM_START + 0x170
_08030584: .4byte 0x00003FFF
_08030588: .4byte gUnknown_030059E0
_0803058C: .4byte gUnknown_030054F4
_08030590: .4byte 0x00003FBF
_08030594:
	ldr r0, _080305C4 @ =gUnknown_030055B4
	ldrb r0, [r0]
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080305B4
	ldr r0, _080305C8 @ =0x00003FAF
	mov r3, sl
	strh r0, [r3, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r3, #4]
	mov r0, sl
	bl sub_802D4CC
_080305B4:
	ldr r0, _080305CC @ =0x00000707
	cmp r4, r0
	bhi _080305D4
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _080305D0 @ =0x00013880
	b _0803069C
	.align 2, 0
_080305C4: .4byte gUnknown_030055B4
_080305C8: .4byte 0x00003FAF
_080305CC: .4byte 0x00000707
_080305D0: .4byte 0x00013880
_080305D4:
	ldr r0, _080305E4 @ =0x00000BB7
	cmp r4, r0
	bhi _080305EC
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _080305E8 @ =0x0000C350
	b _0803069C
	.align 2, 0
_080305E4: .4byte 0x00000BB7
_080305E8: .4byte 0x0000C350
_080305EC:
	ldr r0, _080305FC @ =0x00000E0F
	cmp r4, r0
	bhi _08030604
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _08030600 @ =0x00002710
	b _0803069C
	.align 2, 0
_080305FC: .4byte 0x00000E0F
_08030600: .4byte 0x00002710
_08030604:
	ldr r0, _08030614 @ =0x00001517
	cmp r4, r0
	bhi _0803061C
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _08030618 @ =0x00001388
	b _0803069C
	.align 2, 0
_08030614: .4byte 0x00001517
_08030618: .4byte 0x00001388
_0803061C:
	ldr r0, _08030630 @ =0x00001C1F
	cmp r4, r0
	bhi _08030634
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0xfa
	lsls r0, r0, #4
	b _0803069C
	.align 2, 0
_08030630: .4byte 0x00001C1F
_08030634:
	ldr r0, _08030644 @ =0x00002A2F
	cmp r4, r0
	bhi _0803064C
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _08030648 @ =0x00000BB8
	b _0803069C
	.align 2, 0
_08030644: .4byte 0x00002A2F
_08030648: .4byte 0x00000BB8
_0803064C:
	ldr r0, _08030660 @ =0x0000383F
	cmp r4, r0
	bhi _08030664
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0xfa
	lsls r0, r0, #3
	b _0803069C
	.align 2, 0
_08030660: .4byte 0x0000383F
_08030664:
	ldr r0, _08030678 @ =0x0000464F
	cmp r4, r0
	bhi _0803067C
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0xfa
	lsls r0, r0, #2
	b _0803069C
	.align 2, 0
_08030678: .4byte 0x0000464F
_0803067C:
	ldr r0, _08030690 @ =0x0000545F
	cmp r4, r0
	bhi _08030694
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0xfa
	lsls r0, r0, #1
	b _0803069C
	.align 2, 0
_08030690: .4byte 0x0000545F
_08030694:
	movs r1, #0xae
	lsls r1, r1, #1
	add r1, sl
	movs r0, #0
_0803069C:
	str r0, [r1]
	movs r0, #0xb0
	lsls r0, r0, #1
	add r0, sl
	movs r1, #0x64
	muls r1, r6, r1
	str r1, [r0]
	cmp r5, #7
	bne _080306BC
	movs r1, #0xb2
	lsls r1, r1, #1
	add r1, sl
	ldr r0, _080306B8 @ =0x00002710
	b _080306CC
	.align 2, 0
_080306B8: .4byte 0x00002710
_080306BC:
	movs r1, #0xb2
	lsls r1, r1, #1
	add r1, sl
	lsls r0, r5, #5
	subs r0, r0, r5
	lsls r0, r0, #2
	adds r0, r0, r5
	lsls r0, r0, #3
_080306CC:
	str r0, [r1]
	movs r0, #0xb2
	lsls r0, r0, #1
	add r0, sl
	movs r1, #0xb0
	lsls r1, r1, #1
	add r1, sl
	ldr r2, [r0]
	ldr r1, [r1]
	cmp r2, r1
	bls _080306F2
	movs r0, #0xae
	lsls r0, r0, #1
	add r0, sl
	ldr r0, [r0]
	cmp r2, r0
	bls _08030700
	adds r0, r2, #0
	b _08030700
_080306F2:
	movs r0, #0xae
	lsls r0, r0, #1
	add r0, sl
	ldr r0, [r0]
	cmp r1, r0
	bls _08030700
	adds r0, r1, #0
_08030700:
	movs r1, #0x64
	bl Div
	movs r1, #0xb6
	lsls r1, r1, #1
	add r1, sl
	str r0, [r1]
	movs r7, #0x96
	lsls r7, r7, #1
	add r7, sl
	movs r0, #0
	mov sb, r0
	movs r6, #0
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	mov r2, r8
	strh r2, [r7, #0x16]
	movs r0, #0x50
	strh r0, [r7, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0x8c
	lsls r0, r0, #3
	strh r0, [r7, #0xa]
	movs r0, #0xa6
	lsls r0, r0, #1
	add r0, sl
	mov r3, sb
	strb r3, [r0]
	movs r0, #0xa0
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	ldr r1, _08030888 @ =0x0000014D
	add r1, sl
	movs r0, #0xff
	strb r0, [r1]
	adds r0, #0x4f
	add r0, sl
	movs r1, #0x10
	strb r1, [r0]
	ldr r0, _0803088C @ =0x00000151
	add r0, sl
	strb r3, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	mov r7, sl
	adds r7, #0xc
	mov r3, r8
	strh r3, [r7, #0x16]
	movs r0, #0x29
	strh r0, [r7, #0x18]
	ldr r4, _08030890 @ =gUnknown_080D713C
	ldr r5, _08030894 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r1, r4, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	movs r1, #0
	ldrsb r1, [r5, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r4, #4
	adds r0, r0, r4
	ldrh r1, [r0]
	mov r0, sl
	adds r0, #0x2c
	strb r1, [r0]
	mov r0, r8
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	mov r1, sl
	adds r1, #0x2d
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x2e
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	mov r2, sb
	strb r2, [r0]
	movs r3, #1
	rsbs r3, r3, #0
	str r3, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r5, _08030898 @ =gUnknown_030055B4
	ldrb r1, [r5]
	movs r0, #3
	ands r0, r1
	lsrs r0, r0, #1
	mov sb, r0
	adds r7, #0x30
	mov r0, r8
	strh r0, [r7, #0x16]
	movs r0, #0x31
	strh r0, [r7, #0x18]
	ldr r6, _0803089C @ =gUnknown_080D715A
	mov r1, sb
	lsls r4, r1, #1
	add r4, sb
	lsls r4, r4, #1
	adds r0, r4, r6
	ldrh r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	adds r0, r6, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	adds r0, r6, #4
	adds r4, r4, r0
	ldrh r0, [r4]
	mov r1, sl
	adds r1, #0x5c
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0x1c
	beq _08030836
	cmp r0, #0x1d
	bne _0803083E
_08030836:
	ldrh r0, [r6, #2]
	strh r0, [r7, #0xa]
	ldrh r0, [r6, #4]
	strb r0, [r1]
_0803083E:
	movs r2, #0
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r1, [r7, #8]
	strh r1, [r7, #0x14]
	strh r1, [r7, #0x1c]
	adds r3, r7, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	adds r3, #1
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r1, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	mov r2, sb
	cmp r2, #0
	beq _080308A0
	ldr r0, _08030898 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	adds r0, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	b _080308A8
	.align 2, 0
_08030888: .4byte 0x0000014D
_0803088C: .4byte 0x00000151
_08030890: .4byte gUnknown_080D713C
_08030894: .4byte gUnknown_030054F0
_08030898: .4byte gUnknown_030055B4
_0803089C: .4byte gUnknown_080D715A
_080308A0:
	ldr r0, _080308F0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	movs r1, #1
	ands r1, r0
_080308A8:
	mov r7, sl
	adds r7, #0x6c
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r7, #0x16]
	movs r0, #0x31
	strh r0, [r7, #0x18]
	ldr r5, _080308F4 @ =gUnknown_080D7178
	lsls r4, r1, #1
	adds r4, r4, r1
	lsls r4, r4, #1
	adds r0, r4, r5
	ldrh r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	adds r0, r5, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	adds r0, r5, #4
	adds r4, r4, r0
	ldrh r0, [r4]
	mov r1, sl
	adds r1, #0x8c
	strb r0, [r1]
	ldr r0, _080308F0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	bne _080308F8
	ldrh r0, [r5, #0x38]
	strh r0, [r7, #0xa]
	ldrh r0, [r5, #0x3a]
	b _08030906
	.align 2, 0
_080308F0: .4byte gUnknown_030055B4
_080308F4: .4byte gUnknown_080D7178
_080308F8:
	cmp r0, #0x1d
	bne _08030908
	ldrh r0, [r5, #0x3e]
	strh r0, [r7, #0xa]
	adds r0, r5, #0
	adds r0, #0x40
	ldrh r0, [r0]
_08030906:
	strb r0, [r1]
_08030908:
	movs r2, #0
	movs r1, #0
	movs r4, #0x80
	lsls r4, r4, #1
	strh r4, [r7, #0x1a]
	strh r1, [r7, #8]
	strh r1, [r7, #0x14]
	strh r1, [r7, #0x1c]
	adds r3, r7, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	adds r3, #1
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r7, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r1, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r5, #0
	movs r6, #0
	mov sb, r4
	ldr r3, _080309DC @ =gUnknown_080D71BA
	mov r8, r3
_08030944:
	lsls r4, r5, #1
	adds r4, r4, r5
	lsls r0, r4, #4
	adds r0, #0x9c
	mov r1, sl
	adds r7, r1, r0
	mov r2, sb
	strh r2, [r7, #0x16]
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r0, r0, #2
	adds r0, #0x4a
	strh r0, [r7, #0x18]
	lsls r4, r4, #1
	mov r3, r8
	adds r0, r4, r3
	ldrh r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	mov r0, r8
	adds r0, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldr r0, _080309E0 @ =gUnknown_080D71BE
	adds r4, r4, r0
	ldrh r1, [r4]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	mov r1, sb
	strh r1, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r2, #1
	rsbs r2, r2, #0
	adds r4, r2, #0
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	movs r3, #0
	strb r3, [r0]
	adds r0, r2, #0
	str r0, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08030944
	ldr r0, _080309E4 @ =gUnknown_030054A8
	ldrb r1, [r0]
	orrs r1, r4
	strb r1, [r0]
	ldr r0, _080309E8 @ =gUnknown_030055B4
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	bne _080309F0
	ldr r0, _080309EC @ =0x00000193
	bl m4aSongNumStart
	b _08030A2E
	.align 2, 0
_080309DC: .4byte gUnknown_080D71BA
_080309E0: .4byte gUnknown_080D71BE
_080309E4: .4byte gUnknown_030054A8
_080309E8: .4byte gUnknown_030055B4
_080309EC: .4byte 0x00000193
_080309F0:
	cmp r0, #0x1d
	bne _080309FE
	movs r0, #0xca
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _08030A2E
_080309FE:
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	bne _08030A28
	movs r0, #0xc9
	lsls r0, r0, #1
	bl m4aSongNumStart
	ldr r0, _08030A24 @ =gUnknown_030059E0
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #9
	bne _08030A2E
	movs r0, #0x20
	strh r0, [r1]
	b _08030A2E
	.align 2, 0
_08030A24: .4byte gUnknown_030059E0
_08030A28:
	ldr r0, _08030A48 @ =0x00000191
	bl m4aSongNumStart
_08030A2E:
	movs r0, #0xb6
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08030A48: .4byte 0x00000191

	thumb_func_start sub_8030A4C
sub_8030A4C: @ 0x08030A4C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08030CF0 @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r2, r0
	ldr r0, _08030CF4 @ =IWRAM_START + 0x168
	adds r3, r2, r0
	ldr r1, [r3]
	mov r8, r1
	movs r4, #1
	add r8, r4
	ldr r1, _08030CF8 @ =IWRAM_START + 0x16C
	adds r0, r2, r1
	ldr r1, [r0]
	ldr r4, _08030CFC @ =0x00000135
	adds r0, r1, r4
	cmp r8, r0
	bls _08030A80
	movs r0, #0x9b
	lsls r0, r0, #1
	adds r0, r0, r1
	mov r8, r0
_08030A80:
	mov r1, r8
	str r1, [r3]
	ldr r0, _08030D00 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1d
	bne _08030A96
	ldr r1, _08030D04 @ =gBldRegs
	ldr r0, _08030D08 @ =0x00003FAF
	strh r0, [r1]
_08030A96:
	mov r3, r8
	cmp r3, #0x95
	bhi _08030A9E
	b _08030D3E
_08030A9E:
	ldr r4, _08030D0C @ =IWRAM_START + 0x160
	adds r1, r2, r4
	ldr r0, [r1]
	cmp r0, #0
	beq _08030AEE
	subs r0, #0x64
	str r0, [r1]
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	adds r0, r5, #0
	adds r0, #0x64
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030AEE
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030AEE
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030AEC
	movs r0, #0xff
_08030AEC:
	strb r0, [r1]
_08030AEE:
	movs r3, #0xb2
	lsls r3, r3, #1
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0
	beq _08030B40
	subs r0, #0x64
	str r0, [r1]
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	adds r0, r5, #0
	adds r0, #0x64
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030B40
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030B40
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r4, [r1]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030B3E
	movs r0, #0xff
_08030B3E:
	strb r0, [r1]
_08030B40:
	movs r0, #0xae
	lsls r0, r0, #1
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _08030B92
	subs r0, #0x64
	str r0, [r1]
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	adds r0, r5, #0
	adds r0, #0x64
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030B92
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030B92
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030B90
	movs r0, #0xff
_08030B90:
	strb r0, [r1]
_08030B92:
	ldr r0, _08030D00 @ =gUnknown_030055B4
	ldrb r0, [r0]
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08030BA2
	b _08030CB8
_08030BA2:
	ldr r0, _08030D20 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08030BB0
	b _08030CB8
_08030BB0:
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r3, #0xb0
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030BF8
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030BF8
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r4, [r1]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030BF6
	movs r0, #0xff
_08030BF6:
	strb r0, [r1]
_08030BF8:
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xb2
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030C40
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030C40
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030C3E
	movs r0, #0xff
_08030C3E:
	strb r0, [r1]
_08030C40:
	ldr r1, _08030D10 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r4, #0xae
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r0, [r0]
	adds r0, r5, r0
	str r0, [r1]
	ldr r4, _08030D14 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08030C88
	ldr r0, _08030D18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08030C88
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08030D1C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08030C86
	movs r0, #0xff
_08030C86:
	strb r0, [r1]
_08030C88:
	movs r3, #0xb0
	lsls r3, r3, #1
	adds r0, r7, r3
	movs r1, #0
	str r1, [r0]
	movs r4, #0xb2
	lsls r4, r4, #1
	adds r0, r7, r4
	str r1, [r0]
	movs r2, #0xae
	lsls r2, r2, #1
	adds r0, r7, r2
	str r1, [r0]
	adds r3, #0xc
	adds r0, r7, r3
	ldr r0, [r0]
	adds r0, #0x95
	cmp r8, r0
	bhs _08030CB8
	mov r8, r0
	adds r4, #4
	adds r0, r7, r4
	mov r1, r8
	str r1, [r0]
_08030CB8:
	ldr r0, _08030D24 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08030D3E
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08030CE8
	movs r3, #0xb2
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08030CE8
	movs r4, #0xae
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _08030D28
_08030CE8:
	movs r0, #0x8c
	bl m4aSongNumStart
	b _08030D3E
	.align 2, 0
_08030CF0: .4byte gCurTask
_08030CF4: .4byte IWRAM_START + 0x168
_08030CF8: .4byte IWRAM_START + 0x16C
_08030CFC: .4byte 0x00000135
_08030D00: .4byte gUnknown_030055B4
_08030D04: .4byte gBldRegs
_08030D08: .4byte 0x00003FAF
_08030D0C: .4byte IWRAM_START + 0x160
_08030D10: .4byte gUnknown_03005450
_08030D14: .4byte 0x0000C350
_08030D18: .4byte gUnknown_030054CC
_08030D1C: .4byte gUnknown_03005448
_08030D20: .4byte gPressedKeys
_08030D24: .4byte gUnknown_03005590
_08030D28:
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _08030D3E
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x8d
	bl m4aSongNumStart
_08030D3E:
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r2, _08030DA4 @ =0x00000135
	adds r0, r0, r2
	cmp r8, r0
	bhi _08030D50
	b _0803109C
_08030D50:
	ldr r4, _08030DA8 @ =gUnknown_030055B4
	ldrb r2, [r4]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1c
	bne _08030DD0
	ldr r0, _08030DAC @ =gMPlayInfo_BGM
	ldr r5, _08030DB0 @ =0x0000FFFF
	ldrh r4, [r0, #4]
	cmp r4, #0
	beq _08030D68
	b _0803106C
_08030D68:
	ldr r0, _08030DB4 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldr r1, _08030DB8 @ =gUnknown_030054F0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, #7
	adds r0, r0, r1
	movs r1, #0x1d
	strb r1, [r0]
	bl WriteSaveGame
	movs r0, #0
	adds r1, r5, #0
	bl sub_80029D0
	ldr r1, _08030DBC @ =gUnknown_03002AE4
	ldr r0, _08030DC0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08030DC4 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08030DC8 @ =gUnknown_03004D5C
	ldr r0, _08030DCC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_808E8B0
	b _080310E6
	.align 2, 0
_08030DA4: .4byte 0x00000135
_08030DA8: .4byte gUnknown_030055B4
_08030DAC: .4byte gMPlayInfo_BGM
_08030DB0: .4byte 0x0000FFFF
_08030DB4: .4byte gLoadedSaveGame
_08030DB8: .4byte gUnknown_030054F0
_08030DBC: .4byte gUnknown_03002AE4
_08030DC0: .4byte gUnknown_0300287C
_08030DC4: .4byte gUnknown_03005390
_08030DC8: .4byte gUnknown_03004D5C
_08030DCC: .4byte gUnknown_03002A84
_08030DD0:
	cmp r0, #0x1d
	bne _08030E40
	ldr r0, _08030E1C @ =gMPlayInfo_BGM
	ldr r3, _08030E20 @ =0x0000FFFF
	ldrh r5, [r0, #4]
	cmp r5, #0
	beq _08030DE0
	b _0803106C
_08030DE0:
	adds r2, #1
	strb r2, [r4]
	ldr r0, _08030E24 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldr r1, _08030E28 @ =gUnknown_030054F0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, #7
	adds r0, r0, r1
	strb r2, [r0]
	movs r0, #0
	adds r1, r3, #0
	bl sub_80029D0
	ldr r1, _08030E2C @ =gUnknown_03002AE4
	ldr r0, _08030E30 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08030E34 @ =gUnknown_03005390
	strb r5, [r0]
	ldr r1, _08030E38 @ =gUnknown_03004D5C
	ldr r0, _08030E3C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_808E8B0
_08030E16:
	bl WriteSaveGame
	b _080310E6
	.align 2, 0
_08030E1C: .4byte gMPlayInfo_BGM
_08030E20: .4byte 0x0000FFFF
_08030E24: .4byte gLoadedSaveGame
_08030E28: .4byte gUnknown_030054F0
_08030E2C: .4byte gUnknown_03002AE4
_08030E30: .4byte gUnknown_0300287C
_08030E34: .4byte gUnknown_03005390
_08030E38: .4byte gUnknown_03004D5C
_08030E3C: .4byte gUnknown_03002A84
_08030E40:
	adds r0, r7, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _08030E50
	b _0803106C
_08030E50:
	ldr r6, _08030ED0 @ =gBldRegs
	movs r3, #0
	mov r8, r3
	movs r7, #0x10
	strh r7, [r6, #4]
	ldr r5, _08030ED4 @ =gUnknown_030059E0
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	str r0, [r5, #0x20]
	ldrb r1, [r4]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08030E72
	b _08030F74
_08030E72:
	ldr r1, _08030ED8 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08030EDC @ =gUnknown_03002AE4
	ldr r0, _08030EE0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08030EE4 @ =gUnknown_03005390
	movs r7, #0
	mov r1, r8
	strb r1, [r0]
	ldr r1, _08030EE8 @ =gUnknown_03004D5C
	ldr r0, _08030EEC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldrb r0, [r4]
	adds r5, r0, #1
	strb r5, [r4]
	movs r2, #0
	ldrsb r2, [r4, r2]
	ldr r6, _08030EF0 @ =gLoadedSaveGame
	ldr r0, [r6]
	ldr r3, _08030EF4 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r3, r1]
	adds r0, #7
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r2, r1
	ble _08030F6A
	strb r5, [r0]
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bne _08030F54
	movs r0, #0
	ldrsb r0, [r4, r0]
	subs r0, #1
	asrs r0, r0, #2
	cmp r0, #2
	beq _08030F10
	cmp r0, #2
	bgt _08030EF8
	cmp r0, #0
	beq _08030EFE
	b _08030F34
	.align 2, 0
_08030ED0: .4byte gBldRegs
_08030ED4: .4byte gUnknown_030059E0
_08030ED8: .4byte 0x0000FFFF
_08030EDC: .4byte gUnknown_03002AE4
_08030EE0: .4byte gUnknown_0300287C
_08030EE4: .4byte gUnknown_03005390
_08030EE8: .4byte gUnknown_03004D5C
_08030EEC: .4byte gUnknown_03002A84
_08030EF0: .4byte gLoadedSaveGame
_08030EF4: .4byte gUnknown_030054F0
_08030EF8:
	cmp r0, #4
	beq _08030F22
	b _08030F34
_08030EFE:
	ldr r0, [r6]
	ldrb r1, [r0, #0x13]
	movs r2, #2
	orrs r1, r2
	strb r1, [r0, #0x13]
	movs r0, #0
	bl sub_808E740
	b _08030E16
_08030F10:
	ldr r0, [r6]
	ldrb r1, [r0, #0x13]
	movs r2, #4
	orrs r1, r2
	strb r1, [r0, #0x13]
	movs r0, #2
	bl sub_808E740
	b _08030E16
_08030F22:
	ldr r0, [r6]
	ldrb r1, [r0, #0x13]
	movs r2, #8
	orrs r1, r2
	strb r1, [r0, #0x13]
	movs r0, #1
	bl sub_808E740
	b _08030E16
_08030F34:
	ldr r0, _08030F48 @ =gUnknown_030055B4
	ldrb r0, [r0]
	ldr r1, _08030F4C @ =gLoadedSaveGame
	ldr r1, [r1]
	ldr r2, _08030F50 @ =gUnknown_030054F0
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	b _08030F5C
	.align 2, 0
_08030F48: .4byte gUnknown_030055B4
_08030F4C: .4byte gLoadedSaveGame
_08030F50: .4byte gUnknown_030054F0
_08030F54:
	ldrb r0, [r4]
	ldr r1, [r6]
	movs r2, #0
	ldrsb r2, [r3, r2]
_08030F5C:
	adds r1, #7
	adds r1, r1, r2
	ldrb r1, [r1]
	movs r2, #1
	bl sub_80346C8
	b _08030E16
_08030F6A:
	ldrb r0, [r4]
	movs r2, #4
	bl sub_80346C8
	b _08030E16
_08030F74:
	adds r3, r1, #1
	strb r3, [r4]
	movs r2, #0
	ldrsb r2, [r4, r2]
	ldr r0, _08031000 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldr r1, _08031004 @ =gUnknown_030054F0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, #7
	adds r0, r0, r1
	ldrb r4, [r0]
	cmp r2, r4
	ble _08030F94
	strb r3, [r0]
_08030F94:
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _08031030
	ldr r0, _08031008 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _08031030
	ldr r1, _0803100C @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08031010 @ =gUnknown_03002AE4
	ldr r0, _08031014 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08031018 @ =gUnknown_03005390
	mov r1, r8
	strb r1, [r0]
	ldr r1, _0803101C @ =gUnknown_03004D5C
	ldr r0, _08031020 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r1, #0
	bl sub_806BA84
	ldr r2, _08031024 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _08031028 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r2]
	movs r0, #0xa0
	strh r0, [r2, #4]
	ldrh r0, [r2, #8]
	movs r1, #0x3f
	orrs r0, r1
	strh r0, [r2, #8]
	ldrh r0, [r2, #0xa]
	movs r1, #0x1f
	orrs r0, r1
	strh r0, [r2, #0xa]
	ldr r0, _0803102C @ =0x00003FBF
	strh r0, [r6]
	strh r7, [r6, #4]
	b _08030E16
	.align 2, 0
_08031000: .4byte gLoadedSaveGame
_08031004: .4byte gUnknown_030054F0
_08031008: .4byte gUnknown_030054F4
_0803100C: .4byte 0x0000FFFF
_08031010: .4byte gUnknown_03002AE4
_08031014: .4byte gUnknown_0300287C
_08031018: .4byte gUnknown_03005390
_0803101C: .4byte gUnknown_03004D5C
_08031020: .4byte gUnknown_03002A84
_08031024: .4byte gDispCnt
_08031028: .4byte gWinRegs
_0803102C: .4byte 0x00003FBF
_08031030:
	ldr r1, _08031054 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08031058 @ =gUnknown_03002AE4
	ldr r0, _0803105C @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _08031060 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08031064 @ =gUnknown_03004D5C
	ldr r0, _08031068 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_801A770
	b _08030E16
	.align 2, 0
_08031054: .4byte 0x0000FFFF
_08031058: .4byte gUnknown_03002AE4
_0803105C: .4byte gUnknown_0300287C
_08031060: .4byte gUnknown_03005390
_08031064: .4byte gUnknown_03004D5C
_08031068: .4byte gUnknown_03002A84
_0803106C:
	ldr r4, _08031094 @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x14
	ands r0, r1
	cmp r0, #0
	beq _0803109C
	ldr r0, _08031098 @ =gUnknown_030054F4
	ldrb r0, [r0]
	cmp r0, #6
	bls _0803109C
	bl sub_80313D0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r0, r1
	str r0, [r4, #0x20]
	b _080310E6
	.align 2, 0
_08031094: .4byte gUnknown_030059E0
_08031098: .4byte gUnknown_030054F4
_0803109C:
	bl sub_80310F0
	bl sub_8031314
	ldr r0, _080310D4 @ =gUnknown_030055B4
	ldrb r0, [r0]
	subs r0, #0x1c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080310E0
	movs r4, #0xb6
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xf5
	cmp r8, r0
	bls _080310D8
	mov r0, r8
	subs r0, #0xf5
	subs r0, r0, r1
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x10
	bl sub_8031138
	b _080310E6
	.align 2, 0
_080310D4: .4byte gUnknown_030055B4
_080310D8:
	movs r0, #0
	bl sub_8031138
	b _080310E6
_080310E0:
	movs r0, #0
	bl sub_8031138
_080310E6:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80310F0
sub_80310F0: @ 0x080310F0
	push {lr}
	ldr r0, _08031114 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	ldr r2, _08031118 @ =IWRAM_START + 0x168
	adds r0, r1, r2
	ldr r2, [r0]
	ldr r0, _0803111C @ =IWRAM_START + 0x12C
	adds r3, r1, r0
	cmp r2, #0xf
	bhi _08031120
	movs r0, #0x10
	subs r0, r0, r2
	lsls r1, r0, #4
	subs r1, r1, r0
	strh r1, [r3, #0x16]
	movs r0, #0x64
	b _08031130
	.align 2, 0
_08031114: .4byte gCurTask
_08031118: .4byte IWRAM_START + 0x168
_0803111C: .4byte IWRAM_START + 0x12C
_08031120:
	cmp r2, #0x17
	bhi _08031128
	movs r0, #0x64
	b _08031130
_08031128:
	cmp r2, #0x1c
	bhi _08031132
	ldrh r0, [r3, #0x18]
	subs r0, #7
_08031130:
	strh r0, [r3, #0x18]
_08031132:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8031138
sub_8031138: @ 0x08031138
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r0, _0803118C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sb, r0
	ldr r2, _08031190 @ =IWRAM_START + 0x168
	adds r0, r1, r2
	ldr r7, [r0]
	cmp r7, #0x17
	bhi _08031198
	ldr r0, _08031194 @ =IWRAM_START + 0x12C
	adds r5, r1, r0
	movs r0, #0
	cmp r7, #0x10
	bhi _08031174
	movs r1, #0x10
	subs r1, r1, r7
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
_08031174:
	movs r6, #0
	mov r1, r8
	subs r4, r0, r1
_0803117A:
	strh r4, [r5, #0x16]
	adds r0, r5, #0
	bl sub_80051E8
	adds r4, #0x20
	adds r6, #1
	cmp r6, #7
	bls _0803117A
	b _080311B2
	.align 2, 0
_0803118C: .4byte gCurTask
_08031190: .4byte IWRAM_START + 0x168
_08031194: .4byte IWRAM_START + 0x12C
_08031198:
	ldr r2, _08031214 @ =IWRAM_START + 0x12C
	adds r5, r1, r2
	movs r6, #0
	mov r0, r8
	rsbs r4, r0, #0
_080311A2:
	strh r4, [r5, #0x16]
	adds r0, r5, #0
	bl sub_80051E8
	adds r4, #0x20
	adds r6, #1
	cmp r6, #7
	bls _080311A2
_080311B2:
	cmp r7, #0x1c
	bls _080311F4
	ldr r0, _08031218 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	movs r1, #3
	cmp r0, #2
	bne _080311C6
	movs r1, #2
_080311C6:
	movs r6, #0
	cmp r6, r1
	bhs _080311F4
	mov r4, sb
	adds r4, #0x22
	mov r0, sb
	adds r0, #0xc
_080311D4:
	adds r5, r0, #0
	ldrh r0, [r4]
	mov r2, r8
	subs r0, r0, r2
	strh r0, [r4]
	adds r0, r5, #0
	str r1, [sp]
	bl sub_80051E8
	adds r4, #0x30
	adds r0, r5, #0
	adds r0, #0x30
	adds r6, #1
	ldr r1, [sp]
	cmp r6, r1
	blo _080311D4
_080311F4:
	cmp r7, #0x26
	bls _0803124C
	mov r5, sb
	adds r5, #0x9c
	cmp r7, #0x37
	bhi _0803121C
	adds r0, r7, #0
	subs r0, #0x27
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r0, #0xf0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _0803121E
	.align 2, 0
_08031214: .4byte IWRAM_START + 0x12C
_08031218: .4byte gUnknown_030055B4
_0803121C:
	movs r4, #0x30
_0803121E:
	mov r1, r8
	subs r0, r4, r1
	strh r0, [r5, #0x16]
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xae
	lsls r0, r0, #1
	add r0, sb
	ldr r0, [r0]
	mov r1, r8
	lsls r2, r1, #0x10
	asrs r2, r2, #0x10
	subs r2, #0x90
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x5a
	movs r3, #0
	bl sub_802D170
_0803124C:
	cmp r7, #0x30
	bls _0803129C
	mov r5, sb
	adds r5, #0xcc
	cmp r7, #0x41
	bhi _0803126C
	adds r0, r7, #0
	subs r0, #0x31
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r0, #0xf0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _0803126E
_0803126C:
	movs r4, #0x30
_0803126E:
	mov r2, r8
	subs r0, r4, r2
	strh r0, [r5, #0x16]
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xb0
	lsls r0, r0, #1
	add r0, sb
	ldr r0, [r0]
	mov r1, r8
	lsls r2, r1, #0x10
	asrs r2, r2, #0x10
	subs r2, #0x90
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x6e
	movs r3, #0
	bl sub_802D170
_0803129C:
	ldr r0, _080312D0 @ =gUnknown_030055B4
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	beq _08031304
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1b
	bgt _08031304
	cmp r7, #0x3a
	bls _08031304
	mov r5, sb
	adds r5, #0xfc
	cmp r7, #0x4b
	bhi _080312D4
	adds r0, r7, #0
	subs r0, #0x3b
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r0, #0xf0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _080312D6
	.align 2, 0
_080312D0: .4byte gUnknown_030055B4
_080312D4:
	movs r4, #0x30
_080312D6:
	mov r2, r8
	subs r0, r4, r2
	strh r0, [r5, #0x16]
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xb2
	lsls r0, r0, #1
	add r0, sb
	ldr r0, [r0]
	mov r1, r8
	lsls r2, r1, #0x10
	asrs r2, r2, #0x10
	subs r2, #0x90
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x82
	movs r3, #0
	bl sub_802D170
_08031304:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8031314
sub_8031314: @ 0x08031314
	push {r4, r5, lr}
	ldr r0, _08031340 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	ldr r1, _08031344 @ =IWRAM_START + 0x168
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0x1c
	bls _08031366
	cmp r0, #0x2c
	bhi _08031348
	subs r0, #0x1d
	lsls r1, r0, #4
	subs r1, r1, r0
	movs r0, #0xf0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _0803134A
	.align 2, 0
_08031340: .4byte gCurTask
_08031344: .4byte IWRAM_START + 0x168
_08031348:
	movs r0, #3
_0803134A:
	movs r3, #0
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	ldr r2, _0803136C @ =gUnknown_080D71CC
	adds r1, r5, #0
	adds r1, #0xc
_08031356:
	ldrh r0, [r2]
	adds r0, r4, r0
	strh r0, [r1, #0x16]
	adds r2, #2
	adds r1, #0x30
	adds r3, #1
	cmp r3, #2
	bls _08031356
_08031366:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803136C: .4byte gUnknown_080D71CC

	thumb_func_start sub_8031370
sub_8031370: @ 0x08031370
	push {r4, r5, lr}
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r1, _080313C0 @ =IWRAM_START + 0x130
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080313B8
	bl sub_8007CF0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #0x70]
	bl sub_8007CF0
	ldr r1, _080313C4 @ =IWRAM_START + 0xA0
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080313C8 @ =IWRAM_START + 0xD0
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080313CC @ =IWRAM_START + 0x100
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
_080313B8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080313C0: .4byte IWRAM_START + 0x130
_080313C4: .4byte IWRAM_START + 0xA0
_080313C8: .4byte IWRAM_START + 0xD0
_080313CC: .4byte IWRAM_START + 0x100

	thumb_func_start sub_80313D0
sub_80313D0: @ 0x080313D0
	push {r4, r5, r6, lr}
	ldr r0, _08031428 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r0, _0803142C @ =IWRAM_START + 0x130
	adds r6, r5, r0
	ldr r0, [r6]
	cmp r0, #0
	beq _08031420
	bl sub_8007CF0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #0x70]
	bl sub_8007CF0
	ldr r1, _08031430 @ =IWRAM_START + 0xA0
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08031434 @ =IWRAM_START + 0xD0
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08031438 @ =IWRAM_START + 0x100
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r0, #0
	str r0, [r6]
_08031420:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08031428: .4byte gCurTask
_0803142C: .4byte IWRAM_START + 0x130
_08031430: .4byte IWRAM_START + 0xA0
_08031434: .4byte IWRAM_START + 0xD0
_08031438: .4byte IWRAM_START + 0x100

	thumb_func_start sub_803143C
sub_803143C: @ 0x0803143C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r6, r5, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	movs r7, #0
	ldr r0, _0803157C @ =gLoadedSaveGame
	mov r8, r0
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0803146A
	movs r1, #0
_0803146A:
	lsls r0, r1, #0x18
	movs r1, #1
	str r1, [sp, #8]
	str r0, [sp, #0x74]
	cmp r0, #0
	bgt _0803147A
	movs r2, #0
	str r2, [sp, #8]
_0803147A:
	str r7, [sp, #4]
	ldr r0, _08031580 @ =0x040000D4
	add r1, sp, #4
	str r1, [r0]
	ldr r1, _08031584 @ =gMultiSioSend
	str r1, [r0, #4]
	ldr r1, _08031588 @ =0x85000005
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	str r7, [sp, #4]
	add r2, sp, #4
	str r2, [r0]
	ldr r1, _0803158C @ =gMultiSioRecv
	str r1, [r0, #4]
	ldr r1, _08031590 @ =0x85000014
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	ldr r0, _08031594 @ =gUnknown_030054D4
	strb r7, [r0, #3]
	strb r7, [r0, #2]
	strb r7, [r0, #1]
	strb r7, [r0]
	movs r0, #3
	bl m4aSongNumStart
	ldr r1, _08031598 @ =gDispCnt
	movs r2, #0xba
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _0803159C @ =gBgCntRegs
	movs r4, #0
	ldr r0, _080315A0 @ =0x00001507
	strh r0, [r1, #4]
	ldr r0, _080315A4 @ =0x0000160E
	strh r0, [r1, #2]
	ldr r0, _080315A8 @ =0x00001403
	strh r0, [r1]
	ldr r0, _080315AC @ =gBgScrollRegs
	strh r7, [r0]
	strh r7, [r0, #2]
	strh r7, [r0, #4]
	strh r7, [r0, #6]
	ldr r0, _080315B0 @ =sub_8031C64
	movs r1, #0xf8
	lsls r1, r1, #2
	movs r2, #0x82
	lsls r2, r2, #7
	ldr r3, _080315B4 @ =sub_8034638
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r3
	mov sl, r0
	mov r1, r8
	ldr r0, [r1]
	ldrb r1, [r0, #0x13]
	ldr r2, _080315B8 @ =IWRAM_START + 0x3CA
	adds r0, r3, r2
	strb r1, [r0]
	ldr r1, _080315BC @ =IWRAM_START + 0x3C1
	adds r0, r3, r1
	strb r5, [r0]
	subs r2, #6
	adds r1, r3, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _080315C0 @ =IWRAM_START + 0x3C5
	adds r0, r3, r1
	strb r4, [r0]
	adds r2, #2
	adds r0, r3, r2
	strb r4, [r0]
	adds r1, #2
	adds r0, r3, r1
	strb r4, [r0]
	adds r2, #0xe
	adds r0, r3, r2
	str r7, [r0]
	adds r1, #7
	adds r0, r3, r1
	movs r1, #0xa6
	strh r1, [r0]
	subs r2, #4
	adds r0, r3, r2
	strh r1, [r0]
	ldr r1, _080315C4 @ =IWRAM_START + 0x3C8
	adds r0, r3, r1
	strb r4, [r0]
	adds r2, #0xc
	adds r0, r3, r2
	str r7, [r0]
	adds r1, #1
	adds r0, r3, r1
	strb r4, [r0]
	subs r2, #0x11
	adds r0, r3, r2
	strb r4, [r0]
	mov r0, sb
	cmp r0, #0
	beq _080315D4
	adds r1, #0xf
	adds r2, r3, r1
	movs r0, #0x66
	adds r1, r5, #0
	muls r1, r0, r1
	adds r0, #0xa2
	subs r0, r0, r1
	ldr r1, _080315C8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #8
	adds r0, #2
	str r0, [r2]
	ldr r2, _080315CC @ =IWRAM_START + 0x3C3
	adds r1, r3, r2
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080315D0 @ =IWRAM_START + 0x3C0
	adds r1, r3, r0
	strb r5, [r1]
	cmp r5, #4
	bls _08031602
	movs r0, #4
	b _08031600
	.align 2, 0
_0803157C: .4byte gLoadedSaveGame
_08031580: .4byte 0x040000D4
_08031584: .4byte gMultiSioSend
_08031588: .4byte 0x85000005
_0803158C: .4byte gMultiSioRecv
_08031590: .4byte 0x85000014
_08031594: .4byte gUnknown_030054D4
_08031598: .4byte gDispCnt
_0803159C: .4byte gBgCntRegs
_080315A0: .4byte 0x00001507
_080315A4: .4byte 0x0000160E
_080315A8: .4byte 0x00001403
_080315AC: .4byte gBgScrollRegs
_080315B0: .4byte sub_8031C64
_080315B4: .4byte sub_8034638
_080315B8: .4byte IWRAM_START + 0x3CA
_080315BC: .4byte IWRAM_START + 0x3C1
_080315C0: .4byte IWRAM_START + 0x3C5
_080315C4: .4byte IWRAM_START + 0x3C8
_080315C8: .4byte 0x000003FF
_080315CC: .4byte IWRAM_START + 0x3C3
_080315D0: .4byte IWRAM_START + 0x3C0
_080315D4:
	ldr r1, _080319B8 @ =IWRAM_START + 0x3D8
	adds r2, r3, r1
	movs r0, #0x66
	adds r1, r6, #0
	muls r1, r0, r1
	movs r0, #0xb7
	lsls r0, r0, #1
	subs r0, r0, r1
	ldr r1, _080319BC @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #8
	adds r0, #4
	str r0, [r2]
	ldr r2, _080319C0 @ =IWRAM_START + 0x3C3
	adds r0, r3, r2
	strb r4, [r0]
	ldr r0, _080319C4 @ =IWRAM_START + 0x3C0
	adds r1, r3, r0
	strb r6, [r1]
	cmp r6, #3
	bls _08031602
	movs r0, #3
_08031600:
	strb r0, [r1]
_08031602:
	movs r7, #0
	movs r4, #0
	mov r1, sl
	strh r4, [r1]
	strh r4, [r1, #4]
	movs r2, #2
	mov r8, r2
	mov r0, r8
	strh r0, [r1, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r1, #6]
	movs r0, #0xff
	strh r0, [r1, #8]
	strh r4, [r1, #0xa]
	mov r0, sl
	bl sub_802D4CC
	mov r1, sl
	adds r1, #0x8c
	ldr r0, _080319C8 @ =0x0600C000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _080319CC @ =0x0600B000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x63
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r0, #0x1e
	strh r0, [r1, #0x26]
	movs r0, #0x14
	strh r0, [r1, #0x28]
	mov r0, sl
	adds r0, #0xb6
	strb r7, [r0]
	movs r0, #1
	strh r0, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	mov r1, sl
	adds r1, #0xc
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _080319D0 @ =0x0600A000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	ldr r0, _080319D4 @ =0x00000175
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r5, #0x20
	strh r5, [r1, #0x26]
	strh r5, [r1, #0x28]
	mov r0, sl
	adds r0, #0x36
	strb r7, [r0]
	strh r4, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	mov r1, sl
	adds r1, #0x4c
	ldr r0, _080319D8 @ =0x06004000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _080319DC @ =0x0600A800
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0xbb
	lsls r0, r0, #1
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	strh r5, [r1, #0x26]
	strh r5, [r1, #0x28]
	mov r0, sl
	adds r0, #0x76
	strb r7, [r0]
	mov r2, r8
	strh r2, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	movs r5, #0
	movs r0, #0xb9
	lsls r0, r0, #2
	add r0, sl
	str r0, [sp, #0x88]
	ldr r1, _080319E0 @ =0x000002E5
	add r1, sl
	str r1, [sp, #0x8c]
	ldr r2, _080319E4 @ =0x000002E6
	add r2, sl
	str r2, [sp, #0x90]
	ldr r0, _080319E8 @ =0x000002E9
	add r0, sl
	str r0, [sp, #0x94]
	ldr r1, [sp, #8]
	lsls r1, r1, #0x18
	str r1, [sp, #0x70]
	movs r2, #0xa6
	lsls r2, r2, #1
	add r2, sl
	str r2, [sp, #0x60]
	ldr r0, _080319EC @ =0x0000014D
	add r0, sl
	str r0, [sp, #0x64]
	movs r1, #0xa7
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x68]
	ldr r2, _080319F0 @ =0x00000151
	add r2, sl
	str r2, [sp, #0x6c]
	movs r0, #0xbe
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0x78]
	ldr r1, _080319F4 @ =0x0000017D
	add r1, sl
	str r1, [sp, #0x7c]
	movs r2, #0xbf
	lsls r2, r2, #1
	add r2, sl
	str r2, [sp, #0x80]
	ldr r0, _080319F8 @ =0x00000181
	add r0, sl
	str r0, [sp, #0x84]
	movs r1, #0xdc
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x98]
	ldr r2, _080319FC @ =0x000001B9
	add r2, sl
	str r2, [sp, #0x9c]
	movs r0, #0xdd
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0xa0]
	ldr r1, _08031A00 @ =0x000001BD
	add r1, sl
	str r1, [sp, #0xa4]
	mov r2, sl
	adds r2, #0xcc
	str r2, [sp, #0x20]
	mov r0, sl
	adds r0, #0xec
	str r0, [sp, #0x24]
	mov r1, sl
	adds r1, #0xed
	str r1, [sp, #0x28]
	adds r2, #0x22
	str r2, [sp, #0x2c]
	adds r0, #5
	str r0, [sp, #0x30]
	movs r1, #0xc8
	lsls r1, r1, #2
	add r1, sl
	str r1, [sp, #0xa8]
	ldr r2, _08031A04 @ =0x00000321
	add r2, sl
	str r2, [sp, #0xac]
	ldr r0, _08031A08 @ =0x00000322
	add r0, sl
	str r0, [sp, #0xb0]
	ldr r1, _08031A0C @ =0x00000325
	add r1, sl
	str r1, [sp, #0xb4]
	movs r2, #0xd4
	lsls r2, r2, #2
	add r2, sl
	str r2, [sp, #0x10]
	ldr r0, _08031A10 @ =0x00000351
	add r0, sl
	str r0, [sp, #0x14]
	ldr r1, _08031A14 @ =0x00000352
	add r1, sl
	str r1, [sp, #0x18]
	ldr r2, _08031A18 @ =0x00000355
	add r2, sl
	str r2, [sp, #0x1c]
	movs r0, #0xe0
	lsls r0, r0, #2
	add r0, sl
	str r0, [sp, #0x34]
	ldr r1, _08031A1C @ =0x00000381
	add r1, sl
	str r1, [sp, #0x38]
	ldr r2, _08031A20 @ =0x00000382
	add r2, sl
	str r2, [sp, #0x3c]
	ldr r0, _08031A24 @ =0x00000385
	add r0, sl
	str r0, [sp, #0x40]
	movs r1, #0xec
	lsls r1, r1, #2
	add r1, sl
	str r1, [sp, #0x50]
	ldr r2, _08031A28 @ =0x000003B1
	add r2, sl
	str r2, [sp, #0x54]
	ldr r0, _08031A2C @ =0x000003B2
	add r0, sl
	str r0, [sp, #0x58]
	ldr r1, _08031A30 @ =0x000003B5
	add r1, sl
	str r1, [sp, #0x5c]
	mov r2, sl
	adds r2, #0xfc
	str r2, [sp, #0x44]
	movs r0, #0x8e
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0x48]
	ldr r1, _08031A34 @ =0x0000011D
	add r1, sl
	str r1, [sp, #0x4c]
	movs r2, #0
	mov sb, r2
	ldr r0, _08031A38 @ =0x000002E1
	mov r8, r0
_080317D8:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r2, sl
	adds r7, r2, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	mov r0, r8
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r5, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r2, #1
	rsbs r2, r2, #0
	adds r6, r2, #0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	mov r2, sb
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _080317D8
	movs r7, #0xb1
	lsls r7, r7, #2
	add r7, sl
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08031A38 @ =0x000002E1
	strh r0, [r7, #0xa]
	movs r0, #5
	ldr r1, [sp, #0x88]
	strb r0, [r1]
	movs r0, #0xc0
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r2, [sp, #0x8c]
	ldrb r0, [r2]
	orrs r0, r6
	strb r0, [r2]
	movs r1, #0x10
	ldr r0, [sp, #0x90]
	strb r1, [r0]
	ldr r2, [sp, #0x94]
	strb r5, [r2]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0x96
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r3, _08031A3C @ =gUnknown_080D722C
	movs r1, #0xf0
	lsls r1, r1, #2
	add r1, sl
	str r1, [sp, #0xc]
	ldrb r0, [r1]
	ldr r1, [sp, #0x70]
	asrs r2, r1, #0x18
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	ldr r1, [sp, #0x60]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x64]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x68]
	strb r0, [r2]
	ldr r1, [sp, #0x6c]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xae
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _08031A40 @ =gUnknown_080D71D4
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [sp, #0x78]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x7c]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x80]
	strb r0, [r2]
	ldr r1, [sp, #0x84]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xcc
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _08031A44 @ =gUnknown_080D71EC
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [sp, #0x98]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x9c]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0xa0]
	strb r0, [r2]
	ldr r1, [sp, #0xa4]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r7, [sp, #0x20]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x36
	b _08031A48
	.align 2, 0
_080319B8: .4byte IWRAM_START + 0x3D8
_080319BC: .4byte 0x000003FF
_080319C0: .4byte IWRAM_START + 0x3C3
_080319C4: .4byte IWRAM_START + 0x3C0
_080319C8: .4byte 0x0600C000
_080319CC: .4byte 0x0600B000
_080319D0: .4byte 0x0600A000
_080319D4: .4byte 0x00000175
_080319D8: .4byte 0x06004000
_080319DC: .4byte 0x0600A800
_080319E0: .4byte 0x000002E5
_080319E4: .4byte 0x000002E6
_080319E8: .4byte 0x000002E9
_080319EC: .4byte 0x0000014D
_080319F0: .4byte 0x00000151
_080319F4: .4byte 0x0000017D
_080319F8: .4byte 0x00000181
_080319FC: .4byte 0x000001B9
_08031A00: .4byte 0x000001BD
_08031A04: .4byte 0x00000321
_08031A08: .4byte 0x00000322
_08031A0C: .4byte 0x00000325
_08031A10: .4byte 0x00000351
_08031A14: .4byte 0x00000352
_08031A18: .4byte 0x00000355
_08031A1C: .4byte 0x00000381
_08031A20: .4byte 0x00000382
_08031A24: .4byte 0x00000385
_08031A28: .4byte 0x000003B1
_08031A2C: .4byte 0x000003B2
_08031A30: .4byte 0x000003B5
_08031A34: .4byte 0x0000011D
_08031A38: .4byte 0x000002E1
_08031A3C: .4byte gUnknown_080D722C
_08031A40: .4byte gUnknown_080D71D4
_08031A44: .4byte gUnknown_080D71EC
_08031A48:
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _08031C40 @ =gUnknown_080D725C
	ldr r0, [sp, #0x74]
	asrs r2, r0, #0x16
	adds r0, r2, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	adds r1, #2
	adds r2, r2, r1
	ldrh r0, [r2]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x28]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x2c]
	strb r0, [r2]
	ldr r1, [sp, #0x30]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xc0
	lsls r7, r7, #2
	add r7, sl
	movs r0, #0x11
	mov r8, r0
	mov r1, r8
	strh r1, [r7, #0x16]
	movs r0, #0x12
	strh r0, [r7, #0x18]
	movs r0, #0x18
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r2, _08031C44 @ =0x000002E2
	mov sb, r2
	mov r0, sb
	strh r0, [r7, #0xa]
	ldr r1, [sp, #0xa8]
	strb r5, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0xac]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0xb0]
	strb r0, [r2]
	ldr r1, [sp, #0xb4]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xcc
	lsls r7, r7, #2
	add r7, sl
	mov r0, r8
	strh r0, [r7, #0x16]
	movs r0, #0x8e
	strh r0, [r7, #0x18]
	movs r0, #0x18
	bl sub_8007C10
	str r0, [r7, #4]
	mov r1, sb
	strh r1, [r7, #0xa]
	ldr r2, [sp, #0x10]
	strb r5, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x14]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x18]
	strb r0, [r2]
	ldr r1, [sp, #0x1c]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #4
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xd8
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r0, _08031C48 @ =0x06010400
	str r0, [r7, #4]
	movs r0, #0xb8
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	movs r0, #0xa
	ldr r1, [sp, #0x34]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x38]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x3c]
	strb r0, [r2]
	ldr r1, [sp, #0x40]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0xe4
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r0, _08031C4C @ =0x06012580
	str r0, [r7, #4]
	ldr r0, _08031C50 @ =0x000002E6
	strh r0, [r7, #0xa]
	ldr r0, [sp, #0x50]
	strb r5, [r0]
	movs r0, #0x40
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x54]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x58]
	strb r0, [r2]
	ldr r1, [sp, #0x5c]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r7, [sp, #0x44]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r0, _08031C54 @ =0x06011000
	str r0, [r7, #4]
	ldr r1, _08031C58 @ =gUnknown_080D7204
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldrb r0, [r2]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [sp, #0x48]
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x4c]
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r2, #0x10
	strb r2, [r0]
	adds r0, #3
	strb r4, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r5, #0
	ldr r2, _08031C5C @ =gObjPalette
	movs r1, #0
_08031C10:
	adds r0, r5, #0
	adds r0, #0xf0
	lsls r0, r0, #1
	adds r0, r0, r2
	strh r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _08031C10
	ldr r0, _08031C60 @ =gFlags
	ldr r1, [r0]
	movs r2, #2
	orrs r1, r2
	str r1, [r0]
	add sp, #0xb8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08031C40: .4byte gUnknown_080D725C
_08031C44: .4byte 0x000002E2
_08031C48: .4byte 0x06010400
_08031C4C: .4byte 0x06012580
_08031C50: .4byte 0x000002E6
_08031C54: .4byte 0x06011000
_08031C58: .4byte gUnknown_080D7204
_08031C5C: .4byte gObjPalette
_08031C60: .4byte gFlags

	thumb_func_start sub_8031C64
sub_8031C64: @ 0x08031C64
	push {r4, lr}
	ldr r0, _08031CC0 @ =gCurTask
	ldr r2, [r0]
	ldrh r4, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r4, r0
	ldr r0, _08031CC4 @ =IWRAM_START + 0x3D4
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x17
	bls _08031C88
	movs r0, #0
	str r0, [r1]
	ldr r0, _08031CC8 @ =sub_8031CD8
	str r0, [r2, #8]
_08031C88:
	adds r0, r3, #0
	bl sub_802D4CC
	ldr r1, _08031CCC @ =IWRAM_START + 0x300
	adds r0, r4, r1
	bl sub_80051E8
	ldr r1, _08031CD0 @ =IWRAM_START + 0x330
	adds r0, r4, r1
	bl sub_80051E8
	ldr r1, _08031CD4 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08031CC0: .4byte gCurTask
_08031CC4: .4byte IWRAM_START + 0x3D4
_08031CC8: .4byte sub_8031CD8
_08031CCC: .4byte IWRAM_START + 0x300
_08031CD0: .4byte IWRAM_START + 0x330
_08031CD4: .4byte gBgScrollRegs

	thumb_func_start sub_8031CD8
sub_8031CD8: @ 0x08031CD8
	push {r4, r5, r6, lr}
	ldr r1, _08031D3C @ =gCurTask
	ldr r0, [r1]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	ldr r2, _08031D40 @ =IWRAM_START + 0x3D4
	adds r0, r4, r2
	ldr r3, [r0]
	adds r3, #1
	str r3, [r0]
	adds r6, r1, #0
	cmp r3, #0x3c
	bhi _08031D0A
	ldr r0, _08031D44 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08031D8C
	ldr r0, _08031D48 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08031D8C
_08031D0A:
	ldr r3, _08031D4C @ =IWRAM_START + 0x3C5
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08031D50 @ =IWRAM_START + 0x3D8
	adds r2, r4, r0
	ldr r1, _08031D54 @ =IWRAM_START + 0x3C0
	adds r0, r4, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r1, r0, #4
	adds r0, r0, r1
	lsls r0, r0, #9
	rsbs r1, r0, #0
	str r1, [r2]
	subs r3, #2
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08031D58
	adds r0, r1, #2
	b _08031D5A
	.align 2, 0
_08031D3C: .4byte gCurTask
_08031D40: .4byte IWRAM_START + 0x3D4
_08031D44: .4byte gPressedKeys
_08031D48: .4byte gUnknown_030054CC
_08031D4C: .4byte IWRAM_START + 0x3C5
_08031D50: .4byte IWRAM_START + 0x3D8
_08031D54: .4byte IWRAM_START + 0x3C0
_08031D58:
	adds r0, r1, #4
_08031D5A:
	str r0, [r2]
	movs r0, #0xf6
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r0, [r2]
	ldr r1, _08031D84 @ =0x0003FFFF
	ands r0, r1
	str r0, [r2]
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	str r0, [r1]
	ldr r1, [r6]
	ldr r0, _08031D88 @ =sub_8031E10
	str r0, [r1, #8]
	adds r0, r5, #0
	bl sub_8033078
	b _08031DE6
	.align 2, 0
_08031D84: .4byte 0x0003FFFF
_08031D88: .4byte sub_8031E10
_08031D8C:
	ldr r2, _08031DC4 @ =gUnknown_08097AA4
	adds r0, r3, #4
	lsls r0, r0, #2
	ldr r1, _08031DC8 @ =0x000003FF
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #3
	bl Div
	movs r3, #0xf6
	lsls r3, r3, #2
	adds r2, r5, r3
	ldr r1, [r2]
	subs r1, r1, r0
	str r1, [r2]
	subs r3, #0x15
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08031DCC
	adds r0, r1, #6
	b _08031DD0
	.align 2, 0
_08031DC4: .4byte gUnknown_08097AA4
_08031DC8: .4byte 0x000003FF
_08031DCC:
	adds r0, r1, #0
	adds r0, #0xc
_08031DD0:
	str r0, [r2]
	movs r1, #0xf6
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	ldr r2, _08031E08 @ =0x0003FFFF
	ands r1, r2
	str r1, [r0]
	adds r0, r5, #0
	bl sub_8032E38
_08031DE6:
	ldr r1, _08031E0C @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08031E08: .4byte 0x0003FFFF
_08031E0C: .4byte gBgScrollRegs

	thumb_func_start sub_8031E10
sub_8031E10: @ 0x08031E10
	push {r4, r5, lr}
	ldr r5, _08031E4C @ =gCurTask
	ldr r0, [r5]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	ldr r0, _08031E50 @ =IWRAM_START + 0x3D4
	adds r3, r2, r0
	ldr r1, [r3]
	adds r1, #1
	str r1, [r3]
	subs r0, #0xf
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	cmp r1, #0xf
	bls _08031E58
	adds r0, #1
	strb r0, [r2]
	movs r0, #0
	str r0, [r3]
	ldr r1, [r5]
	ldr r0, _08031E54 @ =sub_8031E84
	str r0, [r1, #8]
	adds r0, r4, #0
	bl sub_803353C
	b _08031E5E
	.align 2, 0
_08031E4C: .4byte gCurTask
_08031E50: .4byte IWRAM_START + 0x3D4
_08031E54: .4byte sub_8031E84
_08031E58:
	adds r0, r4, #0
	bl sub_8033078
_08031E5E:
	ldr r1, _08031E80 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08031E80: .4byte gBgScrollRegs

	thumb_func_start sub_8031E84
sub_8031E84: @ 0x08031E84
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r3, _08031F04 @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r0, _08031F08 @ =IWRAM_START + 0x3C5
	adds r1, r1, r0
	ldrb r2, [r1]
	movs r0, #0x3f
	ands r0, r2
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08031F0C @ =gUnknown_030054CC
	ldrb r1, [r0]
	mov ip, r3
	mov r8, r0
	cmp r1, #2
	bhi _08031EB2
	b _08031FB0
_08031EB2:
	movs r3, #0
	ldr r0, _08031F10 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r7, r0, #0
	cmp r1, #0
	beq _08031F4A
	movs r6, #1
	ldr r2, _08031F14 @ =gUnknown_030054D4
_08031EC6:
	ldr r1, _08031F18 @ =gMultiSioStatusFlags
	adds r0, r6, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _08031F34
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _08031F38
	movs r0, #0
	ldr r1, _08031F1C @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _08031F20 @ =gUnknown_03002AE4
	ldr r0, _08031F24 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08031F28 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08031F2C @ =gUnknown_03004D5C
	ldr r0, _08031F30 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _080324E8
	.align 2, 0
_08031F04: .4byte gCurTask
_08031F08: .4byte IWRAM_START + 0x3C5
_08031F0C: .4byte gUnknown_030054CC
_08031F10: .4byte gUnknown_030055B8
_08031F14: .4byte gUnknown_030054D4
_08031F18: .4byte gMultiSioStatusFlags
_08031F1C: .4byte 0x0000FFFF
_08031F20: .4byte gUnknown_03002AE4
_08031F24: .4byte gUnknown_0300287C
_08031F28: .4byte gUnknown_03005390
_08031F2C: .4byte gUnknown_03004D5C
_08031F30: .4byte gUnknown_03002A84
_08031F34:
	movs r0, #0
	strb r0, [r2]
_08031F38:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _08031F4A
	ldrb r0, [r7]
	asrs r0, r3
	ands r0, r6
	cmp r0, #0
	bne _08031EC6
_08031F4A:
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #2
	bls _08031FB0
	movs r2, #0xf7
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	str r0, [r1]
	movs r3, #0
	ldr r4, _08031FA4 @ =0x00004020
	mov ip, r4
	adds r6, r1, #0
_08031F64:
	ldr r0, _08031FA8 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r3, r0
	beq _08031F98
	ldrb r0, [r7]
	asrs r0, r3
	movs r4, #1
	ands r0, r4
	cmp r0, #0
	beq _08031F98
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	ldr r1, _08031FAC @ =gMultiSioRecv
	adds r2, r0, r1
	ldrh r0, [r2]
	cmp r0, ip
	bls _08031F98
	adds r1, r4, #0
	ldrb r2, [r2, #2]
	lsls r1, r2
	ldr r0, [r6]
	orrs r0, r1
	str r0, [r6]
_08031F98:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _08031F64
	b _08032008
	.align 2, 0
_08031FA4: .4byte 0x00004020
_08031FA8: .4byte 0x04000128
_08031FAC: .4byte gMultiSioRecv
_08031FB0:
	ldr r0, _08031FFC @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08031FC6
	ldr r1, _08032000 @ =0x000003C9
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08032008
_08031FC6:
	movs r1, #0
	strh r1, [r5]
	strh r1, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r1, [r5, #0xa]
	mov r2, ip
	ldr r1, [r2]
	ldr r0, _08032004 @ =sub_8032D9C
	str r0, [r1, #8]
	ldr r3, _08032000 @ =0x000003C9
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08031FF4
	movs r0, #0x6b
	bl m4aSongNumStart
_08031FF4:
	adds r0, r5, #0
	bl sub_803353C
	b _080324E8
	.align 2, 0
_08031FFC: .4byte gPressedKeys
_08032000: .4byte 0x000003C9
_08032004: .4byte sub_8032D9C
_08032008:
	movs r4, #0xf2
	lsls r4, r4, #2
	adds r0, r5, r4
	ldrb r4, [r0]
	cmp r4, #0
	beq _080320CC
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r1, _080320A8 @ =gUnknown_080D7218
	ldr r0, _080320AC @ =0x000003C1
	adds r3, r5, r0
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r4, #0xa]
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r4, #0x8e
	lsls r4, r4, #1
	adds r0, r5, r4
	strb r1, [r0]
	ldr r0, _080320B0 @ =0x0000011D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r4, r5, r1
	movs r0, #0xb8
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #0xb
	strb r0, [r1]
	ldr r0, _080320B4 @ =0x00000381
	adds r1, r5, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _080320B8 @ =gUnknown_030054F0
	ldrb r0, [r3]
	strb r0, [r1]
	movs r1, #0xf5
	lsls r1, r1, #2
	adds r0, r5, r1
	str r2, [r0]
	strh r2, [r5]
	strh r2, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	ldr r1, _080320BC @ =gUnknown_080D7278
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStart
	ldr r0, _080320C0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0803209E
	b _08032334
_0803209E:
	ldr r0, _080320C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080320C8 @ =sub_8033F38
	b _0803233A
	.align 2, 0
_080320A8: .4byte gUnknown_080D7218
_080320AC: .4byte 0x000003C1
_080320B0: .4byte 0x0000011D
_080320B4: .4byte 0x00000381
_080320B8: .4byte gUnknown_030054F0
_080320BC: .4byte gUnknown_080D7278
_080320C0: .4byte gUnknown_030054CC
_080320C4: .4byte gCurTask
_080320C8: .4byte sub_8033F38
_080320CC:
	ldr r0, _08032154 @ =gInput
	ldrh r1, [r0]
	movs r6, #0x60
	ands r6, r1
	cmp r6, #0
	beq _0803217C
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r1, _08032158 @ =0xFF00FF00
	ands r0, r1
	cmp r0, #0
	bne _080320F4
	movs r3, #0xf6
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #0x9a
	lsls r0, r0, #0xa
	str r0, [r1]
_080320F4:
	ldr r1, _0803215C @ =0x000003C5
	adds r0, r5, r1
	strb r4, [r0]
	ldr r2, _08032160 @ =0x000003C6
	adds r1, r5, r2
	movs r0, #0xc
	strb r0, [r1]
	ldr r3, _08032164 @ =0x000003C1
	adds r2, r5, r3
	ldrb r1, [r2]
	adds r3, #1
	adds r0, r5, r3
	strb r1, [r0]
	ldr r3, _08032168 @ =gUnknown_080D7282
	ldr r1, _0803216C @ =0x000003C3
	adds r0, r5, r1
	ldrb r1, [r0]
	adds r1, #2
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r1, [r2]
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r0, r5, r2
	str r4, [r0]
	movs r3, #0xf1
	lsls r3, r3, #2
	adds r0, r5, r3
	strb r4, [r0]
	ldr r1, _08032170 @ =0x000003CB
	adds r0, r5, r1
	strb r4, [r0]
	subs r2, #0xd4
	adds r4, r5, r2
	ldr r0, _08032174 @ =0x000002E2
	strh r0, [r4, #0xa]
	subs r3, #0xa4
	adds r1, r5, r3
	movs r0, #1
	strb r0, [r1]
	ldr r4, _08032178 @ =0x00000321
	adds r1, r5, r4
	b _0803247A
	.align 2, 0
_08032154: .4byte gInput
_08032158: .4byte 0xFF00FF00
_0803215C: .4byte 0x000003C5
_08032160: .4byte 0x000003C6
_08032164: .4byte 0x000003C1
_08032168: .4byte gUnknown_080D7282
_0803216C: .4byte 0x000003C3
_08032170: .4byte 0x000003CB
_08032174: .4byte 0x000002E2
_08032178: .4byte 0x00000321
_0803217C:
	movs r0, #0x90
	ands r0, r1
	cmp r0, #0
	beq _08032218
	ldr r1, _080321F4 @ =0x000003C5
	adds r0, r5, r1
	strb r6, [r0]
	ldr r2, _080321F8 @ =0x000003C7
	adds r1, r5, r2
	movs r0, #0xc
	strb r0, [r1]
	ldr r3, _080321FC @ =0x000003C1
	adds r2, r5, r3
	ldrb r1, [r2]
	ldr r4, _08032200 @ =0x000003C2
	adds r0, r5, r4
	strb r1, [r0]
	ldr r3, _08032204 @ =gUnknown_080D7282
	ldr r1, _08032208 @ =0x000003C3
	adds r0, r5, r1
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r4, [r2]
	adds r0, r0, r4
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
	movs r1, #0xf5
	lsls r1, r1, #2
	adds r0, r5, r1
	str r6, [r0]
	movs r2, #0xf1
	lsls r2, r2, #2
	adds r0, r5, r2
	strb r6, [r0]
	ldr r3, _0803220C @ =0x000003CB
	adds r0, r5, r3
	movs r1, #1
	strb r1, [r0]
	movs r0, #0xcc
	lsls r0, r0, #2
	adds r4, r5, r0
	subs r0, #0x4e
	strh r0, [r4, #0xa]
	subs r2, #0x74
	adds r0, r5, r2
	strb r1, [r0]
	subs r3, #0x7a
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x67
	bl m4aSongNumStart
	ldr r0, _08032210 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08032214 @ =sub_803274C
	b _0803248A
	.align 2, 0
_080321F4: .4byte 0x000003C5
_080321F8: .4byte 0x000003C7
_080321FC: .4byte 0x000003C1
_08032200: .4byte 0x000003C2
_08032204: .4byte gUnknown_080D7282
_08032208: .4byte 0x000003C3
_0803220C: .4byte 0x000003CB
_08032210: .4byte gCurTask
_08032214: .4byte sub_803274C
_08032218:
	mov r4, r8
	ldrb r0, [r4]
	cmp r0, #2
	bhi _08032254
	ldr r0, _08032248 @ =gPressedKeys
	ldrh r1, [r0]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08032230
	b _080324B0
_08032230:
	ldr r1, _0803224C @ =0x000003CA
	adds r0, r5, r1
	ldrb r0, [r0]
	ldr r3, _08032250 @ =0x000003C1
	adds r1, r5, r3
	ldrb r1, [r1]
	asrs r0, r1
	ands r0, r2
	cmp r0, #0
	bne _0803227A
	b _080324B0
	.align 2, 0
_08032248: .4byte gPressedKeys
_0803224C: .4byte 0x000003CA
_08032250: .4byte 0x000003C1
_08032254:
	ldr r0, _0803230C @ =gPressedKeys
	ldrh r1, [r0]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0803234C
	movs r4, #0xf7
	lsls r4, r4, #2
	adds r2, r5, r4
	ldr r1, _08032310 @ =0x000003C1
	adds r0, r5, r1
	adds r1, r3, #0
	ldrb r0, [r0]
	lsls r1, r0
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	bne _0803234C
_0803227A:
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r1, _08032314 @ =gUnknown_080D7218
	ldr r2, _08032310 @ =0x000003C1
	adds r3, r5, r2
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r4, #0xa]
	ldrb r0, [r3]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r4, #0x8e
	lsls r4, r4, #1
	adds r0, r5, r4
	strb r1, [r0]
	ldr r0, _08032318 @ =0x0000011D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r4, r5, r1
	movs r0, #0xb8
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r1, r5, r4
	movs r0, #0xb
	strb r0, [r1]
	ldr r0, _0803231C @ =0x00000381
	adds r1, r5, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _08032320 @ =gUnknown_030054F0
	ldrb r0, [r3]
	strb r0, [r1]
	movs r1, #0xf5
	lsls r1, r1, #2
	adds r0, r5, r1
	str r2, [r0]
	strh r2, [r5]
	strh r2, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	ldr r1, _08032324 @ =gUnknown_080D7278
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl m4aSongNumStart
	ldr r0, _08032328 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08032334
	ldr r0, _0803232C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08032330 @ =sub_8033F38
	b _0803233A
	.align 2, 0
_0803230C: .4byte gPressedKeys
_08032310: .4byte 0x000003C1
_08032314: .4byte gUnknown_080D7218
_08032318: .4byte 0x0000011D
_0803231C: .4byte 0x00000381
_08032320: .4byte gUnknown_030054F0
_08032324: .4byte gUnknown_080D7278
_08032328: .4byte gUnknown_030054CC
_0803232C: .4byte gCurTask
_08032330: .4byte sub_8033F38
_08032334:
	ldr r0, _08032344 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08032348 @ =sub_8032AF4
_0803233A:
	str r0, [r1, #8]
	adds r0, r5, #0
	bl sub_8033C64
	b _080324B6
	.align 2, 0
_08032344: .4byte gCurTask
_08032348: .4byte sub_8032AF4
_0803234C:
	ldr r0, _080323E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08032356
	b _080324B0
_08032356:
	movs r2, #0xf7
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r3, _080323E8 @ =0x000003C1
	adds r4, r5, r3
	movs r7, #1
	adds r1, r7, #0
	ldrb r2, [r4]
	lsls r1, r2
	ldr r0, [r0]
	ands r0, r1
	cmp r0, #0
	bne _08032372
	b _080324B0
_08032372:
	adds r3, #0xa
	adds r6, r5, r3
	ldrb r3, [r6]
	cmp r3, #0
	beq _08032408
	ldr r1, _080323EC @ =0x000003C5
	adds r0, r5, r1
	movs r2, #0
	strb r2, [r0]
	ldr r3, _080323F0 @ =0x000003C7
	adds r1, r5, r3
	movs r0, #0xc
	strb r0, [r1]
	ldrb r1, [r4]
	subs r3, #5
	adds r0, r5, r3
	strb r1, [r0]
	ldr r3, _080323F4 @ =gUnknown_080D7282
	ldr r1, _080323F8 @ =0x000003C3
	adds r0, r5, r1
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r1, [r4]
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r4]
	movs r3, #0xf5
	lsls r3, r3, #2
	adds r0, r5, r3
	str r2, [r0]
	movs r4, #0xf1
	lsls r4, r4, #2
	adds r0, r5, r4
	strb r2, [r0]
	movs r0, #0xcc
	lsls r0, r0, #2
	adds r4, r5, r0
	subs r0, #0x4e
	strh r0, [r4, #0xa]
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	strb r7, [r0]
	ldr r2, _080323FC @ =0x00000351
	adds r1, r5, r2
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x67
	bl m4aSongNumStart
	ldr r0, _08032400 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08032404 @ =sub_803274C
	b _0803248A
	.align 2, 0
_080323E4: .4byte gUnknown_030054CC
_080323E8: .4byte 0x000003C1
_080323EC: .4byte 0x000003C5
_080323F0: .4byte 0x000003C7
_080323F4: .4byte gUnknown_080D7282
_080323F8: .4byte 0x000003C3
_080323FC: .4byte 0x00000351
_08032400: .4byte gCurTask
_08032404: .4byte sub_803274C
_08032408:
	movs r1, #0xf0
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r1, _08032494 @ =0xFF00FF00
	ands r0, r1
	cmp r0, #0
	bne _08032424
	movs r2, #0xf6
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0x9a
	lsls r0, r0, #0xa
	str r0, [r1]
_08032424:
	ldr r1, _08032498 @ =0x000003C5
	adds r0, r5, r1
	strb r3, [r0]
	ldr r2, _0803249C @ =0x000003C6
	adds r1, r5, r2
	movs r0, #0xc
	strb r0, [r1]
	ldrb r1, [r4]
	subs r2, #4
	adds r0, r5, r2
	strb r1, [r0]
	ldr r2, _080324A0 @ =gUnknown_080D7282
	ldr r1, _080324A4 @ =0x000003C3
	adds r0, r5, r1
	ldrb r1, [r0]
	adds r1, #2
	lsls r0, r1, #2
	adds r0, r0, r1
	ldrb r1, [r4]
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r4]
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r0, r5, r2
	str r3, [r0]
	movs r4, #0xf1
	lsls r4, r4, #2
	adds r0, r5, r4
	strb r3, [r0]
	strb r3, [r6]
	movs r0, #0xc0
	lsls r0, r0, #2
	adds r4, r5, r0
	subs r0, #0x1e
	strh r0, [r4, #0xa]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r5, r1
	strb r7, [r0]
	subs r2, #0xb3
	adds r1, r5, r2
_0803247A:
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x67
	bl m4aSongNumStart
	ldr r0, _080324A8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080324AC @ =sub_8032508
_0803248A:
	str r0, [r1, #8]
	adds r0, r5, #0
	bl sub_803353C
	b _080324B6
	.align 2, 0
_08032494: .4byte 0xFF00FF00
_08032498: .4byte 0x000003C5
_0803249C: .4byte 0x000003C6
_080324A0: .4byte gUnknown_080D7282
_080324A4: .4byte 0x000003C3
_080324A8: .4byte gCurTask
_080324AC: .4byte sub_8032508
_080324B0:
	adds r0, r5, #0
	bl sub_803353C
_080324B6:
	ldr r0, _080324F4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _080324CC
	ldr r2, _080324F8 @ =gMultiSioSend
	ldr r0, _080324FC @ =0x00004020
	strh r0, [r2]
	ldr r3, _08032500 @ =0x000003C1
	adds r0, r5, r3
	ldrb r0, [r0]
	strb r0, [r2, #2]
_080324CC:
	ldr r1, _08032504 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
_080324E8:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080324F4: .4byte gUnknown_030054CC
_080324F8: .4byte gMultiSioSend
_080324FC: .4byte 0x00004020
_08032500: .4byte 0x000003C1
_08032504: .4byte gBgScrollRegs

	thumb_func_start sub_8032508
sub_8032508: @ 0x08032508
	push {r4, r5, r6, r7, lr}
	ldr r0, _08032568 @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #2
	bls _080325A6
	movs r3, #0
	ldr r0, _0803256C @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _080325A6
	movs r5, #1
	ldr r2, _08032570 @ =gUnknown_030054D4
_08032528:
	ldr r1, _08032574 @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _08032590
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _08032594
	movs r0, #0
	ldr r1, _08032578 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0803257C @ =gUnknown_03002AE4
	ldr r0, _08032580 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08032584 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08032588 @ =gUnknown_03004D5C
	ldr r0, _0803258C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _08032726
	.align 2, 0
_08032568: .4byte gUnknown_030054CC
_0803256C: .4byte gUnknown_030055B8
_08032570: .4byte gUnknown_030054D4
_08032574: .4byte gMultiSioStatusFlags
_08032578: .4byte 0x0000FFFF
_0803257C: .4byte gUnknown_03002AE4
_08032580: .4byte gUnknown_0300287C
_08032584: .4byte gUnknown_03005390
_08032588: .4byte gUnknown_03004D5C
_0803258C: .4byte gUnknown_03002A84
_08032590:
	movs r0, #0
	strb r0, [r2]
_08032594:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _080325A6
	ldrb r0, [r6]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _08032528
_080325A6:
	ldr r0, _08032638 @ =gCurTask
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r3, r0
	ldr r0, _0803263C @ =IWRAM_START + 0x3D4
	adds r1, r3, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	adds r6, r0, #0
	ldr r2, _08032640 @ =IWRAM_START + 0x3C4
	adds r1, r3, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08032644 @ =IWRAM_START + 0x3C6
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _080325F4
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080325F4
	subs r2, #0xc4
	adds r1, r3, r2
	movs r2, #0
	ldr r0, _08032648 @ =0x000002E2
	strh r0, [r1, #0xa]
	ldr r1, _0803264C @ =IWRAM_START + 0x320
	adds r0, r3, r1
	strb r2, [r0]
	ldr r2, _08032650 @ =IWRAM_START + 0x321
	adds r1, r3, r2
	movs r0, #0xff
	strb r0, [r1]
_080325F4:
	movs r0, #0xf6
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r1, _08032654 @ =gUnknown_080D7296
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, [r2]
	adds r0, r0, r1
	ldr r1, _08032658 @ =0x0003FFFF
	ands r0, r1
	str r0, [r2]
	ldrb r0, [r7]
	cmp r0, #2
	bhi _08032668
	ldr r2, _0803265C @ =gPressedKeys
	ldrh r1, [r2]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _080326AA
	ldr r1, _08032660 @ =0x000003CA
	adds r0, r5, r1
	ldrb r0, [r0]
	ldr r2, _08032664 @ =0x000003C1
	adds r1, r5, r2
	ldrb r1, [r1]
	asrs r0, r1
	ands r0, r3
	cmp r0, #0
	bne _08032690
	b _080326AA
	.align 2, 0
_08032638: .4byte gCurTask
_0803263C: .4byte IWRAM_START + 0x3D4
_08032640: .4byte IWRAM_START + 0x3C4
_08032644: .4byte IWRAM_START + 0x3C6
_08032648: .4byte 0x000002E2
_0803264C: .4byte IWRAM_START + 0x320
_08032650: .4byte IWRAM_START + 0x321
_08032654: .4byte gUnknown_080D7296
_08032658: .4byte 0x0003FFFF
_0803265C: .4byte gPressedKeys
_08032660: .4byte 0x000003CA
_08032664: .4byte 0x000003C1
_08032668:
	ldr r2, _0803269C @ =gPressedKeys
	ldrh r1, [r2]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _080326A4
	movs r0, #0xf7
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r1, _080326A0 @ =0x000003C1
	adds r0, r5, r1
	adds r1, r3, #0
	ldrb r0, [r0]
	lsls r1, r0
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	bne _080326A4
_08032690:
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #1
	strb r0, [r1]
	b _080326C8
	.align 2, 0
_0803269C: .4byte gPressedKeys
_080326A0: .4byte 0x000003C1
_080326A4:
	ldrb r0, [r7]
	cmp r0, #2
	bhi _080326C8
_080326AA:
	ldrh r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080326C8
	ldr r0, _0803272C @ =0x000003C9
	adds r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _080326C4
	movs r0, #0x6b
	bl m4aSongNumStart
_080326C4:
	movs r0, #1
	strb r0, [r4]
_080326C8:
	cmp r6, #9
	bls _080326EE
	movs r1, #0xf5
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #0
	str r1, [r0]
	ldr r2, _08032730 @ =0x000003C1
	adds r0, r5, r2
	ldrb r1, [r0]
	cmp r1, #0
	bne _080326E6
	adds r2, #0x17
	adds r0, r5, r2
	str r1, [r0]
_080326E6:
	ldr r0, _08032734 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08032738 @ =sub_8032990
	str r0, [r1, #8]
_080326EE:
	adds r0, r5, #0
	bl sub_803353C
	ldr r1, _0803273C @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	ldr r0, _08032740 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08032726
	ldr r1, _08032744 @ =gMultiSioSend
	ldr r0, _08032748 @ =0x00004020
	strh r0, [r1]
	ldr r2, _08032730 @ =0x000003C1
	adds r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
_08032726:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803272C: .4byte 0x000003C9
_08032730: .4byte 0x000003C1
_08032734: .4byte gCurTask
_08032738: .4byte sub_8032990
_0803273C: .4byte gBgScrollRegs
_08032740: .4byte gUnknown_030054CC
_08032744: .4byte gMultiSioSend
_08032748: .4byte 0x00004020

	thumb_func_start sub_803274C
sub_803274C: @ 0x0803274C
	push {r4, r5, r6, r7, lr}
	ldr r0, _080327AC @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #2
	bls _080327EA
	movs r3, #0
	ldr r0, _080327B0 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _080327EA
	movs r5, #1
	ldr r2, _080327B4 @ =gUnknown_030054D4
_0803276C:
	ldr r1, _080327B8 @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _080327D4
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080327D8
	movs r0, #0
	ldr r1, _080327BC @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _080327C0 @ =gUnknown_03002AE4
	ldr r0, _080327C4 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080327C8 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _080327CC @ =gUnknown_03004D5C
	ldr r0, _080327D0 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0803296A
	.align 2, 0
_080327AC: .4byte gUnknown_030054CC
_080327B0: .4byte gUnknown_030055B8
_080327B4: .4byte gUnknown_030054D4
_080327B8: .4byte gMultiSioStatusFlags
_080327BC: .4byte 0x0000FFFF
_080327C0: .4byte gUnknown_03002AE4
_080327C4: .4byte gUnknown_0300287C
_080327C8: .4byte gUnknown_03005390
_080327CC: .4byte gUnknown_03004D5C
_080327D0: .4byte gUnknown_03002A84
_080327D4:
	movs r0, #0
	strb r0, [r2]
_080327D8:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _080327EA
	ldrb r0, [r6]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0803276C
_080327EA:
	ldr r0, _0803287C @ =gCurTask
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r3, r0
	ldr r0, _08032880 @ =IWRAM_START + 0x3D4
	adds r1, r3, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	adds r6, r0, #0
	ldr r2, _08032884 @ =IWRAM_START + 0x3C4
	adds r1, r3, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08032888 @ =IWRAM_START + 0x3C7
	adds r1, r3, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _08032838
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08032838
	subs r2, #0x94
	adds r1, r3, r2
	movs r2, #0
	ldr r0, _0803288C @ =0x000002E2
	strh r0, [r1, #0xa]
	ldr r1, _08032890 @ =IWRAM_START + 0x350
	adds r0, r3, r1
	strb r2, [r0]
	ldr r2, _08032894 @ =IWRAM_START + 0x351
	adds r1, r3, r2
	movs r0, #0xff
	strb r0, [r1]
_08032838:
	movs r0, #0xf6
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r1, _08032898 @ =gUnknown_080D7296
	lsls r0, r6, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, [r2]
	subs r0, r0, r1
	ldr r1, _0803289C @ =0x0003FFFF
	ands r0, r1
	str r0, [r2]
	ldrb r0, [r7]
	cmp r0, #2
	bhi _080328AC
	ldr r2, _080328A0 @ =gPressedKeys
	ldrh r1, [r2]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _080328EE
	ldr r1, _080328A4 @ =0x000003CA
	adds r0, r5, r1
	ldrb r0, [r0]
	ldr r2, _080328A8 @ =0x000003C1
	adds r1, r5, r2
	ldrb r1, [r1]
	asrs r0, r1
	ands r0, r3
	cmp r0, #0
	bne _080328D4
	b _080328EE
	.align 2, 0
_0803287C: .4byte gCurTask
_08032880: .4byte IWRAM_START + 0x3D4
_08032884: .4byte IWRAM_START + 0x3C4
_08032888: .4byte IWRAM_START + 0x3C7
_0803288C: .4byte 0x000002E2
_08032890: .4byte IWRAM_START + 0x350
_08032894: .4byte IWRAM_START + 0x351
_08032898: .4byte gUnknown_080D7296
_0803289C: .4byte 0x0003FFFF
_080328A0: .4byte gPressedKeys
_080328A4: .4byte 0x000003CA
_080328A8: .4byte 0x000003C1
_080328AC:
	ldr r2, _080328E0 @ =gPressedKeys
	ldrh r1, [r2]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	adds r4, r2, #0
	cmp r0, #0
	beq _080328E8
	movs r0, #0xf7
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r1, _080328E4 @ =0x000003C1
	adds r0, r5, r1
	adds r1, r3, #0
	ldrb r0, [r0]
	lsls r1, r0
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	bne _080328E8
_080328D4:
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #1
	strb r0, [r1]
	b _0803290C
	.align 2, 0
_080328E0: .4byte gPressedKeys
_080328E4: .4byte 0x000003C1
_080328E8:
	ldrb r0, [r7]
	cmp r0, #2
	bhi _0803290C
_080328EE:
	ldrh r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0803290C
	ldr r0, _08032970 @ =0x000003C9
	adds r4, r5, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _08032908
	movs r0, #0x6b
	bl m4aSongNumStart
_08032908:
	movs r0, #1
	strb r0, [r4]
_0803290C:
	cmp r6, #9
	bls _08032932
	movs r1, #0xf5
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #0
	str r1, [r0]
	ldr r2, _08032974 @ =0x000003C1
	adds r0, r5, r2
	ldrb r1, [r0]
	cmp r1, #0
	bne _0803292A
	adds r2, #0x17
	adds r0, r5, r2
	str r1, [r0]
_0803292A:
	ldr r0, _08032978 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803297C @ =sub_8032990
	str r0, [r1, #8]
_08032932:
	adds r0, r5, #0
	bl sub_803353C
	ldr r1, _08032980 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	ldr r0, _08032984 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0803296A
	ldr r1, _08032988 @ =gMultiSioSend
	ldr r0, _0803298C @ =0x00004020
	strh r0, [r1]
	ldr r2, _08032974 @ =0x000003C1
	adds r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
_0803296A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08032970: .4byte 0x000003C9
_08032974: .4byte 0x000003C1
_08032978: .4byte gCurTask
_0803297C: .4byte sub_8032990
_08032980: .4byte gBgScrollRegs
_08032984: .4byte gUnknown_030054CC
_08032988: .4byte gMultiSioSend
_0803298C: .4byte 0x00004020

	thumb_func_start sub_8032990
sub_8032990: @ 0x08032990
	push {r4, r5, r6, lr}
	ldr r2, _08032A40 @ =gCurTask
	ldr r0, [r2]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r3, r0
	ldr r0, _08032A44 @ =IWRAM_START + 0x3D4
	adds r1, r3, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	adds r5, r0, #0
	ldr r0, _08032A48 @ =IWRAM_START + 0x3C4
	adds r1, r3, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08032A4C @ =IWRAM_START + 0x3C6
	adds r1, r3, r0
	ldrb r0, [r1]
	adds r6, r2, #0
	cmp r0, #0
	beq _080329E2
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080329E2
	ldr r1, _08032A50 @ =IWRAM_START + 0x300
	adds r2, r3, r1
	movs r1, #0
	ldr r0, _08032A54 @ =0x000002E2
	strh r0, [r2, #0xa]
	ldr r2, _08032A58 @ =IWRAM_START + 0x320
	adds r0, r3, r2
	strb r1, [r0]
	ldr r0, _08032A5C @ =IWRAM_START + 0x321
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
_080329E2:
	ldr r2, _08032A60 @ =0x000003C7
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _08032A12
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08032A12
	movs r3, #0xcc
	lsls r3, r3, #2
	adds r2, r4, r3
	movs r1, #0
	ldr r0, _08032A54 @ =0x000002E2
	strh r0, [r2, #0xa]
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r1, [r0]
	adds r3, #0x21
	adds r1, r4, r3
	movs r0, #0xff
	strb r0, [r1]
_08032A12:
	ldr r0, _08032A64 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08032A74
	ldr r0, _08032A68 @ =gPressedKeys
	ldrh r1, [r0]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08032AA4
	ldr r1, _08032A6C @ =0x000003CA
	adds r0, r4, r1
	ldrb r0, [r0]
	ldr r3, _08032A70 @ =0x000003C1
	adds r1, r4, r3
	ldrb r1, [r1]
	asrs r0, r1
	ands r0, r2
	cmp r0, #0
	bne _08032A9A
	b _08032AA4
	.align 2, 0
_08032A40: .4byte gCurTask
_08032A44: .4byte IWRAM_START + 0x3D4
_08032A48: .4byte IWRAM_START + 0x3C4
_08032A4C: .4byte IWRAM_START + 0x3C6
_08032A50: .4byte IWRAM_START + 0x300
_08032A54: .4byte 0x000002E2
_08032A58: .4byte IWRAM_START + 0x320
_08032A5C: .4byte IWRAM_START + 0x321
_08032A60: .4byte 0x000003C7
_08032A64: .4byte gUnknown_030054CC
_08032A68: .4byte gPressedKeys
_08032A6C: .4byte 0x000003CA
_08032A70: .4byte 0x000003C1
_08032A74:
	ldr r0, _08032AE0 @ =gPressedKeys
	ldrh r1, [r0]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08032AA4
	movs r0, #0xf7
	lsls r0, r0, #2
	adds r2, r4, r0
	ldr r1, _08032AE4 @ =0x000003C1
	adds r0, r4, r1
	adds r1, r3, #0
	ldrb r0, [r0]
	lsls r1, r0
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	bne _08032AA4
_08032A9A:
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #1
	strb r0, [r1]
_08032AA4:
	cmp r5, #5
	bls _08032AB8
	ldr r3, _08032AE8 @ =0x000003C5
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r1, [r6]
	ldr r0, _08032AEC @ =sub_8031E84
	str r0, [r1, #8]
_08032AB8:
	adds r0, r4, #0
	bl sub_803353C
	ldr r1, _08032AF0 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08032AE0: .4byte gPressedKeys
_08032AE4: .4byte 0x000003C1
_08032AE8: .4byte 0x000003C5
_08032AEC: .4byte sub_8031E84
_08032AF0: .4byte gBgScrollRegs

	thumb_func_start sub_8032AF4
sub_8032AF4: @ 0x08032AF4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08032B64 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	mov r8, r5
	ldr r0, _08032B68 @ =gUnknown_030054CC
	ldrb r1, [r0]
	mov ip, r0
	cmp r1, #2
	bls _08032BFC
	movs r3, #0
	ldr r0, _08032B6C @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r7, r0, #0
	cmp r1, #0
	beq _08032BA6
	movs r6, #1
	ldr r2, _08032B70 @ =gUnknown_030054D4
_08032B26:
	ldr r1, _08032B74 @ =gMultiSioStatusFlags
	adds r0, r6, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _08032B90
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _08032B94
	movs r0, #0
	ldr r1, _08032B78 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _08032B7C @ =gUnknown_03002AE4
	ldr r0, _08032B80 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08032B84 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08032B88 @ =gUnknown_03004D5C
	ldr r0, _08032B8C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _08032D8E
	.align 2, 0
_08032B64: .4byte gCurTask
_08032B68: .4byte gUnknown_030054CC
_08032B6C: .4byte gUnknown_030055B8
_08032B70: .4byte gUnknown_030054D4
_08032B74: .4byte gMultiSioStatusFlags
_08032B78: .4byte 0x0000FFFF
_08032B7C: .4byte gUnknown_03002AE4
_08032B80: .4byte gUnknown_0300287C
_08032B84: .4byte gUnknown_03005390
_08032B88: .4byte gUnknown_03004D5C
_08032B8C: .4byte gUnknown_03002A84
_08032B90:
	movs r0, #0
	strb r0, [r2]
_08032B94:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _08032BA6
	ldrb r0, [r7]
	asrs r0, r3
	ands r0, r6
	cmp r0, #0
	bne _08032B26
_08032BA6:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #2
	bls _08032BFC
	movs r2, #0xf7
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	str r0, [r1]
	movs r3, #0
	ldr r0, _08032CB8 @ =0x00004020
	mov ip, r0
	adds r4, r1, #0
	ldr r6, _08032CBC @ =gMultiSioRecv
_08032BC2:
	ldr r0, _08032CC0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r3, r0
	beq _08032BF2
	ldrb r0, [r7]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08032BF2
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r2, r0, r6
	ldrh r0, [r2]
	cmp r0, ip
	bls _08032BF2
	ldrb r2, [r2, #2]
	lsls r1, r2
	ldr r0, [r4]
	orrs r0, r1
	str r0, [r4]
_08032BF2:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _08032BC2
_08032BFC:
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r1, r5, r2
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	ldr r3, _08032CC4 @ =0x000003C5
	adds r2, r5, r3
	ldrb r1, [r2]
	movs r0, #0x3f
	ands r0, r1
	adds r0, #1
	strb r0, [r2]
	ldr r0, _08032CC8 @ =0x000003C6
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _08032C46
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08032C46
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r2, r5, r1
	movs r1, #0
	ldr r0, _08032CCC @ =0x000002E2
	strh r0, [r2, #0xa]
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r0, r5, r2
	strb r1, [r0]
	subs r3, #0xa4
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
_08032C46:
	ldr r0, _08032CD0 @ =0x000003C7
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _08032C76
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08032C76
	movs r1, #0xcc
	lsls r1, r1, #2
	adds r2, r5, r1
	movs r1, #0
	ldr r0, _08032CCC @ =0x000002E2
	strh r0, [r2, #0xa]
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	strb r1, [r0]
	ldr r3, _08032CD4 @ =0x00000351
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
_08032C76:
	movs r0, #0xf5
	lsls r0, r0, #2
	adds r2, r5, r0
	ldr r1, _08032CD8 @ =gUnknown_080D72AC
	ldr r3, _08032CDC @ =0x000003C1
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r0, r0, r1
	ldr r1, [r2]
	ldrb r0, [r0]
	cmp r1, r0
	blo _08032D6C
	mov r0, r8
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bne _08032D6C
	ldr r0, _08032CE0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	ldr r0, _08032CE4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _08032CE8
	movs r0, #0
	bl sub_805BDEC
	b _08032D8E
	.align 2, 0
_08032CB8: .4byte 0x00004020
_08032CBC: .4byte gMultiSioRecv
_08032CC0: .4byte 0x04000128
_08032CC4: .4byte 0x000003C5
_08032CC8: .4byte 0x000003C6
_08032CCC: .4byte 0x000002E2
_08032CD0: .4byte 0x000003C7
_08032CD4: .4byte 0x00000351
_08032CD8: .4byte gUnknown_080D72AC
_08032CDC: .4byte 0x000003C1
_08032CE0: .4byte gCurTask
_08032CE4: .4byte gUnknown_030054CC
_08032CE8:
	cmp r4, #0
	beq _08032D10
	lsrs r0, r0, #0x19
	ands r0, r6
	ldr r1, _08032D08 @ =gUnknown_030054F0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	ldr r2, _08032D0C @ =gUnknown_030055B4
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	bl sub_80637EC
	b _08032D8E
	.align 2, 0
_08032D08: .4byte gUnknown_030054F0
_08032D0C: .4byte gUnknown_030055B4
_08032D10:
	ldr r3, _08032D30 @ =gLoadedSaveGame
	ldr r5, [r3]
	ldr r2, _08032D34 @ =gUnknown_030054F0
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r5, #7
	adds r1, r0, r1
	ldrb r0, [r1]
	cmp r0, #2
	bhi _08032D3C
	ldr r0, _08032D38 @ =gUnknown_030055B4
	strb r4, [r0]
	bl sub_801A770
	b _08032D8E
	.align 2, 0
_08032D30: .4byte gLoadedSaveGame
_08032D34: .4byte gUnknown_030054F0
_08032D38: .4byte gUnknown_030055B4
_08032D3C:
	ldrb r0, [r5, #0x1a]
	cmp r0, #1
	bne _08032D56
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bne _08032D56
	ldrb r1, [r1]
	movs r0, #0
	movs r2, #2
	bl sub_80346C8
	b _08032D8E
_08032D56:
	ldr r0, [r3]
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, #7
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_80346C8
	b _08032D8E
_08032D6C:
	adds r0, r5, #0
	bl sub_8033C64
	ldr r1, _08032D98 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
_08032D8E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08032D98: .4byte gBgScrollRegs

	thumb_func_start sub_8032D9C
sub_8032D9C: @ 0x08032D9C
	push {r4, lr}
	ldr r0, _08032DE4 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08032E0A
	ldr r1, _08032DE8 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08032DEC @ =gUnknown_03002AE4
	ldr r0, _08032DF0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _08032DF4 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08032DF8 @ =gUnknown_03004D5C
	ldr r0, _08032DFC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08032E00 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	beq _08032E04
	bl sub_8087FC0
	b _08032E2C
	.align 2, 0
_08032DE4: .4byte gCurTask
_08032DE8: .4byte 0x0000FFFF
_08032DEC: .4byte gUnknown_03002AE4
_08032DF0: .4byte gUnknown_0300287C
_08032DF4: .4byte gUnknown_03005390
_08032DF8: .4byte gUnknown_03004D5C
_08032DFC: .4byte gUnknown_03002A84
_08032E00: .4byte gUnknown_030054CC
_08032E04:
	bl sub_808D49C
	b _08032E2C
_08032E0A:
	adds r0, r4, #0
	bl sub_803353C
	ldr r1, _08032E34 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
_08032E2C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08032E34: .4byte gBgScrollRegs

	thumb_func_start sub_8032E38
sub_8032E38: @ 0x08032E38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _08032EFC @ =0x000003C3
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08032F08
	movs r4, #0
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r2, r2, r5
	mov sl, r2
	ldr r3, _08032F00 @ =gUnknown_08097AA4
	mov sb, r3
	movs r7, #0xf6
	lsls r7, r7, #2
	adds r6, r5, r7
	ldr r0, _08032F04 @ =0x000003FF
	mov r8, r0
	movs r7, #0x5c
_08032E6A:
	movs r1, #0xf0
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r2, [r0]
	subs r1, r4, r2
	lsls r0, r1, #2
	adds r0, r0, r1
	mov r3, sl
	ldr r1, [r3]
	cmp r1, r0
	bhi _08032E8C
	cmp r2, #4
	bne _08032EF0
	cmp r4, #1
	bhi _08032EF0
	cmp r1, #0x13
	bls _08032EF0
_08032E8C:
	adds r0, r4, #0
	movs r1, #5
	bl Div
	lsls r1, r0, #2
	adds r1, r1, r0
	subs r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r2, r5, r0
	ldr r0, [r6]
	lsrs r0, r0, #8
	movs r1, #0x66
	muls r1, r4, r1
	adds r0, r0, r1
	mov r3, r8
	ands r0, r3
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sb
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r7, r0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r2, #0x16]
	ldr r0, [r6]
	lsrs r0, r0, #8
	adds r0, r0, r1
	mov r1, r8
	ands r0, r1
	lsls r0, r0, #1
	add r0, sb
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r7, r0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r2, #0x18]
	adds r0, r2, #0
	bl sub_80051E8
_08032EF0:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _08032E6A
	b _08033044
	.align 2, 0
_08032EFC: .4byte 0x000003C3
_08032F00: .4byte gUnknown_08097AA4
_08032F04: .4byte 0x000003FF
_08032F08:
	movs r7, #0xf6
	lsls r7, r7, #2
	adds r0, r5, r7
	ldr r0, [r0]
	lsrs r0, r0, #8
	movs r1, #0xcc
	lsls r1, r1, #2
	adds r6, r0, r1
	ldr r2, _0803306C @ =0x000003FF
	adds r0, r2, #0
	ands r6, r0
	movs r4, #0
	movs r3, #0xf5
	lsls r3, r3, #2
	adds r3, r3, r5
	mov r8, r3
	ldr r3, _08033070 @ =gUnknown_08097AA4
	movs r7, #0x5c
	mov sb, r7
_08032F2E:
	movs r1, #0xf0
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r0, [r0]
	subs r0, r4, r0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, r8
	ldr r1, [r2]
	cmp r1, r0
	bls _08032F9A
	adds r1, r4, #2
	movs r0, #3
	ands r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r7, #0xea
	lsls r7, r7, #1
	adds r0, r0, r7
	adds r2, r5, r0
	movs r0, #0x66
	adds r1, r4, #0
	muls r1, r0, r1
	adds r1, r6, r1
	ldr r0, _0803306C @ =0x000003FF
	ands r1, r0
	subs r7, #0xd4
	adds r0, r1, r7
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r7, #0
	ldrsh r0, [r0, r7]
	mov r7, sb
	muls r7, r0, r7
	adds r0, r7, #0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r2, #0x16]
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r7, #0
	ldrsh r0, [r1, r7]
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r2, #0x18]
	adds r0, r2, #0
	str r3, [sp]
	bl sub_80051E8
	ldr r3, [sp]
_08032F9A:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #8
	bls _08032F2E
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrb r0, [r1]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08033044
	movs r3, #0xf5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0x13
	bls _08033044
	ldr r2, _08033074 @ =gUnknown_080D7274
	ldrb r0, [r1]
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r4, r0
	bhs _08033044
	ldr r3, _08033070 @ =gUnknown_08097AA4
	movs r7, #0x5c
	mov sb, r7
	mov r8, r2
_08032FD6:
	adds r1, r4, #2
	movs r0, #3
	ands r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r2, r5, r0
	movs r0, #0x66
	adds r1, r4, #0
	muls r1, r0, r1
	adds r1, r6, r1
	ldr r0, _0803306C @ =0x000003FF
	ands r1, r0
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r1, r7
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r7, #0
	ldrsh r0, [r0, r7]
	mov r7, sb
	muls r7, r0, r7
	adds r0, r7, #0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r2, #0x16]
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r7, #0
	ldrsh r0, [r1, r7]
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r2, #0x18]
	adds r0, r2, #0
	str r3, [sp]
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r2, #0xf0
	lsls r2, r2, #2
	adds r0, r5, r2
	ldrb r0, [r0]
	add r0, r8
	ldr r3, [sp]
	ldrb r0, [r0]
	cmp r4, r0
	blo _08032FD6
_08033044:
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r2, r5, r3
	adds r0, r2, #0
	bl sub_80051E8
	movs r7, #0xcc
	lsls r7, r7, #2
	adds r2, r5, r7
	adds r0, r2, #0
	bl sub_80051E8
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803306C: .4byte 0x000003FF
_08033070: .4byte gUnknown_08097AA4
_08033074: .4byte gUnknown_080D7274

	thumb_func_start sub_8033078
sub_8033078: @ 0x08033078
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r0
	ldr r0, _08033148 @ =0x000003C3
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803315C
	movs r4, #0
	movs r0, #0xb9
	lsls r0, r0, #2
	add r0, sl
	str r0, [sp, #8]
	ldr r1, _0803314C @ =0x000002E5
	add r1, sl
	str r1, [sp, #0xc]
	mov r2, sl
	adds r2, #0xcc
	str r2, [sp]
	mov r3, sl
	adds r3, #0xfc
	str r3, [sp, #4]
	ldr r0, _08033150 @ =gUnknown_08097AA4
	mov sb, r0
	movs r5, #0xf6
	lsls r5, r5, #2
	add r5, sl
	ldr r1, _08033154 @ =0x000003FF
	mov r8, r1
	movs r6, #0x5c
_080330BC:
	adds r0, r4, #0
	movs r1, #5
	bl Div
	lsls r1, r0, #2
	adds r1, r1, r0
	subs r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, _08033158 @ =0x000003C1
	add r0, sl
	ldrb r0, [r0]
	cmp r1, r0
	bne _080330E4
	movs r0, #0xf1
	lsls r0, r0, #2
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _0803313C
_080330E4:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r2, #0xea
	lsls r2, r2, #1
	adds r0, r0, r2
	mov r3, sl
	adds r7, r3, r0
	ldr r0, [r5]
	lsrs r0, r0, #8
	movs r1, #0x66
	muls r1, r4, r1
	adds r0, r0, r1
	adds r0, #2
	mov r2, r8
	ands r0, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r7, #0x16]
	ldr r0, [r5]
	lsrs r0, r0, #8
	adds r0, r0, r1
	adds r0, #2
	mov r3, r8
	ands r0, r3
	lsls r0, r0, #1
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
_0803313C:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _080330BC
	b _08033206
	.align 2, 0
_08033148: .4byte 0x000003C3
_0803314C: .4byte 0x000002E5
_08033150: .4byte gUnknown_08097AA4
_08033154: .4byte 0x000003FF
_08033158: .4byte 0x000003C1
_0803315C:
	movs r0, #0xf6
	lsls r0, r0, #2
	add r0, sl
	ldr r0, [r0]
	lsrs r0, r0, #8
	movs r2, #0xcc
	lsls r2, r2, #2
	adds r5, r0, r2
	ldr r3, _080332A8 @ =0x000003FF
	adds r0, r3, #0
	ands r5, r0
	movs r4, #0
	movs r0, #0xb9
	lsls r0, r0, #2
	add r0, sl
	str r0, [sp, #8]
	ldr r1, _080332AC @ =0x000002E5
	add r1, sl
	str r1, [sp, #0xc]
	mov r2, sl
	adds r2, #0xcc
	str r2, [sp]
	mov r3, sl
	adds r3, #0xfc
	str r3, [sp, #4]
	ldr r2, _080332B0 @ =gUnknown_08097AA4
	movs r6, #0x5c
_08033192:
	adds r1, r4, #2
	movs r0, #3
	ands r1, r0
	ldr r0, _080332B4 @ =0x000003C1
	add r0, sl
	ldrb r0, [r0]
	cmp r1, r0
	bne _080331AE
	movs r0, #0xf1
	lsls r0, r0, #2
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _080331FC
_080331AE:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r3, sl
	adds r7, r3, r0
	movs r0, #0x66
	adds r1, r4, #0
	muls r1, r0, r1
	adds r1, r5, r1
	adds r1, #4
	ldr r0, _080332A8 @ =0x000003FF
	ands r1, r0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r7, #0x16]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	str r2, [sp, #0x10]
	bl sub_80051E8
	ldr r2, [sp, #0x10]
_080331FC:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _08033192
_08033206:
	movs r7, #0xb1
	lsls r7, r7, #2
	add r7, sl
	movs r6, #0xbd
	lsls r6, r6, #2
	add r6, sl
	movs r1, #0
	movs r0, #0x65
	strh r0, [r7, #0x16]
	movs r0, #0x4f
	strh r0, [r7, #0x18]
	ldr r0, _080332B4 @ =0x000003C1
	add r0, sl
	ldrb r0, [r0]
	adds r0, #5
	ldr r2, [sp, #8]
	strb r0, [r2]
	movs r0, #0xff
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	strh r1, [r6]
	ldr r4, _080332B0 @ =gUnknown_08097AA4
	ldr r3, _080332B8 @ =0x000003C5
	add r3, sl
	ldrb r0, [r3]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _080332A8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r6, #2]
	ldrb r0, [r3]
	lsls r0, r0, #4
	adds r0, r0, r2
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r6, #4]
	ldrh r0, [r7, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r7, #0x18]
	strh r0, [r6, #8]
	ldr r2, _080332BC @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x60
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r7, #0
	bl sub_80051E8
	movs r0, #0xf5
	lsls r0, r0, #2
	add r0, sl
	ldr r0, [r0]
	cmp r0, #7
	bhi _080332C0
	movs r4, #0xa0
	b _080332CC
	.align 2, 0
_080332A8: .4byte 0x000003FF
_080332AC: .4byte 0x000002E5
_080332B0: .4byte gUnknown_08097AA4
_080332B4: .4byte 0x000003C1
_080332B8: .4byte 0x000003C5
_080332BC: .4byte gUnknown_030054B8
_080332C0:
	movs r1, #0x10
	subs r1, r1, r0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #0x1a
	lsrs r4, r0, #0x18
_080332CC:
	ldr r7, [sp]
	adds r0, r4, #0
	adds r0, #0xf0
	strh r0, [r7, #0x16]
	movs r0, #0x10
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	movs r0, #0xf5
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0]
	cmp r1, #7
	bhi _080332F4
	movs r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _080332F6
_080332F4:
	movs r4, #0
_080332F6:
	ldr r7, [sp, #4]
	cmp r4, #0
	beq _08033328
	ldr r2, _08033320 @ =0x000003CE
	add r2, sl
	ldr r1, _08033324 @ =gUnknown_08097AA4
	lsls r0, r4, #5
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x17
	movs r0, #0x80
	subs r0, r0, r1
	lsls r0, r0, #1
	ldrh r2, [r2]
	adds r0, r0, r2
	b _0803332E
	.align 2, 0
_08033320: .4byte 0x000003CE
_08033324: .4byte gUnknown_08097AA4
_08033328:
	ldr r0, _0803336C @ =0x000003CE
	add r0, sl
	ldrh r0, [r0]
_0803332E:
	strh r0, [r7, #0x16]
	movs r0, #0x82
	strh r0, [r7, #0x18]
	ldrh r4, [r7, #0x16]
	ldr r0, _08033370 @ =0x000003CA
	add r0, sl
	ldrb r0, [r0]
	ldr r2, _08033374 @ =0x000003C1
	add r2, sl
	ldrb r1, [r2]
	asrs r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08033380
	ldr r0, _08033378 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08033380
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xb
	orrs r0, r1
	str r0, [r7, #0x10]
	ldr r1, _0803337C @ =gUnknown_080D72B1
	ldrb r0, [r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r1, #0x25
	b _0803338E
	.align 2, 0
_0803336C: .4byte 0x000003CE
_08033370: .4byte 0x000003CA
_08033374: .4byte 0x000003C1
_08033378: .4byte gUnknown_030054CC
_0803337C: .4byte gUnknown_080D72B1
_08033380:
	ldr r0, [r7, #0x10]
	ldr r1, _080333DC @ =0xFFFBFFFF
	ands r0, r1
	str r0, [r7, #0x10]
	adds r1, r7, #0
	adds r1, #0x25
	movs r0, #0
_0803338E:
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_80051E8
	ldr r2, _080333E0 @ =0x000003C1
	add r2, sl
	ldrb r1, [r2]
	cmp r1, #1
	bne _0803340A
	movs r7, #0xd8
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	movs r0, #0x82
	strh r0, [r7, #0x18]
	ldr r0, _080333E4 @ =0x000003CA
	add r0, sl
	ldrb r0, [r0]
	ldrb r2, [r2]
	asrs r0, r2
	ands r0, r1
	cmp r0, #0
	bne _080333F4
	ldr r0, _080333E8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080333F4
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xb
	orrs r0, r1
	str r0, [r7, #0x10]
	ldr r0, _080333EC @ =gUnknown_080D72B1
	ldrb r1, [r0, #5]
	ldr r0, _080333F0 @ =0x00000385
	add r0, sl
	strb r1, [r0]
	b _08033404
	.align 2, 0
_080333DC: .4byte 0xFFFBFFFF
_080333E0: .4byte 0x000003C1
_080333E4: .4byte 0x000003CA
_080333E8: .4byte gUnknown_030054CC
_080333EC: .4byte gUnknown_080D72B1
_080333F0: .4byte 0x00000385
_080333F4:
	ldr r0, [r7, #0x10]
	ldr r1, _0803341C @ =0xFFFBFFFF
	ands r0, r1
	str r0, [r7, #0x10]
	adds r1, r7, #0
	adds r1, #0x25
	movs r0, #0
	strb r0, [r1]
_08033404:
	adds r0, r7, #0
	bl sub_80051E8
_0803340A:
	movs r0, #0xf5
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0]
	cmp r1, #3
	bhi _08033420
	movs r4, #8
	b _08033430
	.align 2, 0
_0803341C: .4byte 0xFFFBFFFF
_08033420:
	cmp r1, #0xb
	bhi _0803342E
	movs r0, #0xc
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _08033430
_0803342E:
	movs r4, #0
_08033430:
	movs r7, #0x96
	lsls r7, r7, #1
	add r7, sl
	movs r1, #0xf4
	lsls r1, r1, #2
	add r1, sl
	lsls r0, r4, #2
	adds r0, r0, r4
	lsls r0, r0, #2
	ldrh r1, [r1]
	adds r0, r0, r1
	strh r0, [r7, #0x16]
	movs r0, #0x90
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xae
	lsls r7, r7, #1
	add r7, sl
	movs r6, #0xc6
	lsls r6, r6, #1
	add r6, sl
	movs r2, #0x28
	strh r2, [r7, #0x16]
	movs r3, #0x4f
	strh r3, [r7, #0x18]
	movs r0, #0
	strh r0, [r6]
	movs r5, #0x80
	lsls r5, r5, #1
	strh r5, [r6, #2]
	movs r1, #0xf5
	lsls r1, r1, #2
	add r1, sl
	mov sb, r1
	ldr r1, [r1]
	movs r4, #0x10
	subs r1, r4, r1
	lsls r0, r1, #4
	subs r0, r0, r1
	subs r0, r5, r0
	strh r0, [r6, #4]
	ldrh r0, [r7, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r7, #0x18]
	strh r0, [r6, #8]
	ldr r2, _08033538 @ =gUnknown_030054B8
	mov r8, r2
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r3, #0x20
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xcc
	lsls r7, r7, #1
	add r7, sl
	movs r6, #0xe4
	lsls r6, r6, #1
	add r6, sl
	movs r0, #0x28
	strh r0, [r7, #0x16]
	movs r1, #0x4f
	strh r1, [r7, #0x18]
	movs r2, #0
	strh r2, [r6]
	strh r5, [r6, #2]
	mov r3, sb
	ldr r0, [r3]
	subs r4, r4, r0
	lsls r0, r4, #4
	subs r0, r0, r4
	subs r5, r5, r0
	strh r5, [r6, #4]
	ldrh r0, [r7, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r7, #0x18]
	strh r0, [r6, #8]
	mov r1, r8
	ldrb r0, [r1]
	adds r1, r0, #1
	mov r2, r8
	strb r1, [r2]
	movs r3, #0x20
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xc0
	lsls r7, r7, #2
	add r7, sl
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xcc
	lsls r7, r7, #2
	add r7, sl
	adds r0, r7, #0
	bl sub_80051E8
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08033538: .4byte gUnknown_030054B8

	thumb_func_start sub_803353C
sub_803353C: @ 0x0803353C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	ldr r0, _08033588 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0803355C
	movs r1, #0
_0803355C:
	lsls r0, r1, #0x18
	movs r1, #1
	mov r8, r1
	cmp r0, #0
	bgt _0803356A
	movs r2, #0
	mov r8, r2
_0803356A:
	movs r3, #0xf1
	lsls r3, r3, #2
	adds r2, r7, r3
	ldrb r1, [r2]
	cmp r1, #7
	bls _08033590
	ldr r5, _0803358C @ =0x000003C1
	adds r0, r7, r5
	ldrb r6, [r0]
	movs r0, #0
	str r0, [sp]
	movs r1, #8
	str r1, [sp, #8]
	b _080335A4
	.align 2, 0
_08033588: .4byte gLoadedSaveGame
_0803358C: .4byte 0x000003C1
_08033590:
	ldr r3, _080335B8 @ =0x000003C1
	adds r0, r7, r3
	ldrb r6, [r0]
	movs r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldrb r2, [r2]
	str r2, [sp, #8]
_080335A4:
	movs r5, #0xf1
	lsls r5, r5, #2
	adds r0, r7, r5
	ldrb r1, [r0]
	adds r0, r1, #0
	cmp r0, #3
	bhi _080335BC
	movs r0, #8
	str r0, [sp, #4]
	b _080335D0
	.align 2, 0
_080335B8: .4byte 0x000003C1
_080335BC:
	cmp r0, #0xb
	bhi _080335CC
	movs r0, #0xc
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	b _080335D0
_080335CC:
	movs r1, #0
	str r1, [sp, #4]
_080335D0:
	movs r2, #0xf1
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrb r0, [r0]
	adds r3, r7, #0
	adds r3, #0xfc
	str r3, [sp, #0xc]
	cmp r0, #0
	beq _080335E4
	b _08033782
_080335E4:
	adds r5, r3, #0
	ldr r0, _08033640 @ =gUnknown_080D7204
	lsls r2, r6, #2
	adds r1, r2, r0
	ldrh r1, [r1]
	strh r1, [r5, #0xa]
	adds r0, #2
	adds r0, r2, r0
	ldrh r1, [r0]
	movs r3, #0x8e
	lsls r3, r3, #1
	adds r0, r7, r3
	strb r1, [r0]
	ldr r0, _08033644 @ =0x0000011D
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _08033648 @ =0x000003CA
	adds r0, r7, r1
	ldrb r1, [r0]
	ldr r0, _0803364C @ =0x000003C1
	adds r3, r7, r0
	ldrb r0, [r3]
	asrs r1, r0
	movs r0, #1
	ands r1, r0
	str r5, [sp, #0xc]
	adds r4, r2, #0
	cmp r1, #0
	bne _0803365C
	ldr r0, _08033650 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0803365C
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xb
	orrs r0, r1
	str r0, [r5, #0x10]
	ldr r1, _08033654 @ =gUnknown_080D72B1
	ldrb r0, [r3]
	adds r0, r0, r1
	ldrb r0, [r0]
	ldr r2, _08033658 @ =0x00000121
	adds r1, r7, r2
	b _0803366A
	.align 2, 0
_08033640: .4byte gUnknown_080D7204
_08033644: .4byte 0x0000011D
_08033648: .4byte 0x000003CA
_0803364C: .4byte 0x000003C1
_08033650: .4byte gUnknown_030054CC
_08033654: .4byte gUnknown_080D72B1
_08033658: .4byte 0x00000121
_0803365C:
	ldr r0, [r5, #0x10]
	ldr r1, _080336E0 @ =0xFFFBFFFF
	ands r0, r1
	str r0, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0x25
	movs r0, #0
_0803366A:
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	ldr r3, _080336E4 @ =0x000003CA
	adds r0, r7, r3
	ldrb r0, [r0]
	ldr r5, _080336E8 @ =0x000003C1
	adds r1, r7, r5
	ldrb r1, [r1]
	asrs r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08033704
	ldr r0, _080336EC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08033704
	movs r6, #0x96
	lsls r6, r6, #1
	adds r5, r7, r6
	ldr r1, _080336F0 @ =gUnknown_080D722C
	ldrh r0, [r1, #0x14]
	strh r0, [r5, #0xa]
	ldrh r1, [r1, #0x16]
	movs r2, #0xa6
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080336F4 @ =0x0000014D
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r6, #0x30
	adds r5, r7, r6
	ldr r1, _080336F8 @ =gUnknown_080D71D4
	ldrh r0, [r1, #0x14]
	strh r0, [r5, #0xa]
	ldrh r1, [r1, #0x16]
	movs r2, #0xbe
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080336FC @ =0x0000017D
	adds r1, r7, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r6, #0x3c
	adds r5, r7, r6
	ldr r1, _08033700 @ =gUnknown_080D71EC
	ldrh r0, [r1, #0x14]
	strh r0, [r5, #0xa]
	ldrh r1, [r1, #0x16]
	b _08033772
	.align 2, 0
_080336E0: .4byte 0xFFFBFFFF
_080336E4: .4byte 0x000003CA
_080336E8: .4byte 0x000003C1
_080336EC: .4byte gUnknown_030054CC
_080336F0: .4byte gUnknown_080D722C
_080336F4: .4byte 0x0000014D
_080336F8: .4byte gUnknown_080D71D4
_080336FC: .4byte 0x0000017D
_08033700: .4byte gUnknown_080D71EC
_08033704:
	movs r0, #0x96
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r2, _08033840 @ =gUnknown_080D722C
	mov r1, r8
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r6, r0
	lsls r0, r0, #2
	adds r1, r0, r2
	ldrh r1, [r1]
	strh r1, [r5, #0xa]
	adds r2, #2
	adds r0, r0, r2
	ldrh r1, [r0]
	movs r2, #0xa6
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _08033844 @ =0x0000014D
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	movs r6, #0xae
	lsls r6, r6, #1
	adds r5, r7, r6
	ldr r0, _08033848 @ =gUnknown_080D71D4
	adds r1, r4, r0
	ldrh r1, [r1]
	strh r1, [r5, #0xa]
	adds r0, #2
	adds r0, r4, r0
	ldrh r1, [r0]
	movs r2, #0xbe
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _0803384C @ =0x0000017D
	adds r1, r7, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r6, #0x3c
	adds r5, r7, r6
	ldr r0, _08033850 @ =gUnknown_080D71EC
	adds r1, r4, r0
	ldrh r1, [r1]
	strh r1, [r5, #0xa]
	adds r0, #2
	adds r0, r4, r0
	ldrh r1, [r0]
_08033772:
	adds r2, #0x3c
	adds r0, r7, r2
	strb r1, [r0]
	adds r3, #0x3c
	adds r1, r7, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
_08033782:
	ldr r5, _08033854 @ =0x000003C3
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r0, #0
	beq _08033864
	movs r4, #0
	ldr r6, [sp, #4]
	lsls r6, r6, #2
	str r6, [sp, #0x10]
	adds r0, r7, #0
	adds r0, #0xcc
	str r0, [sp, #0x14]
	ldr r1, _08033858 @ =gUnknown_08097AA4
	mov sl, r1
	movs r2, #0xf6
	lsls r2, r2, #2
	adds r6, r7, r2
	ldr r3, _0803385C @ =0x000003FF
	mov sb, r3
	movs r5, #0x5c
	mov r8, r5
_080337AC:
	adds r0, r4, #0
	movs r1, #5
	bl Div
	lsls r1, r0, #2
	adds r1, r1, r0
	subs r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08033860 @ =0x000003C1
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r1, r0
	bne _080337D4
	movs r3, #0xf1
	lsls r3, r3, #2
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _08033832
_080337D4:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r5, #0xea
	lsls r5, r5, #1
	adds r0, r0, r5
	adds r5, r7, r0
	ldr r0, [r6]
	lsrs r0, r0, #8
	movs r1, #0x66
	muls r1, r4, r1
	adds r0, r0, r1
	adds r0, #2
	mov r2, sb
	ands r0, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r5, #0x16]
	ldr r0, [r6]
	lsrs r0, r0, #8
	adds r0, r0, r1
	adds r0, #2
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
_08033832:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _080337AC
	b _08033904
	.align 2, 0
_08033840: .4byte gUnknown_080D722C
_08033844: .4byte 0x0000014D
_08033848: .4byte gUnknown_080D71D4
_0803384C: .4byte 0x0000017D
_08033850: .4byte gUnknown_080D71EC
_08033854: .4byte 0x000003C3
_08033858: .4byte gUnknown_08097AA4
_0803385C: .4byte 0x000003FF
_08033860: .4byte 0x000003C1
_08033864:
	movs r5, #0xf6
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	lsrs r0, r0, #8
	movs r6, #0xcc
	lsls r6, r6, #2
	adds r6, r6, r0
	ldr r1, _080339E4 @ =0x000003FF
	adds r0, r1, #0
	ands r6, r0
	mov r8, r6
	movs r4, #0
	ldr r2, [sp, #4]
	lsls r2, r2, #2
	str r2, [sp, #0x10]
	adds r3, r7, #0
	adds r3, #0xcc
	str r3, [sp, #0x14]
	ldr r3, _080339E8 @ =gUnknown_08097AA4
	movs r2, #0x5c
_0803388E:
	adds r1, r4, #2
	movs r0, #3
	ands r1, r0
	ldr r5, _080339EC @ =0x000003C1
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r1, r0
	bne _080338AA
	movs r6, #0xf1
	lsls r6, r6, #2
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _080338FA
_080338AA:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r5, r7, r0
	movs r0, #0x66
	adds r1, r4, #0
	muls r1, r0, r1
	add r1, r8
	adds r1, #4
	ldr r0, _080339E4 @ =0x000003FF
	ands r1, r0
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r1, r6
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r6, #0
	ldrsh r0, [r0, r6]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r5, #0x16]
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r6, #0
	ldrsh r0, [r1, r6]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	str r2, [sp, #0x18]
	str r3, [sp, #0x1c]
	bl sub_80051E8
	ldr r3, [sp, #0x1c]
	ldr r2, [sp, #0x18]
_080338FA:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803388E
_08033904:
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #9
	bls _080339A4
	movs r2, #0xb1
	lsls r2, r2, #2
	adds r5, r7, r2
	movs r3, #0xbd
	lsls r3, r3, #2
	adds r6, r7, r3
	movs r2, #0
	movs r0, #0x65
	strh r0, [r5, #0x16]
	movs r0, #0x4f
	strh r0, [r5, #0x18]
	subs r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	adds r0, #5
	subs r3, #0x10
	adds r1, r7, r3
	strb r0, [r1]
	ldr r0, _080339F0 @ =0x000002E5
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	strh r2, [r6]
	ldr r4, _080339E8 @ =gUnknown_08097AA4
	ldr r1, _080339F4 @ =0x000003C5
	adds r3, r7, r1
	ldrb r0, [r3]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	adds r1, #0x3a
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r6, #2]
	ldrb r0, [r3]
	lsls r0, r0, #4
	adds r0, r0, r2
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	ldr r2, _080339F8 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x60
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
_080339A4:
	ldr r5, [sp, #0xc]
	ldr r2, [sp]
	cmp r2, #0
	beq _08033A00
	ldr r3, _080339FC @ =0x000003CE
	adds r2, r7, r3
	ldr r1, _080339E8 @ =gUnknown_08097AA4
	ldr r6, [sp]
	lsls r0, r6, #5
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x17
	movs r0, #0x80
	subs r0, r0, r1
	lsls r0, r0, #1
	ldrh r6, [r2]
	adds r0, r0, r6
	strh r0, [r5, #0x16]
	ldrh r4, [r5, #0x16]
	ldr r1, [sp]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #1
	ldrh r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	b _08033A0C
	.align 2, 0
_080339E4: .4byte 0x000003FF
_080339E8: .4byte gUnknown_08097AA4
_080339EC: .4byte 0x000003C1
_080339F0: .4byte 0x000002E5
_080339F4: .4byte 0x000003C5
_080339F8: .4byte gUnknown_030054B8
_080339FC: .4byte 0x000003CE
_08033A00:
	ldr r2, _08033A48 @ =0x000003CE
	adds r0, r7, r2
	ldrh r0, [r0]
	strh r0, [r5, #0x16]
	ldrh r4, [r5, #0x16]
	adds r6, r4, #0
_08033A0C:
	movs r0, #0x82
	strh r0, [r5, #0x18]
	ldr r3, _08033A4C @ =0x000003CA
	adds r0, r7, r3
	ldrb r0, [r0]
	ldr r1, _08033A50 @ =0x000003C1
	adds r2, r7, r1
	ldrb r3, [r2]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08033A5C
	ldr r0, _08033A54 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08033A5C
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xb
	orrs r0, r1
	str r0, [r5, #0x10]
	ldr r1, _08033A58 @ =gUnknown_080D72B1
	ldrb r0, [r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x25
	b _08033A6A
	.align 2, 0
_08033A48: .4byte 0x000003CE
_08033A4C: .4byte 0x000003CA
_08033A50: .4byte 0x000003C1
_08033A54: .4byte gUnknown_030054CC
_08033A58: .4byte gUnknown_080D72B1
_08033A5C:
	ldr r0, [r5, #0x10]
	ldr r1, _08033AB8 @ =0xFFFBFFFF
	ands r0, r1
	str r0, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0x25
	movs r0, #0
_08033A6A:
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_80051E8
	ldr r5, _08033ABC @ =0x000003C1
	adds r2, r7, r5
	ldrb r1, [r2]
	cmp r1, #1
	bne _08033AE6
	movs r0, #0xd8
	lsls r0, r0, #2
	adds r5, r7, r0
	strh r6, [r5, #0x16]
	movs r0, #0x82
	strh r0, [r5, #0x18]
	ldr r3, _08033AC0 @ =0x000003CA
	adds r0, r7, r3
	ldrb r0, [r0]
	ldrb r2, [r2]
	asrs r0, r2
	ands r0, r1
	cmp r0, #0
	bne _08033AD0
	ldr r0, _08033AC4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08033AD0
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xb
	orrs r0, r1
	str r0, [r5, #0x10]
	ldr r0, _08033AC8 @ =gUnknown_080D72B1
	ldrb r1, [r0, #5]
	ldr r6, _08033ACC @ =0x00000385
	adds r0, r7, r6
	strb r1, [r0]
	b _08033AE0
	.align 2, 0
_08033AB8: .4byte 0xFFFBFFFF
_08033ABC: .4byte 0x000003C1
_08033AC0: .4byte 0x000003CA
_08033AC4: .4byte gUnknown_030054CC
_08033AC8: .4byte gUnknown_080D72B1
_08033ACC: .4byte 0x00000385
_08033AD0:
	ldr r0, [r5, #0x10]
	ldr r1, _08033BAC @ =0xFFFBFFFF
	ands r0, r1
	str r0, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0x25
	movs r0, #0
	strb r0, [r1]
_08033AE0:
	adds r0, r5, #0
	bl sub_80051E8
_08033AE6:
	ldr r0, _08033BB0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08033B18
	movs r0, #0xf7
	lsls r0, r0, #2
	adds r2, r7, r0
	ldr r1, _08033BB4 @ =0x000003C1
	adds r0, r7, r1
	movs r1, #1
	ldrb r0, [r0]
	lsls r1, r0
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	beq _08033B18
	movs r2, #0xe4
	lsls r2, r2, #2
	adds r5, r7, r2
	strh r4, [r5, #0x16]
	movs r0, #0x82
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
_08033B18:
	movs r3, #0x96
	lsls r3, r3, #1
	adds r5, r7, r3
	movs r6, #0xf4
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r2, [sp, #0x10]
	ldr r3, [sp, #4]
	adds r0, r2, r3
	lsls r0, r0, #2
	ldrh r1, [r1]
	adds r0, r0, r1
	movs r4, #0
	strh r0, [r5, #0x16]
	movs r0, #0x90
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	ldr r5, [sp, #0x14]
	movs r0, #0xf0
	strh r0, [r5, #0x16]
	movs r0, #0x10
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	movs r6, #0xae
	lsls r6, r6, #1
	adds r5, r7, r6
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r6, r7, r0
	movs r0, #0x28
	strh r0, [r5, #0x16]
	movs r0, #0x4f
	strh r0, [r5, #0x18]
	ldr r1, [sp, #8]
	cmp r1, #7
	bhi _08033BBC
	strh r4, [r6]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r6, #2]
	movs r1, #8
	ldr r3, [sp, #8]
	subs r1, r1, r3
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #1
	subs r2, r2, r0
	strh r2, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	ldr r2, _08033BB8 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x20
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	b _08033BBE
	.align 2, 0
_08033BAC: .4byte 0xFFFBFFFF
_08033BB0: .4byte gUnknown_030054CC
_08033BB4: .4byte 0x000003C1
_08033BB8: .4byte gUnknown_030054B8
_08033BBC:
	str r4, [r5, #0x10]
_08033BBE:
	adds r0, r5, #0
	bl sub_80051E8
	movs r6, #0xcc
	lsls r6, r6, #1
	adds r5, r7, r6
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r6, r7, r0
	movs r1, #0
	movs r0, #0x28
	strh r0, [r5, #0x16]
	movs r0, #0x4f
	strh r0, [r5, #0x18]
	ldr r2, [sp, #8]
	cmp r2, #7
	bhi _08033C28
	strh r1, [r6]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r6, #2]
	movs r1, #8
	ldr r3, [sp, #8]
	subs r1, r1, r3
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #1
	subs r2, r2, r0
	strh r2, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	ldr r2, _08033C24 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x20
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	b _08033C2A
	.align 2, 0
_08033C24: .4byte gUnknown_030054B8
_08033C28:
	str r1, [r5, #0x10]
_08033C2A:
	adds r0, r5, #0
	bl sub_80051E8
	movs r6, #0xc0
	lsls r6, r6, #2
	adds r5, r7, r6
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xcc
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8033C64
sub_8033C64: @ 0x08033C64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	ldr r1, _08033D30 @ =0x000003C3
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08033D3C
	movs r4, #0
	adds r2, r6, #0
	adds r2, #0xfc
	str r2, [sp, #4]
	adds r3, r6, #0
	adds r3, #0xcc
	str r3, [sp]
	ldr r5, _08033D34 @ =gUnknown_08097AA4
	mov sl, r5
	movs r0, #0xf6
	lsls r0, r0, #2
	adds r7, r6, r0
	adds r1, #0x3c
	mov sb, r1
	movs r2, #0x5c
	mov r8, r2
_08033C9C:
	adds r0, r4, #0
	movs r1, #5
	bl Div
	lsls r1, r0, #2
	adds r1, r1, r0
	subs r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r3, _08033D38 @ =0x000003C1
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r1, r0
	bne _08033CC4
	movs r5, #0xf1
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _08033D22
_08033CC4:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r5, r6, r0
	ldr r0, [r7]
	lsrs r0, r0, #8
	movs r1, #0x66
	muls r1, r4, r1
	adds r0, r0, r1
	adds r0, #2
	mov r2, sb
	ands r0, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r5, #0x16]
	ldr r0, [r7]
	lsrs r0, r0, #8
	adds r0, r0, r1
	adds r0, #2
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
_08033D22:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _08033C9C
	b _08033DDC
	.align 2, 0
_08033D30: .4byte 0x000003C3
_08033D34: .4byte gUnknown_08097AA4
_08033D38: .4byte 0x000003C1
_08033D3C:
	movs r5, #0xf6
	lsls r5, r5, #2
	adds r0, r6, r5
	ldr r0, [r0]
	lsrs r0, r0, #8
	movs r7, #0xcc
	lsls r7, r7, #2
	adds r7, r7, r0
	ldr r1, _08033F1C @ =0x000003FF
	adds r0, r1, #0
	adds r2, r7, #0
	ands r2, r0
	mov r8, r2
	movs r4, #0
	adds r3, r6, #0
	adds r3, #0xfc
	str r3, [sp, #4]
	adds r5, r6, #0
	adds r5, #0xcc
	str r5, [sp]
	ldr r3, _08033F20 @ =gUnknown_08097AA4
	movs r2, #0x5c
_08033D68:
	adds r1, r4, #2
	movs r0, #3
	ands r1, r0
	ldr r7, _08033F24 @ =0x000003C1
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r1, r0
	bne _08033D84
	movs r5, #0xf1
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	cmp r0, #0xc
	bhi _08033DD2
_08033D84:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r7, #0xea
	lsls r7, r7, #1
	adds r0, r0, r7
	adds r5, r6, r0
	movs r0, #0x66
	adds r1, r4, #0
	muls r1, r0, r1
	add r1, r8
	adds r1, #4
	ldr r0, _08033F1C @ =0x000003FF
	ands r1, r0
	subs r7, #0xd4
	adds r0, r1, r7
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r0, #0xa
	strh r0, [r5, #0x16]
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r7, #0
	ldrsh r0, [r1, r7]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r0, #0x50
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	bl sub_80051E8
	ldr r3, [sp, #0xc]
	ldr r2, [sp, #8]
_08033DD2:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _08033D68
_08033DDC:
	ldr r0, _08033F28 @ =0x000003C5
	adds r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0
	beq _08033E76
	movs r1, #0xb1
	lsls r1, r1, #2
	adds r5, r6, r1
	movs r2, #0xbd
	lsls r2, r2, #2
	adds r4, r6, r2
	movs r2, #0
	movs r0, #0x65
	strh r0, [r5, #0x16]
	movs r0, #0x4f
	strh r0, [r5, #0x18]
	ldr r3, _08033F24 @ =0x000003C1
	adds r0, r6, r3
	ldrb r0, [r0]
	adds r0, #5
	subs r3, #0xdd
	adds r1, r6, r3
	strb r0, [r1]
	ldr r0, _08033F2C @ =0x000002E5
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	strh r2, [r4]
	ldr r3, _08033F20 @ =gUnknown_08097AA4
	ldrb r0, [r7]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _08033F1C @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r4, #2]
	ldrb r0, [r7]
	lsls r0, r0, #4
	adds r0, r0, r2
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	adds r0, #0xc0
	strh r0, [r4, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r4, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r4, #8]
	ldr r2, _08033F30 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x60
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
_08033E76:
	ldr r0, [sp, #4]
	bl sub_8004558
	ldr r0, [sp, #4]
	bl sub_80051E8
	ldr r1, _08033F24 @ =0x000003C1
	adds r5, r6, r1
	ldrb r0, [r5]
	cmp r0, #1
	bne _08033E9E
	movs r2, #0xd8
	lsls r2, r2, #2
	adds r4, r6, r2
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_08033E9E:
	ldr r0, _08033F34 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08033EC4
	movs r3, #0xf7
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #1
	ldrb r5, [r5]
	lsls r1, r5
	ldr r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08033EC4
	movs r5, #0xe4
	lsls r5, r5, #2
	adds r0, r6, r5
	bl sub_80051E8
_08033EC4:
	movs r7, #0x96
	lsls r7, r7, #1
	adds r0, r6, r7
	bl sub_80051E8
	ldr r0, [sp]
	bl sub_80051E8
	movs r1, #0xae
	lsls r1, r1, #1
	adds r0, r6, r1
	bl sub_80051E8
	movs r2, #0xcc
	lsls r2, r2, #1
	adds r0, r6, r2
	bl sub_80051E8
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r5, r6, r3
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r7, #0xcc
	lsls r7, r7, #2
	adds r5, r6, r7
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08033F1C: .4byte 0x000003FF
_08033F20: .4byte gUnknown_08097AA4
_08033F24: .4byte 0x000003C1
_08033F28: .4byte 0x000003C5
_08033F2C: .4byte 0x000002E5
_08033F30: .4byte gUnknown_030054B8
_08033F34: .4byte gUnknown_030054CC

	thumb_func_start sub_8033F38
sub_8033F38: @ 0x08033F38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r0, sp
	movs r1, #0
	movs r2, #5
	bl memset
	ldr r0, _08033FD0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r1, _08033FD4 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
	ldr r0, _08033FD8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0803406A
	movs r3, #0
	ldr r0, _08033FDC @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov sb, r0
	cmp r1, #0
	beq _08034018
	movs r6, #1
	ldr r2, _08033FE0 @ =gUnknown_030054D4
_08033F92:
	ldr r1, _08033FE4 @ =gMultiSioStatusFlags
	adds r0, r6, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _08034000
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _08034004
	movs r0, #0
	ldr r1, _08033FE8 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _08033FEC @ =gUnknown_03002AE4
	ldr r0, _08033FF0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08033FF4 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08033FF8 @ =gUnknown_03004D5C
	ldr r0, _08033FFC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0803433C
	.align 2, 0
_08033FD0: .4byte gCurTask
_08033FD4: .4byte gBgScrollRegs
_08033FD8: .4byte gUnknown_030054CC
_08033FDC: .4byte gUnknown_030055B8
_08033FE0: .4byte gUnknown_030054D4
_08033FE4: .4byte gMultiSioStatusFlags
_08033FE8: .4byte 0x0000FFFF
_08033FEC: .4byte gUnknown_03002AE4
_08033FF0: .4byte gUnknown_0300287C
_08033FF4: .4byte gUnknown_03005390
_08033FF8: .4byte gUnknown_03004D5C
_08033FFC: .4byte gUnknown_03002A84
_08034000:
	movs r0, #0
	strb r0, [r2]
_08034004:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _08034018
	mov r1, sb
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r6
	cmp r0, #0
	bne _08033F92
_08034018:
	ldr r0, _080340F0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0803406A
	movs r2, #0xf7
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	str r0, [r1]
	movs r3, #0
	ldr r0, _080340F4 @ =0x00004020
	mov r8, r0
	adds r4, r1, #0
	ldr r7, _080340F8 @ =gMultiSioRecv
	movs r6, #0
_08034036:
	ldr r0, _080340FC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r3, r0
	beq _08034062
	mov r1, sb
	ldrb r0, [r1]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08034062
	adds r2, r6, r7
	ldrh r0, [r2]
	cmp r0, r8
	bls _08034062
	ldrb r2, [r2, #2]
	lsls r1, r2
	ldr r0, [r4]
	orrs r0, r1
	str r0, [r4]
_08034062:
	adds r6, #0x14
	adds r3, #1
	cmp r3, #3
	bls _08034036
_0803406A:
	ldr r0, _08034100 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08034120
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08034104 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08034108 @ =sub_8031E84
	str r0, [r1, #8]
	adds r2, r5, #0
	adds r2, #0xfc
	ldr r1, _0803410C @ =gUnknown_080D7204
	ldr r3, _08034110 @ =0x000003C1
	adds r4, r5, r3
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2, #0xa]
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	ldr r3, _08034114 @ =0x0000011D
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xd8
	lsls r0, r0, #2
	adds r2, r5, r0
	subs r0, #0x80
	strh r0, [r2, #0xa]
	movs r2, #0xe0
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r0, #0xa
	strb r0, [r1]
	ldr r3, _08034118 @ =0x00000381
	adds r1, r5, r3
	subs r0, #0xb
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8033C64
	ldr r0, _0803411C @ =gMultiSioSend
	mov sb, r0
	ldr r0, _080340F4 @ =0x00004020
	mov r1, sb
	strh r0, [r1]
	ldrb r0, [r4]
	strb r0, [r1, #2]
	movs r0, #0x6b
	bl m4aSongNumStart
	b _0803433C
	.align 2, 0
_080340F0: .4byte gUnknown_030054CC
_080340F4: .4byte 0x00004020
_080340F8: .4byte gMultiSioRecv
_080340FC: .4byte 0x04000128
_08034100: .4byte gPressedKeys
_08034104: .4byte gCurTask
_08034108: .4byte sub_8031E84
_0803410C: .4byte gUnknown_080D7204
_08034110: .4byte 0x000003C1
_08034114: .4byte 0x0000011D
_08034118: .4byte 0x00000381
_0803411C: .4byte gMultiSioSend
_08034120:
	ldr r2, _08034188 @ =gMultiSioRecv
	ldrh r1, [r2]
	ldr r0, _0803418C @ =0x00004022
	mov ip, r2
	cmp r1, r0
	bne _080341AC
	movs r3, #0
	ldr r0, _08034190 @ =gCurTask
	mov sl, r0
	ldr r1, _08034194 @ =gMultiSioStatusFlags
	mov r8, r1
	ldr r0, _08034198 @ =sub_8034358
	mov ip, r0
	ldr r7, _0803419C @ =gUnknown_030055B8
	movs r6, #1
	ldr r4, _080341A0 @ =gUnknown_03005500
_08034140:
	ldrb r0, [r7]
	asrs r0, r3
	ands r0, r6
	cmp r0, #0
	beq _08034150
	adds r1, r3, r4
	ldrb r0, [r2, #2]
	strb r0, [r1]
_08034150:
	adds r2, #0x14
	adds r3, #1
	cmp r3, #3
	bls _08034140
	mov r1, r8
	ldr r0, [r1]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08034172
	ldr r2, _080341A4 @ =gMultiSioSend
	ldr r0, _0803418C @ =0x00004022
	strh r0, [r2]
	ldr r3, _080341A8 @ =0x000003C1
	adds r0, r5, r3
	ldrb r0, [r0]
	strb r0, [r2, #2]
_08034172:
	movs r1, #0xf3
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	mov r2, sl
	ldr r0, [r2]
	mov r3, ip
	str r3, [r0, #8]
	b _080342F4
	.align 2, 0
_08034188: .4byte gMultiSioRecv
_0803418C: .4byte 0x00004022
_08034190: .4byte gCurTask
_08034194: .4byte gMultiSioStatusFlags
_08034198: .4byte sub_8034358
_0803419C: .4byte gUnknown_030055B8
_080341A0: .4byte gUnknown_03005500
_080341A4: .4byte gMultiSioSend
_080341A8: .4byte 0x000003C1
_080341AC:
	movs r3, #0
	ldr r0, _0803425C @ =gUnknown_030055B8
	ldrb r7, [r0]
	ldr r1, _08034260 @ =0x00004021
	mov r8, r1
	movs r6, #0
_080341B8:
	adds r0, r7, #0
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080341F0
	ldr r1, _08034264 @ =0x04000128
	ldr r0, [r1]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r3, r0
	beq _080341F0
	mov r0, ip
	adds r2, r6, r0
	ldrh r0, [r2]
	cmp r0, r8
	bne _080341F0
	ldr r0, _08034268 @ =0x000003C1
	adds r4, r5, r0
	ldrb r0, [r2, #2]
	ldrb r2, [r4]
	cmp r0, r2
	bne _080341F0
	ldr r0, [r1]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r3, r0
	blo _0803427C
_080341F0:
	adds r6, #0x14
	adds r3, #1
	cmp r3, #3
	bls _080341B8
	ldr r0, _0803426C @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08034206
	b _08034324
_08034206:
	ldr r3, _08034270 @ =gMultiSioSend
	mov sb, r3
	ldr r0, _08034274 @ =0x00004022
	strh r0, [r3]
	ldr r1, _08034268 @ =0x000003C1
	adds r0, r5, r1
	ldrb r0, [r0]
	strb r0, [r3, #2]
	movs r3, #0
	ldr r0, _0803425C @ =gUnknown_030055B8
	ldrb r7, [r0]
	ldr r2, _08034278 @ =0x40210000
	mov r8, r2
	movs r6, #0
_08034222:
	adds r0, r7, #0
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08034250
	mov r0, ip
	adds r2, r6, r0
	ldrh r4, [r2]
	mov r1, r8
	lsrs r0, r1, #0x10
	cmp r4, r0
	bne _08034318
	ldrb r0, [r2, #2]
	mov r2, sp
	adds r1, r2, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0803431E
_08034250:
	adds r6, #0x14
	adds r3, #1
	cmp r3, #3
	bls _08034222
	b _08034336
	.align 2, 0
_0803425C: .4byte gUnknown_030055B8
_08034260: .4byte 0x00004021
_08034264: .4byte 0x04000128
_08034268: .4byte 0x000003C1
_0803426C: .4byte gMultiSioStatusFlags
_08034270: .4byte gMultiSioSend
_08034274: .4byte 0x00004022
_08034278: .4byte 0x40210000
_0803427C:
	ldr r0, _080342FC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08034300 @ =sub_8031E84
	str r0, [r1, #8]
	movs r0, #0x6b
	bl m4aSongNumStart
	movs r3, #0xf2
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #0
	strb r0, [r1]
	adds r2, r5, #0
	adds r2, #0xfc
	ldr r1, _08034304 @ =gUnknown_080D7204
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2, #0xa]
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r3, #0x8e
	lsls r3, r3, #1
	adds r0, r5, r3
	strb r1, [r0]
	ldr r0, _08034308 @ =0x0000011D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_8004558
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r2, r5, r1
	movs r0, #0xb8
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #0xa
	strb r0, [r1]
	ldr r0, _0803430C @ =0x00000381
	adds r1, r5, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	bl sub_8004558
	ldr r1, _08034310 @ =gMultiSioSend
	ldr r0, _08034314 @ =0x00004020
	strh r0, [r1]
	ldrb r0, [r4]
	strb r0, [r1, #2]
_080342F4:
	adds r0, r5, #0
	bl sub_8033C64
	b _0803433C
	.align 2, 0
_080342FC: .4byte gCurTask
_08034300: .4byte sub_8031E84
_08034304: .4byte gUnknown_080D7204
_08034308: .4byte 0x0000011D
_0803430C: .4byte 0x00000381
_08034310: .4byte gMultiSioSend
_08034314: .4byte 0x00004020
_08034318:
	mov r2, sb
	strh r0, [r2]
	b _08034336
_0803431E:
	mov r3, sb
	strh r4, [r3]
	b _08034336
_08034324:
	ldr r0, _0803434C @ =gMultiSioSend
	mov sb, r0
	ldr r0, _08034350 @ =0x00004021
	mov r1, sb
	strh r0, [r1]
	ldr r2, _08034354 @ =0x000003C1
	adds r0, r5, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
_08034336:
	adds r0, r5, #0
	bl sub_8033C64
_0803433C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803434C: .4byte gMultiSioSend
_08034350: .4byte 0x00004021
_08034354: .4byte 0x000003C1

	thumb_func_start sub_8034358
sub_8034358: @ 0x08034358
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r2, _080343CC @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _080343D0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	mov sl, r2
	ldr r1, _080343D4 @ =gUnknown_030055B8
	mov r8, r1
	cmp r0, #2
	bls _08034410
	movs r2, #0
	ldrb r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08034410
	movs r5, #1
	ldr r3, _080343D8 @ =gUnknown_030054D4
_0803438C:
	ldr r1, _080343DC @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r2
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _080343F8
	ldrb r0, [r3]
	adds r1, r0, #1
	strb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080343FC
	movs r0, #0
	ldr r1, _080343E0 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _080343E4 @ =gUnknown_03002AE4
	ldr r0, _080343E8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080343EC @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _080343F0 @ =gUnknown_03004D5C
	ldr r0, _080343F4 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _08034614
	.align 2, 0
_080343CC: .4byte gCurTask
_080343D0: .4byte gUnknown_030054CC
_080343D4: .4byte gUnknown_030055B8
_080343D8: .4byte gUnknown_030054D4
_080343DC: .4byte gMultiSioStatusFlags
_080343E0: .4byte 0x0000FFFF
_080343E4: .4byte gUnknown_03002AE4
_080343E8: .4byte gUnknown_0300287C
_080343EC: .4byte gUnknown_03005390
_080343F0: .4byte gUnknown_03004D5C
_080343F4: .4byte gUnknown_03002A84
_080343F8:
	movs r0, #0
	strb r0, [r3]
_080343FC:
	adds r3, #1
	adds r2, #1
	cmp r2, #3
	bhi _08034410
	mov r4, r8
	ldrb r0, [r4]
	asrs r0, r2
	ands r0, r5
	cmp r0, #0
	bne _0803438C
_08034410:
	movs r3, #0
	movs r4, #0
	ldr r0, _0803446C @ =gMultiSioRecv
	mov ip, r0
	ldr r0, _08034470 @ =gUnknown_030055B8
	ldrb r5, [r0]
	ldr r7, _08034474 @ =0x00004021
	mov r1, ip
	movs r2, #1
_08034422:
	adds r0, r5, #0
	asrs r0, r3
	ands r0, r2
	cmp r0, #0
	beq _08034434
	ldrh r0, [r1]
	cmp r0, r7
	bhi _08034434
	movs r4, #1
_08034434:
	adds r1, #0x14
	adds r3, #1
	cmp r3, #3
	bls _08034422
	cmp r4, #0
	beq _0803448C
	movs r4, #0xf3
	lsls r4, r4, #2
	adds r1, r6, r4
	ldrb r0, [r1]
	cmp r0, #0
	beq _08034480
	lsls r0, r0, #1
	strb r0, [r1]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08034484
	ldr r0, _08034478 @ =gMultiSioSend
	mov sb, r0
	ldr r0, _08034474 @ =0x00004021
	mov r1, sb
	strh r0, [r1]
	mov r4, sl
	ldr r1, [r4]
	ldr r0, _0803447C @ =sub_8033F38
	str r0, [r1, #8]
	b _08034484
	.align 2, 0
_0803446C: .4byte gMultiSioRecv
_08034470: .4byte gUnknown_030055B8
_08034474: .4byte 0x00004021
_08034478: .4byte gMultiSioSend
_0803447C: .4byte sub_8033F38
_08034480:
	movs r0, #1
	strb r0, [r1]
_08034484:
	adds r0, r6, #0
	bl sub_8033C64
	b _08034614
_0803448C:
	movs r1, #0xf3
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r4, [r0]
	mov r4, ip
	ldrh r1, [r4]
	ldr r3, _080344E4 @ =0x00004023
	cmp r1, r3
	bne _080344FC
	movs r3, #0
	ldr r0, _080344E8 @ =gUnknown_030055B8
	mov ip, r0
	movs r2, #0
	movs r7, #1
	adds r5, r4, #0
_080344AA:
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r7
	cmp r0, #0
	beq _080344CC
	adds r4, r2, r5
	ldr r0, _080344EC @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080344CC
	ldr r0, _080344F0 @ =gUnknown_03005500
	adds r0, r3, r0
	ldrb r1, [r4, #2]
	strb r1, [r0]
_080344CC:
	adds r2, #0x14
	adds r3, #1
	cmp r3, #3
	bls _080344AA
	adds r0, r6, #0
	bl sub_8033C64
	ldr r0, _080344F4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080344F8 @ =sub_8032AF4
	str r0, [r1, #8]
	b _08034614
	.align 2, 0
_080344E4: .4byte 0x00004023
_080344E8: .4byte gUnknown_030055B8
_080344EC: .4byte gMultiSioStatusFlags
_080344F0: .4byte gUnknown_03005500
_080344F4: .4byte gCurTask
_080344F8: .4byte sub_8032AF4
_080344FC:
	ldr r0, _08034514 @ =0x00004021
	cmp r1, r0
	bne _08034520
	ldr r4, _08034518 @ =gMultiSioSend
	subs r0, #1
	strh r0, [r4]
	mov r0, sl
	ldr r1, [r0]
	ldr r0, _0803451C @ =sub_8033F38
	str r0, [r1, #8]
	b _08034614
	.align 2, 0
_08034514: .4byte 0x00004021
_08034518: .4byte gMultiSioSend
_0803451C: .4byte sub_8033F38
_08034520:
	ldr r0, _08034598 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080345C2
	ldr r1, _0803459C @ =gMultiSioSend
	mov sb, r1
	strh r3, [r1]
	ldr r4, _080345A0 @ =0x000003C1
	adds r0, r6, r4
	ldrb r0, [r0]
	strb r0, [r1, #2]
	movs r2, #0
	movs r3, #0
	ldr r0, _080345A4 @ =gLoadedSaveGame
	ldr r0, [r0]
	adds r0, #7
_08034544:
	adds r1, r0, r3
	ldrb r4, [r1]
	cmp r2, r4
	bhs _0803454E
	ldrb r2, [r1]
_0803454E:
	adds r3, #1
	cmp r3, #4
	bls _08034544
	movs r3, #0
	ldr r5, _080345A8 @ =0x40220000
	ldr r7, _080345AC @ =0x00004021
	movs r2, #0
_0803455C:
	mov r1, r8
	ldrb r0, [r1]
	asrs r0, r3
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080345B8
	cmp r3, #0
	beq _080345B8
	mov r0, ip
	adds r4, r2, r0
	ldr r0, _080345B0 @ =gUnknown_03005500
	adds r0, r3, r0
	ldrb r1, [r4, #2]
	strb r1, [r0]
	ldrh r0, [r4]
	lsrs r1, r5, #0x10
	cmp r0, r1
	beq _080345B8
	mov r4, sb
	strh r1, [r4]
	ldr r0, _080345B4 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080345F2
	strh r7, [r4]
	b _080345F2
	.align 2, 0
_08034598: .4byte gMultiSioStatusFlags
_0803459C: .4byte gMultiSioSend
_080345A0: .4byte 0x000003C1
_080345A4: .4byte gLoadedSaveGame
_080345A8: .4byte 0x40220000
_080345AC: .4byte 0x00004021
_080345B0: .4byte gUnknown_03005500
_080345B4: .4byte gPressedKeys
_080345B8:
	adds r2, #0x14
	adds r3, #1
	cmp r3, #3
	bls _0803455C
	b _080345F2
_080345C2:
	ldr r0, _08034624 @ =gMultiSioSend
	mov sb, r0
	ldr r0, _08034628 @ =0x00004022
	mov r1, sb
	strh r0, [r1]
	ldr r1, _0803462C @ =0x000003C1
	adds r0, r6, r1
	ldrb r0, [r0]
	strb r0, [r4, #2]
	movs r2, #0
	movs r3, #0
	ldr r0, _08034630 @ =gLoadedSaveGame
	ldr r0, [r0]
	adds r0, #7
_080345DE:
	adds r1, r0, r3
	ldrb r4, [r1]
	cmp r2, r4
	bhs _080345E8
	ldrb r2, [r1]
_080345E8:
	adds r3, #1
	cmp r3, #4
	bls _080345DE
	mov r0, sb
	strb r2, [r0, #3]
_080345F2:
	adds r0, r6, #0
	bl sub_8033C64
	ldr r1, _08034634 @ =gBgScrollRegs
	ldrh r0, [r1, #2]
	subs r0, #1
	movs r2, #0xff
	ands r0, r2
	strh r0, [r1, #2]
	ldrh r0, [r1, #8]
	subs r0, #1
	ands r0, r2
	strh r0, [r1, #8]
	ldrh r0, [r1, #0xa]
	adds r0, #1
	ands r0, r2
	strh r0, [r1, #0xa]
_08034614:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08034624: .4byte gMultiSioSend
_08034628: .4byte 0x00004022
_0803462C: .4byte 0x000003C1
_08034630: .4byte gLoadedSaveGame
_08034634: .4byte gBgScrollRegs

	thumb_func_start sub_8034638
sub_8034638: @ 0x08034638
	push {r4, r5, r6, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r4, r0
	ldr r1, _080346B4 @ =IWRAM_START + 0x130
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080346B8 @ =IWRAM_START + 0x160
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080346BC @ =IWRAM_START + 0x19C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080346C0 @ =IWRAM_START + 0xD0
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r5, #0
	ldr r0, _080346C4 @ =IWRAM_START + 0x1D8
	adds r4, r4, r0
_08034670:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	bl sub_8007CF0
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _08034670
	movs r1, #0xb2
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xcd
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080346B4: .4byte IWRAM_START + 0x130
_080346B8: .4byte IWRAM_START + 0x160
_080346BC: .4byte IWRAM_START + 0x19C
_080346C0: .4byte IWRAM_START + 0xD0
_080346C4: .4byte IWRAM_START + 0x1D8

	thumb_func_start sub_80346C8
sub_80346C8: @ 0x080346C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sl, r2
	movs r5, #0
	ldr r0, _08034728 @ =gUnknown_030054D4
	strb r5, [r0, #3]
	strb r5, [r0, #2]
	strb r5, [r0, #1]
	strb r5, [r0]
	cmp r2, #2
	bne _08034700
	ldr r0, _0803472C @ =gLoadedSaveGame
	ldr r0, [r0]
	mov r1, sl
	strb r1, [r0, #0x1a]
	bl WriteSaveGame
_08034700:
	ldr r0, _08034730 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08034712
	mov r2, r8
	cmp r2, #0x1a
	bls _08034712
	movs r3, #0x1a
	mov r8, r3
_08034712:
	mov r0, r8
	cmp r0, #0x1c
	beq _08034758
	cmp r0, #0x1c
	bhi _08034734
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	b _08034752
	.align 2, 0
_08034728: .4byte gUnknown_030054D4
_0803472C: .4byte gLoadedSaveGame
_08034730: .4byte gUnknown_030054CC
_08034734:
	ldr r0, _08034760 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #0x1a]
	movs r1, #0x1c
	mov r8, r1
	cmp r0, #0
	beq _08034752
	ldr r0, _08034764 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08034752
	movs r2, #0x1d
	mov r8, r2
_08034752:
	mov r3, r8
	cmp r3, #0x1c
	bne _08034768
_08034758:
	movs r0, #5
	bl m4aSongNumStart
	b _0803477C
	.align 2, 0
_08034760: .4byte gLoadedSaveGame
_08034764: .4byte gUnknown_030054F0
_08034768:
	mov r0, r8
	cmp r0, #0x1d
	bne _08034776
	movs r0, #6
	bl m4aSongNumStart
	b _0803477C
_08034776:
	movs r0, #4
	bl m4aSongNumStart
_0803477C:
	ldr r0, _080347E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0803479C
	mov r0, r8
	movs r1, #4
	bl DivRem
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0803479C
	movs r0, #0xfc
	mov r1, r8
	ands r1, r0
	mov r8, r1
_0803479C:
	ldr r1, _080347E8 @ =gDispCnt
	movs r2, #0x9a
	lsls r2, r2, #5
	adds r0, r2, #0
	strh r0, [r1]
	ldr r2, _080347EC @ =gBgCntRegs
	movs r1, #0
	ldr r0, _080347F0 @ =0x00001C0E
	strh r0, [r2, #2]
	ldr r0, _080347F4 @ =0x00005003
	strh r0, [r2]
	ldr r0, _080347F8 @ =gBgScrollRegs
	strh r1, [r0]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	strh r1, [r0, #6]
	movs r0, #3
	mov r3, sl
	ands r0, r3
	cmp r0, #0
	beq _08034808
	ldr r0, _080347E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08034808
	ldr r0, _080347FC @ =sub_8034E78
	ldr r1, _08034800 @ =0x000004C4
	movs r2, #0xc4
	lsls r2, r2, #6
	ldr r3, _08034804 @ =sub_8036040
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	b _0803481A
	.align 2, 0
_080347E4: .4byte gUnknown_030054CC
_080347E8: .4byte gDispCnt
_080347EC: .4byte gBgCntRegs
_080347F0: .4byte 0x00001C0E
_080347F4: .4byte 0x00005003
_080347F8: .4byte gBgScrollRegs
_080347FC: .4byte sub_8034E78
_08034800: .4byte 0x000004C4
_08034804: .4byte sub_8036040
_08034808:
	ldr r0, _080348F0 @ =sub_8034D70
	ldr r1, _080348F4 @ =0x000004C4
	movs r2, #0xc4
	lsls r2, r2, #6
	ldr r3, _080348F8 @ =sub_8036040
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
_0803481A:
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov sb, r0
	ldr r1, _080348FC @ =gUnknown_030004AC
	adds r0, r7, r1
	movs r5, #0
	str r5, [r0]
	lsrs r3, r4, #2
	lsls r3, r3, #1
	movs r6, #1
	adds r0, r4, #0
	ands r0, r6
	orrs r3, r0
	ldr r2, _08034900 @ =gUnknown_030004B0
	adds r2, r2, r7
	mov ip, r2
	ldr r1, _08034904 @ =gUnknown_080D7358
	lsls r2, r3, #2
	adds r0, r2, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	mov r4, ip
	str r0, [r4]
	ldr r0, _08034908 @ =gUnknown_030004B4
	adds r4, r7, r0
	adds r1, #2
	adds r2, r2, r1
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #8
	str r0, [r4]
	ldr r2, _0803490C @ =gUnknown_030004BB
	adds r0, r7, r2
	strb r3, [r0]
	ldr r3, _08034910 @ =gUnknown_030004BE
	adds r0, r7, r3
	strb r5, [r0]
	ldr r4, _08034914 @ =gUnknown_030004C0
	adds r0, r7, r4
	strb r5, [r0]
	mov r1, r8
	lsrs r0, r1, #2
	lsls r0, r0, #0x19
	ands r1, r6
	lsrs r2, r0, #0x18
	orrs r2, r1
	movs r1, #3
	mov r3, sl
	ands r1, r3
	cmp r1, #0
	beq _0803488C
	subs r4, #1
	adds r0, r7, r4
	strb r2, [r0]
_0803488C:
	ldr r0, _08034918 @ =gUnknown_080D7478
	adds r0, r2, r0
	ldrb r0, [r0]
	ldr r3, _0803491C @ =gUnknown_030004BA
	adds r4, r7, r3
	strb r0, [r4]
	cmp r1, #0
	beq _080348A4
	cmp r0, #0
	beq _080348A4
	subs r0, #1
	strb r0, [r4]
_080348A4:
	ldr r0, _08034920 @ =0x000004BD
	add r0, sb
	movs r4, #0
	mov r1, sl
	strb r1, [r0]
	ldr r0, _08034924 @ =0x000004BC
	add r0, sb
	strb r2, [r0]
	mov r2, sb
	strh r4, [r2]
	strh r4, [r2, #4]
	movs r0, #2
	strh r0, [r2, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2, #6]
	movs r0, #0xff
	strh r0, [r2, #8]
	strh r4, [r2, #0xa]
	mov r0, sb
	bl sub_802D4CC
	mov r1, sb
	adds r1, #0x4c
	ldr r0, _08034928 @ =0x0600C000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _0803492C @ =0x0600E000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	ldr r0, _08034930 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08034938
	ldr r0, _08034934 @ =gUnknown_030054F0
	b _0803493A
	.align 2, 0
_080348F0: .4byte sub_8034D70
_080348F4: .4byte 0x000004C4
_080348F8: .4byte sub_8036040
_080348FC: .4byte gUnknown_030004AC
_08034900: .4byte gUnknown_030004B0
_08034904: .4byte gUnknown_080D7358
_08034908: .4byte gUnknown_030004B4
_0803490C: .4byte gUnknown_030004BB
_08034910: .4byte gUnknown_030004BE
_08034914: .4byte gUnknown_030004C0
_08034918: .4byte gUnknown_080D7478
_0803491C: .4byte gUnknown_030004BA
_08034920: .4byte 0x000004BD
_08034924: .4byte 0x000004BC
_08034928: .4byte 0x0600C000
_0803492C: .4byte 0x0600E000
_08034930: .4byte gUnknown_030054CC
_08034934: .4byte gUnknown_030054F0
_08034938:
	ldr r0, _080349BC @ =gUnknown_03005500
_0803493A:
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x64
	strh r0, [r1, #0x1c]
	movs r6, #0
	movs r4, #0
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r0, #0x1e
	strh r0, [r1, #0x26]
	movs r5, #0x14
	strh r5, [r1, #0x28]
	adds r0, r1, #0
	adds r0, #0x2a
	strb r6, [r0]
	movs r0, #1
	strh r0, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	mov r1, sb
	adds r1, #0xc
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _080349C0 @ =0x06008000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x69
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r0, #0x3c
	strh r0, [r1, #0x26]
	strh r5, [r1, #0x28]
	mov r0, sb
	adds r0, #0x36
	strb r6, [r0]
	strh r4, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	mov r5, sb
	adds r5, #0x8c
	strh r4, [r5, #0x16]
	strh r4, [r5, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _080349C4 @ =0x000002F7
	strh r0, [r5, #0xa]
	ldr r0, _080349C8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _080349D0
	ldr r0, _080349CC @ =gUnknown_030054F0
	b _080349D2
	.align 2, 0
_080349BC: .4byte gUnknown_03005500
_080349C0: .4byte 0x06008000
_080349C4: .4byte 0x000002F7
_080349C8: .4byte gUnknown_030054CC
_080349CC: .4byte gUnknown_030054F0
_080349D0:
	ldr r0, _08034A98 @ =gUnknown_03005500
_080349D2:
	ldrb r1, [r0]
	mov r0, sb
	adds r0, #0xac
	strb r1, [r0]
	movs r2, #0
	movs r1, #0
	movs r0, #0xc0
	strh r0, [r5, #0x1a]
	strh r1, [r5, #8]
	strh r1, [r5, #0x14]
	strh r1, [r5, #0x1c]
	adds r3, r5, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	adds r3, #1
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r5, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r1, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r6, #0
	movs r3, #0xaf
	lsls r3, r3, #2
	add r3, sb
	str r3, [sp, #4]
	ldr r4, _08034A9C @ =0x000002BD
	add r4, sb
	str r4, [sp, #8]
	ldr r0, _08034AA0 @ =0x000002BE
	add r0, sb
	str r0, [sp, #0xc]
	ldr r1, _08034AA4 @ =0x000002C1
	add r1, sb
	str r1, [sp, #0x10]
	movs r2, #0xbb
	lsls r2, r2, #2
	add r2, sb
	str r2, [sp, #0x14]
	ldr r3, _08034AA8 @ =0x000002ED
	add r3, sb
	str r3, [sp, #0x18]
	ldr r4, _08034AAC @ =0x000002EE
	add r4, sb
	str r4, [sp, #0x1c]
	ldr r0, _08034AB0 @ =0x000002F1
	add r0, sb
	str r0, [sp, #0x20]
	movs r1, #0xc7
	lsls r1, r1, #2
	add r1, sb
	str r1, [sp, #0x24]
	movs r7, #0
	ldr r2, _08034AB4 @ =gUnknown_080D72B8
	ldr r3, _08034AB8 @ =gUnknown_080D72E8
	mov r8, r3
_08034A50:
	lsls r1, r6, #1
	adds r1, r1, r6
	lsls r0, r1, #4
	adds r0, #0xbc
	mov r4, sb
	adds r5, r4, r0
	strh r7, [r5, #0x16]
	strh r7, [r5, #0x18]
	lsls r4, r1, #1
	adds r0, r4, r2
	ldrh r0, [r0]
	str r2, [sp, #0x28]
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #3
	mov r1, sl
	ands r0, r1
	ldr r2, [sp, #0x28]
	cmp r0, #0
	beq _08034AC4
	ldr r0, _08034ABC @ =0x000004BA
	add r0, sb
	ldrb r0, [r0]
	cmp r0, r6
	bne _08034AC4
	mov r0, r8
	adds r0, #2
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	ldr r3, _08034AC0 @ =gUnknown_080D72EC
	adds r0, r4, r3
	ldrh r1, [r0]
	b _08034AD8
	.align 2, 0
_08034A98: .4byte gUnknown_03005500
_08034A9C: .4byte 0x000002BD
_08034AA0: .4byte 0x000002BE
_08034AA4: .4byte 0x000002C1
_08034AA8: .4byte 0x000002ED
_08034AAC: .4byte 0x000002EE
_08034AB0: .4byte 0x000002F1
_08034AB4: .4byte gUnknown_080D72B8
_08034AB8: .4byte gUnknown_080D72E8
_08034ABC: .4byte 0x000004BA
_08034AC0: .4byte gUnknown_080D72EC
_08034AC4:
	lsls r1, r6, #1
	adds r1, r1, r6
	lsls r1, r1, #1
	adds r0, r2, #2
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	ldr r4, _08034C54 @ =gUnknown_080D72BC
	adds r1, r1, r4
	ldrh r1, [r1]
_08034AD8:
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r7, [r5, #8]
	strh r7, [r5, #0x14]
	strh r7, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x25
	strb r7, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r7, [r5, #0x10]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #7
	bls _08034A50
	movs r6, #0
	movs r0, #0
	mov r8, r0
	movs r4, #0
_08034B18:
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #4
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r2, sb
	adds r5, r2, r0
	lsls r0, r6, #5
	adds r0, #0xb8
	strh r0, [r5, #0x16]
	strh r4, [r5, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r3, _08034C58 @ =0x000002F6
	strh r3, [r5, #0xa]
	adds r0, r5, #0
	adds r0, #0x20
	mov r1, r8
	strb r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r5, #0x1a]
	strh r4, [r5, #8]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x21
	movs r3, #1
	rsbs r3, r3, #0
	adds r7, r3, #0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	mov r2, r8
	strb r2, [r0]
	mov sl, r3
	str r3, [r5, #0x28]
	str r4, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bls _08034B18
	movs r5, #0xa7
	lsls r5, r5, #2
	add r5, sb
	movs r3, #0
	mov r8, r3
	movs r4, #0
	movs r0, #0x80
	strh r0, [r5, #0x16]
	strh r4, [r5, #0x18]
	movs r0, #0x1a
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _08034C5C @ =0x000002F5
	strh r0, [r5, #0xa]
	mov r1, r8
	ldr r0, [sp, #4]
	strb r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r5, #0x1a]
	strh r4, [r5, #8]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	ldr r3, [sp, #8]
	ldrb r0, [r3]
	orrs r0, r7
	strb r0, [r3]
	movs r1, #0x10
	ldr r0, [sp, #0xc]
	strb r1, [r0]
	mov r3, r8
	ldr r2, [sp, #0x10]
	strb r3, [r2]
	mov r0, sl
	str r0, [r5, #0x28]
	str r4, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r5, #0xb3
	lsls r5, r5, #2
	add r5, sb
	movs r0, #0xf0
	strh r0, [r5, #0x16]
	movs r0, #0x18
	strh r0, [r5, #0x18]
	movs r0, #0x26
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _08034C60 @ =0x000002F9
	strh r0, [r5, #0xa]
	mov r2, r8
	ldr r1, [sp, #0x14]
	strb r2, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	strh r3, [r5, #0x1a]
	strh r4, [r5, #8]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	ldr r1, [sp, #0x18]
	ldrb r0, [r1]
	orrs r0, r7
	strb r0, [r1]
	movs r3, #0x10
	ldr r2, [sp, #0x1c]
	strb r3, [r2]
	mov r1, r8
	ldr r0, [sp, #0x20]
	strb r1, [r0]
	mov r2, sl
	str r2, [r5, #0x28]
	str r4, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r6, #0xbf
	lsls r6, r6, #2
	mov r3, sb
	adds r5, r3, r6
	strh r4, [r5, #0x16]
	strh r4, [r5, #0x18]
	ldr r0, _08034C64 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	cmp r0, #1
	bne _08034C84
	movs r0, #0x18
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _08034C68 @ =0x000002FB
	strh r0, [r5, #0xa]
	ldr r0, _08034C6C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08034C74
	ldr r0, _08034C70 @ =gUnknown_030054F0
	ldrb r0, [r0]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	b _08034CB0
	.align 2, 0
_08034C54: .4byte gUnknown_080D72BC
_08034C58: .4byte 0x000002F6
_08034C5C: .4byte 0x000002F5
_08034C60: .4byte 0x000002F9
_08034C64: .4byte gLoadedSaveGame
_08034C68: .4byte 0x000002FB
_08034C6C: .4byte gUnknown_030054CC
_08034C70: .4byte gUnknown_030054F0
_08034C74:
	ldr r0, _08034C80 @ =gUnknown_03005500
	ldrb r0, [r0]
	ldr r1, [sp, #0x24]
	strb r0, [r1]
	b _08034CB0
	.align 2, 0
_08034C80: .4byte gUnknown_03005500
_08034C84:
	movs r0, #0x1c
	bl sub_8007C10
	str r0, [r5, #4]
	strh r6, [r5, #0xa]
	ldr r0, _08034CA0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08034CA8
	ldr r0, _08034CA4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	ldr r2, [sp, #0x24]
	strb r0, [r2]
	b _08034CB0
	.align 2, 0
_08034CA0: .4byte gUnknown_030054CC
_08034CA4: .4byte gUnknown_030054F0
_08034CA8:
	ldr r0, _08034D64 @ =gUnknown_03005500
	ldrb r0, [r0]
	ldr r3, [sp, #0x24]
	strb r0, [r3]
_08034CB0:
	movs r2, #0
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r1, [r5, #8]
	strh r1, [r5, #0x14]
	strh r1, [r5, #0x1c]
	adds r3, r5, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	adds r3, #1
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r5, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r1, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r6, #0
	movs r7, #0
	movs r2, #0
	ldr r3, _08034D68 @ =gUnknown_080D7458
	adds r4, r3, #2
_08034CEC:
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #4
	movs r1, #0xcb
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r1, sb
	adds r5, r1, r0
	strh r2, [r5, #0x16]
	movs r0, #0x88
	strh r0, [r5, #0x18]
	lsls r0, r6, #3
	adds r0, r0, r6
	lsls r0, r0, #5
	ldr r1, _08034D6C @ =0x06010000
	adds r0, r0, r1
	str r0, [r5, #4]
	lsls r1, r6, #2
	adds r0, r1, r3
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	adds r1, r1, r4
	ldrh r1, [r1]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r2, [r5, #8]
	strh r2, [r5, #0x14]
	strh r2, [r5, #0x1c]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x25
	strb r7, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r2, [r5, #0x10]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #7
	bls _08034CEC
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08034D64: .4byte gUnknown_03005500
_08034D68: .4byte gUnknown_080D7458
_08034D6C: .4byte 0x06010000

	thumb_func_start sub_8034D70
sub_8034D70: @ 0x08034D70
	push {r4, lr}
	ldr r0, _08034D98 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, _08034D9C @ =gUnknown_030004AC
	adds r1, r1, r0
	ldr r0, [r1]
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r0, r2
	str r0, [r1]
	cmp r0, #0
	bge _08034DA0
	movs r0, #0
	str r0, [r1]
	b _08034DAA
	.align 2, 0
_08034D98: .4byte gCurTask
_08034D9C: .4byte gUnknown_030004AC
_08034DA0:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _08034DAA
	str r2, [r1]
_08034DAA:
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08034E2C
	ldr r3, _08034E0C @ =0x000004AC
	adds r2, r4, r3
	ldr r1, [r2]
	movs r0, #0xf0
	lsls r0, r0, #8
	cmp r1, r0
	beq _08034DD4
	adds r3, #4
	adds r0, r4, r3
	ldr r0, [r0]
	ldr r3, _08034E10 @ =0xFFFF8800
	adds r0, r0, r3
	cmp r1, r0
	blt _08034E4C
_08034DD4:
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	ldr r3, _08034E10 @ =0xFFFF8800
	adds r0, r0, r3
	str r0, [r2]
	adds r1, #0xd
	adds r0, r4, r1
	ldrb r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08034E24
	ldr r0, _08034E14 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08034E24
	ldr r2, _08034E18 @ =0x000004BB
	adds r1, r4, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r0, _08034E1C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08034E20 @ =sub_80359D4
	b _08034E2A
	.align 2, 0
_08034E0C: .4byte 0x000004AC
_08034E10: .4byte 0xFFFF8800
_08034E14: .4byte gUnknown_030054CC
_08034E18: .4byte 0x000004BB
_08034E1C: .4byte gCurTask
_08034E20: .4byte sub_80359D4
_08034E24:
	ldr r0, _08034E64 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08034E68 @ =sub_8035124
_08034E2A:
	str r0, [r1, #8]
_08034E2C:
	ldr r3, _08034E6C @ =0x000004AC
	adds r2, r4, r3
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	ldr r3, _08034E70 @ =0xFFFF8800
	adds r1, r0, r3
	ldr r0, [r2]
	cmp r0, r1
	blt _08034E4C
	str r1, [r2]
	cmp r1, #0
	bge _08034E4C
	movs r0, #0
	str r0, [r2]
_08034E4C:
	ldr r1, _08034E74 @ =gBgScrollRegs
	ldr r2, _08034E6C @ =0x000004AC
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08034E64: .4byte gCurTask
_08034E68: .4byte sub_8035124
_08034E6C: .4byte 0x000004AC
_08034E70: .4byte 0xFFFF8800
_08034E74: .4byte gBgScrollRegs

	thumb_func_start sub_8034E78
sub_8034E78: @ 0x08034E78
	push {r4, r5, r6, r7, lr}
	ldr r7, _08034F18 @ =gCurTask
	ldr r0, [r7]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	ldr r0, _08034F1C @ =IWRAM_START + 0x2CC
	adds r1, r4, r0
	ldrh r0, [r1, #0x16]
	subs r0, #0x10
	strh r0, [r1, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08034E9C
	movs r0, #0x50
	strh r0, [r1, #0x16]
_08034E9C:
	adds r0, r5, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08034EF2
	ldr r1, _08034F20 @ =gUnknown_030004AC
	adds r6, r4, r1
	ldr r2, [r6]
	movs r0, #0xf0
	lsls r0, r0, #8
	adds r1, #0x13
	adds r3, r4, r1
	cmp r2, r0
	beq _08034ED2
	ldr r0, _08034F24 @ =gUnknown_080D7488
	ldrb r1, [r3]
	lsls r1, r1, #1
	adds r1, r1, r0
	movs r4, #0
	ldrsh r0, [r1, r4]
	lsls r0, r0, #8
	ldr r1, _08034F28 @ =0xFFFF8800
	adds r0, r0, r1
	cmp r2, r0
	blt _08034EF2
_08034ED2:
	ldr r1, _08034F24 @ =gUnknown_080D7488
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	ldr r3, _08034F28 @ =0xFFFF8800
	adds r0, r0, r3
	str r0, [r6]
	movs r0, #0xd6
	bl m4aSongNumStart
	ldr r1, [r7]
	ldr r0, _08034F2C @ =sub_8034F64
	str r0, [r1, #8]
_08034EF2:
	ldr r4, _08034F30 @ =0x000004AC
	adds r2, r5, r4
	ldr r1, _08034F24 @ =gUnknown_080D7488
	ldr r3, _08034F34 @ =0x000004BF
	adds r0, r5, r3
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r0, r0, #8
	ldr r1, _08034F28 @ =0xFFFF8800
	adds r0, r0, r1
	str r0, [r2]
	cmp r0, #0
	bge _08034F38
	movs r0, #0
	str r0, [r2]
	b _08034F42
	.align 2, 0
_08034F18: .4byte gCurTask
_08034F1C: .4byte IWRAM_START + 0x2CC
_08034F20: .4byte gUnknown_030004AC
_08034F24: .4byte gUnknown_080D7488
_08034F28: .4byte 0xFFFF8800
_08034F2C: .4byte sub_8034F64
_08034F30: .4byte 0x000004AC
_08034F34: .4byte 0x000004BF
_08034F38:
	movs r1, #0xf0
	lsls r1, r1, #8
	cmp r0, r1
	ble _08034F42
	str r1, [r2]
_08034F42:
	ldr r1, _08034F5C @ =gBgScrollRegs
	ldr r2, _08034F60 @ =0x000004AC
	adds r0, r5, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r5, #0
	bl sub_8035FCC
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08034F5C: .4byte gBgScrollRegs
_08034F60: .4byte 0x000004AC

	thumb_func_start sub_8034F64
sub_8034F64: @ 0x08034F64
	push {r4, r5, r6, lr}
	ldr r6, _08034FD0 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r4, r0
	ldr r0, _08034FD4 @ =IWRAM_START + 0x2CC
	adds r5, r4, r0
	ldr r3, _08034FD8 @ =gUnknown_030004BE
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r0, [r5, #0x16]
	subs r0, #0x10
	strh r0, [r5, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08034F92
	movs r0, #0x50
	strh r0, [r5, #0x16]
_08034F92:
	ldr r1, _08034FDC @ =gBgScrollRegs
	ldr r3, _08034FE0 @ =gUnknown_030004AC
	adds r0, r4, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r2, #0
	bl sub_8035B44
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08034FC8
	ldr r1, [r6]
	ldr r0, _08034FE4 @ =sub_8034FF0
	str r0, [r1, #8]
	movs r0, #0xf0
	strh r0, [r5, #0x16]
	ldr r0, _08034FE8 @ =gUnknown_030004BA
	adds r1, r4, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r3, _08034FEC @ =gUnknown_030004BC
	adds r1, r4, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08034FC8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08034FD0: .4byte gCurTask
_08034FD4: .4byte IWRAM_START + 0x2CC
_08034FD8: .4byte gUnknown_030004BE
_08034FDC: .4byte gBgScrollRegs
_08034FE0: .4byte gUnknown_030004AC
_08034FE4: .4byte sub_8034FF0
_08034FE8: .4byte gUnknown_030004BA
_08034FEC: .4byte gUnknown_030004BC

	thumb_func_start sub_8034FF0
sub_8034FF0: @ 0x08034FF0
	push {r4, r5, lr}
	ldr r2, _08035018 @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, _0803501C @ =gUnknown_030004AC
	adds r1, r1, r0
	ldr r0, [r1]
	ldr r3, _08035020 @ =0xFFFFFD00
	adds r0, r0, r3
	str r0, [r1]
	adds r3, r2, #0
	cmp r0, #0
	bge _08035024
	movs r0, #0
	str r0, [r1]
	b _0803502E
	.align 2, 0
_08035018: .4byte gCurTask
_0803501C: .4byte gUnknown_030004AC
_08035020: .4byte 0xFFFFFD00
_08035024:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _0803502E
	str r2, [r1]
_0803502E:
	ldr r5, _0803508C @ =0x000004AC
	adds r2, r4, r5
	ldr r1, [r2]
	cmp r1, #0
	beq _08035046
	adds r5, #4
	adds r0, r4, r5
	ldr r0, [r0]
	ldr r5, _08035090 @ =0xFFFF8800
	adds r0, r0, r5
	cmp r1, r0
	bgt _080350F2
_08035046:
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	ldr r5, _08035090 @ =0xFFFF8800
	adds r0, r0, r5
	str r0, [r2]
	adds r1, #0xd
	adds r0, r4, r1
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080350A8
	ldr r3, _08035094 @ =0x000004BB
	adds r2, r4, r3
	ldr r5, _08035098 @ =0x000004BC
	adds r0, r4, r5
	ldrb r1, [r2]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08035076
	adds r0, r1, #1
	strb r0, [r2]
_08035076:
	ldr r0, _0803509C @ =0x000004BE
	adds r1, r4, r0
	movs r0, #0
	strb r0, [r1]
	movs r0, #0xd5
	bl m4aSongNumStart
	ldr r0, _080350A0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080350A4 @ =sub_80359D4
	b _080350D0
	.align 2, 0
_0803508C: .4byte 0x000004AC
_08035090: .4byte 0xFFFF8800
_08035094: .4byte 0x000004BB
_08035098: .4byte 0x000004BC
_0803509C: .4byte 0x000004BE
_080350A0: .4byte gCurTask
_080350A4: .4byte sub_80359D4
_080350A8:
	ldr r2, _0803510C @ =0x000004BC
	adds r1, r4, r2
	ldrb r0, [r1]
	cmp r0, #0x10
	bne _080350CC
	movs r0, #0xf
	strb r0, [r1]
	movs r5, #0x83
	lsls r5, r5, #2
	adds r2, r4, r5
	ldr r1, _08035110 @ =gUnknown_080D72B8
	ldrh r0, [r1, #0x2c]
	strh r0, [r2, #0xa]
	ldrh r1, [r1, #0x2e]
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r1, [r0]
_080350CC:
	ldr r1, [r3]
	ldr r0, _08035114 @ =sub_8035124
_080350D0:
	str r0, [r1, #8]
	ldr r3, _08035118 @ =0x000004AC
	adds r2, r4, r3
	movs r5, #0x96
	lsls r5, r5, #3
	adds r0, r4, r5
	ldr r0, [r0]
	ldr r3, _0803511C @ =0xFFFF8800
	adds r1, r0, r3
	ldr r0, [r2]
	cmp r0, r1
	bgt _080350F2
	str r1, [r2]
	cmp r1, #0
	bge _080350F2
	movs r0, #0
	str r0, [r2]
_080350F2:
	ldr r1, _08035120 @ =gBgScrollRegs
	ldr r5, _08035118 @ =0x000004AC
	adds r0, r4, r5
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803510C: .4byte 0x000004BC
_08035110: .4byte gUnknown_080D72B8
_08035114: .4byte sub_8035124
_08035118: .4byte 0x000004AC
_0803511C: .4byte 0xFFFF8800
_08035120: .4byte gBgScrollRegs

	thumb_func_start sub_8035124
sub_8035124: @ 0x08035124
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0803519C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _080351A0 @ =IWRAM_START + 0x2CC
	adds r0, r0, r1
	mov ip, r0
	adds r5, r6, #0
	ldr r0, _080351A4 @ =gUnknown_030054CC
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #2
	bls _08035220
	movs r3, #0
	ldr r0, _080351A8 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov r8, r0
	cmp r1, #0
	beq _080351E4
	movs r7, #1
	ldr r2, _080351AC @ =gUnknown_030054D4
_0803515E:
	ldr r1, _080351B0 @ =gMultiSioStatusFlags
	adds r0, r7, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _080351CC
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080351D0
	movs r0, #0
	ldr r1, _080351B4 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _080351B8 @ =gUnknown_03002AE4
	ldr r0, _080351BC @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080351C0 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _080351C4 @ =gUnknown_03004D5C
	ldr r0, _080351C8 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _08035540
	.align 2, 0
_0803519C: .4byte gCurTask
_080351A0: .4byte IWRAM_START + 0x2CC
_080351A4: .4byte gUnknown_030054CC
_080351A8: .4byte gUnknown_030055B8
_080351AC: .4byte gUnknown_030054D4
_080351B0: .4byte gMultiSioStatusFlags
_080351B4: .4byte 0x0000FFFF
_080351B8: .4byte gUnknown_03002AE4
_080351BC: .4byte gUnknown_0300287C
_080351C0: .4byte gUnknown_03005390
_080351C4: .4byte gUnknown_03004D5C
_080351C8: .4byte gUnknown_03002A84
_080351CC:
	movs r0, #0
	strb r0, [r2]
_080351D0:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _080351E4
	mov r1, r8
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r7
	cmp r0, #0
	bne _0803515E
_080351E4:
	mov r2, sb
	ldrb r0, [r2]
	cmp r0, #2
	bls _08035220
	ldr r2, _08035280 @ =gMultiSioRecv
	ldr r0, _08035284 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08035220
	ldrh r1, [r2]
	ldr r0, _08035288 @ =0x0000404F
	cmp r1, r0
	bls _08035220
	ldrb r1, [r2, #2]
	ldr r3, _0803528C @ =0x000004BB
	adds r0, r6, r3
	strb r1, [r0]
	movs r0, #0x96
	lsls r0, r0, #3
	adds r1, r6, r0
	ldrh r0, [r2, #4]
	lsls r0, r0, #8
	str r0, [r1]
	subs r3, #7
	adds r1, r6, r3
	ldrb r0, [r2, #3]
	lsls r0, r0, #8
	str r0, [r1]
_08035220:
	mov r1, ip
	ldrh r0, [r1, #0x16]
	subs r0, #0x10
	movs r3, #0
	strh r0, [r1, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08035236
	movs r0, #0x50
	strh r0, [r1, #0x16]
_08035236:
	mov r0, sb
	ldrb r2, [r0]
	cmp r2, #2
	bls _0803524C
	ldr r0, _08035284 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0803524C
	b _0803543E
_0803524C:
	movs r1, #0x98
	lsls r1, r1, #3
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08035298
	cmp r2, #2
	bhi _08035298
	strh r3, [r5]
	strh r3, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r3, [r5, #0xa]
	movs r0, #0x6a
	bl m4aSongNumStart
	ldr r0, _08035290 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08035294 @ =sub_8035E70
	b _0803543C
	.align 2, 0
_08035280: .4byte gMultiSioRecv
_08035284: .4byte gMultiSioStatusFlags
_08035288: .4byte 0x0000404F
_0803528C: .4byte 0x000004BB
_08035290: .4byte gCurTask
_08035294: .4byte sub_8035E70
_08035298:
	ldr r2, _080352F0 @ =gInput
	ldrh r1, [r2]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08035304
	movs r3, #0x98
	lsls r3, r3, #3
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08035304
	ldr r1, _080352F4 @ =0x000004BB
	adds r0, r6, r1
	ldrb r1, [r0]
	adds r2, r1, #0
	cmp r2, #0
	bne _080352BE
	b _0803543E
_080352BE:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080352CA
	cmp r2, #0xd
	bls _080352D0
_080352CA:
	movs r0, #0xf0
	mov r2, ip
	strh r0, [r2, #0x16]
_080352D0:
	ldr r3, _080352F8 @ =0x000004BE
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080352F4 @ =0x000004BB
	adds r1, r6, r0
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r0, #0xd5
	bl m4aSongNumStart
	ldr r0, _080352FC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08035300 @ =sub_8035554
	b _0803543C
	.align 2, 0
_080352F0: .4byte gInput
_080352F4: .4byte 0x000004BB
_080352F8: .4byte 0x000004BE
_080352FC: .4byte gCurTask
_08035300: .4byte sub_8035554
_08035304:
	ldrh r1, [r2]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08035374
	movs r1, #0x98
	lsls r1, r1, #3
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08035374
	ldr r2, _08035360 @ =0x000004BB
	adds r0, r6, r2
	ldr r3, _08035364 @ =0x000004BC
	adds r1, r6, r3
	ldrb r2, [r0]
	adds r3, r2, #0
	ldrb r1, [r1]
	cmp r3, r1
	blo _0803532E
	b _0803543E
_0803532E:
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _0803533A
	cmp r3, #0xd
	bls _08035340
_0803533A:
	movs r0, #0xf0
	mov r1, ip
	strh r0, [r1, #0x16]
_08035340:
	ldr r2, _08035368 @ =0x000004BE
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	ldr r3, _08035360 @ =0x000004BB
	adds r1, r6, r3
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r0, #0xd5
	bl m4aSongNumStart
	ldr r0, _0803536C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08035370 @ =sub_8035750
	b _0803543C
	.align 2, 0
_08035360: .4byte 0x000004BB
_08035364: .4byte 0x000004BC
_08035368: .4byte 0x000004BE
_0803536C: .4byte gCurTask
_08035370: .4byte sub_8035750
_08035374:
	ldrh r0, [r2]
	movs r3, #0x30
	ands r3, r0
	ldr r7, _080353B4 @ =gPressedKeys
	cmp r3, #0
	bne _080353C0
	ldrh r1, [r7]
	movs r4, #1
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080353C0
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #2
	bhi _080353C0
	strh r3, [r5]
	strh r3, [r5, #4]
	strh r4, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r3, [r5, #0xa]
	movs r0, #0x6a
	bl m4aSongNumStart
	ldr r0, _080353B8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080353BC @ =sub_8035E70
	b _0803543C
	.align 2, 0
_080353B4: .4byte gPressedKeys
_080353B8: .4byte gCurTask
_080353BC: .4byte sub_8035E70
_080353C0:
	ldrh r1, [r7]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08035400
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #2
	bhi _08035400
	movs r1, #0
	strh r1, [r5]
	strh r1, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r1, [r5, #0xa]
	movs r0, #0x6b
	bl m4aSongNumStart
	ldr r0, _080353F8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080353FC @ =sub_8035F60
	b _0803543C
	.align 2, 0
_080353F8: .4byte gCurTask
_080353FC: .4byte sub_8035F60
_08035400:
	ldrh r0, [r2]
	movs r2, #0x30
	ands r2, r0
	cmp r2, #0
	bne _0803543E
	ldrh r1, [r7]
	movs r3, #1
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0803543E
	ldr r0, _080354F0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0803543E
	strh r2, [r5]
	strh r2, [r5, #4]
	strh r3, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #0x6a
	bl m4aSongNumStart
	ldr r0, _080354F4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080354F8 @ =sub_8035EF0
_0803543C:
	str r0, [r1, #8]
_0803543E:
	ldr r0, _080354F0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _080354D4
	ldr r2, _080354FC @ =gMultiSioSend
	ldr r0, _08035500 @ =0x00004050
	strh r0, [r2]
	ldr r1, _08035504 @ =0x000004BB
	adds r0, r6, r1
	ldrb r0, [r0]
	strb r0, [r2, #2]
	movs r3, #0x96
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r2, #4]
	subs r1, #7
	adds r0, r6, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	strb r0, [r2, #3]
	ldr r0, _08035508 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080354A6
	ldr r0, _0803550C @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0803548C
	adds r3, #0x10
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080354A6
_0803548C:
	ldr r0, _08035510 @ =gRepeatedKeys
	ldrh r1, [r0]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	bne _080354A6
	movs r1, #0x98
	lsls r1, r1, #3
	adds r0, r6, r1
	movs r1, #1
	strb r1, [r0]
	ldr r0, _08035514 @ =0x00004051
	strh r0, [r2]
_080354A6:
	ldr r2, _08035518 @ =gMultiSioRecv
	ldrh r1, [r2]
	ldr r0, _08035514 @ =0x00004051
	cmp r1, r0
	bne _080354D4
	movs r1, #0
	strh r1, [r5]
	strh r1, [r5, #4]
	movs r0, #1
	strh r0, [r5, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r5, #6]
	movs r0, #0xff
	strh r0, [r5, #8]
	strh r1, [r5, #0xa]
	ldr r0, _080354F4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080354F8 @ =sub_8035EF0
	str r0, [r1, #8]
	movs r0, #0x6a
	bl m4aSongNumStart
_080354D4:
	ldr r2, _0803551C @ =0x000004AC
	adds r1, r6, r2
	movs r3, #0x96
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r0, [r0]
	ldr r2, _08035520 @ =0xFFFF8800
	adds r0, r0, r2
	str r0, [r1]
	cmp r0, #0
	bge _08035524
	movs r0, #0
	str r0, [r1]
	b _0803552E
	.align 2, 0
_080354F0: .4byte gUnknown_030054CC
_080354F4: .4byte gCurTask
_080354F8: .4byte sub_8035EF0
_080354FC: .4byte gMultiSioSend
_08035500: .4byte 0x00004050
_08035504: .4byte 0x000004BB
_08035508: .4byte gMultiSioStatusFlags
_0803550C: .4byte gPressedKeys
_08035510: .4byte gRepeatedKeys
_08035514: .4byte 0x00004051
_08035518: .4byte gMultiSioRecv
_0803551C: .4byte 0x000004AC
_08035520: .4byte 0xFFFF8800
_08035524:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _0803552E
	str r2, [r1]
_0803552E:
	ldr r1, _0803554C @ =gBgScrollRegs
	ldr r3, _08035550 @ =0x000004AC
	adds r0, r6, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r6, #0
	bl sub_8035FCC
_08035540:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803554C: .4byte gBgScrollRegs
_08035550: .4byte 0x000004AC

	thumb_func_start sub_8035554
sub_8035554: @ 0x08035554
	push {r4, r5, r6, r7, lr}
	ldr r0, _080355C0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _080355C4 @ =IWRAM_START + 0x2CC
	adds r7, r1, r0
	ldr r0, _080355C8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08035608
	movs r3, #0
	ldr r0, _080355CC @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov ip, r0
	cmp r1, #0
	beq _08035608
	movs r5, #1
	ldr r2, _080355D0 @ =gUnknown_030054D4
_08035582:
	ldr r1, _080355D4 @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _080355F0
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080355F4
	movs r0, #0
	ldr r1, _080355D8 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _080355DC @ =gUnknown_03002AE4
	ldr r0, _080355E0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080355E4 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _080355E8 @ =gUnknown_03004D5C
	ldr r0, _080355EC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0803572C
	.align 2, 0
_080355C0: .4byte gCurTask
_080355C4: .4byte IWRAM_START + 0x2CC
_080355C8: .4byte gUnknown_030054CC
_080355CC: .4byte gUnknown_030055B8
_080355D0: .4byte gUnknown_030054D4
_080355D4: .4byte gMultiSioStatusFlags
_080355D8: .4byte 0x0000FFFF
_080355DC: .4byte gUnknown_03002AE4
_080355E0: .4byte gUnknown_0300287C
_080355E4: .4byte gUnknown_03005390
_080355E8: .4byte gUnknown_03004D5C
_080355EC: .4byte gUnknown_03002A84
_080355F0:
	movs r0, #0
	strb r0, [r2]
_080355F4:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _08035608
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _08035582
_08035608:
	ldrh r0, [r7, #0x16]
	subs r0, #0x10
	strh r0, [r7, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _0803561A
	movs r0, #0x50
	strh r0, [r7, #0x16]
_0803561A:
	movs r2, #0x96
	lsls r2, r2, #3
	adds r7, r6, r2
	ldr r3, _080356AC @ =gUnknown_08097AA4
	ldr r2, _080356B0 @ =gUnknown_080D74C8
	ldr r0, _080356B4 @ =0x000004BB
	adds r5, r6, r0
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x15
	ldr r0, [r7]
	adds r0, r0, r1
	str r0, [r7]
	ldr r0, _080356B8 @ =0x000004B4
	adds r4, r6, r0
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x15
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, _080356BC @ =gUnknown_080D7358
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ldr r0, [r7]
	cmp r0, r2
	bge _08035696
	str r2, [r7]
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	str r0, [r4]
	movs r0, #0xd7
	bl m4aSongNumStart
	ldr r0, _080356C0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080356C4 @ =sub_803594C
	str r0, [r1, #8]
_08035696:
	ldr r2, _080356C8 @ =0x000004AC
	adds r1, r6, r2
	ldr r0, [r7]
	ldr r2, _080356CC @ =0xFFFF8800
	adds r0, r0, r2
	str r0, [r1]
	cmp r0, #0
	bge _080356D0
	movs r0, #0
	str r0, [r1]
	b _080356DA
	.align 2, 0
_080356AC: .4byte gUnknown_08097AA4
_080356B0: .4byte gUnknown_080D74C8
_080356B4: .4byte 0x000004BB
_080356B8: .4byte 0x000004B4
_080356BC: .4byte gUnknown_080D7358
_080356C0: .4byte gCurTask
_080356C4: .4byte sub_803594C
_080356C8: .4byte 0x000004AC
_080356CC: .4byte 0xFFFF8800
_080356D0:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _080356DA
	str r2, [r1]
_080356DA:
	ldr r0, _08035734 @ =gInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080356F0
	movs r0, #0x98
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
_080356F0:
	ldr r0, _08035738 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0803571A
	ldr r1, _0803573C @ =gMultiSioSend
	ldr r0, _08035740 @ =0x00004050
	strh r0, [r1]
	ldr r2, _08035744 @ =0x000004BB
	adds r0, r6, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
	subs r2, #0xb
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1, #4]
	adds r2, #4
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strb r0, [r1, #3]
_0803571A:
	ldr r1, _08035748 @ =gBgScrollRegs
	ldr r2, _0803574C @ =0x000004AC
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r6, #0
	bl sub_8035FCC
_0803572C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08035734: .4byte gInput
_08035738: .4byte gUnknown_030054CC
_0803573C: .4byte gMultiSioSend
_08035740: .4byte 0x00004050
_08035744: .4byte 0x000004BB
_08035748: .4byte gBgScrollRegs
_0803574C: .4byte 0x000004AC

	thumb_func_start sub_8035750
sub_8035750: @ 0x08035750
	push {r4, r5, r6, r7, lr}
	ldr r0, _080357BC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _080357C0 @ =IWRAM_START + 0x2CC
	adds r7, r1, r0
	ldr r0, _080357C4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08035804
	movs r3, #0
	ldr r0, _080357C8 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov ip, r0
	cmp r1, #0
	beq _08035804
	movs r5, #1
	ldr r2, _080357CC @ =gUnknown_030054D4
_0803577E:
	ldr r1, _080357D0 @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _080357EC
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _080357F0
	movs r0, #0
	ldr r1, _080357D4 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _080357D8 @ =gUnknown_03002AE4
	ldr r0, _080357DC @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _080357E0 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _080357E4 @ =gUnknown_03004D5C
	ldr r0, _080357E8 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _08035928
	.align 2, 0
_080357BC: .4byte gCurTask
_080357C0: .4byte IWRAM_START + 0x2CC
_080357C4: .4byte gUnknown_030054CC
_080357C8: .4byte gUnknown_030055B8
_080357CC: .4byte gUnknown_030054D4
_080357D0: .4byte gMultiSioStatusFlags
_080357D4: .4byte 0x0000FFFF
_080357D8: .4byte gUnknown_03002AE4
_080357DC: .4byte gUnknown_0300287C
_080357E0: .4byte gUnknown_03005390
_080357E4: .4byte gUnknown_03004D5C
_080357E8: .4byte gUnknown_03002A84
_080357EC:
	movs r0, #0
	strb r0, [r2]
_080357F0:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _08035804
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0803577E
_08035804:
	ldrh r0, [r7, #0x16]
	subs r0, #0x10
	strh r0, [r7, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08035816
	movs r0, #0x50
	strh r0, [r7, #0x16]
_08035816:
	movs r2, #0x96
	lsls r2, r2, #3
	adds r7, r6, r2
	ldr r3, _080358A8 @ =gUnknown_08097AA4
	ldr r2, _080358AC @ =gUnknown_080D74E8
	ldr r0, _080358B0 @ =0x000004BB
	adds r5, r6, r0
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x15
	ldr r0, [r7]
	adds r0, r0, r1
	str r0, [r7]
	ldr r0, _080358B4 @ =0x000004B4
	adds r4, r6, r0
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x15
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, _080358B8 @ =gUnknown_080D7358
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ldr r0, [r7]
	cmp r0, r2
	ble _08035892
	str r2, [r7]
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	str r0, [r4]
	movs r0, #0xd7
	bl m4aSongNumStart
	ldr r0, _080358BC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080358C0 @ =sub_803594C
	str r0, [r1, #8]
_08035892:
	ldr r2, _080358C4 @ =0x000004AC
	adds r1, r6, r2
	ldr r0, [r7]
	ldr r2, _080358C8 @ =0xFFFF8800
	adds r0, r0, r2
	str r0, [r1]
	cmp r0, #0
	bge _080358CC
	movs r0, #0
	str r0, [r1]
	b _080358D6
	.align 2, 0
_080358A8: .4byte gUnknown_08097AA4
_080358AC: .4byte gUnknown_080D74E8
_080358B0: .4byte 0x000004BB
_080358B4: .4byte 0x000004B4
_080358B8: .4byte gUnknown_080D7358
_080358BC: .4byte gCurTask
_080358C0: .4byte sub_803594C
_080358C4: .4byte 0x000004AC
_080358C8: .4byte 0xFFFF8800
_080358CC:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _080358D6
	str r2, [r1]
_080358D6:
	ldr r0, _08035930 @ =gInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080358EC
	movs r0, #0x98
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
_080358EC:
	ldr r0, _08035934 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08035916
	ldr r1, _08035938 @ =gMultiSioSend
	ldr r0, _0803593C @ =0x00004050
	strh r0, [r1]
	ldr r2, _08035940 @ =0x000004BB
	adds r0, r6, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
	subs r2, #0xb
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1, #4]
	adds r2, #4
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strb r0, [r1, #3]
_08035916:
	ldr r1, _08035944 @ =gBgScrollRegs
	ldr r2, _08035948 @ =0x000004AC
	adds r0, r6, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r6, #0
	bl sub_8035FCC
_08035928:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08035930: .4byte gInput
_08035934: .4byte gUnknown_030054CC
_08035938: .4byte gMultiSioSend
_0803593C: .4byte 0x00004050
_08035940: .4byte 0x000004BB
_08035944: .4byte gBgScrollRegs
_08035948: .4byte 0x000004AC

	thumb_func_start sub_803594C
sub_803594C: @ 0x0803594C
	push {r4, lr}
	ldr r3, _080359B4 @ =gCurTask
	ldr r0, [r3]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	ldr r0, _080359B8 @ =IWRAM_START + 0x2CC
	adds r1, r2, r0
	ldrh r0, [r1, #0x16]
	subs r0, #0x10
	strh r0, [r1, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08035970
	movs r0, #0x50
	strh r0, [r1, #0x16]
_08035970:
	ldr r0, _080359BC @ =gUnknown_030004BE
	adds r1, r2, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bls _08035988
	ldr r1, [r3]
	ldr r0, _080359C0 @ =sub_8035124
	str r0, [r1, #8]
_08035988:
	ldr r0, _080359C4 @ =gInput
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0803599C
	ldr r3, _080359C8 @ =gUnknown_030004C0
	adds r1, r2, r3
	movs r0, #1
	strb r0, [r1]
_0803599C:
	ldr r1, _080359CC @ =gBgScrollRegs
	ldr r3, _080359D0 @ =gUnknown_030004AC
	adds r0, r2, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080359B4: .4byte gCurTask
_080359B8: .4byte IWRAM_START + 0x2CC
_080359BC: .4byte gUnknown_030004BE
_080359C0: .4byte sub_8035124
_080359C4: .4byte gInput
_080359C8: .4byte gUnknown_030004C0
_080359CC: .4byte gBgScrollRegs
_080359D0: .4byte gUnknown_030004AC

	thumb_func_start sub_80359D4
sub_80359D4: @ 0x080359D4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _08035A94 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov r8, r0
	ldr r2, _08035A98 @ =IWRAM_START + 0x2CC
	adds r1, r7, r2
	ldrh r0, [r1, #0x16]
	subs r0, #0x10
	strh r0, [r1, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x4f
	bgt _08035A02
	movs r0, #0x50
	strh r0, [r1, #0x16]
_08035A02:
	ldr r0, _08035A9C @ =gUnknown_030004B0
	adds r6, r7, r0
	ldr r3, _08035AA0 @ =gUnknown_08097AA4
	ldr r2, _08035AA4 @ =gUnknown_080D74E8
	ldr r1, _08035AA8 @ =gUnknown_030004BB
	adds r5, r7, r1
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	ldr r0, _08035AAC @ =gUnknown_030004B4
	adds r4, r7, r0
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, _08035AB0 @ =gUnknown_080D7358
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r2, r0, #8
	ldr r0, [r6]
	cmp r0, r2
	ble _08035A7C
	str r2, [r6]
	ldrb r0, [r5]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #8
	str r0, [r4]
	movs r0, #0xd7
	bl m4aSongNumStart
	mov r2, sb
	ldr r1, [r2]
	ldr r0, _08035AB4 @ =sub_8035AF0
	str r0, [r1, #8]
_08035A7C:
	ldr r0, _08035AB8 @ =gUnknown_030004AC
	adds r1, r7, r0
	ldr r0, [r6]
	ldr r2, _08035ABC @ =0xFFFF8800
	adds r0, r0, r2
	str r0, [r1]
	cmp r0, #0
	bge _08035AC0
	movs r0, #0
	str r0, [r1]
	b _08035ACA
	.align 2, 0
_08035A94: .4byte gCurTask
_08035A98: .4byte IWRAM_START + 0x2CC
_08035A9C: .4byte gUnknown_030004B0
_08035AA0: .4byte gUnknown_08097AA4
_08035AA4: .4byte gUnknown_080D74E8
_08035AA8: .4byte gUnknown_030004BB
_08035AAC: .4byte gUnknown_030004B4
_08035AB0: .4byte gUnknown_080D7358
_08035AB4: .4byte sub_8035AF0
_08035AB8: .4byte gUnknown_030004AC
_08035ABC: .4byte 0xFFFF8800
_08035AC0:
	movs r2, #0xf0
	lsls r2, r2, #8
	cmp r0, r2
	ble _08035ACA
	str r2, [r1]
_08035ACA:
	ldr r1, _08035AE8 @ =gBgScrollRegs
	ldr r0, _08035AEC @ =0x000004AC
	add r0, r8
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	mov r0, r8
	bl sub_8035FCC
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08035AE8: .4byte gBgScrollRegs
_08035AEC: .4byte 0x000004AC

	thumb_func_start sub_8035AF0
sub_8035AF0: @ 0x08035AF0
	push {r4, lr}
	ldr r4, _08035B38 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	ldr r0, _08035B3C @ =gUnknown_030004BE
	adds r1, r1, r0
	ldrb r0, [r1]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r3, #0
	strb r0, [r1]
	cmp r0, #0x3c
	bls _08035B2C
	strh r3, [r2]
	strh r3, [r2, #4]
	movs r0, #1
	strh r0, [r2, #2]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r2, #6]
	movs r0, #0xff
	strh r0, [r2, #8]
	strh r3, [r2, #0xa]
	ldr r1, [r4]
	ldr r0, _08035B40 @ =sub_8035E70
	str r0, [r1, #8]
_08035B2C:
	adds r0, r2, #0
	bl sub_8035FCC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08035B38: .4byte gCurTask
_08035B3C: .4byte gUnknown_030004BE
_08035B40: .4byte sub_8035E70

	thumb_func_start sub_8035B44
sub_8035B44: @ 0x08035B44
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	movs r4, #0
	ldr r1, _08035BF4 @ =0x000004BA
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r4, r0
	bhs _08035B9C
	ldr r7, _08035BF8 @ =gUnknown_080D74A8
	adds r0, r7, #2
	mov r8, r0
_08035B5E:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0xbc
	adds r5, r6, r0
	lsls r2, r4, #2
	adds r3, r2, r7
	ldr r1, _08035BFC @ =0x000004AC
	adds r0, r6, r1
	ldr r1, [r0]
	asrs r1, r1, #8
	ldrh r0, [r3]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	add r2, r8
	ldrh r0, [r2]
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, _08035BF4 @ =0x000004BA
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r4, r0
	blo _08035B5E
_08035B9C:
	ldr r0, _08035BF4 @ =0x000004BA
	adds r4, r6, r0
	ldrb r2, [r4]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0xbc
	adds r5, r6, r0
	ldr r3, _08035BF8 @ =gUnknown_080D74A8
	lsls r2, r2, #2
	adds r2, r2, r3
	ldr r1, _08035BFC @ =0x000004AC
	adds r0, r6, r1
	ldr r1, [r0]
	asrs r1, r1, #8
	ldrh r0, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r3, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	movs r4, #0
	cmp r0, #0
	bne _08035BDA
	movs r4, #1
_08035BDA:
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r6, #0
	bl sub_8035C00
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08035BF4: .4byte 0x000004BA
_08035BF8: .4byte gUnknown_080D74A8
_08035BFC: .4byte 0x000004AC

	thumb_func_start sub_8035C00
sub_8035C00: @ 0x08035C00
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	ldr r0, _08035D68 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	mov r8, r1
	cmp r0, #1
	bgt _08035C1E
	movs r2, #0
	mov r8, r2
_08035C1E:
	adds r5, r6, #0
	adds r5, #0x8c
	movs r3, #0x96
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r2, _08035D6C @ =0x000004AC
	adds r1, r6, r2
	ldr r0, [r0]
	ldr r1, [r1]
	subs r0, r0, r1
	asrs r0, r0, #8
	adds r0, #5
	strh r0, [r5, #0x16]
	adds r3, #4
	adds r0, r6, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r0, #6
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	ldr r0, _08035D70 @ =0x000004BB
	adds r7, r6, r0
	ldrb r0, [r7]
	cmp r0, #0xd
	bhi _08035CAA
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r5, r6, r1
	ldr r4, _08035D74 @ =0x000002F6
	strh r4, [r5, #0xa]
	ldrb r0, [r7]
	lsrs r0, r0, #1
	movs r2, #0x97
	lsls r2, r2, #2
	adds r1, r6, r2
	strb r0, [r1]
	ldr r3, _08035D78 @ =0x0000025D
	adds r1, r6, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0x9b
	lsls r0, r0, #2
	adds r5, r6, r0
	strh r4, [r5, #0xa]
	ldrb r1, [r7]
	movs r0, #1
	ands r0, r1
	movs r2, #0xa3
	lsls r2, r2, #2
	adds r1, r6, r2
	strb r0, [r1]
	ldr r3, _08035D7C @ =0x0000028D
	adds r1, r6, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08035CAA:
	movs r0, #0xa7
	lsls r0, r0, #2
	adds r5, r6, r0
	ldr r1, _08035D80 @ =gUnknown_080D7418
	ldrb r0, [r7]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	ldrb r0, [r7]
	lsls r0, r0, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r2, #0xaf
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r1, [r0]
	ldr r3, _08035D84 @ =0x000002BD
	adds r1, r6, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xb3
	lsls r0, r0, #2
	adds r5, r6, r0
	ldr r2, _08035D88 @ =gUnknown_080D7398
	ldrb r0, [r7]
	mov r3, r8
	lsls r1, r3, #0x18
	asrs r1, r1, #0x14
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r5, #0xa]
	ldrb r0, [r7]
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, #2
	adds r0, r0, r2
	ldrh r1, [r0]
	movs r2, #0xbb
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r1, [r0]
	ldr r3, _08035D8C @ =0x000002ED
	adds r1, r6, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xbf
	lsls r0, r0, #2
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_80051E8
	ldr r0, _08035D90 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08035DBE
	movs r4, #0
_08035D3C:
	ldr r0, _08035D68 @ =gLoadedSaveGame
	ldr r1, [r0]
	ldr r0, _08035D94 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, #0xc
	adds r1, r1, r0
	ldrb r0, [r1]
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08035D98
	lsls r1, r4, #1
	adds r0, r1, r4
	lsls r0, r0, #4
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r0, r2
	adds r5, r6, r0
	b _08035DA0
	.align 2, 0
_08035D68: .4byte gLoadedSaveGame
_08035D6C: .4byte 0x000004AC
_08035D70: .4byte 0x000004BB
_08035D74: .4byte 0x000002F6
_08035D78: .4byte 0x0000025D
_08035D7C: .4byte 0x0000028D
_08035D80: .4byte gUnknown_080D7418
_08035D84: .4byte 0x000002BD
_08035D88: .4byte gUnknown_080D7398
_08035D8C: .4byte 0x000002ED
_08035D90: .4byte gUnknown_030054CC
_08035D94: .4byte gUnknown_030054F0
_08035D98:
	movs r3, #0xcb
	lsls r3, r3, #2
	adds r5, r6, r3
	lsls r1, r4, #1
_08035DA0:
	adds r0, r1, r4
	lsls r0, r0, #3
	adds r0, #0x24
	strh r0, [r5, #0x16]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #6
	bls _08035D3C
_08035DBE:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8035DC8
sub_8035DC8: @ 0x08035DC8
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x90
	ldr r0, [r4]
	cmp r0, #0
	beq _08035DDE
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035DDE:
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0xc0
_08035DE4:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r4, r7, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035DFA
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035DFA:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _08035DE4
	movs r0, #0x90
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035E18
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035E18:
	movs r0, #0x9c
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035E2C
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035E2C:
	movs r0, #0xa8
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035E40
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035E40:
	movs r0, #0xb4
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035E54
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035E54:
	movs r0, #0xc0
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08035E68
	bl sub_8007CF0
	movs r0, #0
	str r0, [r4]
_08035E68:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8035E70
sub_8035E70: @ 0x08035E70
	push {r4, r5, lr}
	ldr r0, _08035EAC @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08035ED0
	adds r0, r4, #0
	bl sub_8035DC8
	ldr r2, _08035EB0 @ =gUnknown_030055B4
	ldr r1, _08035EB4 @ =gUnknown_080D7508
	ldr r3, _08035EB8 @ =gUnknown_030004BB
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	cmp r0, #0x1d
	beq _08035EBC
	bl sub_801A770
	b _08035EC0
	.align 2, 0
_08035EAC: .4byte gCurTask
_08035EB0: .4byte gUnknown_030055B4
_08035EB4: .4byte gUnknown_080D7508
_08035EB8: .4byte gUnknown_030004BB
_08035EBC:
	bl sub_8036C54
_08035EC0:
	ldr r0, _08035ECC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08035EE2
	.align 2, 0
_08035ECC: .4byte gCurTask
_08035ED0:
	ldr r1, _08035EE8 @ =gBgScrollRegs
	ldr r2, _08035EEC @ =gUnknown_030004AC
	adds r0, r5, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
_08035EE2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08035EE8: .4byte gBgScrollRegs
_08035EEC: .4byte gUnknown_030004AC

	thumb_func_start sub_8035EF0
sub_8035EF0: @ 0x08035EF0
	push {r4, r5, r6, lr}
	ldr r6, _08035F30 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08035F40
	adds r0, r4, #0
	bl sub_8035DC8
	ldr r2, _08035F34 @ =gUnknown_030055B4
	ldr r1, _08035F38 @ =gUnknown_080D7508
	ldr r3, _08035F3C @ =gUnknown_030004BB
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	bl sub_801A770
	ldr r0, [r6]
	bl TaskDestroy
	b _08035F52
	.align 2, 0
_08035F30: .4byte gCurTask
_08035F34: .4byte gUnknown_030055B4
_08035F38: .4byte gUnknown_080D7508
_08035F3C: .4byte gUnknown_030004BB
_08035F40:
	ldr r1, _08035F58 @ =gBgScrollRegs
	ldr r2, _08035F5C @ =gUnknown_030004AC
	adds r0, r5, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
_08035F52:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08035F58: .4byte gBgScrollRegs
_08035F5C: .4byte gUnknown_030004AC

	thumb_func_start sub_8035F60
sub_8035F60: @ 0x08035F60
	push {r4, r5, r6, lr}
	ldr r6, _08035FA0 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08035FAC
	adds r0, r4, #0
	bl sub_8035DC8
	ldr r0, _08035FA4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	ldr r1, _08035FA8 @ =gLoadedSaveGame
	ldr r1, [r1]
	ldrb r2, [r1, #0x13]
	movs r1, #0x10
	ands r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl sub_803143C
	ldr r0, [r6]
	bl TaskDestroy
	b _08035FBE
	.align 2, 0
_08035FA0: .4byte gCurTask
_08035FA4: .4byte gUnknown_030054F0
_08035FA8: .4byte gLoadedSaveGame
_08035FAC:
	ldr r1, _08035FC4 @ =gBgScrollRegs
	ldr r2, _08035FC8 @ =gUnknown_030004AC
	adds r0, r5, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_8035FCC
_08035FBE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08035FC4: .4byte gBgScrollRegs
_08035FC8: .4byte gUnknown_030004AC

	thumb_func_start sub_8035FCC
sub_8035FCC: @ 0x08035FCC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	movs r6, #0
	ldr r1, _08036034 @ =0x000004BA
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r6, r0
	bhs _08036024
	ldr r7, _08036038 @ =gUnknown_080D74A8
	adds r0, r7, #2
	mov r8, r0
_08035FE6:
	lsls r4, r6, #1
	adds r4, r4, r6
	lsls r4, r4, #4
	adds r4, #0xbc
	adds r4, r5, r4
	lsls r2, r6, #2
	adds r3, r2, r7
	ldr r1, _0803603C @ =0x000004AC
	adds r0, r5, r1
	ldr r1, [r0]
	asrs r1, r1, #8
	ldrh r0, [r3]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	add r2, r8
	ldrh r0, [r2]
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r1, _08036034 @ =0x000004BA
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r6, r0
	blo _08035FE6
_08036024:
	adds r0, r5, #0
	bl sub_8035C00
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08036034: .4byte 0x000004BA
_08036038: .4byte gUnknown_080D74A8
_0803603C: .4byte 0x000004AC

	thumb_func_start sub_8036040
sub_8036040: @ 0x08036040
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	bl sub_8035DC8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8036054
sub_8036054: @ 0x08036054
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r2, _080360A8 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _080360AC @ =sub_8036168
	movs r2, #0xc0
	lsls r2, r2, #6
	ldr r1, _080360B0 @ =sub_8036638
	str r1, [sp]
	movs r1, #0x6c
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r2, r0
	ldr r1, _080360B4 @ =IWRAM_START + 0x6A
	adds r0, r2, r1
	movs r1, #0
	strb r1, [r0]
	ldr r3, _080360B8 @ =IWRAM_START + 0x6B
	adds r0, r2, r3
	strb r1, [r0]
	cmp r4, #0
	bne _080360C0
	ldr r0, _080360BC @ =IWRAM_START + 0x68
	adds r1, r2, r0
	movs r0, #0x9b
	lsls r0, r0, #1
	b _080360C6
	.align 2, 0
_080360A8: .4byte gUnknown_03005424
_080360AC: .4byte sub_8036168
_080360B0: .4byte sub_8036638
_080360B4: .4byte IWRAM_START + 0x6A
_080360B8: .4byte IWRAM_START + 0x6B
_080360BC: .4byte IWRAM_START + 0x68
_080360C0:
	ldr r3, _0803615C @ =IWRAM_START + 0x68
	adds r1, r2, r3
	movs r0, #0xb4
_080360C6:
	strh r0, [r1]
	adds r4, r7, #0
	adds r4, #0x30
	movs r0, #4
	bl sub_8007C10
	str r0, [r4, #4]
	movs r6, #0
	movs r5, #0
	ldr r0, _08036160 @ =0x00000469
	strh r0, [r4, #0xa]
	adds r0, r7, #0
	adds r0, #0x50
	strb r6, [r0]
	adds r1, r7, #0
	adds r1, #0x51
	movs r0, #0xff
	strb r0, [r1]
	adds r0, #1
	strh r0, [r4, #0x1a]
	strh r5, [r4, #8]
	strh r5, [r4, #0x14]
	strh r5, [r4, #0x1c]
	adds r0, r7, #0
	adds r0, #0x52
	movs r1, #0x10
	mov sb, r1
	mov r3, sb
	strb r3, [r0]
	adds r0, #3
	strb r6, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
	str r0, [r4, #0x28]
	str r5, [r4, #0x10]
	movs r0, #0xe
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08036164 @ =0x00000212
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r6, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	mov r1, sb
	strb r1, [r0]
	adds r0, #3
	strb r6, [r0]
	mov r3, r8
	str r3, [r7, #0x28]
	movs r0, #0x90
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803615C: .4byte IWRAM_START + 0x68
_08036160: .4byte 0x00000469
_08036164: .4byte 0x00000212

	thumb_func_start sub_8036168
sub_8036168: @ 0x08036168
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _080361B4 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _080361B8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bhi _0803619E
	ldr r0, _080361BC @ =IWRAM_START + 0x68
	adds r2, r1, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0xb4
	ble _0803619E
	ldr r0, _080361C0 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0803619E
	movs r0, #0xb4
	strh r0, [r2]
_0803619E:
	adds r0, r6, #0
	adds r0, #0x68
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r8, r0
	cmp r1, #0xb4
	bne _080361C4
	movs r0, #0xd0
	bl m4aSongNumStart
	b _080361DA
	.align 2, 0
_080361B4: .4byte gCurTask
_080361B8: .4byte gUnknown_030054CC
_080361BC: .4byte IWRAM_START + 0x68
_080361C0: .4byte gPressedKeys
_080361C4:
	cmp r1, #0x78
	bne _080361D0
	movs r0, #0xd1
	bl m4aSongNumStart
	b _080361DA
_080361D0:
	cmp r1, #0x3c
	bne _080361DA
	movs r0, #0xd2
	bl m4aSongNumStart
_080361DA:
	mov r1, r8
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _08036268
	ldr r3, _0803621C @ =gUnknown_030059E0
	ldr r0, [r3, #0x20]
	ldr r1, _08036220 @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r3, #0x20]
	ldr r2, _08036224 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08036228 @ =0x0000FFFE
	ands r0, r1
	ldr r1, _0803622C @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	adds r1, r3, #0
	adds r1, #0x64
	movs r0, #9
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x6a
	ldrb r0, [r0]
	cmp r0, #0
	beq _08036230
	movs r0, #0x90
	lsls r0, r0, #4
	b _08036234
	.align 2, 0
_0803621C: .4byte gUnknown_030059E0
_08036220: .4byte 0xFFDFFFFF
_08036224: .4byte gUnknown_03005424
_08036228: .4byte 0x0000FFFE
_0803622C: .4byte 0x0000FEFF
_08036230:
	movs r0, #0x80
	lsls r0, r0, #3
_08036234:
	strh r0, [r3, #0x14]
	bl sub_8018818
	bl sub_8036400
	ldr r1, _0803625C @ =gUnknown_030059E0
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	str r0, [r6, #0x60]
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	str r0, [r6, #0x64]
	movs r0, #0xd3
	bl m4aSongNumStart
	ldr r0, _08036260 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08036264 @ =sub_8036398
	str r0, [r1, #8]
	b _080362A0
	.align 2, 0
_0803625C: .4byte gUnknown_030059E0
_08036260: .4byte gCurTask
_08036264: .4byte sub_8036398
_08036268:
	cmp r0, #4
	bgt _0803628C
	ldr r0, _08036288 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080362A0
	adds r0, r6, #0
	adds r0, #0x6b
	ldrb r0, [r0]
	cmp r0, #0
	bne _080362A0
	adds r1, r6, #0
	adds r1, #0x6a
	b _0803629C
	.align 2, 0
_08036288: .4byte gPressedKeys
_0803628C:
	ldr r0, _08036364 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080362A0
	adds r1, r6, #0
	adds r1, #0x6b
_0803629C:
	movs r0, #1
	strb r0, [r1]
_080362A0:
	ldr r5, _08036368 @ =gUnknown_030059E0
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r7, _0803636C @ =gUnknown_03005960
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xb3
	bgt _0803630E
	adds r4, r6, #0
	adds r4, #0x30
	movs r1, #0x3c
	bl Div
	movs r1, #2
	subs r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x50
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x51
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	adds r0, #0x18
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	subs r0, #0x18
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0803630E:
	mov r1, r8
	ldrh r0, [r1]
	subs r0, #0x46
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x6d
	bhi _0803638C
	ldr r3, _08036370 @ =gUnknown_080D7518
	ldr r2, _08036374 @ =gUnknown_030054F0
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrh r1, [r0, #4]
	adds r0, r5, #0
	adds r0, #0x68
	strh r1, [r0]
	movs r0, #0
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r0, [r0, #6]
	adds r1, r5, #0
	adds r1, #0x6a
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08036378 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08036380
	adds r0, r5, #0
	adds r0, #0x90
	ldr r1, [r0]
	ldr r0, _0803637C @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r1, #0x31
	strb r0, [r1]
	b _0803638C
	.align 2, 0
_08036364: .4byte gPressedKeys
_08036368: .4byte gUnknown_030059E0
_0803636C: .4byte gUnknown_03005960
_08036370: .4byte gUnknown_080D7518
_08036374: .4byte gUnknown_030054F0
_08036378: .4byte gUnknown_030054CC
_0803637C: .4byte 0x04000128
_08036380:
	adds r0, r5, #0
	adds r0, #0x90
	ldr r0, [r0]
	adds r0, #0x31
	movs r1, #0
	strb r1, [r0]
_0803638C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8036398
sub_8036398: @ 0x08036398
	push {r4, r5, r6, lr}
	ldr r4, _080363E4 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r6, r5, #0
	ldr r0, [r5, #0x60]
	ldr r3, _080363E8 @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r2, [r5, #0x64]
	ldr r1, [r3, #4]
	subs r2, r2, r1
	strh r2, [r5, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080363DA
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080363DA
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _080363EC
_080363DA:
	ldr r0, [r4]
	bl TaskDestroy
	b _080363F8
	.align 2, 0
_080363E4: .4byte gCurTask
_080363E8: .4byte gUnknown_03005960
_080363EC:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_080363F8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8036400
sub_8036400: @ 0x08036400
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _080364EC @ =sub_8036524
	movs r2, #0xc0
	lsls r2, r2, #6
	ldr r1, _080364F0 @ =sub_8036654
	str r1, [sp]
	movs r1, #0x7c
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	ldr r0, _080364F4 @ =IWRAM_START + 0x78
	adds r1, r5, r0
	movs r0, #0
	mov r8, r0
	movs r0, #0x3c
	strh r0, [r1]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r4, #4]
	ldr r1, _080364F8 @ =0x0000046A
	strh r1, [r4, #0xa]
	ldr r1, _080364FC @ =IWRAM_START + 0x20
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r0, _08036500 @ =IWRAM_START + 0x21
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r4, #0x1a]
	mov r0, r8
	strh r0, [r4, #8]
	strh r0, [r4, #0x14]
	strh r0, [r4, #0x1c]
	ldr r1, _08036504 @ =IWRAM_START + 0x22
	adds r0, r5, r1
	movs r1, #0x10
	mov sb, r1
	mov r1, sb
	strb r1, [r0]
	ldr r1, _08036508 @ =IWRAM_START + 0x25
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	movs r7, #1
	rsbs r7, r7, #0
	str r7, [r4, #0x28]
	ldr r6, _0803650C @ =gUnknown_030054B8
	ldrb r0, [r6]
	adds r1, r0, #1
	strb r1, [r6]
	movs r1, #0x60
	mov sl, r1
	mov r1, sl
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r4, #0x10]
	ldr r0, _08036510 @ =IWRAM_START + 0x3C
	adds r4, r5, r0
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r4, #4]
	ldr r1, _080364F8 @ =0x0000046A
	strh r1, [r4, #0xa]
	ldr r0, _08036514 @ =IWRAM_START + 0x5C
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08036518 @ =IWRAM_START + 0x5D
	adds r1, r5, r0
	adds r0, r7, #0
	strb r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r4, #0x1a]
	mov r0, r8
	strh r0, [r4, #8]
	strh r0, [r4, #0x14]
	strh r0, [r4, #0x1c]
	ldr r1, _0803651C @ =IWRAM_START + 0x5E
	adds r0, r5, r1
	mov r1, sb
	strb r1, [r0]
	ldr r0, _08036520 @ =IWRAM_START + 0x61
	adds r5, r5, r0
	movs r1, #0
	strb r1, [r5]
	str r7, [r4, #0x28]
	ldrb r0, [r6]
	adds r1, r0, #1
	strb r1, [r6]
	mov r1, sl
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r4, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080364EC: .4byte sub_8036524
_080364F0: .4byte sub_8036654
_080364F4: .4byte IWRAM_START + 0x78
_080364F8: .4byte 0x0000046A
_080364FC: .4byte IWRAM_START + 0x20
_08036500: .4byte IWRAM_START + 0x21
_08036504: .4byte IWRAM_START + 0x22
_08036508: .4byte IWRAM_START + 0x25
_0803650C: .4byte gUnknown_030054B8
_08036510: .4byte IWRAM_START + 0x3C
_08036514: .4byte IWRAM_START + 0x5C
_08036518: .4byte IWRAM_START + 0x5D
_0803651C: .4byte IWRAM_START + 0x5E
_08036520: .4byte IWRAM_START + 0x61

	thumb_func_start sub_8036524
sub_8036524: @ 0x08036524
	push {r4, r5, r6, r7, lr}
	ldr r0, _0803654C @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0x78
	adds r3, r1, r0
	ldrh r0, [r3]
	subs r0, #1
	strh r0, [r3]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08036550
	adds r0, r2, #0
	bl TaskDestroy
	b _08036630
	.align 2, 0
_0803654C: .4byte gCurTask
_08036550:
	adds r6, r7, #0
	ldr r2, _08036594 @ =IWRAM_START + 0x30
	adds r5, r1, r2
	movs r0, #0x78
	strh r0, [r6, #0x16]
	movs r0, #0x28
	strh r0, [r6, #0x18]
	ldr r2, _08036598 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x60
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r6, #0x10]
	movs r0, #0
	strh r0, [r5]
	ldrh r1, [r3]
	movs r2, #0
	ldrsh r0, [r3, r2]
	cmp r0, #0xf
	bgt _0803659C
	lsls r0, r1, #4
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r2, #0
	subs r1, r1, r0
	strh r1, [r5, #2]
	ldrh r0, [r3]
	adds r0, #1
	lsls r0, r0, #4
	b _080365A2
	.align 2, 0
_08036594: .4byte IWRAM_START + 0x30
_08036598: .4byte gUnknown_030054B8
_0803659C:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #2]
_080365A2:
	strh r0, [r5, #4]
	ldrh r0, [r6, #0x16]
	movs r4, #0
	strh r0, [r5, #6]
	ldrh r0, [r6, #0x18]
	strh r0, [r5, #8]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_8004860
	adds r0, r6, #0
	bl sub_80051E8
	adds r6, r7, #0
	adds r6, #0x3c
	adds r5, r7, #0
	adds r5, #0x6c
	movs r0, #0x78
	strh r0, [r6, #0x16]
	movs r0, #0x28
	strh r0, [r6, #0x18]
	ldr r2, _08036608 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	movs r1, #0x60
	orrs r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r6, #0x10]
	strh r4, [r5]
	adds r2, r7, #0
	adds r2, #0x78
	ldrh r1, [r2]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0xf
	bgt _0803660C
	lsls r0, r1, #4
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	subs r1, r1, r0
	strh r1, [r5, #2]
	ldrh r0, [r2]
	adds r0, #1
	lsls r0, r0, #4
	b _08036612
	.align 2, 0
_08036608: .4byte gUnknown_030054B8
_0803660C:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #2]
_08036612:
	strh r0, [r5, #4]
	ldrh r0, [r6, #0x16]
	strh r0, [r5, #6]
	ldrh r0, [r6, #0x18]
	strh r0, [r5, #8]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_8004860
	adds r0, r6, #0
	bl sub_80051E8
_08036630:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8036638
sub_8036638: @ 0x08036638
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #4]
	bl sub_8007CF0
	ldr r0, [r4, #0x34]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036654
sub_8036654: @ 0x08036654
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #4]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036670
sub_8036670: @ 0x08036670
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080366D4 @ =sub_80366F0
	ldr r2, _080366D8 @ =0x00002220
	movs r5, #0
	str r5, [sp]
	movs r1, #0x10
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r1, #1
	strh r1, [r0]
	strh r5, [r0, #4]
	strh r1, [r0, #2]
	movs r1, #0x40
	strh r1, [r0, #6]
	ldr r1, _080366DC @ =0x00003FFF
	strh r1, [r0, #8]
	strh r5, [r0, #0xa]
	strb r4, [r0, #0xc]
	movs r1, #0xa
	strb r1, [r0, #0xd]
	ldr r0, _080366E0 @ =gMPlayInfo_BGM
	movs r1, #8
	bl m4aMPlayFadeOut
	ldr r0, _080366E4 @ =gMPlayInfo_SE1
	movs r1, #8
	bl m4aMPlayFadeOut
	ldr r0, _080366E8 @ =gMPlayInfo_SE2
	movs r1, #8
	bl m4aMPlayFadeOut
	ldr r0, _080366EC @ =gMPlayInfo_SE3
	movs r1, #8
	bl m4aMPlayFadeOut
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080366D4: .4byte sub_80366F0
_080366D8: .4byte 0x00002220
_080366DC: .4byte 0x00003FFF
_080366E0: .4byte gMPlayInfo_BGM
_080366E4: .4byte gMPlayInfo_SE1
_080366E8: .4byte gMPlayInfo_SE2
_080366EC: .4byte gMPlayInfo_SE3

	thumb_func_start sub_80366F0
sub_80366F0: @ 0x080366F0
	push {r4, r5, lr}
	ldr r0, _0803670C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldrb r5, [r1, #0xc]
	ldrb r0, [r1, #0xd]
	cmp r0, #0
	beq _08036710
	subs r0, #1
	strb r0, [r1, #0xd]
	b _0803677A
	.align 2, 0
_0803670C: .4byte gCurTask
_08036710:
	adds r0, r1, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803677A
	ldr r1, _08036758 @ =gBldRegs
	movs r4, #0
	movs r0, #0x10
	strh r0, [r1, #4]
	ldr r1, _0803675C @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08036760 @ =gUnknown_03002AE4
	ldr r0, _08036764 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08036768 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0803676C @ =gUnknown_03004D5C
	ldr r0, _08036770 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8036780
	movs r0, #1
	ands r5, r0
	cmp r5, #0
	beq _08036774
	movs r0, #0x29
	bl m4aSongNumStart
	b _0803677A
	.align 2, 0
_08036758: .4byte gBldRegs
_0803675C: .4byte 0x0000FFFF
_08036760: .4byte gUnknown_03002AE4
_08036764: .4byte gUnknown_0300287C
_08036768: .4byte gUnknown_03005390
_0803676C: .4byte gUnknown_03004D5C
_08036770: .4byte gUnknown_03002A84
_08036774:
	movs r0, #0x95
	bl m4aSongNumStart
_0803677A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8036780
sub_8036780: @ 0x08036780
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r1, _080367E4 @ =gWinRegs
	movs r0, #0
	strh r0, [r1, #8]
	strh r0, [r1, #0xa]
	strh r0, [r1]
	strh r0, [r1, #4]
	strh r0, [r1, #2]
	strh r0, [r1, #6]
	ldr r1, _080367E8 @ =gBldRegs
	strh r0, [r1]
	strh r0, [r1, #4]
	strh r0, [r1, #2]
	ldr r4, _080367EC @ =gFlags
	ldr r0, [r4]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4]
	ldr r0, _080367F0 @ =gBgPalette
	movs r2, #0x80
	lsls r2, r2, #2
	movs r1, #0
	bl memset
	ldr r0, [r4]
	movs r1, #1
	orrs r0, r1
	str r0, [r4]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080367FC
	ldr r0, _080367F4 @ =sub_8036918
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _080367F8 @ =sub_8036C38
	str r1, [sp]
	movs r1, #0x70
	movs r3, #0
	bl TaskCreate
	b _0803680E
	.align 2, 0
_080367E4: .4byte gWinRegs
_080367E8: .4byte gBldRegs
_080367EC: .4byte gFlags
_080367F0: .4byte gBgPalette
_080367F4: .4byte sub_8036918
_080367F8: .4byte sub_8036C38
_080367FC:
	ldr r0, _08036824 @ =sub_8036A44
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r1, _08036828 @ =sub_8036C38
	str r1, [sp]
	movs r1, #0x70
	movs r3, #0
	bl TaskCreate
_0803680E:
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _0803682C
	movs r0, #0x8c
	b _0803682E
	.align 2, 0
_08036824: .4byte sub_8036A44
_08036828: .4byte sub_8036C38
_0803682C:
	movs r0, #0xb4
_0803682E:
	str r0, [r2, #0x6c]
	adds r7, r2, #0
	adds r7, #0xc
	movs r0, #0x40
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #1
	ands r0, r5
	ldr r2, [sp, #4]
	cmp r0, #0
	beq _08036858
	movs r0, #0
	ldr r1, _08036854 @ =0x000002DB
	strh r1, [r7, #0xa]
	adds r1, r2, #0
	adds r1, #0x2c
	b _08036862
	.align 2, 0
_08036854: .4byte 0x000002DB
_08036858:
	ldr r0, _08036910 @ =0x000002DB
	strh r0, [r7, #0xa]
	adds r1, r2, #0
	adds r1, #0x2c
	movs r0, #4
_08036862:
	strb r0, [r1]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0
	mov sl, r0
	movs r4, #0
	strh r4, [r7, #0x16]
	movs r1, #0x50
	mov r8, r1
	mov r0, r8
	strh r0, [r7, #0x18]
	movs r1, #0xc0
	mov sb, r1
	mov r0, sb
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x1c]
	adds r0, r7, #0
	adds r0, #0x22
	movs r6, #0x10
	strb r6, [r0]
	adds r0, #3
	mov r1, sl
	strb r1, [r0]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	str r2, [sp, #4]
	bl sub_8004558
	ldr r2, [sp, #4]
	adds r7, r2, #0
	adds r7, #0x3c
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08036910 @ =0x000002DB
	strh r0, [r7, #0xa]
	ldr r2, [sp, #4]
	adds r0, r2, #0
	adds r0, #0x5c
	movs r5, #1
	strb r5, [r0]
	adds r1, r2, #0
	adds r1, #0x5d
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	strh r4, [r7, #0x16]
	mov r0, r8
	strh r0, [r7, #0x18]
	strh r4, [r7, #8]
	mov r1, sb
	strh r1, [r7, #0x1a]
	strh r4, [r7, #0x1c]
	adds r0, r2, #0
	adds r0, #0x5e
	strb r6, [r0]
	adds r0, #3
	mov r1, sl
	strb r1, [r0]
	str r4, [r7, #0x10]
	adds r0, r7, #0
	str r2, [sp, #4]
	bl sub_8004558
	ldr r2, [sp, #4]
	strh r5, [r2]
	strh r4, [r2, #4]
	movs r0, #2
	strh r0, [r2, #2]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r2, #6]
	ldr r0, _08036914 @ =0x00003FD0
	strh r0, [r2, #8]
	strh r4, [r2, #0xa]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08036910: .4byte 0x000002DB
_08036914: .4byte 0x00003FD0

	thumb_func_start sub_8036918
sub_8036918: @ 0x08036918
	push {r4, r5, lr}
	ldr r0, _0803697C @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r4, r0, r1
	adds r1, #0xc
	adds r3, r0, r1
	adds r1, #0x30
	adds r5, r0, r1
	ldr r1, _08036980 @ =gBldRegs
	movs r2, #0
	ldr r0, _08036984 @ =0x00003FEF
	strh r0, [r1]
	ldr r0, [r4, #0x6c]
	cmp r0, #0x3c
	bne _08036950
	movs r0, #1
	strh r0, [r4]
	strh r2, [r4, #4]
	strh r0, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r4, #6]
	ldr r0, _08036988 @ =0x00003F90
	strh r0, [r4, #8]
	strh r2, [r4, #0xa]
_08036950:
	ldr r1, [r4, #0x6c]
	cmp r1, #0x32
	bne _0803696C
	movs r0, #1
	strh r0, [r4]
	strh r2, [r4, #4]
	movs r0, #2
	strh r0, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r4, #6]
	ldr r0, _08036988 @ =0x00003F90
	strh r0, [r4, #8]
	strh r2, [r4, #0xa]
_0803696C:
	cmp r1, #0x3c
	bls _0803698C
	adds r0, r1, #0
	adds r0, #0x3c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _0803698E
	.align 2, 0
_0803697C: .4byte gCurTask
_08036980: .4byte gBldRegs
_08036984: .4byte 0x00003FEF
_08036988: .4byte 0x00003F90
_0803698C:
	movs r0, #0x78
_0803698E:
	strh r0, [r3, #0x16]
	strh r0, [r5, #0x16]
	adds r0, r4, #0
	bl sub_802D4CC
	ldr r0, [r4, #0x6c]
	subs r1, r0, #1
	str r1, [r4, #0x6c]
	cmp r1, #0
	bne _080369C0
	movs r0, #1
	strh r0, [r4]
	strh r1, [r4, #4]
	strh r0, [r4, #2]
	movs r0, #0x40
	strh r0, [r4, #6]
	ldr r0, _080369CC @ =0x00003FAF
	strh r0, [r4, #8]
	strh r1, [r4, #0xa]
	movs r0, #0x78
	str r0, [r4, #0x6c]
	ldr r0, _080369D0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080369D4 @ =sub_80369D8
	str r0, [r1, #8]
_080369C0:
	adds r0, r4, #0
	bl sub_8036BD4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080369CC: .4byte 0x00003FAF
_080369D0: .4byte gCurTask
_080369D4: .4byte sub_80369D8

	thumb_func_start sub_80369D8
sub_80369D8: @ 0x080369D8
	push {r4, r5, r6, lr}
	ldr r6, _08036A30 @ =gCurTask
	ldr r0, [r6]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, r5, #0
	bl sub_802D4CC
	ldr r0, [r5, #0x6c]
	subs r1, r0, #1
	str r1, [r5, #0x6c]
	cmp r1, #0
	bne _08036A24
	movs r4, #1
	strh r4, [r5]
	strh r1, [r5, #4]
	strh r4, [r5, #2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #6]
	ldr r0, _08036A34 @ =0x00003FBF
	strh r0, [r5, #8]
	strh r1, [r5, #0xa]
	ldr r0, _08036A38 @ =gBgPalette
	movs r2, #0x80
	lsls r2, r2, #2
	movs r1, #0xff
	bl memset
	ldr r1, _08036A3C @ =gFlags
	ldr r0, [r1]
	orrs r0, r4
	str r0, [r1]
	ldr r1, [r6]
	ldr r0, _08036A40 @ =sub_8036B30
	str r0, [r1, #8]
_08036A24:
	adds r0, r5, #0
	bl sub_8036BD4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08036A30: .4byte gCurTask
_08036A34: .4byte 0x00003FBF
_08036A38: .4byte gBgPalette
_08036A3C: .4byte gFlags
_08036A40: .4byte sub_8036B30

	thumb_func_start sub_8036A44
sub_8036A44: @ 0x08036A44
	push {r4, r5, lr}
	ldr r0, _08036AE8 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r1, _08036AEC @ =gBldRegs
	movs r2, #0
	ldr r0, _08036AF0 @ =0x00003FEF
	strh r0, [r1]
	ldr r0, [r4, #0x6c]
	cmp r0, #0x96
	bne _08036A74
	movs r0, #1
	strh r0, [r4]
	strh r2, [r4, #4]
	strh r0, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r4, #6]
	ldr r0, _08036AF4 @ =0x00003F90
	strh r0, [r4, #8]
	strh r2, [r4, #0xa]
_08036A74:
	ldr r1, [r4, #0x6c]
	cmp r1, #0x8c
	bne _08036A90
	movs r0, #1
	strh r0, [r4]
	strh r2, [r4, #4]
	movs r0, #2
	strh r0, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #6]
	ldr r0, _08036AF4 @ =0x00003F90
	strh r0, [r4, #8]
	strh r2, [r4, #0xa]
_08036A90:
	cmp r1, #0x1e
	bne _08036AA8
	movs r0, #1
	strh r0, [r4]
	strh r2, [r4, #4]
	strh r0, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #6]
	ldr r0, _08036AF8 @ =0x00003FD0
	strh r0, [r4, #8]
	strh r2, [r4, #0xa]
_08036AA8:
	adds r0, r4, #0
	bl sub_802D4CC
	ldr r0, [r4, #0x6c]
	subs r5, r0, #1
	str r5, [r4, #0x6c]
	cmp r5, #0
	bne _08036B22
	ldr r1, _08036AFC @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08036B00 @ =gUnknown_03002AE4
	ldr r0, _08036B04 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _08036B08 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08036B0C @ =gUnknown_03004D5C
	ldr r0, _08036B10 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08036B14 @ =gUnknown_030053F0
	strh r5, [r0]
	ldr r0, _08036B18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	bne _08036B1C
	bl sub_80890BC
	b _08036B28
	.align 2, 0
_08036AE8: .4byte gCurTask
_08036AEC: .4byte gBldRegs
_08036AF0: .4byte 0x00003FEF
_08036AF4: .4byte 0x00003F90
_08036AF8: .4byte 0x00003FD0
_08036AFC: .4byte 0x0000FFFF
_08036B00: .4byte gUnknown_03002AE4
_08036B04: .4byte gUnknown_0300287C
_08036B08: .4byte gUnknown_03005390
_08036B0C: .4byte gUnknown_03004D5C
_08036B10: .4byte gUnknown_03002A84
_08036B14: .4byte gUnknown_030053F0
_08036B18: .4byte gUnknown_030054CC
_08036B1C:
	bl sub_801A838
	b _08036B28
_08036B22:
	adds r0, r4, #0
	bl sub_8036BEC
_08036B28:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8036B30
sub_8036B30: @ 0x08036B30
	push {r4, r5, lr}
	ldr r5, _08036B68 @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08036B5A
	movs r0, #0x8c
	str r0, [r4, #0x6c]
	adds r0, r4, #0
	bl sub_802D4CC
	ldr r1, [r5]
	ldr r0, _08036B6C @ =sub_8036B70
	str r0, [r1, #8]
_08036B5A:
	adds r0, r4, #0
	bl sub_8036BD4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08036B68: .4byte gCurTask
_08036B6C: .4byte sub_8036B70

	thumb_func_start sub_8036B70
sub_8036B70: @ 0x08036B70
	push {r4, lr}
	ldr r0, _08036BAC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r0, [r1, #0x6c]
	subs r4, r0, #1
	str r4, [r1, #0x6c]
	cmp r4, #0
	bne _08036BC8
	ldr r1, _08036BB0 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _08036BB4 @ =gUnknown_03002AE4
	ldr r0, _08036BB8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08036BBC @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _08036BC0 @ =gUnknown_03004D5C
	ldr r0, _08036BC4 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_808B3FC_CreateTitleScreen
	b _08036BCE
	.align 2, 0
_08036BAC: .4byte gCurTask
_08036BB0: .4byte 0x0000FFFF
_08036BB4: .4byte gUnknown_03002AE4
_08036BB8: .4byte gUnknown_0300287C
_08036BBC: .4byte gUnknown_03005390
_08036BC0: .4byte gUnknown_03004D5C
_08036BC4: .4byte gUnknown_03002A84
_08036BC8:
	adds r0, r1, #0
	bl sub_8036BD4
_08036BCE:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036BD4
sub_8036BD4: @ 0x08036BD4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xc
	adds r4, #0x3c
	bl sub_80051E8
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036BEC
sub_8036BEC: @ 0x08036BEC
	push {r4, lr}
	adds r2, r0, #0
	adds r2, #0xc
	adds r4, r0, #0
	adds r4, #0x3c
	ldr r0, [r0, #0x6c]
	cmp r0, #0x8c
	bls _08036C08
	lsls r0, r0, #0x11
	ldr r1, _08036C04 @ =0xFF600000
	adds r0, r0, r1
	b _08036C20
	.align 2, 0
_08036C04: .4byte 0xFF600000
_08036C08:
	cmp r0, #0x28
	bls _08036C10
	movs r0, #0x78
	b _08036C22
_08036C10:
	cmp r0, #0
	beq _08036C32
	movs r1, #0x28
	subs r1, r1, r0
	lsls r1, r1, #1
	movs r0, #0x78
	subs r0, r0, r1
	lsls r0, r0, #0x10
_08036C20:
	lsrs r0, r0, #0x10
_08036C22:
	strh r0, [r2, #0x16]
	strh r0, [r4, #0x16]
	adds r0, r2, #0
	bl sub_80051E8
	adds r0, r4, #0
	bl sub_80051E8
_08036C32:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036C38
sub_8036C38: @ 0x08036C38
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8036C54
sub_8036C54: @ 0x08036C54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _08036DE8 @ =gBldRegs
	movs r4, #0
	movs r3, #0
	ldr r0, _08036DEC @ =0x00003FFF
	strh r0, [r1]
	strh r3, [r1, #2]
	movs r0, #0x10
	strh r0, [r1, #4]
	ldr r0, _08036DF0 @ =sub_80392AC
	movs r1, #0x9f
	lsls r1, r1, #2
	movs r2, #0xe0
	lsls r2, r2, #7
	str r3, [sp]
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	strb r4, [r6]
	movs r0, #0xb9
	lsls r0, r0, #1
	str r0, [r6, #4]
	movs r0, #0xe8
	str r0, [r6, #8]
	strb r4, [r6, #0xe]
	strb r4, [r6, #0xf]
	movs r5, #0
	mov ip, r5
	ldr r0, _08036DF4 @ =gUnknown_080D7830
	mov r8, r0
	ldr r4, _08036DF8 @ =IWRAM_START + 0x130
	adds r4, r4, r1
	mov sl, r4
	ldr r7, _08036DFC @ =IWRAM_START + 0x132
	adds r7, r7, r1
	mov sb, r7
_08036CAC:
	adds r0, r6, #0
	adds r0, #0x10
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	lsls r4, r5, #3
	adds r1, r6, #0
	adds r1, #0x30
	adds r1, r1, r4
	lsls r3, r5, #2
	adds r2, r3, r5
	lsls r2, r2, #1
	mov r7, r8
	adds r0, r2, r7
	movs r7, #0
	ldrsh r0, [r0, r7]
	lsls r0, r0, #8
	str r0, [r1]
	adds r1, r6, #0
	adds r1, #0x34
	adds r1, r1, r4
	ldr r0, _08036E00 @ =gUnknown_080D7832
	adds r2, r2, r0
	movs r4, #0
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	str r0, [r1]
	mov r7, sl
	adds r0, r7, r3
	mov r1, ip
	strh r1, [r0]
	add r3, sb
	strh r1, [r3]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x1f
	bls _08036CAC
	movs r4, #0xd8
	lsls r4, r4, #1
	adds r0, r6, r4
	movs r2, #0
	movs r5, #1
	strb r5, [r0]
	movs r7, #0xda
	lsls r7, r7, #1
	adds r1, r6, r7
	movs r0, #0xc8
	lsls r0, r0, #7
	str r0, [r1]
	movs r0, #0xdc
	lsls r0, r0, #1
	adds r1, r6, r0
	movs r0, #0xb4
	lsls r0, r0, #8
	str r0, [r1]
	movs r1, #0xde
	lsls r1, r1, #1
	adds r1, r1, r6
	mov ip, r1
	strh r2, [r1, #0x16]
	strh r2, [r1, #0x18]
	ldr r3, _08036E04 @ =gUnknown_080D7560
	ldr r0, [r3]
	str r0, [r1, #4]
	ldrh r0, [r3, #0x24]
	strh r0, [r1, #0xa]
	adds r0, r3, #0
	adds r0, #0x26
	ldrb r1, [r0]
	adds r4, #0x2c
	adds r0, r6, r4
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	mov r5, ip
	strh r0, [r5, #0x1a]
	strh r2, [r5, #8]
	strh r2, [r5, #0x14]
	strh r2, [r5, #0x1c]
	adds r7, #0x29
	adds r1, r6, r7
	movs r0, #0xff
	strb r0, [r1]
	adds r0, #0xdf
	adds r1, r6, r0
	movs r0, #0x10
	strb r0, [r1]
	adds r4, #5
	adds r1, r6, r4
	movs r0, #5
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #3
	str r0, [r5, #0x10]
	movs r5, #0
	movs r4, #0
_08036D6E:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	movs r7, #0xf6
	lsls r7, r7, #1
	adds r0, r0, r7
	adds r0, r0, r6
	mov ip, r0
	strh r4, [r0, #0x16]
	strh r4, [r0, #0x18]
	adds r2, r5, #1
	lsls r1, r2, #3
	adds r1, r1, r3
	ldr r0, [r1]
	mov r5, ip
	str r0, [r5, #4]
	ldrh r0, [r1, #4]
	strh r0, [r5, #0xa]
	ldrb r1, [r1, #6]
	mov r0, ip
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5, #0x1a]
	strh r4, [r5, #8]
	strh r4, [r5, #0x14]
	strh r4, [r5, #0x1c]
	mov r1, ip
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	str r4, [r5, #0x10]
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	cmp r5, #2
	bls _08036D6E
	bl sub_803986C
	bl sub_8039A4C
	movs r0, #0x30
	bl m4aSongNumStart
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08036DE8: .4byte gBldRegs
_08036DEC: .4byte 0x00003FFF
_08036DF0: .4byte sub_80392AC
_08036DF4: .4byte gUnknown_080D7830
_08036DF8: .4byte IWRAM_START + 0x130
_08036DFC: .4byte IWRAM_START + 0x132
_08036E00: .4byte gUnknown_080D7832
_08036E04: .4byte gUnknown_080D7560

	thumb_func_start sub_8036E08
sub_8036E08: @ 0x08036E08
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08036ED8 @ =sub_8036EF8
	movs r1, #0xe4
	lsls r1, r1, #1
	movs r2, #0xe0
	lsls r2, r2, #7
	movs r4, #0
	str r4, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	str r0, [r1, #0x34]
	ldr r0, _08036EDC @ =IWRAM_START + 0x188
	adds r1, r2, r0
	ldr r0, _08036EE0 @ =0x06008000
	str r0, [r1, #4]
	movs r3, #0
	strh r4, [r1, #0xa]
	ldr r0, _08036EE4 @ =0x0600E000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	ldr r0, _08036EE8 @ =0x0000017B
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	movs r0, #9
	strh r0, [r1, #0x22]
	movs r0, #1
	strh r0, [r1, #0x24]
	movs r0, #0xd
	strh r0, [r1, #0x26]
	movs r0, #0x12
	strh r0, [r1, #0x28]
	ldr r0, _08036EEC @ =IWRAM_START + 0x1B2
	adds r2, r2, r0
	strb r3, [r2]
	movs r0, #2
	strh r0, [r1, #0x2e]
	movs r3, #0
	movs r6, #0
	ldr r5, _08036EF0 @ =0x00000345
_08036E6C:
	lsls r2, r3, #1
	mov r0, ip
	adds r0, #8
	adds r0, r0, r2
	strh r4, [r0]
	lsls r1, r3, #2
	mov r0, ip
	adds r0, #0x18
	adds r0, r0, r1
	movs r1, #0xb4
	lsls r1, r1, #8
	str r1, [r0]
	adds r2, r2, r3
	lsls r2, r2, #4
	adds r2, #0x38
	mov r0, ip
	adds r1, r0, r2
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	lsls r0, r3, #9
	ldr r2, _08036EF4 @ =0x06013000
	adds r0, r0, r2
	str r0, [r1, #4]
	strh r5, [r1, #0xa]
	adds r0, r1, #0
	adds r0, #0x20
	strb r3, [r0]
	adds r2, r1, #0
	adds r2, #0x21
	movs r0, #0xff
	strb r0, [r2]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #8]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x1c]
	adds r2, #1
	movs r0, #0x10
	strb r0, [r2]
	adds r0, r1, #0
	adds r0, #0x25
	strb r6, [r0]
	str r4, [r1, #0x10]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #6
	bls _08036E6C
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08036ED8: .4byte sub_8036EF8
_08036EDC: .4byte IWRAM_START + 0x188
_08036EE0: .4byte 0x06008000
_08036EE4: .4byte 0x0600E000
_08036EE8: .4byte 0x0000017B
_08036EEC: .4byte IWRAM_START + 0x1B2
_08036EF0: .4byte 0x00000345
_08036EF4: .4byte 0x06013000

	thumb_func_start sub_8036EF8
sub_8036EF8: @ 0x08036EF8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _08036FD4 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov r8, r1
	movs r7, #0
	ldr r0, _08036FD8 @ =0x000003FF
	mov sl, r0
	ldr r1, _08036FDC @ =gUnknown_08097AA4
	mov sb, r1
_08036F1C:
	lsls r0, r7, #1
	adds r4, r0, r7
	lsls r4, r4, #4
	adds r4, #0x38
	add r4, r8
	mov r1, r8
	adds r1, #8
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #5
	strh r0, [r1]
	lsls r2, r7, #2
	mov r0, r8
	adds r0, #0x18
	adds r0, r0, r2
	ldrh r2, [r1]
	ldr r1, [r0]
	adds r1, r1, r2
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0xf
	muls r0, r1, r0
	lsrs r0, r0, #9
	mov r2, sl
	ands r2, r0
	str r2, [sp]
	adds r0, r7, #0
	adds r0, #0xd
	muls r1, r0, r1
	lsrs r1, r1, #9
	mov r3, sl
	ands r1, r3
	str r1, [sp, #4]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r3, [r0, r2]
	mov r2, r8
	ldr r0, [r2, #0x34]
	movs r2, #0x20
	subs r2, r2, r0
	adds r0, r3, #0
	muls r0, r2, r0
	lsrs r5, r0, #0xe
	lsls r1, r1, #1
	add r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	lsrs r6, r0, #0x10
	adds r0, r5, #0
	adds r0, #0x78
	strh r0, [r4, #0x16]
	adds r0, r6, #0
	adds r0, #0x64
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #6
	bls _08036F1C
	mov r1, r8
	ldr r0, [r1, #0x34]
	subs r0, #1
	str r0, [r1, #0x34]
	cmp r0, #0
	bne _08036FC2
	movs r0, #0xb4
	lsls r0, r0, #1
	str r0, [r1, #0x34]
	ldr r0, _08036FD4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08036FE0 @ =sub_8036FE4
	str r0, [r1, #8]
_08036FC2:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08036FD4: .4byte gCurTask
_08036FD8: .4byte 0x000003FF
_08036FDC: .4byte gUnknown_08097AA4
_08036FE0: .4byte sub_8036FE4

	thumb_func_start sub_8036FE4
sub_8036FE4: @ 0x08036FE4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _080370B0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov r8, r1
	movs r7, #0
	ldr r0, _080370B4 @ =0x000003FF
	mov sl, r0
	ldr r1, _080370B8 @ =gUnknown_08097AA4
	mov sb, r1
_08037008:
	lsls r0, r7, #1
	adds r4, r0, r7
	lsls r4, r4, #4
	adds r4, #0x38
	add r4, r8
	mov r1, r8
	adds r1, #8
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #5
	strh r0, [r1]
	lsls r2, r7, #2
	mov r0, r8
	adds r0, #0x18
	adds r0, r0, r2
	ldrh r2, [r1]
	ldr r1, [r0]
	adds r1, r1, r2
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0xf
	muls r0, r1, r0
	lsrs r0, r0, #9
	mov r2, sl
	ands r2, r0
	str r2, [sp]
	adds r0, r7, #0
	adds r0, #0xd
	muls r1, r0, r1
	lsrs r1, r1, #9
	mov r3, sl
	ands r1, r3
	str r1, [sp, #4]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r0, [r0, r2]
	asrs r5, r0, #9
	lsls r1, r1, #1
	add r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	asrs r6, r0, #0xb
	adds r0, r5, #0
	adds r0, #0x78
	strh r0, [r4, #0x16]
	adds r0, r6, #0
	adds r0, #0x64
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #6
	bls _08037008
	mov r1, r8
	ldr r0, [r1, #0x34]
	subs r0, #1
	str r0, [r1, #0x34]
	cmp r0, #0
	bne _0803709E
	movs r0, #0x20
	str r0, [r1, #0x34]
	ldr r0, _080370B0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080370BC @ =sub_80370C0
	str r0, [r1, #8]
_0803709E:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080370B0: .4byte gCurTask
_080370B4: .4byte 0x000003FF
_080370B8: .4byte gUnknown_08097AA4
_080370BC: .4byte sub_80370C0

	thumb_func_start sub_80370C0
sub_80370C0: @ 0x080370C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r7, _0803712C @ =gCurTask
	ldr r0, [r7]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r4
	mov r8, r0
	ldr r0, [r0, #0x34]
	subs r3, r0, #1
	mov r0, r8
	str r3, [r0, #0x34]
	cmp r3, #0
	bne _08037158
	movs r0, #0x78
	mov r1, r8
	str r0, [r1, #0x34]
	ldr r1, _08037130 @ =gBgCntRegs
	movs r2, #0
	ldr r0, _08037134 @ =0x00001C08
	strh r0, [r1, #4]
	ldr r1, _08037138 @ =gBldRegs
	movs r0, #0x10
	strh r0, [r1, #4]
	ldr r1, _0803713C @ =gDispCnt
	ldr r0, _08037140 @ =0x00005540
	strh r0, [r1]
	ldr r0, _08037144 @ =gBgScrollRegs
	strh r3, [r0, #4]
	strh r3, [r0, #6]
	strh r3, [r0, #8]
	strh r3, [r0, #0xa]
	ldr r0, _08037148 @ =gUnknown_03004D80
	strb r2, [r0, #2]
	ldr r1, _0803714C @ =gUnknown_03002280
	strb r2, [r1, #8]
	strb r2, [r1, #9]
	movs r0, #0xff
	strb r0, [r1, #0xa]
	movs r0, #0x14
	strb r0, [r1, #0xb]
	ldr r2, _08037150 @ =IWRAM_START + 0x188
	adds r0, r4, r2
	bl sub_8002A3C
	ldr r1, [r7]
	ldr r0, _08037154 @ =sub_8037254
	str r0, [r1, #8]
	b _08037226
	.align 2, 0
_0803712C: .4byte gCurTask
_08037130: .4byte gBgCntRegs
_08037134: .4byte 0x00001C08
_08037138: .4byte gBldRegs
_0803713C: .4byte gDispCnt
_08037140: .4byte 0x00005540
_08037144: .4byte gBgScrollRegs
_08037148: .4byte gUnknown_03004D80
_0803714C: .4byte gUnknown_03002280
_08037150: .4byte IWRAM_START + 0x188
_08037154: .4byte sub_8037254
_08037158:
	cmp r3, #0xf
	bhi _0803718E
	ldr r2, _08037238 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #7
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0803723C @ =gBldRegs
	movs r0, #0xbf
	strh r0, [r2]
	mov r0, r8
	ldr r1, [r0, #0x34]
	movs r0, #0x10
	subs r0, r0, r1
	strh r0, [r2, #4]
	ldr r1, _08037240 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1, #2]
	movs r0, #0xa0
	strh r0, [r1, #6]
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1, #8]
	movs r0, #0xff
	strh r0, [r1, #0xa]
_0803718E:
	movs r7, #0
	ldr r1, _08037244 @ =IWRAM_START + 0x8
	adds r1, r4, r1
	str r1, [sp, #8]
	ldr r2, _08037248 @ =IWRAM_START + 0x18
	adds r2, r4, r2
	str r2, [sp, #0xc]
	ldr r3, _0803724C @ =0x000003FF
	mov sl, r3
	ldr r0, _08037250 @ =gUnknown_08097AA4
	mov sb, r0
_080371A4:
	lsls r1, r7, #1
	adds r4, r1, r7
	lsls r4, r4, #4
	adds r4, #0x38
	add r4, r8
	ldr r2, [sp, #8]
	adds r1, r2, r1
	ldrh r0, [r1]
	adds r0, #5
	strh r0, [r1]
	lsls r0, r7, #2
	ldr r3, [sp, #0xc]
	adds r0, r3, r0
	ldrh r2, [r1]
	ldr r1, [r0]
	adds r1, r1, r2
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0xf
	muls r0, r1, r0
	lsrs r0, r0, #9
	mov r2, sl
	ands r2, r0
	str r2, [sp]
	adds r0, r7, #0
	adds r0, #0xd
	muls r1, r0, r1
	lsrs r1, r1, #9
	mov r3, sl
	ands r1, r3
	str r1, [sp, #4]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, r8
	ldr r2, [r3, #0x34]
	muls r0, r2, r0
	lsrs r5, r0, #0xe
	lsls r1, r1, #1
	add r1, sb
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	lsrs r6, r0, #0x10
	adds r0, r5, #0
	adds r0, #0x78
	strh r0, [r4, #0x16]
	adds r0, r6, #0
	adds r0, #0x64
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #6
	bls _080371A4
_08037226:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037238: .4byte gDispCnt
_0803723C: .4byte gBldRegs
_08037240: .4byte gWinRegs
_08037244: .4byte IWRAM_START + 0x8
_08037248: .4byte IWRAM_START + 0x18
_0803724C: .4byte 0x000003FF
_08037250: .4byte gUnknown_08097AA4

	thumb_func_start sub_8037254
sub_8037254: @ 0x08037254
	push {lr}
	ldr r0, _08037284 @ =gCurTask
	ldr r2, [r0]
	ldrh r0, [r2, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r1, [r0, #0x34]
	subs r1, #1
	str r1, [r0, #0x34]
	cmp r1, #0
	bne _08037294
	ldr r1, _08037288 @ =gDispCnt
	movs r3, #0x8a
	lsls r3, r3, #5
	adds r0, r3, #0
	strh r0, [r1]
	ldr r1, _0803728C @ =gBgCntRegs
	ldr r0, _08037290 @ =0x00001C0B
	strh r0, [r1, #4]
	adds r0, r2, #0
	bl TaskDestroy
	b _080372BC
	.align 2, 0
_08037284: .4byte gCurTask
_08037288: .4byte gDispCnt
_0803728C: .4byte gBgCntRegs
_08037290: .4byte 0x00001C0B
_08037294:
	cmp r1, #0x74
	bhi _080372BC
	ldr r1, _080372C0 @ =gBldRegs
	ldrh r2, [r1, #4]
	cmp r2, #0
	beq _080372BC
	movs r0, #0xbf
	strh r0, [r1]
	subs r0, r2, #1
	strh r0, [r1, #4]
	ldr r1, _080372C4 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1, #2]
	movs r0, #0xa0
	strh r0, [r1, #6]
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1, #8]
	movs r0, #0xff
	strh r0, [r1, #0xa]
_080372BC:
	pop {r0}
	bx r0
	.align 2, 0
_080372C0: .4byte gBldRegs
_080372C4: .4byte gWinRegs

	thumb_func_start sub_80372C8
sub_80372C8: @ 0x080372C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp, #8]
	str r1, [sp, #4]
	ldr r0, _080373A8 @ =sub_80373CC
	movs r2, #0xe0
	lsls r2, r2, #7
	movs r5, #0
	str r5, [sp]
	movs r1, #0x40
	movs r3, #0
	bl TaskCreate
	ldr r6, _080373AC @ =gUnknown_030053B8
	ldr r1, [r6]
	ldr r2, _080373B0 @ =0x00196225
	mov sb, r2
	mov r3, sb
	muls r3, r1, r3
	adds r1, r3, #0
	ldr r7, _080373B4 @ =0x3C6EF35F
	mov r8, r7
	add r1, r8
	str r1, [r6]
	movs r3, #1
	ands r3, r1
	adds r3, #2
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r4, r2
	movs r0, #0
	mov ip, r0
	movs r0, #0x28
	strh r0, [r2]
	mov r7, sb
	muls r7, r1, r7
	adds r1, r7, #0
	add r1, r8
	str r1, [r6]
	movs r0, #0x1f
	mov sl, r0
	adds r0, r1, #0
	mov r7, sl
	ands r0, r7
	subs r0, #0x10
	lsls r0, r0, #0x18
	asrs r0, r0, #0x10
	ldr r7, [sp, #8]
	adds r0, r7, r0
	str r0, [r2, #4]
	mov r0, sb
	muls r0, r1, r0
	add r0, r8
	str r0, [r6]
	mov r1, sl
	ands r0, r1
	subs r0, #0x10
	lsls r0, r0, #0x18
	asrs r0, r0, #0x10
	ldr r6, [sp, #4]
	adds r1, r6, r0
	str r1, [r2, #8]
	strh r5, [r2, #0xc]
	strh r5, [r2, #0xe]
	ldr r7, _080373B8 @ =IWRAM_START + 0x10
	adds r1, r4, r7
	strh r5, [r1, #0x16]
	strh r5, [r1, #0x18]
	ldr r0, _080373BC @ =gUnknown_080D7540
	lsls r3, r3, #3
	adds r3, r3, r0
	ldr r0, [r3]
	str r0, [r1, #4]
	ldrh r0, [r3, #4]
	strh r0, [r1, #0xa]
	ldrb r2, [r3, #6]
	ldr r3, _080373C0 @ =IWRAM_START + 0x30
	adds r0, r4, r3
	strb r2, [r0]
	ldr r6, _080373C4 @ =IWRAM_START + 0x31
	adds r2, r4, r6
	movs r0, #0xff
	strb r0, [r2]
	adds r0, #1
	strh r0, [r1, #0x1a]
	strh r5, [r1, #8]
	strh r5, [r1, #0x14]
	strh r5, [r1, #0x1c]
	adds r7, #0x22
	adds r2, r4, r7
	movs r0, #0x20
	strb r0, [r2]
	ldr r0, _080373C8 @ =IWRAM_START + 0x35
	adds r4, r4, r0
	mov r2, ip
	strb r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r1, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080373A8: .4byte sub_80373CC
_080373AC: .4byte gUnknown_030053B8
_080373B0: .4byte 0x00196225
_080373B4: .4byte 0x3C6EF35F
_080373B8: .4byte IWRAM_START + 0x10
_080373BC: .4byte gUnknown_080D7540
_080373C0: .4byte IWRAM_START + 0x30
_080373C4: .4byte IWRAM_START + 0x31
_080373C8: .4byte IWRAM_START + 0x35

	thumb_func_start sub_80373CC
sub_80373CC: @ 0x080373CC
	push {r4, r5, lr}
	ldr r0, _0803740C @ =gCurTask
	ldr r5, [r0]
	ldrh r1, [r5, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	adds r0, #0x10
	adds r4, r1, r0
	ldrh r0, [r2, #0xe]
	adds r0, #0x10
	strh r0, [r2, #0xe]
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #4]
	adds r3, r0, r1
	str r3, [r2, #4]
	movs r0, #0xe
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037410
	adds r0, r5, #0
	bl TaskDestroy
	b _0803742C
	.align 2, 0
_0803740C: .4byte gCurTask
_08037410:
	asrs r0, r3, #8
	strh r0, [r4, #0x16]
	ldr r0, [r2, #8]
	asrs r0, r0, #8
	ldr r1, _08037434 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0803742C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08037434: .4byte gUnknown_03005960

	thumb_func_start sub_8037438
sub_8037438: @ 0x08037438
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _08037520 @ =gUnknown_080D7970
	lsls r4, r7, #2
	adds r0, r4, r0
	ldr r0, [r0]
	movs r2, #0xe0
	lsls r2, r2, #7
	movs r5, #0
	str r5, [sp]
	movs r1, #0x74
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r6
	mov ip, r0
	strb r7, [r0]
	strb r5, [r0, #1]
	ldr r2, _08037524 @ =gUnknown_080D7704
	ldrb r1, [r0]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	mov r1, ip
	strh r0, [r1, #2]
	ldr r2, _08037528 @ =gUnknown_080D77D0
	ldrb r0, [r1]
	lsls r0, r0, #4
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1, #8]
	ldrb r0, [r1]
	lsls r0, r0, #4
	adds r3, r2, #4
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [r1, #0xc]
	ldrb r0, [r1]
	lsls r0, r0, #4
	adds r1, r2, #0
	adds r1, #8
	adds r0, r0, r1
	ldr r0, [r0]
	mov r1, ip
	strh r0, [r1, #0x10]
	ldrb r0, [r1]
	lsls r0, r0, #4
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	mov r1, ip
	strh r0, [r1, #0x12]
	ldr r0, _0803752C @ =gUnknown_080D76F0
	adds r4, r4, r0
	ldr r1, [r4]
	ldr r0, _08037530 @ =IWRAM_START + 0x14
	adds r4, r6, r0
	mov r0, ip
	ldrb r0, [r0]
	lsls r0, r0, #4
	mov r8, r0
	add r2, r8
	ldr r0, [r2]
	lsls r0, r0, #8
	strh r0, [r4, #0x16]
	mov r2, ip
	ldrb r0, [r2]
	lsls r0, r0, #4
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r0, r0, #8
	strh r0, [r4, #0x18]
	ldr r0, [r1]
	str r0, [r4, #4]
	ldrh r0, [r1, #4]
	strh r0, [r4, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037534 @ =IWRAM_START + 0x34
	adds r0, r6, r2
	strb r1, [r0]
	ldr r0, _08037538 @ =IWRAM_START + 0x35
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0803753C @ =gUnknown_080D7984
	adds r0, r7, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #6
	strh r0, [r4, #0x1a]
	strh r5, [r4, #8]
	strh r5, [r4, #0x14]
	strh r5, [r4, #0x1c]
	adds r2, #2
	adds r1, r6, r2
	movs r0, #0x20
	strb r0, [r1]
	cmp r7, #3
	bhi _08037544
	ldr r1, _08037540 @ =IWRAM_START + 0x39
	adds r0, r6, r1
	strb r7, [r0]
	b _0803754C
	.align 2, 0
_08037520: .4byte gUnknown_080D7970
_08037524: .4byte gUnknown_080D7704
_08037528: .4byte gUnknown_080D77D0
_0803752C: .4byte gUnknown_080D76F0
_08037530: .4byte IWRAM_START + 0x14
_08037534: .4byte IWRAM_START + 0x34
_08037538: .4byte IWRAM_START + 0x35
_0803753C: .4byte gUnknown_080D7984
_08037540: .4byte IWRAM_START + 0x39
_08037544:
	ldr r2, _080375AC @ =IWRAM_START + 0x39
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
_0803754C:
	movs r0, #0xa0
	lsls r0, r0, #5
	str r0, [r4, #0x10]
	cmp r7, #3
	bhi _0803759E
	mov r4, ip
	adds r4, #0x44
	movs r3, #0
	movs r2, #0
	strh r2, [r4, #0x16]
	strh r2, [r4, #0x18]
	ldr r1, _080375B0 @ =gUnknown_080D7540
	lsls r0, r7, #3
	adds r0, r0, r1
	ldr r1, [r0]
	str r1, [r4, #4]
	ldrh r1, [r0, #4]
	strh r1, [r4, #0xa]
	ldrb r1, [r0, #6]
	mov r0, ip
	adds r0, #0x64
	strb r1, [r0]
	mov r1, ip
	adds r1, #0x65
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r2, [r4, #8]
	strh r2, [r4, #0x14]
	strh r2, [r4, #0x1c]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x69
	strb r3, [r0]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r4, #0x10]
_0803759E:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080375AC: .4byte IWRAM_START + 0x39
_080375B0: .4byte gUnknown_080D7540

	thumb_func_start sub_80375B4
sub_80375B4: @ 0x080375B4
	push {r4, r5, r6, r7, lr}
	ldr r7, _08037658 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037634
	ldr r3, _0803765C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037660 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037664 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08037668 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0803766C @ =sub_8037674
	str r0, [r1, #8]
_08037634:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037670 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037658: .4byte gCurTask
_0803765C: .4byte gUnknown_080D7704
_08037660: .4byte gUnknown_080D76F0
_08037664: .4byte IWRAM_START + 0x34
_08037668: .4byte IWRAM_START + 0x35
_0803766C: .4byte sub_8037674
_08037670: .4byte gUnknown_03005960

	thumb_func_start sub_8037674
sub_8037674: @ 0x08037674
	push {r4, r5, r6, r7, lr}
	ldr r7, _08037728 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08037696
	movs r0, #0
	strh r0, [r4, #0x10]
_08037696:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037704
	ldr r3, _0803772C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037730 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037734 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08037738 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0803773C @ =sub_8037744
	str r0, [r1, #8]
_08037704:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037740 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037728: .4byte gCurTask
_0803772C: .4byte gUnknown_080D7704
_08037730: .4byte gUnknown_080D76F0
_08037734: .4byte IWRAM_START + 0x34
_08037738: .4byte IWRAM_START + 0x35
_0803773C: .4byte sub_8037744
_08037740: .4byte gUnknown_03005960

	thumb_func_start sub_8037744
sub_8037744: @ 0x08037744
	push {r4, r5, r6, r7, lr}
	ldr r7, _080377FC @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08037766
	movs r0, #0
	strh r0, [r4, #0x10]
_08037766:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080377D8
	strh r0, [r4, #0x10]
	ldr r3, _08037800 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037804 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037808 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _0803780C @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08037810 @ =sub_8037818
	str r0, [r1, #8]
_080377D8:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037814 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080377FC: .4byte gCurTask
_08037800: .4byte gUnknown_080D7704
_08037804: .4byte gUnknown_080D76F0
_08037808: .4byte IWRAM_START + 0x34
_0803780C: .4byte IWRAM_START + 0x35
_08037810: .4byte sub_8037818
_08037814: .4byte gUnknown_03005960

	thumb_func_start sub_8037818
sub_8037818: @ 0x08037818
	push {r4, r5, r6, r7, lr}
	ldr r7, _080378A0 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0803787C
	ldr r3, _080378A4 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080378A8 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080378AC @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080378B0 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080378B4 @ =sub_80378BC
	str r0, [r1, #8]
_0803787C:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080378B8 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080378A0: .4byte gCurTask
_080378A4: .4byte gUnknown_080D7704
_080378A8: .4byte gUnknown_080D76F0
_080378AC: .4byte IWRAM_START + 0x34
_080378B0: .4byte IWRAM_START + 0x35
_080378B4: .4byte sub_80378BC
_080378B8: .4byte gUnknown_03005960

	thumb_func_start sub_80378BC
sub_80378BC: @ 0x080378BC
	push {r4, r5, r6, r7, lr}
	ldr r0, _0803794C @ =gCurTask
	mov ip, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r1, _08037950 @ =IWRAM_START + 0x14
	adds r6, r5, r1
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #0
	bne _08037928
	ldr r3, _08037954 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037958 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0803795C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08037960 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	str r7, [r4, #4]
	mov r2, ip
	ldr r1, [r2]
	ldr r0, _08037964 @ =sub_803796C
	str r0, [r1, #8]
_08037928:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037968 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803794C: .4byte gCurTask
_08037950: .4byte IWRAM_START + 0x14
_08037954: .4byte gUnknown_080D7704
_08037958: .4byte gUnknown_080D76F0
_0803795C: .4byte IWRAM_START + 0x34
_08037960: .4byte IWRAM_START + 0x35
_08037964: .4byte sub_803796C
_08037968: .4byte gUnknown_03005960

	thumb_func_start sub_803796C
sub_803796C: @ 0x0803796C
	push {r4, r5, lr}
	ldr r0, _08037A24 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldrh r1, [r4, #2]
	movs r0, #0x9a
	lsls r0, r0, #1
	cmp r1, r0
	bhi _080379A4
	cmp r1, #0xf0
	bne _08037996
	bl sub_8036E08
	movs r0, #0x31
	bl m4aSongNumStart
_08037996:
	ldr r1, [r4, #0xc]
	asrs r0, r1, #8
	cmp r0, #0x9c
	ble _080379A4
	adds r0, r1, #0
	subs r0, #0x18
	str r0, [r4, #0xc]
_080379A4:
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080379FE
	ldr r3, _08037A28 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037A2C @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r5, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08037A24 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08037A30 @ =sub_8037A38
	str r0, [r1, #8]
_080379FE:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r5, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037A34 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08037A24: .4byte gCurTask
_08037A28: .4byte gUnknown_080D7704
_08037A2C: .4byte gUnknown_080D76F0
_08037A30: .4byte sub_8037A38
_08037A34: .4byte gUnknown_03005960

	thumb_func_start sub_8037A38
sub_8037A38: @ 0x08037A38
	push {r4, r5, r6, r7, lr}
	ldr r7, _08037AE4 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r1, [r4, #2]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08037A5E
	ldr r2, _08037AE8 @ =IWRAM_START + 0x36
	adds r1, r5, r2
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08037A5E:
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037ABE
	ldr r3, _08037AEC @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037AF0 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037AF4 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08037AF8 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	movs r0, #0x72
	bl m4aSongNumStart
	ldr r1, [r7]
	ldr r0, _08037AFC @ =sub_8037B04
	str r0, [r1, #8]
_08037ABE:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037B00 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037AE4: .4byte gCurTask
_08037AE8: .4byte IWRAM_START + 0x36
_08037AEC: .4byte gUnknown_080D7704
_08037AF0: .4byte gUnknown_080D76F0
_08037AF4: .4byte IWRAM_START + 0x34
_08037AF8: .4byte IWRAM_START + 0x35
_08037AFC: .4byte sub_8037B04
_08037B00: .4byte gUnknown_03005960

	thumb_func_start sub_8037B04
sub_8037B04: @ 0x08037B04
	push {r4, r5, r6, r7, lr}
	ldr r7, _08037BAC @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldr r2, _08037BB0 @ =gUnknown_08097AA4
	ldr r1, [r4, #4]
	adds r1, #1
	str r1, [r4, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldr r1, _08037BB4 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037B88
	ldr r3, _08037BB8 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08037BBC @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037BC0 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08037BC4 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08037BC8 @ =sub_8037BD0
	str r0, [r1, #8]
_08037B88:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08037BCC @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037BAC: .4byte gCurTask
_08037BB0: .4byte gUnknown_08097AA4
_08037BB4: .4byte 0x000003FF
_08037BB8: .4byte gUnknown_080D7704
_08037BBC: .4byte gUnknown_080D76F0
_08037BC0: .4byte IWRAM_START + 0x34
_08037BC4: .4byte IWRAM_START + 0x35
_08037BC8: .4byte sub_8037BD0
_08037BCC: .4byte gUnknown_03005960

	thumb_func_start sub_8037BD0
sub_8037BD0: @ 0x08037BD0
	push {r4, r5, r6, r7, lr}
	ldr r4, _08037CC0 @ =gCurTask
	ldr r0, [r4]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r7, r0
	adds r0, #0x14
	adds r6, r7, r0
	ldr r2, _08037CC4 @ =gUnknown_08097AA4
	ldr r1, [r5, #4]
	adds r1, #1
	str r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldr r1, _08037CC8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	ldr r0, [r5, #0xc]
	subs r0, r0, r1
	str r0, [r5, #0xc]
	ldrh r0, [r5, #2]
	subs r0, #1
	strh r0, [r5, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037C54
	ldr r3, _08037CCC @ =gUnknown_080D7704
	ldrb r1, [r5, #1]
	adds r1, #1
	strb r1, [r5, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r5]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r5, #2]
	ldr r1, _08037CD0 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037CD4 @ =IWRAM_START + 0x34
	adds r0, r7, r2
	strb r1, [r0]
	ldr r0, _08037CD8 @ =IWRAM_START + 0x35
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r4]
	ldr r0, _08037CDC @ =sub_8037CEC
	str r0, [r1, #8]
_08037C54:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r4, _08037CE0 @ =gUnknown_03005960
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r2, _08037CE4 @ =IWRAM_START + 0x44
	adds r6, r7, r2
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r1, [r4, #4]
	movs r0, #0xb2
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	ldr r0, [r6, #0x10]
	ldr r1, _08037CE8 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_80051E8
	ldrh r1, [r5, #2]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _08037CBA
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_80372C8
_08037CBA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037CC0: .4byte gCurTask
_08037CC4: .4byte gUnknown_08097AA4
_08037CC8: .4byte 0x000003FF
_08037CCC: .4byte gUnknown_080D7704
_08037CD0: .4byte gUnknown_080D76F0
_08037CD4: .4byte IWRAM_START + 0x34
_08037CD8: .4byte IWRAM_START + 0x35
_08037CDC: .4byte sub_8037CEC
_08037CE0: .4byte gUnknown_03005960
_08037CE4: .4byte IWRAM_START + 0x44
_08037CE8: .4byte 0xFFFFFBFF

	thumb_func_start sub_8037CEC
sub_8037CEC: @ 0x08037CEC
	push {r4, r5, r6, r7, lr}
	ldr r4, _08037DDC @ =gCurTask
	ldr r0, [r4]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r7, r0
	adds r0, #0x14
	adds r6, r7, r0
	ldr r2, _08037DE0 @ =gUnknown_08097AA4
	ldr r1, [r5, #4]
	adds r1, #1
	str r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldr r1, _08037DE4 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	ldr r0, [r5, #0xc]
	subs r0, r0, r1
	str r0, [r5, #0xc]
	ldrh r0, [r5, #2]
	subs r0, #1
	strh r0, [r5, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08037D70
	ldr r3, _08037DE8 @ =gUnknown_080D7704
	ldrb r1, [r5, #1]
	adds r1, #1
	strb r1, [r5, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r5]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r5, #2]
	ldr r1, _08037DEC @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037DF0 @ =IWRAM_START + 0x34
	adds r0, r7, r2
	strb r1, [r0]
	ldr r0, _08037DF4 @ =IWRAM_START + 0x35
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r4]
	ldr r0, _08037DF8 @ =sub_8037E08
	str r0, [r1, #8]
_08037D70:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r4, _08037DFC @ =gUnknown_03005960
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r2, _08037E00 @ =IWRAM_START + 0x44
	adds r6, r7, r2
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r1, [r4, #4]
	movs r0, #0xb2
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	ldr r0, [r6, #0x10]
	ldr r1, _08037E04 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_80051E8
	ldrh r1, [r5, #2]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _08037DD6
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_80372C8
_08037DD6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037DDC: .4byte gCurTask
_08037DE0: .4byte gUnknown_08097AA4
_08037DE4: .4byte 0x000003FF
_08037DE8: .4byte gUnknown_080D7704
_08037DEC: .4byte gUnknown_080D76F0
_08037DF0: .4byte IWRAM_START + 0x34
_08037DF4: .4byte IWRAM_START + 0x35
_08037DF8: .4byte sub_8037E08
_08037DFC: .4byte gUnknown_03005960
_08037E00: .4byte IWRAM_START + 0x44
_08037E04: .4byte 0xFFFFFBFF

	thumb_func_start sub_8037E08
sub_8037E08: @ 0x08037E08
	push {r4, r5, r6, r7, lr}
	ldr r0, _08037F2C @ =gCurTask
	mov ip, r0
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	ldr r1, _08037F30 @ =IWRAM_START + 0x14
	adds r6, r4, r1
	ldr r2, _08037F34 @ =IWRAM_START + 0x44
	adds r7, r4, r2
	ldr r2, _08037F38 @ =gUnknown_08097AA4
	ldr r1, [r5, #4]
	adds r1, #1
	str r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldr r1, _08037F3C @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	ldr r0, [r5, #0xc]
	subs r0, r0, r1
	str r0, [r5, #0xc]
	ldrh r0, [r5, #2]
	subs r0, #1
	strh r0, [r5, #2]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _08037EC0
	ldr r0, _08037F40 @ =gBldRegs
	strh r1, [r0, #4]
	ldr r3, _08037F44 @ =gUnknown_080D7704
	ldrb r1, [r5, #1]
	adds r1, #1
	strb r1, [r5, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r5]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r5, #2]
	ldr r1, _08037F48 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08037F4C @ =IWRAM_START + 0x34
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, _08037F50 @ =IWRAM_START + 0x35
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _08037F54 @ =gUnknown_080D7540
	ldr r0, [r1, #8]
	str r0, [r7, #4]
	ldrh r0, [r1, #0xc]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #0xe]
	adds r2, #0x30
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, _08037F58 @ =IWRAM_START + 0x65
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	mov r2, ip
	ldr r1, [r2]
	ldr r0, _08037F5C @ =sub_8037F68
	str r0, [r1, #8]
	movs r0, #0x72
	bl m4aSongNumStop
	movs r0, #0xdd
	bl m4aSongNumStart
_08037EC0:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r4, _08037F60 @ =gUnknown_03005960
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	adds r6, r7, #0
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r1, [r4, #4]
	movs r0, #0xb2
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	ldr r0, [r6, #0x10]
	ldr r1, _08037F64 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_80051E8
	ldrh r1, [r5, #2]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _08037F24
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_80372C8
_08037F24:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08037F2C: .4byte gCurTask
_08037F30: .4byte IWRAM_START + 0x14
_08037F34: .4byte IWRAM_START + 0x44
_08037F38: .4byte gUnknown_08097AA4
_08037F3C: .4byte 0x000003FF
_08037F40: .4byte gBldRegs
_08037F44: .4byte gUnknown_080D7704
_08037F48: .4byte gUnknown_080D76F0
_08037F4C: .4byte IWRAM_START + 0x34
_08037F50: .4byte IWRAM_START + 0x35
_08037F54: .4byte gUnknown_080D7540
_08037F58: .4byte IWRAM_START + 0x65
_08037F5C: .4byte sub_8037F68
_08037F60: .4byte gUnknown_03005960
_08037F64: .4byte 0xFFFFFBFF

	thumb_func_start sub_8037F68
sub_8037F68: @ 0x08037F68
	push {r4, r5, r6, lr}
	ldr r0, _08037FF0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0x14
	adds r4, r1, r0
	ldr r1, [r5, #0xc]
	ldr r0, _08037FF4 @ =0xFFFFE000
	cmp r1, r0
	ble _08037F88
	ldr r2, _08037FF8 @ =0xFFFFF800
	adds r0, r1, r2
	str r0, [r5, #0xc]
_08037F88:
	ldr r2, _08037FFC @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #7
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r3, _08038000 @ =gBldRegs
	movs r6, #0
	movs r2, #0xff
	strh r2, [r3]
	ldr r1, _08038004 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1, #2]
	movs r0, #0xa0
	strh r0, [r1, #6]
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1, #8]
	strh r2, [r1, #0xa]
	ldrh r0, [r5, #2]
	cmp r0, #0
	bne _08038032
	ldrh r0, [r3, #4]
	cmp r0, #0x10
	bne _0803802C
	ldr r1, _08038008 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0803800C @ =gUnknown_03002AE4
	ldr r0, _08038010 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08038014 @ =gUnknown_03005390
	strb r6, [r0]
	ldr r1, _08038018 @ =gUnknown_03004D5C
	ldr r0, _0803801C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08038020 @ =gUnknown_030054CC
	strb r6, [r0]
	ldr r0, _08038024 @ =gUnknown_030054F0
	strb r6, [r0]
	ldr r1, _08038028 @ =gUnknown_030055B4
	movs r0, #0x1d
	strb r0, [r1]
	bl sub_801A6D8
	bl sub_801A770
	b _080380A2
	.align 2, 0
_08037FF0: .4byte gCurTask
_08037FF4: .4byte 0xFFFFE000
_08037FF8: .4byte 0xFFFFF800
_08037FFC: .4byte gDispCnt
_08038000: .4byte gBldRegs
_08038004: .4byte gWinRegs
_08038008: .4byte 0x0000FFFF
_0803800C: .4byte gUnknown_03002AE4
_08038010: .4byte gUnknown_0300287C
_08038014: .4byte gUnknown_03005390
_08038018: .4byte gUnknown_03004D5C
_0803801C: .4byte gUnknown_03002A84
_08038020: .4byte gUnknown_030054CC
_08038024: .4byte gUnknown_030054F0
_08038028: .4byte gUnknown_030055B4
_0803802C:
	adds r0, #1
	strh r0, [r3, #4]
	b _08038036
_08038032:
	subs r0, #1
	strh r0, [r5, #2]
_08038036:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	ldr r6, _080380A8 @ =gUnknown_03005960
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldrh r0, [r5, #2]
	cmp r0, #0x99
	bls _08038090
	adds r4, r5, #0
	adds r4, #0x44
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	ldr r1, [r6, #4]
	movs r0, #0xb2
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r0, [r4, #0x10]
	ldr r1, _080380AC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_80051E8
_08038090:
	ldrh r1, [r5, #2]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _080380A2
	ldr r0, [r5, #8]
	ldr r1, [r5, #0xc]
	bl sub_80372C8
_080380A2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080380A8: .4byte gUnknown_03005960
_080380AC: .4byte 0xFFFFFBFF

	thumb_func_start sub_80380B0
sub_80380B0: @ 0x080380B0
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803814C @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038128
	ldr r3, _08038150 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038154 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038158 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _0803815C @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038160 @ =sub_8038168
	str r0, [r1, #8]
_08038128:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038164 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803814C: .4byte gCurTask
_08038150: .4byte gUnknown_080D7704
_08038154: .4byte gUnknown_080D76F0
_08038158: .4byte IWRAM_START + 0x34
_0803815C: .4byte IWRAM_START + 0x35
_08038160: .4byte sub_8038168
_08038164: .4byte gUnknown_03005960

	thumb_func_start sub_8038168
sub_8038168: @ 0x08038168
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803821C @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0803818A
	movs r0, #0
	strh r0, [r4, #0x10]
_0803818A:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080381F8
	ldr r3, _08038220 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038224 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038228 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _0803822C @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038230 @ =sub_8038238
	str r0, [r1, #8]
_080381F8:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038234 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803821C: .4byte gCurTask
_08038220: .4byte gUnknown_080D7704
_08038224: .4byte gUnknown_080D76F0
_08038228: .4byte IWRAM_START + 0x34
_0803822C: .4byte IWRAM_START + 0x35
_08038230: .4byte sub_8038238
_08038234: .4byte gUnknown_03005960

	thumb_func_start sub_8038238
sub_8038238: @ 0x08038238
	push {r4, r5, r6, r7, lr}
	ldr r7, _080382D4 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080382B0
	ldr r3, _080382D8 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080382DC @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080382E0 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080382E4 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080382E8 @ =sub_80382F0
	str r0, [r1, #8]
_080382B0:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080382EC @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080382D4: .4byte gCurTask
_080382D8: .4byte gUnknown_080D7704
_080382DC: .4byte gUnknown_080D76F0
_080382E0: .4byte IWRAM_START + 0x34
_080382E4: .4byte IWRAM_START + 0x35
_080382E8: .4byte sub_80382F0
_080382EC: .4byte gUnknown_03005960

	thumb_func_start sub_80382F0
sub_80382F0: @ 0x080382F0
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803839C @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038312
	movs r0, #0
	strh r0, [r4, #0x10]
_08038312:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038378
	ldr r3, _080383A0 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080383A4 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080383A8 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080383AC @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080383B0 @ =sub_80383B8
	str r0, [r1, #8]
_08038378:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080383B4 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803839C: .4byte gCurTask
_080383A0: .4byte gUnknown_080D7704
_080383A4: .4byte gUnknown_080D76F0
_080383A8: .4byte IWRAM_START + 0x34
_080383AC: .4byte IWRAM_START + 0x35
_080383B0: .4byte sub_80383B8
_080383B4: .4byte gUnknown_03005960

	thumb_func_start sub_80383B8
sub_80383B8: @ 0x080383B8
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038440 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0803841C
	ldr r3, _08038444 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038448 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0803844C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038450 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038454 @ =sub_803845C
	str r0, [r1, #8]
_0803841C:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038458 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038440: .4byte gCurTask
_08038444: .4byte gUnknown_080D7704
_08038448: .4byte gUnknown_080D76F0
_0803844C: .4byte IWRAM_START + 0x34
_08038450: .4byte IWRAM_START + 0x35
_08038454: .4byte sub_803845C
_08038458: .4byte gUnknown_03005960

	thumb_func_start sub_803845C
sub_803845C: @ 0x0803845C
	push {r4, r5, r6, r7, lr}
	ldr r7, _080384E4 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080384C0
	ldr r3, _080384E8 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080384EC @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080384F0 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080384F4 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080384F8 @ =sub_8038500
	str r0, [r1, #8]
_080384C0:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080384FC @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080384E4: .4byte gCurTask
_080384E8: .4byte gUnknown_080D7704
_080384EC: .4byte gUnknown_080D76F0
_080384F0: .4byte IWRAM_START + 0x34
_080384F4: .4byte IWRAM_START + 0x35
_080384F8: .4byte sub_8038500
_080384FC: .4byte gUnknown_03005960

	thumb_func_start sub_8038500
sub_8038500: @ 0x08038500
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038588 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038564
	ldr r3, _0803858C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038590 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038594 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038598 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0803859C @ =sub_803997C
	str r0, [r1, #8]
_08038564:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080385A0 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038588: .4byte gCurTask
_0803858C: .4byte gUnknown_080D7704
_08038590: .4byte gUnknown_080D76F0
_08038594: .4byte IWRAM_START + 0x34
_08038598: .4byte IWRAM_START + 0x35
_0803859C: .4byte sub_803997C
_080385A0: .4byte gUnknown_03005960

	thumb_func_start sub_80385A4
sub_80385A4: @ 0x080385A4
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038648 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038624
	ldr r3, _0803864C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038650 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038654 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038658 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0803865C @ =sub_8038664
	str r0, [r1, #8]
_08038624:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038660 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038648: .4byte gCurTask
_0803864C: .4byte gUnknown_080D7704
_08038650: .4byte gUnknown_080D76F0
_08038654: .4byte IWRAM_START + 0x34
_08038658: .4byte IWRAM_START + 0x35
_0803865C: .4byte sub_8038664
_08038660: .4byte gUnknown_03005960

	thumb_func_start sub_8038664
sub_8038664: @ 0x08038664
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038710 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038686
	movs r0, #0
	strh r0, [r4, #0x10]
_08038686:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080386EC
	ldr r3, _08038714 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038718 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0803871C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038720 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038724 @ =sub_803872C
	str r0, [r1, #8]
_080386EC:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038728 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038710: .4byte gCurTask
_08038714: .4byte gUnknown_080D7704
_08038718: .4byte gUnknown_080D76F0
_0803871C: .4byte IWRAM_START + 0x34
_08038720: .4byte IWRAM_START + 0x35
_08038724: .4byte sub_803872C
_08038728: .4byte gUnknown_03005960

	thumb_func_start sub_803872C
sub_803872C: @ 0x0803872C
	push {r4, r5, r6, r7, lr}
	ldr r7, _080387D8 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0803874E
	movs r0, #0
	strh r0, [r4, #0x10]
_0803874E:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080387B4
	ldr r3, _080387DC @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080387E0 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080387E4 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080387E8 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080387EC @ =sub_80387F4
	str r0, [r1, #8]
_080387B4:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080387F0 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080387D8: .4byte gCurTask
_080387DC: .4byte gUnknown_080D7704
_080387E0: .4byte gUnknown_080D76F0
_080387E4: .4byte IWRAM_START + 0x34
_080387E8: .4byte IWRAM_START + 0x35
_080387EC: .4byte sub_80387F4
_080387F0: .4byte gUnknown_03005960

	thumb_func_start sub_80387F4
sub_80387F4: @ 0x080387F4
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803887C @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038858
	ldr r3, _08038880 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038884 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038888 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _0803888C @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038890 @ =sub_8038898
	str r0, [r1, #8]
_08038858:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038894 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803887C: .4byte gCurTask
_08038880: .4byte gUnknown_080D7704
_08038884: .4byte gUnknown_080D76F0
_08038888: .4byte IWRAM_START + 0x34
_0803888C: .4byte IWRAM_START + 0x35
_08038890: .4byte sub_8038898
_08038894: .4byte gUnknown_03005960

	thumb_func_start sub_8038898
sub_8038898: @ 0x08038898
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038920 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080388FC
	ldr r3, _08038924 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038928 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0803892C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038930 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038934 @ =sub_803893C
	str r0, [r1, #8]
_080388FC:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038938 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038920: .4byte gCurTask
_08038924: .4byte gUnknown_080D7704
_08038928: .4byte gUnknown_080D76F0
_0803892C: .4byte IWRAM_START + 0x34
_08038930: .4byte IWRAM_START + 0x35
_08038934: .4byte sub_803893C
_08038938: .4byte gUnknown_03005960

	thumb_func_start sub_803893C
sub_803893C: @ 0x0803893C
	push {r4, r5, r6, r7, lr}
	ldr r7, _080389C4 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080389A0
	ldr r3, _080389C8 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080389CC @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080389D0 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080389D4 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080389D8 @ =sub_80399A4
	str r0, [r1, #8]
_080389A0:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080389DC @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080389C4: .4byte gCurTask
_080389C8: .4byte gUnknown_080D7704
_080389CC: .4byte gUnknown_080D76F0
_080389D0: .4byte IWRAM_START + 0x34
_080389D4: .4byte IWRAM_START + 0x35
_080389D8: .4byte sub_80399A4
_080389DC: .4byte gUnknown_03005960

	thumb_func_start sub_80389E0
sub_80389E0: @ 0x080389E0
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038A84 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038A60
	ldr r3, _08038A88 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038A8C @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038A90 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038A94 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038A98 @ =sub_8038AA0
	str r0, [r1, #8]
_08038A60:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038A9C @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038A84: .4byte gCurTask
_08038A88: .4byte gUnknown_080D7704
_08038A8C: .4byte gUnknown_080D76F0
_08038A90: .4byte IWRAM_START + 0x34
_08038A94: .4byte IWRAM_START + 0x35
_08038A98: .4byte sub_8038AA0
_08038A9C: .4byte gUnknown_03005960

	thumb_func_start sub_8038AA0
sub_8038AA0: @ 0x08038AA0
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038B50 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038AC2
	movs r0, #0
	strh r0, [r4, #0x10]
_08038AC2:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08038B2C
	strh r0, [r4, #0x10]
	ldr r3, _08038B54 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038B58 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038B5C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038B60 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038B64 @ =sub_8038B6C
	str r0, [r1, #8]
_08038B2C:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038B68 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038B50: .4byte gCurTask
_08038B54: .4byte gUnknown_080D7704
_08038B58: .4byte gUnknown_080D76F0
_08038B5C: .4byte IWRAM_START + 0x34
_08038B60: .4byte IWRAM_START + 0x35
_08038B64: .4byte sub_8038B6C
_08038B68: .4byte gUnknown_03005960

	thumb_func_start sub_8038B6C
sub_8038B6C: @ 0x08038B6C
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038C18 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038B8E
	movs r0, #0
	strh r0, [r4, #0x10]
_08038B8E:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038BF4
	ldr r3, _08038C1C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038C20 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038C24 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038C28 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038C2C @ =sub_8038C34
	str r0, [r1, #8]
_08038BF4:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038C30 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038C18: .4byte gCurTask
_08038C1C: .4byte gUnknown_080D7704
_08038C20: .4byte gUnknown_080D76F0
_08038C24: .4byte IWRAM_START + 0x34
_08038C28: .4byte IWRAM_START + 0x35
_08038C2C: .4byte sub_8038C34
_08038C30: .4byte gUnknown_03005960

	thumb_func_start sub_8038C34
sub_8038C34: @ 0x08038C34
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038CBC @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038C98
	ldr r3, _08038CC0 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038CC4 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038CC8 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038CCC @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038CD0 @ =sub_8038CD8
	str r0, [r1, #8]
_08038C98:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038CD4 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038CBC: .4byte gCurTask
_08038CC0: .4byte gUnknown_080D7704
_08038CC4: .4byte gUnknown_080D76F0
_08038CC8: .4byte IWRAM_START + 0x34
_08038CCC: .4byte IWRAM_START + 0x35
_08038CD0: .4byte sub_8038CD8
_08038CD4: .4byte gUnknown_03005960

	thumb_func_start sub_8038CD8
sub_8038CD8: @ 0x08038CD8
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038D60 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038D3C
	ldr r3, _08038D64 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038D68 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038D6C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038D70 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038D74 @ =sub_8038D7C
	str r0, [r1, #8]
_08038D3C:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038D78 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038D60: .4byte gCurTask
_08038D64: .4byte gUnknown_080D7704
_08038D68: .4byte gUnknown_080D76F0
_08038D6C: .4byte IWRAM_START + 0x34
_08038D70: .4byte IWRAM_START + 0x35
_08038D74: .4byte sub_8038D7C
_08038D78: .4byte gUnknown_03005960

	thumb_func_start sub_8038D7C
sub_8038D7C: @ 0x08038D7C
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038E04 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038DE0
	ldr r3, _08038E08 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038E0C @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038E10 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038E14 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038E18 @ =sub_80399CC
	str r0, [r1, #8]
_08038DE0:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038E1C @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038E04: .4byte gCurTask
_08038E08: .4byte gUnknown_080D7704
_08038E0C: .4byte gUnknown_080D76F0
_08038E10: .4byte IWRAM_START + 0x34
_08038E14: .4byte IWRAM_START + 0x35
_08038E18: .4byte sub_80399CC
_08038E1C: .4byte gUnknown_03005960

	thumb_func_start sub_8038E20
sub_8038E20: @ 0x08038E20
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038EC4 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldr r2, _08038EC8 @ =IWRAM_START + 0x36
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r2, #0x12
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08038EA0
	ldr r3, _08038ECC @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038ED0 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038ED4 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08038ED8 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038EDC @ =sub_8038EE4
	str r0, [r1, #8]
_08038EA0:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038EE0 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038EC4: .4byte gCurTask
_08038EC8: .4byte IWRAM_START + 0x36
_08038ECC: .4byte gUnknown_080D7704
_08038ED0: .4byte gUnknown_080D76F0
_08038ED4: .4byte IWRAM_START + 0x34
_08038ED8: .4byte IWRAM_START + 0x35
_08038EDC: .4byte sub_8038EE4
_08038EE0: .4byte gUnknown_03005960

	thumb_func_start sub_8038EE4
sub_8038EE4: @ 0x08038EE4
	push {r4, r5, r6, r7, lr}
	ldr r7, _08038F9C @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038F06
	movs r0, #0
	strh r0, [r4, #0x10]
_08038F06:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r3, #0x12
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #0xc]
	adds r2, r0, r1
	str r2, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _08038F76
	ldr r3, _08038FA0 @ =0xFFFFFE00
	adds r0, r2, r3
	str r0, [r4, #0xc]
	strh r1, [r4, #0x10]
	ldr r3, _08038FA4 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08038FA8 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08038FAC @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r3, _08038FB0 @ =IWRAM_START + 0x35
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _08038FB4 @ =sub_8038FBC
	str r0, [r1, #8]
_08038F76:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08038FB8 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08038F9C: .4byte gCurTask
_08038FA0: .4byte 0xFFFFFE00
_08038FA4: .4byte gUnknown_080D7704
_08038FA8: .4byte gUnknown_080D76F0
_08038FAC: .4byte IWRAM_START + 0x34
_08038FB0: .4byte IWRAM_START + 0x35
_08038FB4: .4byte sub_8038FBC
_08038FB8: .4byte gUnknown_03005960

	thumb_func_start sub_8038FBC
sub_8038FBC: @ 0x08038FBC
	push {r4, r5, r6, r7, lr}
	ldr r7, _08039068 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #0x10]
	subs r0, #0x20
	strh r0, [r4, #0x10]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08038FDE
	movs r0, #0
	strh r0, [r4, #0x10]
_08038FDE:
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08039044
	ldr r3, _0803906C @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08039070 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _08039074 @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _08039078 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0803907C @ =sub_8039084
	str r0, [r1, #8]
_08039044:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08039080 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039068: .4byte gCurTask
_0803906C: .4byte gUnknown_080D7704
_08039070: .4byte gUnknown_080D76F0
_08039074: .4byte IWRAM_START + 0x34
_08039078: .4byte IWRAM_START + 0x35
_0803907C: .4byte sub_8039084
_08039080: .4byte gUnknown_03005960

	thumb_func_start sub_8039084
sub_8039084: @ 0x08039084
	push {r4, r5, r6, lr}
	ldr r2, _080390A8 @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldr r1, [r4, #8]
	ldr r0, _080390AC @ =0x0000B7FF
	adds r6, r2, #0
	cmp r1, r0
	bgt _080390B0
	adds r0, r1, #0
	adds r0, #0x80
	str r0, [r4, #8]
	b _080390B8
	.align 2, 0
_080390A8: .4byte gCurTask
_080390AC: .4byte 0x0000B7FF
_080390B0:
	ldr r0, [r5, #0x10]
	ldr r1, _08039130 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r5, #0x10]
_080390B8:
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0803910A
	ldr r3, _08039134 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08039138 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r5, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r6]
	ldr r0, _0803913C @ =sub_8039144
	str r0, [r1, #8]
_0803910A:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r5, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08039140 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08039130: .4byte 0xFFFFFBFF
_08039134: .4byte gUnknown_080D7704
_08039138: .4byte gUnknown_080D76F0
_0803913C: .4byte sub_8039144
_08039140: .4byte gUnknown_03005960

	thumb_func_start sub_8039144
sub_8039144: @ 0x08039144
	push {r4, r5, r6, r7, lr}
	ldr r7, _080391E4 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r6, r0
	adds r0, #0x14
	adds r5, r6, r0
	ldr r1, [r4, #8]
	ldr r0, _080391E8 @ =0x000097FF
	cmp r1, r0
	bgt _08039164
	adds r0, r1, #0
	adds r0, #0x40
	str r0, [r4, #8]
_08039164:
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080391BE
	ldr r3, _080391EC @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _080391F0 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r5, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _080391F4 @ =IWRAM_START + 0x34
	adds r0, r6, r2
	strb r1, [r0]
	ldr r0, _080391F8 @ =IWRAM_START + 0x35
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r5, #0x10]
	ldr r1, _080391FC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r5, #0x10]
	ldr r1, [r7]
	ldr r0, _08039200 @ =sub_8039208
	str r0, [r1, #8]
_080391BE:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r5, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _08039204 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080391E4: .4byte gCurTask
_080391E8: .4byte 0x000097FF
_080391EC: .4byte gUnknown_080D7704
_080391F0: .4byte gUnknown_080D76F0
_080391F4: .4byte IWRAM_START + 0x34
_080391F8: .4byte IWRAM_START + 0x35
_080391FC: .4byte 0xFFFFFBFF
_08039200: .4byte sub_8039208
_08039204: .4byte gUnknown_03005960

	thumb_func_start sub_8039208
sub_8039208: @ 0x08039208
	push {r4, r5, r6, r7, lr}
	ldr r7, _08039290 @ =gCurTask
	ldr r0, [r7]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x14
	adds r6, r5, r0
	ldrh r0, [r4, #2]
	subs r0, #1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0803926C
	ldr r3, _08039294 @ =gUnknown_080D7704
	ldrb r1, [r4, #1]
	adds r1, #1
	strb r1, [r4, #1]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x17
	ldrb r2, [r4]
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r0, [r1]
	strh r0, [r4, #2]
	ldr r1, _08039298 @ =gUnknown_080D76F0
	adds r0, r2, #0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r6, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0803929C @ =IWRAM_START + 0x34
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _080392A0 @ =IWRAM_START + 0x35
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _080392A4 @ =sub_8039A10
	str r0, [r1, #8]
_0803926C:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	ldr r1, _080392A8 @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039290: .4byte gCurTask
_08039294: .4byte gUnknown_080D7704
_08039298: .4byte gUnknown_080D76F0
_0803929C: .4byte IWRAM_START + 0x34
_080392A0: .4byte IWRAM_START + 0x35
_080392A4: .4byte sub_8039A10
_080392A8: .4byte gUnknown_03005960

	thumb_func_start sub_80392AC
sub_80392AC: @ 0x080392AC
	push {r4, r5, lr}
	ldr r0, _08039340 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r2, _08039344 @ =gUnknown_03005590
	ldr r0, [r2]
	movs r1, #3
	ands r0, r1
	adds r5, r2, #0
	cmp r0, #0
	bne _080392D2
	ldrb r0, [r4]
	cmp r0, #0x2b
	bhi _080392D2
	adds r0, #1
	strb r0, [r4]
_080392D2:
	ldr r0, [r4, #8]
	adds r0, #2
	str r0, [r4, #8]
	ldr r1, _08039348 @ =gUnknown_03005960
	movs r0, #0
	str r0, [r1]
	ldrb r0, [r4]
	str r0, [r1, #4]
	adds r1, r5, #0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	movs r0, #0
	bl sub_803959C
	ldr r1, [r4, #4]
	movs r0, #0xb9
	lsls r0, r0, #1
	cmp r1, r0
	beq _0803937C
	subs r3, r1, #1
	str r3, [r4, #4]
	cmp r3, #0
	bne _08039332
	subs r0, #0x72
	str r0, [r4, #8]
	ldr r0, _08039340 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803934C @ =sub_80393A4
	str r0, [r1, #8]
	movs r0, #0xde
	lsls r0, r0, #1
	adds r2, r4, r0
	ldr r1, _08039350 @ =gUnknown_080D7560
	ldr r0, [r1]
	str r0, [r2, #4]
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	movs r5, #0xee
	lsls r5, r5, #1
	adds r0, r4, r5
	strb r1, [r0]
	str r3, [r2, #0x10]
	ldr r0, _08039354 @ =0x000001DD
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
_08039332:
	ldr r2, [r4, #4]
	cmp r2, #0x3c
	bne _08039358
	bl sub_804CD50
	b _0803939C
	.align 2, 0
_08039340: .4byte gCurTask
_08039344: .4byte gUnknown_03005590
_08039348: .4byte gUnknown_03005960
_0803934C: .4byte sub_80393A4
_08039350: .4byte gUnknown_080D7560
_08039354: .4byte 0x000001DD
_08039358:
	cmp r2, #0x3b
	bhi _0803939C
	ldr r1, _08039374 @ =gUnknown_08097AA4
	ldr r0, _08039378 @ =0x000003FF
	ands r2, r0
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	strb r0, [r4, #0xe]
	strb r0, [r4, #0xf]
	b _0803939C
	.align 2, 0
_08039374: .4byte gUnknown_08097AA4
_08039378: .4byte 0x000003FF
_0803937C:
	ldr r3, _08039394 @ =gBldRegs
	ldrh r2, [r3, #4]
	cmp r2, #0
	beq _08039398
	ldr r0, [r5]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0803939C
	subs r0, r2, #1
	strh r0, [r3, #4]
	b _0803939C
	.align 2, 0
_08039394: .4byte gBldRegs
_08039398:
	subs r0, r1, #1
	str r0, [r4, #4]
_0803939C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80393A4
sub_80393A4: @ 0x080393A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _0803951C @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	ldr r0, [r7, #8]
	adds r0, #1
	str r0, [r7, #8]
	ldr r1, _08039520 @ =gUnknown_03005590
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	ldr r1, _08039524 @ =gUnknown_030054B8
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r7, #4]
	adds r0, #7
	str r0, [r7, #4]
	cmp r0, #0xfa
	bhi _080393DC
	b _08039500
_080393DC:
	add r1, sp, #8
	add r0, sp, #4
	bl sub_8050B2C
	ldr r0, [sp, #4]
	movs r1, #0xa0
	lsls r1, r1, #5
	adds r0, r0, r1
	str r0, [sp, #4]
	ldr r0, [sp, #8]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	str r0, [sp, #8]
	movs r3, #0
	mov sl, r3
	ldr r0, _08039528 @ =IWRAM_START + 0x10
	adds r0, r4, r0
	str r0, [sp, #0x10]
_08039402:
	ldr r1, [sp, #0x10]
	add r1, sl
	str r1, [sp, #0xc]
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803948E
	mov r2, sl
	lsls r2, r2, #3
	mov sb, r2
	adds r6, r7, #0
	adds r6, #0x30
	add r6, sb
	ldr r0, [r6]
	ldr r1, [sp, #4]
	ldr r2, [r7, #4]
	mov r3, sl
	lsls r3, r3, #2
	mov r8, r3
	add r3, sl
	lsls r3, r3, #1
	ldr r4, _0803952C @ =gUnknown_080D7838
	adds r3, r3, r4
	ldrb r4, [r3]
	adds r4, #2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	str r4, [sp]
	movs r3, #0xa
	bl sub_8085698
	str r0, [r6]
	adds r5, r7, #0
	adds r5, #0x34
	add r5, sb
	ldr r0, [r5]
	ldr r1, [sp, #8]
	ldr r2, [r7, #4]
	str r4, [sp]
	movs r3, #0xa
	bl sub_8085698
	str r0, [r5]
	movs r0, #0x98
	lsls r0, r0, #1
	adds r2, r7, r0
	add r2, r8
	ldrh r1, [r2]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x13
	subs r1, r1, r0
	movs r3, #0
	strh r1, [r2]
	movs r1, #0x99
	lsls r1, r1, #1
	adds r2, r7, r1
	add r2, r8
	ldrh r1, [r2]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x13
	subs r1, r1, r0
	strh r1, [r2]
	ldr r0, [r6]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r0, r2
	ldr r1, [sp, #4]
	cmp r0, r1
	ble _0803948E
	ldr r4, [sp, #0xc]
	strb r3, [r4]
_0803948E:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #0x1f
	bls _08039402
	movs r0, #0xd8
	lsls r0, r0, #1
	adds r6, r7, r0
	ldrb r0, [r6]
	cmp r0, #0
	beq _08039500
	movs r0, #0x87
	lsls r0, r0, #1
	bl m4aSongNumStartOrContinue
	movs r0, #0xc8
	lsls r0, r0, #7
	ldr r1, [sp, #4]
	ldr r2, [r7, #4]
	adds r2, #0x20
	movs r4, #3
	str r4, [sp]
	movs r3, #0xa
	bl sub_8085698
	movs r1, #0xda
	lsls r1, r1, #1
	adds r5, r7, r1
	str r0, [r5]
	movs r0, #0xb4
	lsls r0, r0, #8
	ldr r1, [sp, #8]
	ldr r2, [r7, #4]
	adds r2, #0x60
	str r4, [sp]
	movs r3, #0xa
	bl sub_8085698
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r1, r7, r2
	str r0, [r1]
	ldr r0, [r5]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r0, r3
	ldr r1, [sp, #4]
	cmp r0, r1
	ble _08039500
	movs r0, #0
	strb r0, [r6]
	ldr r0, _08039530 @ =gMPlayInfo_SE2
	movs r1, #4
	bl m4aMPlayFadeOutTemporarily
_08039500:
	ldr r2, [r7, #4]
	ldr r0, _08039534 @ =0x00000AEF
	cmp r2, r0
	bhi _08039540
	ldr r1, _08039538 @ =gUnknown_08097AA4
	ldr r0, _0803953C @ =0x000003FF
	ands r2, r0
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	b _08039582
	.align 2, 0
_0803951C: .4byte gCurTask
_08039520: .4byte gUnknown_03005590
_08039524: .4byte gUnknown_030054B8
_08039528: .4byte IWRAM_START + 0x10
_0803952C: .4byte gUnknown_080D7838
_08039530: .4byte gMPlayInfo_SE2
_08039534: .4byte 0x00000AEF
_08039538: .4byte gUnknown_08097AA4
_0803953C: .4byte 0x000003FF
_08039540:
	ldr r0, _08039578 @ =0x00000BB8
	cmp r2, r0
	bls _08039580
	movs r0, #0
	bl sub_8037438
	movs r0, #1
	bl sub_8037438
	movs r0, #2
	bl sub_8037438
	movs r0, #3
	bl sub_8037438
	movs r0, #4
	bl sub_8037438
	movs r0, #0x87
	lsls r0, r0, #1
	bl m4aSongNumStop
	ldr r0, _0803957C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0803958C
	.align 2, 0
_08039578: .4byte 0x00000BB8
_0803957C: .4byte gCurTask
_08039580:
	movs r0, #0
_08039582:
	strb r0, [r7, #0xe]
	strb r0, [r7, #0xf]
	movs r0, #1
	bl sub_803959C
_0803958C:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_803959C
sub_803959C: @ 0x0803959C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080396BC @ =gCurTask
	ldr r0, [r0]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r6
	mov r8, r0
	ldr r1, _080396C0 @ =gBgScrollRegs
	ldrb r0, [r0, #0xf]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, r8
	ldrb r2, [r2]
	adds r0, r0, r2
	strh r0, [r1, #2]
	mov r3, r8
	movs r0, #0xf
	ldrsb r0, [r3, r0]
	ldrb r5, [r3]
	adds r0, r0, r5
	strh r0, [r1, #6]
	movs r0, #0xe
	ldrsb r0, [r3, r0]
	strh r0, [r1]
	movs r0, #0xe
	ldrsb r0, [r3, r0]
	strh r0, [r1, #4]
	ldr r1, _080396C4 @ =IWRAM_START + 0x1EC
	adds r0, r6, r1
	bl sub_8004558
	ldr r2, _080396C8 @ =IWRAM_START + 0x21C
	adds r0, r6, r2
	bl sub_8004558
	ldr r3, _080396CC @ =IWRAM_START + 0x24C
	adds r0, r6, r3
	bl sub_8004558
	mov r5, r8
	ldr r1, [r5, #8]
	lsls r0, r1, #2
	adds r0, r0, r1
	ldr r2, _080396D0 @ =0x000003FF
	ands r0, r2
	str r0, [sp]
	lsls r0, r1, #1
	adds r0, r0, r1
	ands r0, r2
	str r0, [sp, #4]
	cmp r4, #0
	beq _080396E0
	movs r0, #0
	mov sb, r0
	ldr r1, _080396D4 @ =IWRAM_START + 0x10
	adds r1, r1, r6
	mov sl, r1
_08039620:
	mov r0, sl
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #0
	beq _080396AA
	mov r2, sb
	lsls r6, r2, #2
	adds r0, r6, r2
	lsls r0, r0, #1
	ldr r3, _080396D8 @ =gUnknown_080D7838
	adds r0, r0, r3
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xf6
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r2, r8
	adds r7, r2, r0
	mov r3, sb
	lsls r2, r3, #3
	mov r5, r8
	adds r5, #0x30
	adds r5, r5, r2
	movs r3, #0x98
	lsls r3, r3, #1
	add r3, r8
	adds r3, r3, r6
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	mov r4, r8
	adds r4, #0x34
	adds r4, r4, r2
	movs r2, #0x99
	lsls r2, r2, #1
	add r2, r8
	adds r2, r2, r6
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldrh r0, [r3]
	subs r0, #0x28
	strh r0, [r3]
	ldrh r0, [r2]
	subs r0, #0x10
	strh r0, [r2]
	ldr r0, [r5]
	asrs r0, r0, #8
	strh r0, [r7, #0x16]
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r2, r8
	ldrb r1, [r2]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	ldr r0, [r7, #0x10]
	ldr r1, _080396DC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_080396AA:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #0x1f
	bls _08039620
	b _08039816
	.align 2, 0
_080396BC: .4byte gCurTask
_080396C0: .4byte gBgScrollRegs
_080396C4: .4byte IWRAM_START + 0x1EC
_080396C8: .4byte IWRAM_START + 0x21C
_080396CC: .4byte IWRAM_START + 0x24C
_080396D0: .4byte 0x000003FF
_080396D4: .4byte IWRAM_START + 0x10
_080396D8: .4byte gUnknown_080D7838
_080396DC: .4byte 0xFFFFFBFF
_080396E0:
	movs r3, #0
	mov sb, r3
	ldr r5, _080397CC @ =IWRAM_START + 0x30
	adds r5, r6, r5
	str r5, [sp, #0x10]
	ldr r0, _080397D0 @ =IWRAM_START + 0x34
	adds r0, r6, r0
	str r0, [sp, #0x14]
	ldr r6, _080397D4 @ =gUnknown_080D7830
	ldr r1, _080397D8 @ =gUnknown_08097AA4
	mov sl, r1
_080396F6:
	mov r2, sb
	lsls r2, r2, #2
	mov ip, r2
	add r2, sb
	lsls r2, r2, #1
	adds r0, r6, #0
	adds r0, #8
	adds r0, r2, r0
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r5, #0xf6
	lsls r5, r5, #1
	adds r0, r0, r5
	mov r1, r8
	adds r7, r1, r0
	mov r5, sb
	lsls r3, r5, #3
	ldr r0, [sp, #0x10]
	adds r4, r0, r3
	ldr r1, [r4]
	str r1, [sp, #8]
	ldr r5, [sp, #0x14]
	adds r3, r5, r3
	ldr r0, [r3]
	str r0, [sp, #0xc]
	movs r5, #0x80
	lsls r5, r5, #1
	ldr r1, [sp]
	adds r5, r1, r5
	lsls r0, r5, #1
	add r0, sl
	movs r5, #0
	ldrsh r1, [r0, r5]
	str r1, [sp, #0x1c]
	adds r0, r6, #4
	adds r0, r2, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	ldr r5, [sp, #0x1c]
	adds r1, r5, #0
	muls r1, r0, r1
	asrs r1, r1, #4
	str r1, [r4]
	adds r0, r2, r6
	movs r5, #0
	ldrsh r0, [r0, r5]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [r4]
	ldr r1, [sp, #4]
	lsls r0, r1, #1
	add r0, sl
	movs r1, #0
	ldrsh r5, [r0, r1]
	str r5, [sp, #0x1c]
	adds r0, r6, #6
	adds r0, r2, r0
	movs r5, #0
	ldrsh r0, [r0, r5]
	ldr r5, [sp, #0x1c]
	adds r1, r5, #0
	muls r1, r0, r1
	asrs r1, r1, #4
	str r1, [r3]
	ldr r0, _080397DC @ =gUnknown_080D7832
	adds r2, r2, r0
	movs r5, #0
	ldrsh r0, [r2, r5]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [r3]
	movs r2, #0x98
	lsls r2, r2, #1
	add r2, r8
	add r2, ip
	ldr r0, [r4]
	ldr r1, [sp, #8]
	subs r0, r0, r1
	strh r0, [r2]
	movs r1, #0x99
	lsls r1, r1, #1
	add r1, r8
	add r1, ip
	ldr r0, [r3]
	ldr r5, [sp, #0xc]
	subs r0, r0, r5
	strh r0, [r1]
	ldr r0, [r4]
	asrs r0, r0, #8
	strh r0, [r7, #0x16]
	ldr r0, [r3]
	asrs r0, r0, #8
	mov r3, r8
	ldrb r1, [r3]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	movs r5, #0
	ldrsh r0, [r2, r5]
	cmp r0, #0
	bge _080397E4
	ldr r0, [r7, #0x10]
	ldr r1, _080397E0 @ =0xFFFFFBFF
	ands r0, r1
	b _080397EC
	.align 2, 0
_080397CC: .4byte IWRAM_START + 0x30
_080397D0: .4byte IWRAM_START + 0x34
_080397D4: .4byte gUnknown_080D7830
_080397D8: .4byte gUnknown_08097AA4
_080397DC: .4byte gUnknown_080D7832
_080397E0: .4byte 0xFFFFFBFF
_080397E4:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
_080397EC:
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
	ldr r0, [sp]
	subs r0, #0x40
	ldr r1, _08039868 @ =0x000003FF
	ands r0, r1
	str r0, [sp]
	ldr r0, [sp, #4]
	subs r0, #0x40
	ands r0, r1
	str r0, [sp, #4]
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #0x1f
	bhi _08039816
	b _080396F6
_08039816:
	movs r0, #0xd8
	lsls r0, r0, #1
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _08039858
	movs r7, #0xde
	lsls r7, r7, #1
	add r7, r8
	movs r0, #0xda
	lsls r0, r0, #1
	add r0, r8
	ldr r0, [r0]
	asrs r0, r0, #8
	strh r0, [r7, #0x16]
	movs r0, #0xdc
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0]
	asrs r1, r1, #8
	mov r2, r8
	ldrb r0, [r2]
	subs r1, r1, r0
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	adds r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08039858:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039868: .4byte 0x000003FF

	thumb_func_start sub_803986C
sub_803986C: @ 0x0803986C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	ldr r1, _0803993C @ =gDispCnt
	ldr r2, _08039940 @ =0x00001341
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _08039944 @ =gBgCntRegs
	movs r0, #0
	mov r8, r0
	movs r4, #0
	ldr r0, _08039948 @ =0x00005C09
	strh r0, [r1, #4]
	ldr r0, _0803994C @ =0x00001E06
	strh r0, [r1, #2]
	adds r0, #0xfd
	strh r0, [r1]
	ldr r0, _08039950 @ =gBgScrollRegs
	strh r4, [r0]
	movs r1, #0x48
	strh r1, [r0, #2]
	strh r4, [r0, #4]
	strh r1, [r0, #6]
	strh r4, [r0, #8]
	strh r4, [r0, #0xa]
	ldr r0, _08039954 @ =gUnknown_03004D80
	mov r1, r8
	strb r1, [r0, #2]
	ldr r1, _08039958 @ =gUnknown_03002280
	mov r2, r8
	strb r2, [r1, #8]
	strb r2, [r1, #9]
	movs r0, #0xff
	strb r0, [r1, #0xa]
	movs r6, #0x20
	strb r6, [r1, #0xb]
	ldr r0, _0803995C @ =sub_8039A38
	movs r2, #0x81
	lsls r2, r2, #8
	str r4, [sp]
	movs r1, #0xc0
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r5, r0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	str r1, [r0, #4]
	strh r4, [r0, #0xa]
	ldr r1, _08039960 @ =0x0600F800
	str r1, [r0, #0xc]
	strh r4, [r0, #0x18]
	strh r4, [r0, #0x1a]
	ldr r1, _08039964 @ =0x00000179
	strh r1, [r0, #0x1c]
	strh r4, [r0, #0x1e]
	strh r4, [r0, #0x20]
	strh r4, [r0, #0x22]
	strh r4, [r0, #0x24]
	strh r6, [r0, #0x26]
	strh r6, [r0, #0x28]
	ldr r2, _08039968 @ =IWRAM_START + 0x2A
	adds r1, r5, r2
	mov r2, r8
	strb r2, [r1]
	strh r4, [r0, #0x2e]
	bl sub_8002A3C
	ldr r1, _0803996C @ =IWRAM_START + 0x40
	adds r0, r5, r1
	ldr r1, _08039970 @ =0x06004000
	str r1, [r0, #4]
	strh r4, [r0, #0xa]
	ldr r1, _08039974 @ =0x0600F000
	str r1, [r0, #0xc]
	strh r4, [r0, #0x18]
	strh r4, [r0, #0x1a]
	movs r1, #0xbd
	lsls r1, r1, #1
	strh r1, [r0, #0x1c]
	strh r4, [r0, #0x1e]
	strh r4, [r0, #0x20]
	strh r4, [r0, #0x22]
	strh r4, [r0, #0x24]
	strh r6, [r0, #0x26]
	strh r6, [r0, #0x28]
	ldr r2, _08039978 @ =IWRAM_START + 0x6A
	adds r5, r5, r2
	mov r1, r8
	strb r1, [r5]
	movs r1, #1
	strh r1, [r0, #0x2e]
	bl sub_8002A3C
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803993C: .4byte gDispCnt
_08039940: .4byte 0x00001341
_08039944: .4byte gBgCntRegs
_08039948: .4byte 0x00005C09
_0803994C: .4byte 0x00001E06
_08039950: .4byte gBgScrollRegs
_08039954: .4byte gUnknown_03004D80
_08039958: .4byte gUnknown_03002280
_0803995C: .4byte sub_8039A38
_08039960: .4byte 0x0600F800
_08039964: .4byte 0x00000179
_08039968: .4byte IWRAM_START + 0x2A
_0803996C: .4byte IWRAM_START + 0x40
_08039970: .4byte 0x06004000
_08039974: .4byte 0x0600F000
_08039978: .4byte IWRAM_START + 0x6A

	thumb_func_start sub_803997C
sub_803997C: @ 0x0803997C
	push {r4, lr}
	ldr r0, _0803999C @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	ldr r0, _080399A0 @ =IWRAM_START + 0x14
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803999C: .4byte gCurTask
_080399A0: .4byte IWRAM_START + 0x14

	thumb_func_start sub_80399A4
sub_80399A4: @ 0x080399A4
	push {r4, lr}
	ldr r0, _080399C4 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	ldr r0, _080399C8 @ =IWRAM_START + 0x14
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080399C4: .4byte gCurTask
_080399C8: .4byte IWRAM_START + 0x14

	thumb_func_start sub_80399CC
sub_80399CC: @ 0x080399CC
	push {r4, lr}
	ldr r0, _08039A04 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r4, r1
	ldr r0, _08039A08 @ =IWRAM_START + 0x14
	adds r4, r4, r0
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	ldr r1, _08039A0C @ =gUnknown_03005960
	ldr r1, [r1, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08039A04: .4byte gCurTask
_08039A08: .4byte IWRAM_START + 0x14
_08039A0C: .4byte gUnknown_03005960

	thumb_func_start sub_8039A10
sub_8039A10: @ 0x08039A10
	push {r4, lr}
	ldr r0, _08039A30 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	ldr r0, _08039A34 @ =IWRAM_START + 0x14
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08039A30: .4byte gCurTask
_08039A34: .4byte IWRAM_START + 0x14

	thumb_func_start sub_8039A38
sub_8039A38: @ 0x08039A38
	push {lr}
	ldr r0, _08039A48 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08039A48: .4byte gCurTask

	thumb_func_start sub_8039A4C
sub_8039A4C: @ 0x08039A4C
	push {lr}
	sub sp, #4
	ldr r0, _08039A68 @ =sub_8039A6C
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r3, #0
	bl TaskCreate
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_08039A68: .4byte sub_8039A6C

	thumb_func_start sub_8039A6C
sub_8039A6C: @ 0x08039A6C
	push {lr}
	sub sp, #4
	ldr r0, _08039AB0 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08039AA8
	movs r0, #0
	ldr r1, _08039AB4 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _08039AB8 @ =gUnknown_03002AE4
	ldr r0, _08039ABC @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _08039AC0 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08039AC4 @ =gUnknown_03004D5C
	ldr r0, _08039AC8 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08039ACC @ =sub_8039AD4
	movs r1, #0
	str r1, [sp]
	ldr r2, _08039AD0 @ =0x00008888
	movs r3, #0
	bl TaskCreate
_08039AA8:
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_08039AB0: .4byte gPressedKeys
_08039AB4: .4byte 0x0000FFFF
_08039AB8: .4byte gUnknown_03002AE4
_08039ABC: .4byte gUnknown_0300287C
_08039AC0: .4byte gUnknown_03005390
_08039AC4: .4byte gUnknown_03004D5C
_08039AC8: .4byte gUnknown_03002A84
_08039ACC: .4byte sub_8039AD4
_08039AD0: .4byte 0x00008888

	thumb_func_start sub_8039AD4
sub_8039AD4: @ 0x08039AD4
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08039B2C @ =gUnknown_030018F0
	movs r4, #0
	strb r4, [r0]
	ldr r0, _08039B30 @ =gUnknown_03002AE0
	strb r4, [r0]
	mov r0, sp
	ldr r1, _08039B34 @ =0x0000FFFF
	adds r5, r1, #0
	strh r5, [r0]
	ldr r1, _08039B38 @ =gUnknown_03001850
	ldr r6, _08039B3C @ =0x01000010
	adds r2, r6, #0
	bl CpuSet
	mov r0, sp
	adds r0, #2
	strh r5, [r0]
	ldr r1, _08039B40 @ =gUnknown_03004D60
	adds r2, r6, #0
	bl CpuSet
	bl m4aMPlayAllStop
	ldr r0, _08039B44 @ =gUnknown_030054CC
	strb r4, [r0]
	ldr r0, _08039B48 @ =gUnknown_030054F0
	strb r4, [r0]
	ldr r1, _08039B4C @ =gUnknown_030055B4
	movs r0, #0x1d
	strb r0, [r1]
	bl sub_801A6D8
	bl sub_801A770
	ldr r0, _08039B50 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08039B2C: .4byte gUnknown_030018F0
_08039B30: .4byte gUnknown_03002AE0
_08039B34: .4byte 0x0000FFFF
_08039B38: .4byte gUnknown_03001850
_08039B3C: .4byte 0x01000010
_08039B40: .4byte gUnknown_03004D60
_08039B44: .4byte gUnknown_030054CC
_08039B48: .4byte gUnknown_030054F0
_08039B4C: .4byte gUnknown_030055B4
_08039B50: .4byte gCurTask

	thumb_func_start sub_8039B54
sub_8039B54: @ 0x08039B54
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r0, [r7, #4]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08039B72
	ldrb r0, [r6]
	cmp r0, #0xf
	bhi _08039C22
_08039B72:
	ldr r0, _08039C30 @ =sub_8039C4C
	ldr r2, _08039C34 @ =0x00005432
	movs r1, #0
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r4, r2
	ldr r0, [r7, #0x14]
	lsls r0, r0, #8
	str r0, [r2, #0x30]
	ldr r0, [r7, #0x18]
	lsls r0, r0, #8
	str r0, [r2, #0x34]
	ldr r3, _08039C38 @ =gUnknown_08097AA4
	mov sb, r3
	ldrh r3, [r7, #0xc]
	ldr r1, _08039C3C @ =0x000003FF
	adds r0, r1, #0
	ands r0, r3
	movs r5, #0x80
	lsls r5, r5, #1
	mov r8, r5
	add r0, r8
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r3, [r0, r5]
	mov ip, r3
	ldrh r0, [r7, #0xe]
	mov r3, ip
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	movs r3, #0
	strh r0, [r2, #0x38]
	ldrh r0, [r7, #0xc]
	ands r1, r0
	lsls r1, r1, #1
	add r1, sb
	movs r5, #0
	ldrsh r1, [r1, r5]
	ldrh r0, [r7, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2, #0x3a]
	ldrh r0, [r7, #0x1c]
	strh r0, [r2, #0x3c]
	str r6, [r2, #0x40]
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	strh r3, [r2, #0x16]
	strh r3, [r2, #0x18]
	ldr r0, [r7]
	str r0, [r2, #4]
	mov r0, r8
	strh r0, [r2, #0x1a]
	strh r3, [r2, #8]
	ldrh r0, [r7, #8]
	strh r0, [r2, #0xa]
	ldrh r1, [r7, #0xa]
	ldr r5, _08039C40 @ =IWRAM_START + 0x20
	adds r0, r4, r5
	strb r1, [r0]
	strh r3, [r2, #0x14]
	strh r3, [r2, #0x1c]
	ldr r0, _08039C44 @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r5, #2
	adds r1, r4, r5
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08039C48 @ =IWRAM_START + 0x25
	adds r4, r4, r0
	strb r3, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r2, #0x10]
_08039C22:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039C30: .4byte sub_8039C4C
_08039C34: .4byte 0x00005432
_08039C38: .4byte gUnknown_08097AA4
_08039C3C: .4byte 0x000003FF
_08039C40: .4byte IWRAM_START + 0x20
_08039C44: .4byte IWRAM_START + 0x21
_08039C48: .4byte IWRAM_START + 0x25

	thumb_func_start sub_8039C4C
sub_8039C4C: @ 0x08039C4C
	push {r4, r5, r6, r7, lr}
	ldr r2, _08039CF4 @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldrh r1, [r4, #0xa]
	ldr r0, _08039CF8 @ =0x0000026B
	adds r6, r2, #0
	cmp r1, r0
	bne _08039C6E
	ldr r1, _08039CFC @ =0xFFFFFF00
	adds r0, r1, #0
	ldrh r2, [r4, #0x38]
	adds r0, r0, r2
	strh r0, [r4, #0x38]
_08039C6E:
	ldrh r0, [r4, #0x3c]
	ldrh r7, [r4, #0x3a]
	adds r3, r0, r7
	strh r3, [r4, #0x3a]
	movs r0, #0x38
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x30]
	adds r0, r0, r1
	str r0, [r4, #0x30]
	movs r1, #0x3a
	ldrsh r2, [r4, r1]
	ldr r1, [r4, #0x34]
	adds r1, r1, r2
	str r1, [r4, #0x34]
	asrs r0, r0, #8
	strh r0, [r4, #0x16]
	asrs r1, r1, #8
	strh r1, [r4, #0x18]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r5, #0x20
	rsbs r5, r5, #0
	cmp r2, r5
	bge _08039CA6
	movs r7, #0x38
	ldrsh r0, [r4, r7]
	cmp r0, #0
	blt _08039CCE
_08039CA6:
	movs r0, #0x88
	lsls r0, r0, #1
	cmp r2, r0
	ble _08039CB6
	movs r2, #0x38
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bgt _08039CCE
_08039CB6:
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, r5
	bge _08039CC4
	lsls r0, r3, #0x10
	cmp r0, #0
	blt _08039CCE
_08039CC4:
	cmp r1, #0xc0
	ble _08039CD4
	lsls r0, r3, #0x10
	cmp r0, #0
	ble _08039CD4
_08039CCE:
	ldr r1, [r6]
	ldr r0, _08039D00 @ =sub_8039F80
	str r0, [r1, #8]
_08039CD4:
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _08039CE6
	ldr r0, _08039CF4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08039D00 @ =sub_8039F80
	str r0, [r1, #8]
_08039CE6:
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039CF4: .4byte gCurTask
_08039CF8: .4byte 0x0000026B
_08039CFC: .4byte 0xFFFFFF00
_08039D00: .4byte sub_8039F80

	thumb_func_start sub_8039D04
sub_8039D04: @ 0x08039D04
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r0, [r7, #4]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08039D22
	ldrb r0, [r6]
	cmp r0, #0xf
	bhi _08039DD2
_08039D22:
	ldr r0, _08039DE0 @ =sub_8039DFC
	ldr r2, _08039DE4 @ =0x00005432
	movs r1, #0
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r4, r2
	ldr r0, [r7, #0x14]
	lsls r0, r0, #8
	str r0, [r2, #0x30]
	ldr r0, [r7, #0x18]
	lsls r0, r0, #8
	str r0, [r2, #0x34]
	ldr r3, _08039DE8 @ =gUnknown_08097AA4
	mov sb, r3
	ldrh r3, [r7, #0xc]
	ldr r1, _08039DEC @ =0x000003FF
	adds r0, r1, #0
	ands r0, r3
	movs r5, #0x80
	lsls r5, r5, #1
	mov r8, r5
	add r0, r8
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r3, [r0, r5]
	mov ip, r3
	ldrh r0, [r7, #0xe]
	mov r3, ip
	muls r3, r0, r3
	adds r0, r3, #0
	asrs r0, r0, #0xe
	movs r3, #0
	strh r0, [r2, #0x38]
	ldrh r0, [r7, #0xc]
	ands r1, r0
	lsls r1, r1, #1
	add r1, sb
	movs r5, #0
	ldrsh r1, [r1, r5]
	ldrh r0, [r7, #0xe]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2, #0x3a]
	ldrh r0, [r7, #0x1c]
	strh r0, [r2, #0x3c]
	str r6, [r2, #0x40]
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	strh r3, [r2, #0x16]
	strh r3, [r2, #0x18]
	ldr r0, [r7]
	str r0, [r2, #4]
	mov r0, r8
	strh r0, [r2, #0x1a]
	strh r3, [r2, #8]
	ldrh r0, [r7, #8]
	strh r0, [r2, #0xa]
	ldrh r1, [r7, #0xa]
	ldr r5, _08039DF0 @ =IWRAM_START + 0x20
	adds r0, r4, r5
	strb r1, [r0]
	strh r3, [r2, #0x14]
	strh r3, [r2, #0x1c]
	ldr r0, _08039DF4 @ =IWRAM_START + 0x21
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r5, #2
	adds r1, r4, r5
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08039DF8 @ =IWRAM_START + 0x25
	adds r4, r4, r0
	strb r3, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r2, #0x10]
_08039DD2:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039DE0: .4byte sub_8039DFC
_08039DE4: .4byte 0x00005432
_08039DE8: .4byte gUnknown_08097AA4
_08039DEC: .4byte 0x000003FF
_08039DF0: .4byte IWRAM_START + 0x20
_08039DF4: .4byte IWRAM_START + 0x21
_08039DF8: .4byte IWRAM_START + 0x25

	thumb_func_start sub_8039DFC
sub_8039DFC: @ 0x08039DFC
	push {r4, r5, r6, r7, lr}
	ldr r4, _08039E98 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldrh r0, [r5, #0x3c]
	ldrh r1, [r5, #0x3a]
	adds r6, r0, r1
	strh r6, [r5, #0x3a]
	movs r2, #0x38
	ldrsh r1, [r5, r2]
	ldr r0, [r5, #0x30]
	adds r0, r0, r1
	str r0, [r5, #0x30]
	movs r3, #0x3a
	ldrsh r1, [r5, r3]
	ldr r2, [r5, #0x34]
	adds r2, r2, r1
	str r2, [r5, #0x34]
	asrs r0, r0, #8
	ldr r3, _08039E9C @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	asrs r2, r2, #8
	ldr r1, [r3, #4]
	subs r2, r2, r1
	strh r2, [r5, #0x18]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	movs r1, #0x20
	rsbs r1, r1, #0
	cmp r3, r1
	bge _08039E4C
	movs r7, #0x38
	ldrsh r0, [r5, r7]
	cmp r0, #0
	blt _08039E74
_08039E4C:
	movs r0, #0x88
	lsls r0, r0, #1
	cmp r3, r0
	ble _08039E5C
	movs r3, #0x38
	ldrsh r0, [r5, r3]
	cmp r0, #0
	bgt _08039E74
_08039E5C:
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	cmp r2, r1
	bge _08039E6A
	lsls r0, r6, #0x10
	cmp r0, #0
	blt _08039E74
_08039E6A:
	cmp r2, #0xc0
	ble _08039E7A
	lsls r0, r6, #0x10
	cmp r0, #0
	ble _08039E7A
_08039E74:
	ldr r1, [r4]
	ldr r0, _08039EA0 @ =sub_8039F80
	str r0, [r1, #8]
_08039E7A:
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _08039E8C
	ldr r0, _08039E98 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08039EA0 @ =sub_8039F80
	str r0, [r1, #8]
_08039E8C:
	adds r0, r5, #0
	bl sub_80051E8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08039E98: .4byte gCurTask
_08039E9C: .4byte gUnknown_03005960
_08039EA0: .4byte sub_8039F80

	thumb_func_start sub_8039EA4
sub_8039EA4: @ 0x08039EA4
	push {lr}
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #8
	bhi _08039EC4
	ldr r2, _08039EC8 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08039ECC @ =0x0000FFDE
	ands r0, r1
	strh r0, [r2]
	ldr r1, _08039ED0 @ =gUnknown_080D798C
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
_08039EC4:
	pop {r0}
	bx r0
	.align 2, 0
_08039EC8: .4byte gUnknown_03005424
_08039ECC: .4byte 0x0000FFDE
_08039ED0: .4byte gUnknown_080D798C

	thumb_func_start sub_8039ED4
sub_8039ED4: @ 0x08039ED4
	push {lr}
	ldr r0, _08039F00 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	bne _08039EFA
	ldr r2, _08039F04 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _08039F08 @ =0xF7FFFFFF
	ands r0, r1
	ldr r1, _08039F0C @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	ldr r0, _08039F10 @ =sub_8025318
	str r0, [r2]
	adds r2, #0x6d
	movs r0, #0
	strb r0, [r2]
_08039EFA:
	pop {r0}
	bx r0
	.align 2, 0
_08039F00: .4byte gUnknown_030055B4
_08039F04: .4byte gUnknown_030059E0
_08039F08: .4byte 0xF7FFFFFF
_08039F0C: .4byte 0xFFDFFFFF
_08039F10: .4byte sub_8025318

	thumb_func_start sub_8039F14
sub_8039F14: @ 0x08039F14
	push {r4, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	ldr r0, _08039F44 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r1, r0, #0x18
	cmp r0, #0x1c
	beq _08039F3E
	ldr r0, _08039F48 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _08039F3E
	ldr r0, _08039F4C @ =gUnknown_080D79B0
	asrs r1, r1, #0x1a
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r2, [r1]
	adds r0, r3, #0
	adds r1, r4, #0
	bl _call_via_r2
_08039F3E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08039F44: .4byte gUnknown_030055B4
_08039F48: .4byte gUnknown_03005B4C
_08039F4C: .4byte gUnknown_080D79B0

	thumb_func_start sub_8039F50
sub_8039F50: @ 0x08039F50
	push {lr}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #6
	bhi _08039F74
	ldr r0, _08039F78 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _08039F74
	ldr r0, _08039F7C @ =gUnknown_080D79B0
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r2, [r1]
	adds r0, r3, #0
	movs r1, #0
	bl _call_via_r2
_08039F74:
	pop {r0}
	bx r0
	.align 2, 0
_08039F78: .4byte gUnknown_03005B4C
_08039F7C: .4byte gUnknown_080D79B0

	thumb_func_start sub_8039F80
sub_8039F80: @ 0x08039F80
	push {lr}
	ldr r2, _08039FA0 @ =gCurTask
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r1, [r0, #0x40]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldr r0, [r2]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08039FA0: .4byte gCurTask

	thumb_func_start sub_8039FA4
sub_8039FA4: @ 0x08039FA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r8, r0
	mov sb, r1
	str r2, [sp, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	ldr r0, _0803A0B4 @ =sub_803A10C
	movs r2, #0xe0
	lsls r2, r2, #6
	ldr r1, _0803A0B8 @ =sub_803A230
	str r1, [sp]
	movs r1, #0x64
	movs r3, #0
	bl TaskCreate
	ldrh r7, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r7, r5
	movs r0, #0xed
	bl m4aSongNumStart
	ldr r0, _0803A0BC @ =gMPlayInfo_SE2
	movs r1, #9
	bl m4aMPlayFadeOutTemporarily
	ldr r0, _0803A0C0 @ =IWRAM_START + 0x60
	adds r1, r7, r0
	movs r6, #0
	movs r0, #0x3c
	strh r0, [r1]
	ldr r1, _0803A0C4 @ =IWRAM_START + 0x30
	adds r4, r7, r1
	mov r0, r8
	strh r0, [r4, #0x16]
	mov r1, sb
	strh r1, [r4, #0x18]
	movs r0, #8
	bl sub_8007C10
	str r0, [r4, #4]
	ldr r0, _0803A0C8 @ =0x0000027D
	strh r0, [r4, #0xa]
	ldr r1, _0803A0CC @ =IWRAM_START + 0x50
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r6, [r4, #8]
	strh r6, [r4, #0x14]
	strh r6, [r4, #0x1c]
	ldr r0, _0803A0D0 @ =IWRAM_START + 0x51
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _0803A0D4 @ =IWRAM_START + 0x52
	adds r0, r7, r1
	movs r1, #0x10
	strb r1, [r0]
	ldr r1, _0803A0D8 @ =IWRAM_START + 0x55
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov sl, r0
	str r0, [r4, #0x28]
	ldr r1, [sp, #4]
	str r1, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	mov r0, r8
	strh r0, [r5, #0x16]
	mov r1, sb
	strh r1, [r5, #0x18]
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0x9f
	lsls r0, r0, #2
	strh r0, [r5, #0xa]
	ldr r1, _0803A0DC @ =IWRAM_START + 0x20
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	strh r6, [r5, #8]
	strh r6, [r5, #0x14]
	strh r6, [r5, #0x1c]
	ldr r0, _0803A0E0 @ =IWRAM_START + 0x21
	adds r1, r7, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _0803A0E4 @ =IWRAM_START + 0x22
	adds r0, r7, r1
	movs r1, #0x10
	strb r1, [r0]
	ldr r1, _0803A0E8 @ =IWRAM_START + 0x25
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
	mov r0, sl
	str r0, [r5, #0x28]
	ldr r1, [sp, #4]
	str r1, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	movs r0, #0x80
	lsls r0, r0, #3
	ldr r1, [sp, #4]
	ands r0, r1
	cmp r0, #0
	beq _0803A0F0
	ldr r0, _0803A0EC @ =IWRAM_START + 0x62
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	b _0803A0F8
	.align 2, 0
_0803A0B4: .4byte sub_803A10C
_0803A0B8: .4byte sub_803A230
_0803A0BC: .4byte gMPlayInfo_SE2
_0803A0C0: .4byte IWRAM_START + 0x60
_0803A0C4: .4byte IWRAM_START + 0x30
_0803A0C8: .4byte 0x0000027D
_0803A0CC: .4byte IWRAM_START + 0x50
_0803A0D0: .4byte IWRAM_START + 0x51
_0803A0D4: .4byte IWRAM_START + 0x52
_0803A0D8: .4byte IWRAM_START + 0x55
_0803A0DC: .4byte IWRAM_START + 0x20
_0803A0E0: .4byte IWRAM_START + 0x21
_0803A0E4: .4byte IWRAM_START + 0x22
_0803A0E8: .4byte IWRAM_START + 0x25
_0803A0EC: .4byte IWRAM_START + 0x62
_0803A0F0:
	ldr r1, _0803A108 @ =IWRAM_START + 0x62
	adds r0, r7, r1
	movs r1, #0
	strb r1, [r0]
_0803A0F8:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803A108: .4byte IWRAM_START + 0x62

	thumb_func_start sub_803A10C
sub_803A10C: @ 0x0803A10C
	push {r4, r5, r6, lr}
	ldr r6, _0803A158 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r4, r5
	ldr r0, _0803A15C @ =IWRAM_START + 0x30
	adds r4, r4, r0
	ldrh r0, [r4, #0x18]
	subs r0, #2
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldrh r0, [r5, #0x18]
	subs r0, #2
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	cmp r0, #0x32
	bgt _0803A150
	ldr r1, [r6]
	ldr r0, _0803A160 @ =sub_803A164
	str r0, [r1, #8]
_0803A150:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803A158: .4byte gCurTask
_0803A15C: .4byte IWRAM_START + 0x30
_0803A160: .4byte sub_803A164

	thumb_func_start sub_803A164
sub_803A164: @ 0x0803A164
	push {r4, r5, lr}
	ldr r3, _0803A1C4 @ =gCurTask
	ldr r0, [r3]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r2, r0
	adds r0, #0x60
	adds r1, r2, r0
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0803A1A2
	ldr r1, _0803A1C8 @ =IWRAM_START + 0x62
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803A19C
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r5, #0x10]
	ldr r0, [r5, #0x40]
	orrs r0, r1
	str r0, [r5, #0x40]
_0803A19C:
	ldr r1, [r3]
	ldr r0, _0803A1CC @ =sub_803A1D0
	str r0, [r1, #8]
_0803A1A2:
	adds r4, r5, #0
	adds r4, #0x30
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803A1C4: .4byte gCurTask
_0803A1C8: .4byte IWRAM_START + 0x62
_0803A1CC: .4byte sub_803A1D0

	thumb_func_start sub_803A1D0
sub_803A1D0: @ 0x0803A1D0
	push {r4, r5, r6, lr}
	ldr r6, _0803A200 @ =gCurTask
	ldr r0, [r6]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0x30
	adds r4, r1, r0
	ldrh r2, [r4, #0x16]
	movs r0, #0x16
	ldrsh r1, [r4, r0]
	movs r0, #0x87
	lsls r0, r0, #1
	cmp r1, r0
	ble _0803A204
	movs r0, #0xed
	bl m4aSongNumStop
	ldr r0, [r6]
	bl TaskDestroy
	b _0803A228
	.align 2, 0
_0803A200: .4byte gCurTask
_0803A204:
	adds r0, r2, #2
	strh r0, [r4, #0x16]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r4, r5, #0
	ldrh r0, [r4, #0x16]
	adds r0, #2
	strh r0, [r4, #0x16]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0803A228:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_803A230
sub_803A230: @ 0x0803A230
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #4]
	bl sub_8007CF0
	ldr r0, [r4, #0x34]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_803A24C
sub_803A24C: @ 0x0803A24C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x7c
	ldr r2, _0803A2A4 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	ldr r1, _0803A2A8 @ =gUnknown_030053B8
	ldr r0, _0803A2AC @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _0803A2B0 @ =sub_803A818
	ldr r1, _0803A2B4 @ =0x000004A4
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0803A2B8 @ =sub_803C8E4
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	str r0, [sp, #4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r0, _0803A2BC @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	bne _0803A2D4
	ldr r0, _0803A2C0 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803A2C8
	ldr r0, _0803A2C4 @ =IWRAM_START + 0xB0
	adds r1, r1, r0
	movs r0, #3
	b _0803A2FE
	.align 2, 0
_0803A2A4: .4byte gUnknown_030059E0
_0803A2A8: .4byte gUnknown_030053B8
_0803A2AC: .4byte gUnknown_03005590
_0803A2B0: .4byte sub_803A818
_0803A2B4: .4byte 0x000004A4
_0803A2B8: .4byte sub_803C8E4
_0803A2BC: .4byte gUnknown_030055B4
_0803A2C0: .4byte gUnknown_030054EC
_0803A2C4: .4byte IWRAM_START + 0xB0
_0803A2C8:
	ldr r2, _0803A2D0 @ =IWRAM_START + 0xB0
	adds r1, r1, r2
	movs r0, #4
	b _0803A2FE
	.align 2, 0
_0803A2D0: .4byte IWRAM_START + 0xB0
_0803A2D4:
	ldr r0, _0803A2EC @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803A2F8
	ldr r0, _0803A2F0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _0803A2F8
	ldr r3, _0803A2F4 @ =IWRAM_START + 0xB0
	adds r1, r1, r3
	movs r0, #6
	b _0803A2FE
	.align 2, 0
_0803A2EC: .4byte gUnknown_030054EC
_0803A2F0: .4byte gUnknown_030054CC
_0803A2F4: .4byte IWRAM_START + 0xB0
_0803A2F8:
	adds r1, r7, #0
	adds r1, #0xb0
	movs r0, #8
_0803A2FE:
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0xa8
	movs r2, #0
	str r2, [r0]
	adds r1, r7, #0
	adds r1, #0xa4
	movs r0, #2
	str r0, [r1]
	adds r0, r7, #0
	adds r0, #0xa0
	str r2, [r0]
	adds r1, #8
	movs r0, #0x78
	str r0, [r1]
	adds r0, r7, #0
	adds r0, #0xb1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	movs r1, #0xf5
	lsls r1, r1, #0xa
	str r1, [r7]
	movs r0, #0x9b
	lsls r0, r0, #8
	str r0, [r7, #4]
	ldr r0, _0803A70C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #8]
	strh r2, [r7, #0xa]
	movs r1, #0
	movs r0, #0x74
	adds r0, r0, r7
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x54
	movs r2, #0x94
	adds r2, r2, r7
	mov sb, r2
	movs r3, #0x98
	adds r3, r3, r7
	mov sl, r3
	movs r0, #0x9c
	adds r0, r0, r7
	mov ip, r0
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r2, r7, r2
	str r2, [sp, #0x58]
	ldr r3, _0803A710 @ =0x00000301
	adds r3, r7, r3
	str r3, [sp, #0x5c]
	ldr r0, _0803A714 @ =0x00000302
	adds r0, r7, r0
	str r0, [sp, #0x60]
	ldr r2, _0803A718 @ =0x00000305
	adds r2, r7, r2
	str r2, [sp, #0x64]
	movs r3, #0xce
	lsls r3, r3, #2
	adds r3, r7, r3
	str r3, [sp, #0x78]
	ldr r0, _0803A71C @ =0x00000339
	adds r0, r7, r0
	str r0, [sp, #0xc]
	ldr r2, _0803A720 @ =0x0000033A
	adds r2, r7, r2
	str r2, [sp, #0x10]
	ldr r3, _0803A724 @ =0x0000033D
	adds r3, r7, r3
	str r3, [sp, #0x14]
	movs r0, #0xf2
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x48]
	ldr r2, _0803A728 @ =0x000003C9
	adds r2, r7, r2
	str r2, [sp, #0x4c]
	ldr r3, _0803A72C @ =0x000003CA
	adds r3, r7, r3
	str r3, [sp, #0x50]
	ldr r0, _0803A730 @ =0x000003CD
	adds r0, r7, r0
	str r0, [sp, #0x54]
	movs r2, #0xfe
	lsls r2, r2, #2
	adds r2, r7, r2
	str r2, [sp, #0x68]
	ldr r3, _0803A734 @ =0x000003F9
	adds r3, r7, r3
	str r3, [sp, #0x6c]
	ldr r0, _0803A738 @ =0x000003FA
	adds r0, r7, r0
	str r0, [sp, #0x70]
	ldr r2, _0803A73C @ =0x000003FD
	adds r2, r7, r2
	str r2, [sp, #0x74]
	movs r3, #0xda
	lsls r3, r3, #2
	adds r3, r7, r3
	str r3, [sp, #0x28]
	ldr r0, _0803A740 @ =0x00000369
	adds r0, r7, r0
	str r0, [sp, #0x2c]
	ldr r2, _0803A744 @ =0x0000036A
	adds r2, r7, r2
	str r2, [sp, #0x30]
	ldr r3, _0803A748 @ =0x0000036D
	adds r3, r7, r3
	str r3, [sp, #0x34]
	movs r0, #0xe6
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x38]
	ldr r2, _0803A74C @ =0x00000399
	adds r2, r7, r2
	str r2, [sp, #0x3c]
	ldr r3, _0803A750 @ =0x0000039A
	adds r3, r7, r3
	str r3, [sp, #0x40]
	ldr r0, _0803A754 @ =0x0000039D
	adds r0, r7, r0
	str r0, [sp, #0x44]
	movs r2, #0x85
	lsls r2, r2, #3
	adds r2, r7, r2
	str r2, [sp, #0x18]
	ldr r3, _0803A758 @ =0x00000429
	adds r3, r7, r3
	str r3, [sp, #0x1c]
	ldr r0, _0803A75C @ =0x0000042A
	adds r0, r7, r0
	str r0, [sp, #0x20]
	ldr r2, _0803A760 @ =0x0000042D
	adds r2, r7, r2
	str r2, [sp, #0x24]
	movs r4, #0
	ldr r5, _0803A764 @ =gUnknown_080D7A38
	adds r3, r7, #0
	adds r3, #0xc
	adds r2, r7, #0
	adds r2, #0x2c
_0803A426:
	stm r2!, {r4}
	ldm r5!, {r0}
	stm r3!, {r0}
	adds r1, #1
	cmp r1, #7
	bls _0803A426
	movs r0, #0
	str r0, [r7, #0x4c]
	str r0, [r7, #0x50]
	movs r1, #0
	movs r4, #0xc0
	lsls r4, r4, #2
	ldr r5, _0803A768 @ =gUnknown_080D7A58
	adds r3, r6, #0
	mov r2, r8
_0803A444:
	stm r2!, {r4}
	ldm r5!, {r0}
	stm r3!, {r0}
	adds r1, #1
	cmp r1, #7
	bls _0803A444
	movs r0, #0xc0
	lsls r0, r0, #2
	mov r3, sb
	str r0, [r3]
	movs r0, #0x94
	lsls r0, r0, #5
	mov r1, sl
	str r0, [r1]
	mov r2, ip
	str r0, [r2]
	movs r3, #0xb8
	lsls r3, r3, #2
	adds r6, r7, r3
	movs r0, #0
	mov r8, r0
	movs r4, #0
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #0x48
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0x9e
	lsls r0, r0, #2
	strh r0, [r6, #0xa]
	mov r2, r8
	ldr r1, [sp, #0x58]
	strb r2, [r1]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #0xff
	ldr r3, [sp, #0x5c]
	strb r0, [r3]
	movs r0, #0x10
	mov sb, r0
	mov r2, sb
	ldr r1, [sp, #0x60]
	strb r2, [r1]
	mov r0, r8
	ldr r3, [sp, #0x64]
	strb r0, [r3]
	movs r1, #1
	rsbs r1, r1, #0
	mov sl, r1
	str r1, [r6, #0x28]
	movs r2, #0x80
	lsls r2, r2, #6
	str r2, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	movs r3, #0xc6
	lsls r3, r3, #2
	adds r6, r7, r3
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A76C @ =0x00000279
	strh r0, [r6, #0xa]
	mov r1, r8
	ldr r0, [sp, #0x78]
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	mov r0, sb
	ldr r3, [sp, #0x10]
	strb r0, [r3]
	ldr r2, [sp, #0x14]
	strb r1, [r2]
	mov r3, sl
	str r3, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	movs r1, #0xea
	lsls r1, r1, #2
	adds r6, r7, r1
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #9
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A770 @ =0x0000027B
	strh r0, [r6, #0xa]
	mov r3, r8
	ldr r2, [sp, #0x48]
	strb r3, [r2]
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x4c]
	strb r0, [r1]
	mov r3, sb
	ldr r2, [sp, #0x50]
	strb r3, [r2]
	mov r1, r8
	ldr r0, [sp, #0x54]
	strb r1, [r0]
	mov r2, sl
	str r2, [r6, #0x28]
	movs r3, #0x80
	lsls r3, r3, #6
	str r3, [r6, #0x10]
	movs r0, #0xf6
	lsls r0, r0, #2
	adds r6, r7, r0
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #9
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A774 @ =0x0000027A
	strh r0, [r6, #0xa]
	mov r2, r8
	ldr r1, [sp, #0x68]
	strb r2, [r1]
	movs r5, #0xa8
	lsls r5, r5, #3
	strh r5, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r3, [sp, #0x6c]
	strb r0, [r3]
	mov r1, sb
	ldr r0, [sp, #0x70]
	strb r1, [r0]
	ldr r3, [sp, #0x74]
	strb r2, [r3]
	mov r0, sl
	str r0, [r6, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r6, #0x10]
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r6, r7, r2
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A778 @ =0x00000277
	strh r0, [r6, #0xa]
	mov r0, r8
	ldr r3, [sp, #0x28]
	strb r0, [r3]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x2c]
	strb r0, [r1]
	mov r3, sb
	ldr r2, [sp, #0x30]
	strb r3, [r2]
	mov r1, r8
	ldr r0, [sp, #0x34]
	strb r1, [r0]
	mov r2, sl
	str r2, [r6, #0x28]
	movs r3, #0x80
	lsls r3, r3, #6
	str r3, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	movs r0, #0xde
	lsls r0, r0, #2
	adds r6, r7, r0
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A77C @ =0x00000275
	strh r0, [r6, #0xa]
	mov r2, r8
	ldr r1, [sp, #0x38]
	strb r2, [r1]
	strh r5, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r3, [sp, #0x3c]
	strb r0, [r3]
	mov r1, sb
	ldr r0, [sp, #0x40]
	strb r1, [r0]
	ldr r3, [sp, #0x44]
	strb r2, [r3]
	mov r0, sl
	str r0, [r6, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r6, #0x10]
	movs r2, #0x81
	lsls r2, r2, #3
	adds r6, r7, r2
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0803A780 @ =0x00000276
	strh r0, [r6, #0xa]
	mov r0, r8
	ldr r3, [sp, #0x18]
	strb r0, [r3]
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	movs r2, #1
	rsbs r2, r2, #0
	mov r1, sp
	strb r2, [r1, #8]
	adds r0, r2, #0
	ldr r3, [sp, #0x1c]
	strb r0, [r3]
	mov r1, sb
	ldr r0, [sp, #0x20]
	strb r1, [r0]
	mov r3, r8
	ldr r2, [sp, #0x24]
	strb r3, [r2]
	mov r0, sl
	str r0, [r6, #0x28]
	ldr r2, _0803A784 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803A788 @ =0x00002060
	orrs r0, r1
	str r0, [r6, #0x10]
	ldr r2, _0803A70C @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	bne _0803A682
	b _0803A7EC
_0803A682:
	ldr r0, _0803A78C @ =gUnknown_030054F0
	movs r5, #0
	ldrsb r5, [r0, r5]
	cmp r5, #0
	beq _0803A68E
	b _0803A7EC
_0803A68E:
	ldr r0, _0803A790 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	ble _0803A69E
	b _0803A7EC
_0803A69E:
	ldr r1, _0803A794 @ =0x00000444
	adds r6, r7, r1
	strh r5, [r6, #0x16]
	strh r5, [r6, #0x18]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0x81
	strh r0, [r6, #0xa]
	ldr r2, _0803A798 @ =0x00000464
	adds r0, r7, r2
	mov r3, r8
	strb r3, [r0]
	movs r4, #0x80
	strh r4, [r6, #0x1a]
	strh r5, [r6, #8]
	strh r5, [r6, #0x14]
	strh r5, [r6, #0x1c]
	ldr r0, _0803A79C @ =0x00000465
	adds r1, r7, r0
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #8]
	orrs r0, r2
	strb r0, [r1]
	ldr r3, _0803A7A0 @ =0x00000466
	adds r0, r7, r3
	mov r1, sb
	strb r1, [r0]
	ldr r2, _0803A7A4 @ =0x00000469
	adds r0, r7, r2
	mov r3, r8
	strb r3, [r0]
	mov r0, sl
	str r0, [r6, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r6, #0x10]
	adds r2, #0xb
	adds r6, r7, r2
	strh r5, [r6, #0x16]
	strh r5, [r6, #0x18]
	movs r0, #9
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0xe9
	lsls r0, r0, #1
	strh r0, [r6, #0xa]
	ldr r3, _0803A7A8 @ =0x00000494
	adds r0, r7, r3
	mov r1, r8
	strb r1, [r0]
	b _0803A7AC
	.align 2, 0
_0803A70C: .4byte gUnknown_030055B4
_0803A710: .4byte 0x00000301
_0803A714: .4byte 0x00000302
_0803A718: .4byte 0x00000305
_0803A71C: .4byte 0x00000339
_0803A720: .4byte 0x0000033A
_0803A724: .4byte 0x0000033D
_0803A728: .4byte 0x000003C9
_0803A72C: .4byte 0x000003CA
_0803A730: .4byte 0x000003CD
_0803A734: .4byte 0x000003F9
_0803A738: .4byte 0x000003FA
_0803A73C: .4byte 0x000003FD
_0803A740: .4byte 0x00000369
_0803A744: .4byte 0x0000036A
_0803A748: .4byte 0x0000036D
_0803A74C: .4byte 0x00000399
_0803A750: .4byte 0x0000039A
_0803A754: .4byte 0x0000039D
_0803A758: .4byte 0x00000429
_0803A75C: .4byte 0x0000042A
_0803A760: .4byte 0x0000042D
_0803A764: .4byte gUnknown_080D7A38
_0803A768: .4byte gUnknown_080D7A58
_0803A76C: .4byte 0x00000279
_0803A770: .4byte 0x0000027B
_0803A774: .4byte 0x0000027A
_0803A778: .4byte 0x00000277
_0803A77C: .4byte 0x00000275
_0803A780: .4byte 0x00000276
_0803A784: .4byte gUnknown_030054B8
_0803A788: .4byte 0x00002060
_0803A78C: .4byte gUnknown_030054F0
_0803A790: .4byte gLoadedSaveGame
_0803A794: .4byte 0x00000444
_0803A798: .4byte 0x00000464
_0803A79C: .4byte 0x00000465
_0803A7A0: .4byte 0x00000466
_0803A7A4: .4byte 0x00000469
_0803A7A8: .4byte 0x00000494
_0803A7AC:
	strh r4, [r6, #0x1a]
	strh r5, [r6, #8]
	strh r5, [r6, #0x14]
	strh r5, [r6, #0x1c]
	ldr r2, _0803A7E0 @ =0x00000495
	adds r1, r7, r2
	ldrb r0, [r1]
	mov r3, sp
	ldrb r3, [r3, #8]
	orrs r0, r3
	strb r0, [r1]
	ldr r1, _0803A7E4 @ =0x00000496
	adds r0, r7, r1
	mov r2, sb
	strb r2, [r0]
	ldr r3, _0803A7E8 @ =0x00000499
	adds r0, r7, r3
	mov r1, r8
	strb r1, [r0]
	mov r2, sl
	str r2, [r6, #0x28]
	movs r3, #0x80
	lsls r3, r3, #6
	str r3, [r6, #0x10]
	b _0803A7FE
	.align 2, 0
_0803A7E0: .4byte 0x00000495
_0803A7E4: .4byte 0x00000496
_0803A7E8: .4byte 0x00000499
_0803A7EC:
	movs r1, #0x89
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0x8f
	lsls r2, r2, #3
	adds r0, r7, r2
	str r1, [r0]
_0803A7FE:
	ldr r0, _0803A814 @ =gUnknown_03005B4C
	ldr r3, [sp, #4]
	str r3, [r0]
	add sp, #0x7c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803A814: .4byte gUnknown_03005B4C

	thumb_func_start sub_803A818
sub_803A818: @ 0x0803A818
	push {r4, r5, r6, lr}
	ldr r2, _0803A840 @ =gCurTask
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	adds r1, #0xa8
	adds r0, r0, r1
	ldr r4, [r0]
	adds r1, r4, #1
	str r1, [r0]
	adds r3, r1, #0
	adds r6, r2, #0
	cmp r3, #0x14
	bhi _0803A844
	movs r0, #0
	strh r0, [r5, #8]
	b _0803A8C6
	.align 2, 0
_0803A840: .4byte gCurTask
_0803A844:
	cmp r3, #0x7e
	bhi _0803A87A
	adds r1, r4, #0
	subs r1, #0x3c
	ldr r0, _0803A8CC @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #8
	ldr r4, _0803A8D0 @ =0x0004BA00
	adds r2, r0, r4
	adds r0, r1, #0
	muls r0, r1, r0
	muls r0, r1, r0
	lsrs r0, r0, #1
	adds r2, r2, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	muls r0, r1, r0
	lsrs r0, r0, #1
	subs r2, r2, r0
	lsrs r0, r1, #1
	adds r2, r2, r0
	str r2, [r5]
_0803A87A:
	movs r0, #8
	ldrsh r1, [r5, r0]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	movs r4, #0xa
	ldrsh r1, [r5, r4]
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	cmp r3, #0x7e
	bls _0803A8A8
	ldr r2, _0803A8D4 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _0803A8D8 @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r5, #8]
	ldr r1, [r6]
	ldr r0, _0803A8DC @ =sub_803C980
	str r0, [r1, #8]
_0803A8A8:
	ldr r4, _0803A8E0 @ =gUnknown_080D7AA8
	bl sub_803CA40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r0, [r0]
	bl _call_via_r0
	adds r0, r5, #0
	bl sub_803CB18
	adds r0, r5, #0
	bl sub_803AC2C
_0803A8C6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803A8CC: .4byte gUnknown_030055B4
_0803A8D0: .4byte 0x0004BA00
_0803A8D4: .4byte gUnknown_030059E0
_0803A8D8: .4byte 0xFFDFFFFF
_0803A8DC: .4byte sub_803C980
_0803A8E0: .4byte gUnknown_080D7AA8

	thumb_func_start sub_803A8E4
sub_803A8E4: @ 0x0803A8E4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r0, #0xb1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803A8FA
	b _0803AA2E
_0803A8FA:
	adds r0, r7, #0
	adds r0, #0xa0
	ldr r0, [r0]
	cmp r0, #4
	bls _0803A908
	cmp r0, #6
	bne _0803A96C
_0803A908:
	ldr r2, [r7]
	asrs r2, r2, #8
	ldr r4, _0803A9E8 @ =gUnknown_08097AA4
	adds r0, r7, #0
	adds r0, #0x88
	ldr r1, [r0]
	ldr r0, _0803A9EC @ =0x000003FF
	ands r1, r0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r3, #0
	ldrsh r0, [r0, r3]
	ldr r3, [r7, #0x68]
	muls r0, r3, r0
	asrs r0, r0, #0x17
	subs r0, #8
	adds r5, r2, r0
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r4, #0
	ldrsh r0, [r1, r4]
	muls r0, r3, r0
	asrs r0, r0, #0x17
	adds r6, r2, r0
	ldr r4, _0803A9F0 @ =gUnknown_030059E0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	subs r5, r5, r0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	subs r6, r6, r0
	adds r0, r5, #0
	muls r0, r5, r0
	adds r1, r6, #0
	muls r1, r6, r1
	adds r0, r0, r1
	ldr r1, _0803A9F4 @ =0x000001A3
	cmp r0, r1
	bgt _0803A96C
	adds r0, r7, #0
	bl sub_803CBFC
	adds r0, r4, #0
	bl sub_800CBA4
_0803A96C:
	movs r0, #0xb8
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, [r7]
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r3, _0803A9F8 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r5, r0
	strh r0, [r4, #0x16]
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r4, #0x18]
	ldr r3, _0803A9F0 @ =gUnknown_030059E0
	mov r8, r3
	str r3, [sp]
	adds r0, r4, #0
	movs r3, #1
	bl sub_800CA20
	lsls r0, r5, #8
	lsls r1, r6, #8
	bl sub_80122DC
	adds r0, r7, #0
	adds r0, #0xb1
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0
	beq _0803A9CA
	mov r1, r8
	movs r2, #0x12
	ldrsh r0, [r1, r2]
	ldr r1, [r1, #0x20]
	cmp r0, #0
	bgt _0803A9C2
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0803AA2E
_0803A9C2:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _0803AA2E
_0803A9CA:
	ldr r3, _0803A9F0 @ =gUnknown_030059E0
	mov r8, r3
	str r3, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _0803A9FC
	adds r0, r7, #0
	bl sub_803B6AC
	b _0803AA0C
	.align 2, 0
_0803A9E8: .4byte gUnknown_08097AA4
_0803A9EC: .4byte 0x000003FF
_0803A9F0: .4byte gUnknown_030059E0
_0803A9F4: .4byte 0x000001A3
_0803A9F8: .4byte gUnknown_03005960
_0803A9FC:
	mov r0, r8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800CA20
_0803AA0C:
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0
	bne _0803AA2E
	ldr r0, _0803AA3C @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _0803AA2E
	adds r0, r7, #0
	bl sub_803B6AC
_0803AA2E:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803AA3C: .4byte gUnknown_030059E0

	thumb_func_start sub_803AA40
sub_803AA40: @ 0x0803AA40
	push {r4, r5, r6, lr}
	ldr r0, _0803AA9C @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	adds r1, #0xb4
	adds r4, r0, r1
	subs r1, #0xc
	adds r0, r0, r1
	ldr r1, [r0]
	adds r1, #1
	str r1, [r0]
	cmp r1, #8
	bls _0803AA76
	cmp r1, #9
	bne _0803AA76
	ldr r2, _0803AAA0 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r0, _0803AAA4 @ =0x0000014D
	bl m4aSongNumStart
_0803AA76:
	adds r0, r5, #0
	adds r0, #0xa8
	ldr r1, [r0]
	adds r5, r0, #0
	cmp r1, #0x20
	bhi _0803AAA8
	cmp r1, #1
	bne _0803AA92
	strh r1, [r4, #2]
	movs r0, #0x80
	lsls r0, r0, #4
	strh r0, [r4, #4]
	movs r0, #0xc0
	strh r0, [r4, #6]
_0803AA92:
	adds r0, r4, #0
	bl sub_802D4CC
	b _0803AC18
	.align 2, 0
_0803AA9C: .4byte gCurTask
_0803AAA0: .4byte gFlags
_0803AAA4: .4byte 0x0000014D
_0803AAA8:
	cmp r1, #0x78
	bhi _0803AB84
	movs r0, #0
	movs r1, #2
	strh r1, [r4, #2]
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	adds r0, r4, #0
	bl sub_802D4CC
	ldr r2, _0803AB64 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _0803AAF6
	ldr r0, _0803AB68 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0803AAE8
	ldr r0, _0803AB6C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _0803AAE8
	ldr r0, _0803AB70 @ =gUnknown_030059E0
	adds r0, #0x64
	movs r1, #0x51
	strh r1, [r0]
_0803AAE8:
	ldr r0, _0803AB64 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _0803AAF6
	b _0803AC18
_0803AAF6:
	ldr r0, [r5]
	cmp r0, #0x22
	beq _0803AAFE
	b _0803AC18
_0803AAFE:
	ldr r1, _0803AB74 @ =gUnknown_080D6DE4
	ldrh r5, [r1]
	ldr r3, _0803AB70 @ =gUnknown_030059E0
	ldr r2, [r3, #8]
	asrs r0, r2, #8
	subs r5, r5, r0
	ldrh r4, [r1, #2]
	ldr r1, [r3, #0xc]
	asrs r0, r1, #8
	subs r4, r4, r0
	lsls r6, r5, #8
	adds r2, r2, r6
	str r2, [r3, #8]
	lsls r2, r4, #8
	adds r1, r1, r2
	str r1, [r3, #0xc]
	ldr r1, _0803AB78 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	ldr r0, [r1, #4]
	adds r0, r0, r4
	str r0, [r1, #4]
	ldr r0, [r1, #0x20]
	adds r0, r0, r5
	str r0, [r1, #0x20]
	ldr r0, [r1, #0x24]
	adds r0, r0, r4
	str r0, [r1, #0x24]
	ldr r0, [r1, #0x10]
	adds r0, r0, r5
	str r0, [r1, #0x10]
	ldr r0, [r1, #0x14]
	adds r0, r0, r4
	str r0, [r1, #0x14]
	ldr r0, _0803AB7C @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _0803AB58
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	ldr r0, [r1, #4]
	adds r0, r0, r2
	str r0, [r1, #4]
_0803AB58:
	ldr r1, _0803AB80 @ =gUnknown_030055B0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0803AC18
	.align 2, 0
_0803AB64: .4byte gUnknown_030055B4
_0803AB68: .4byte gUnknown_030054F0
_0803AB6C: .4byte gLoadedSaveGame
_0803AB70: .4byte gUnknown_030059E0
_0803AB74: .4byte gUnknown_080D6DE4
_0803AB78: .4byte gUnknown_03005960
_0803AB7C: .4byte gUnknown_030056A4
_0803AB80: .4byte gUnknown_030055B0
_0803AB84:
	movs r0, #0x28
	strh r0, [r4, #6]
	adds r0, r4, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0803AC18
	ldr r2, _0803ABB4 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _0803ABFC
	ldr r0, _0803ABB8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bne _0803ABC0
	ldr r0, _0803ABBC @ =gUnknown_03005490
	ldr r0, [r0]
	bl sub_808916C
	b _0803ABFC
	.align 2, 0
_0803ABB4: .4byte gUnknown_030055B4
_0803ABB8: .4byte gUnknown_030054CC
_0803ABBC: .4byte gUnknown_03005490
_0803ABC0:
	ldr r0, _0803ABE4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0803ABEC
	ldr r0, _0803ABE8 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _0803ABEC
	movs r0, #0
	bl sub_808DBA4
	b _0803ABFC
	.align 2, 0
_0803ABE4: .4byte gUnknown_030054F0
_0803ABE8: .4byte gLoadedSaveGame
_0803ABEC:
	ldr r0, _0803AC08 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _0803AC0C @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0803AC10 @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
_0803ABFC:
	ldr r0, _0803AC14 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0803AC22
	.align 2, 0
_0803AC08: .4byte gUnknown_03005490
_0803AC0C: .4byte gUnknown_030053F0
_0803AC10: .4byte gUnknown_030054F4
_0803AC14: .4byte gCurTask
_0803AC18:
	ldr r0, _0803AC28 @ =gWinRegs
	movs r1, #0x3f
	strh r1, [r0, #8]
	movs r1, #0x1f
	strh r1, [r0, #0xa]
_0803AC22:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803AC28: .4byte gWinRegs

	thumb_func_start sub_803AC2C
sub_803AC2C: @ 0x0803AC2C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov sl, r0
	adds r0, #0xb4
	str r0, [sp]
	movs r7, #0xb8
	lsls r7, r7, #2
	add r7, sl
	mov r1, sl
	ldr r0, [r1]
	asrs r0, r0, #8
	ldr r4, _0803AFF8 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	mov r2, sl
	ldr r0, [r2, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xde
	lsls r7, r7, #2
	add r7, sl
	mov r3, sl
	ldr r0, [r3]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	adds r0, #4
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xea
	lsls r7, r7, #2
	add r7, sl
	mov r5, sl
	ldr r0, [r5]
	ldr r1, _0803AFFC @ =0xFFFFEA00
	mov sb, r1
	add r0, sb
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	adds r5, #0x98
	str r5, [sp, #4]
	mov r2, sl
	ldr r0, [r2, #4]
	ldr r1, [r5]
	adds r0, r0, r1
	movs r5, #0xe8
	lsls r5, r5, #4
	adds r0, r0, r5
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	mov r3, sl
	ldr r0, [r3]
	movs r6, #0xc0
	lsls r6, r6, #5
	adds r0, r0, r6
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	movs r0, #0x9c
	add r0, sl
	mov r8, r0
	ldr r0, [r3, #4]
	mov r2, r8
	ldr r1, [r2]
	adds r0, r0, r1
	adds r0, r0, r5
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xf6
	lsls r7, r7, #2
	add r7, sl
	mov r3, sl
	ldr r0, [r3]
	add r0, sb
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	ldr r2, [sp, #4]
	ldr r1, [r2]
	adds r0, r0, r1
	adds r0, r0, r5
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	mov r3, sl
	ldr r0, [r3]
	adds r0, r0, r6
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	mov r2, r8
	ldr r1, [r2]
	adds r0, r0, r1
	adds r0, r0, r5
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	movs r7, #0xc6
	lsls r7, r7, #2
	add r7, sl
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	mov r3, sl
	ldr r0, [r3]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r0, [r3, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r1, #6
	mov r4, sb
	lsls r4, r4, #0x10
	str r4, [sp, #8]
	mov r5, r8
	lsls r5, r5, #0x10
	str r5, [sp, #0xc]
_0803AD92:
	lsls r0, r1, #0x18
	asrs r5, r0, #0x18
	lsls r4, r5, #2
	mov r3, sl
	adds r3, #0x2c
	adds r3, r3, r4
	ldr r0, [r3]
	adds r0, #0x50
	ldr r1, _0803B000 @ =0x000003FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	ldr r1, _0803B004 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r2, sl
	adds r2, #0xc
	adds r2, r2, r4
	ldr r0, [r2]
	muls r1, r0, r1
	asrs r1, r1, #0x17
	mov r4, sb
	lsls r0, r4, #0x10
	asrs r6, r0, #0x10
	adds r1, r6, r1
	strh r1, [r7, #0x16]
	ldr r0, [r3]
	adds r0, #0x50
	ldr r1, _0803B000 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	ldr r3, _0803B004 @ =gUnknown_08097AA4
	adds r0, r0, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldr r0, [r2]
	muls r1, r0, r1
	asrs r1, r1, #0x17
	mov r2, r8
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	adds r1, r4, r1
	strh r1, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	mov r0, sl
	adds r0, #0xb0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803AE1C
	lsls r2, r5, #1
	adds r2, r2, r5
	lsls r2, r2, #3
	ldr r0, [sp]
	adds r0, #0x44
	adds r0, r0, r2
	movs r3, #0x16
	ldrsh r1, [r7, r3]
	str r1, [r0]
	ldr r0, [sp]
	adds r0, #0x48
	adds r0, r0, r2
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	str r1, [r0]
_0803AE1C:
	subs r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	bge _0803AD92
	movs r7, #0xd2
	lsls r7, r7, #2
	add r7, sl
	ldr r3, _0803B004 @ =gUnknown_08097AA4
	mov sb, r3
	mov r5, sl
	ldr r0, [r5, #0x48]
	adds r0, #0x50
	ldr r1, _0803B000 @ =0x000003FF
	mov r8, r1
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	add r0, sb
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r5, #0x28]
	muls r0, r1, r0
	asrs r0, r0, #0x17
	adds r0, r6, r0
	strh r0, [r7, #0x16]
	ldr r0, [r5, #0x48]
	adds r0, #0x50
	mov r5, r8
	ands r0, r5
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r3, sl
	ldr r0, [r3, #0x28]
	muls r0, r1, r0
	asrs r0, r0, #0x17
	adds r0, r4, r0
	strh r0, [r7, #0x18]
	ldrh r5, [r7, #0x16]
	ldrh r4, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	movs r0, #0x89
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	cmp r0, #0
	beq _0803AEBA
	ldr r7, _0803B008 @ =0x00000444
	add r7, sl
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r5, #5
	strh r5, [r7, #0x16]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	subs r4, #0x14
	strh r4, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	ldr r7, _0803B00C @ =0x00000474
	add r7, sl
	strh r5, [r7, #0x16]
	strh r4, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_0803AEBA:
	movs r7, #0xc6
	lsls r7, r7, #2
	add r7, sl
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	movs r1, #0
	mov r4, sl
	adds r4, #0x74
	str r4, [sp, #0x14]
	mov r5, sl
	adds r5, #0x54
	str r5, [sp, #0x10]
	mov r0, sl
	adds r0, #0x88
	str r0, [sp, #0x18]
	mov r2, sl
	adds r2, #0x94
	str r2, [sp, #0x1c]
_0803AEE0:
	lsls r4, r1, #0x18
	asrs r4, r4, #0x18
	lsls r2, r4, #2
	ldr r5, [sp, #0x14]
	adds r3, r5, r2
	ldr r0, [r3]
	mov r1, r8
	ands r0, r1
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r1, [r0, r5]
	ldr r0, [sp, #0x10]
	adds r2, r0, r2
	ldr r0, [r2]
	muls r0, r1, r0
	asrs r0, r0, #0x17
	subs r0, #8
	ldr r1, [sp, #8]
	asrs r6, r1, #0x10
	adds r0, r6, r0
	strh r0, [r7, #0x16]
	ldr r0, [r3]
	mov r3, r8
	ands r0, r3
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r1, [r0, r5]
	ldr r0, [r2]
	muls r0, r1, r0
	asrs r0, r0, #0x17
	ldr r1, [sp, #0xc]
	asrs r5, r1, #0x10
	adds r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	adds r4, #1
	lsls r4, r4, #0x18
	lsrs r1, r4, #0x18
	asrs r4, r4, #0x18
	cmp r4, #5
	ble _0803AEE0
	movs r7, #0x81
	lsls r7, r7, #3
	add r7, sl
	movs r4, #0x87
	lsls r4, r4, #3
	add r4, sl
	ldr r2, _0803B004 @ =gUnknown_08097AA4
	ldr r3, [sp, #0x18]
	ldr r0, [r3]
	ldr r3, _0803B000 @ =0x000003FF
	ands r0, r3
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	add r0, r8
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov sb, r0
	mov r1, sl
	ldr r0, [r1, #0x68]
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r0, r0, #0x17
	subs r0, #8
	adds r0, r6, r0
	strh r0, [r7, #0x16]
	ldr r1, [sp, #0x18]
	ldr r0, [r1]
	ands r0, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r2, sl
	ldr r0, [r2, #0x68]
	muls r0, r1, r0
	asrs r0, r0, #0x17
	adds r0, r5, r0
	strh r0, [r7, #0x18]
	ldr r2, _0803B010 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803B014 @ =0x00002060
	orrs r0, r1
	str r0, [r7, #0x10]
	ldr r5, [sp, #0x18]
	ldr r1, [r5]
	ldr r2, [sp, #0x1c]
	ldr r0, [r2]
	subs r0, r1, r0
	adds r1, r1, r0
	ands r1, r3
	strh r1, [r4]
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r1, r0
	beq _0803AFC4
	adds r0, r1, #0
	adds r0, #0xa
	strh r0, [r4]
_0803AFC4:
	mov r3, r8
	strh r3, [r4, #2]
	strh r3, [r4, #4]
	ldrh r0, [r7, #0x16]
	strh r0, [r4, #6]
	ldrh r0, [r7, #0x18]
	strh r0, [r4, #8]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	adds r1, r4, #0
	bl sub_8004860
	adds r0, r7, #0
	bl sub_80051E8
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803AFF8: .4byte gUnknown_03005960
_0803AFFC: .4byte 0xFFFFEA00
_0803B000: .4byte 0x000003FF
_0803B004: .4byte gUnknown_08097AA4
_0803B008: .4byte 0x00000444
_0803B00C: .4byte 0x00000474
_0803B010: .4byte gUnknown_030054B8
_0803B014: .4byte 0x00002060

	thumb_func_start sub_803B018
sub_803B018: @ 0x0803B018
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0803B084 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	movs r0, #0
	strh r0, [r5, #0xa]
	ldr r6, [r5, #4]
	ldr r0, [r5]
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r2, r0, r3
	ldr r0, _0803B088 @ =IWRAM_START + 0x9C
	adds r4, r1, r0
	ldr r0, [r4]
	adds r0, r6, r0
	movs r1, #0xe8
	lsls r1, r1, #4
	adds r0, r0, r1
	asrs r0, r0, #8
	asrs r1, r2, #8
	ldr r2, _0803B08C @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	bgt _0803B094
	lsls r1, r2, #6
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	rsbs r2, r2, #0
	cmp r2, #7
	ble _0803B06A
	movs r2, #7
_0803B06A:
	ldr r1, _0803B090 @ =gUnknown_080D7A18
	lsls r0, r2, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r1, r2, #0
	muls r1, r0, r1
	lsls r0, r2, #6
	subs r1, r1, r0
	ldr r0, [r4]
	subs r0, r0, r1
	b _0803B09C
	.align 2, 0
_0803B084: .4byte gCurTask
_0803B088: .4byte IWRAM_START + 0x9C
_0803B08C: .4byte sub_801EC3C
_0803B090: .4byte gUnknown_080D7A18
_0803B094:
	ldr r0, [r4]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r0, r1
_0803B09C:
	str r0, [r4]
	adds r2, r5, #0
	adds r2, #0x9c
	ldr r0, [r2]
	movs r1, #0x94
	lsls r1, r1, #5
	subs r1, r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	asrs r0, r0, #8
	ldr r1, [r5, #4]
	subs r1, r1, r0
	str r1, [r5, #4]
	ldr r1, [r2]
	ldr r0, _0803B124 @ =0x00000E7F
	cmp r1, r0
	bgt _0803B0C4
	adds r0, #1
	str r0, [r2]
_0803B0C4:
	ldr r0, [r2]
	movs r1, #0xbc
	lsls r1, r1, #5
	cmp r0, r1
	ble _0803B0D0
	str r1, [r2]
_0803B0D0:
	ldr r0, [r5]
	ldr r3, _0803B128 @ =0xFFFFEA00
	adds r2, r0, r3
	adds r4, r5, #0
	adds r4, #0x98
	ldr r0, [r4]
	adds r0, r6, r0
	movs r1, #0xe8
	lsls r1, r1, #4
	adds r0, r0, r1
	asrs r0, r0, #8
	asrs r1, r2, #8
	ldr r2, _0803B12C @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	bgt _0803B134
	lsls r1, r2, #6
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	rsbs r2, r2, #0
	cmp r2, #7
	ble _0803B10A
	movs r2, #7
_0803B10A:
	ldr r1, _0803B130 @ =gUnknown_080D7A18
	lsls r0, r2, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r1, r2, #0
	muls r1, r0, r1
	lsls r0, r2, #6
	subs r1, r1, r0
	ldr r0, [r4]
	subs r0, r0, r1
	b _0803B13C
	.align 2, 0
_0803B124: .4byte 0x00000E7F
_0803B128: .4byte 0xFFFFEA00
_0803B12C: .4byte sub_801EC3C
_0803B130: .4byte gUnknown_080D7A18
_0803B134:
	ldr r0, [r4]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r0, r1
_0803B13C:
	str r0, [r4]
	adds r2, r4, #0
	ldr r0, [r2]
	movs r1, #0x94
	lsls r1, r1, #5
	subs r1, r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	asrs r0, r0, #8
	ldr r1, [r5, #4]
	subs r1, r1, r0
	str r1, [r5, #4]
	ldr r1, [r2]
	ldr r0, _0803B178 @ =0x00000E7F
	cmp r1, r0
	bgt _0803B162
	adds r0, #1
	str r0, [r2]
_0803B162:
	ldr r0, [r4]
	movs r1, #0xbc
	lsls r1, r1, #5
	cmp r0, r1
	ble _0803B16E
	str r1, [r4]
_0803B16E:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803B178: .4byte 0x00000E7F

	thumb_func_start sub_803B17C
sub_803B17C: @ 0x0803B17C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov ip, r0
	mov r2, ip
	adds r2, #0x94
	ldr r0, [r2]
	subs r0, #8
	str r0, [r2]
	ldr r1, _0803B244 @ =0x000002FF
	cmp r0, r1
	bgt _0803B19E
	movs r0, #0xc0
	lsls r0, r0, #2
	str r0, [r2]
_0803B19E:
	ldr r0, [r2]
	mov r1, ip
	str r0, [r1, #0x74]
	movs r4, #1
	movs r2, #0x74
	add r2, ip
	mov sl, r2
	mov r6, ip
	adds r6, #0xac
	mov r5, sl
	ldr r7, _0803B248 @ =gUnknown_080D7A78
	mov r8, r7
_0803B1B6:
	lsls r3, r4, #2
	adds r3, r5, r3
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r1, [r0]
	ldr r2, [r3]
	subs r1, r1, r2
	adds r0, r4, #0
	adds r0, #8
	lsls r0, r0, #1
	add r0, r8
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r1, r0
	asrs r0, r0, #8
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B1B6
	ldr r0, [r6]
	subs r0, #1
	str r0, [r6]
	cmp r0, #0
	bne _0803B254
	movs r0, #0xa
	str r0, [r6]
	mov r1, ip
	adds r1, #0xa0
	movs r0, #1
	str r0, [r1]
	movs r4, #0
	movs r0, #0x94
	add r0, ip
	mov sb, r0
	mov r3, ip
	adds r3, #0xa4
	mov r6, sl
	movs r1, #0xc0
	lsls r1, r1, #2
	mov r8, r1
	mov r5, ip
	adds r5, #0x54
	ldr r7, _0803B24C @ =gUnknown_080D7A58
_0803B214:
	lsls r1, r4, #2
	adds r0, r6, r1
	mov r2, r8
	str r2, [r0]
	adds r2, r5, r1
	adds r1, r1, r7
	ldr r0, [r1]
	str r0, [r2]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B214
	movs r0, #0xc0
	lsls r0, r0, #2
	mov r7, sb
	str r0, [r7]
	ldr r1, [r3]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0803B250
	movs r0, #1
	b _0803B252
	.align 2, 0
_0803B244: .4byte 0x000002FF
_0803B248: .4byte gUnknown_080D7A78
_0803B24C: .4byte gUnknown_080D7A58
_0803B250:
	lsls r0, r1, #1
_0803B252:
	str r0, [r3]
_0803B254:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_803B264
sub_803B264: @ 0x0803B264
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	movs r3, #0
	movs r2, #1
	adds r0, #0xa4
	ldr r0, [r0]
	ands r0, r2
	cmp r0, #0
	beq _0803B280
	ldr r0, _0803B27C @ =gUnknown_080D7A98
	b _0803B2A4
	.align 2, 0
_0803B27C: .4byte gUnknown_080D7A98
_0803B280:
	lsls r0, r2, #0x11
	lsrs r2, r0, #0x10
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #4
	bhi _0803B2A6
	mov r0, ip
	adds r0, #0xa4
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0803B280
	ldr r1, _0803B2F4 @ =gUnknown_080D7A98
	lsls r0, r3, #1
	adds r0, r0, r1
_0803B2A4:
	ldrh r2, [r0]
_0803B2A6:
	movs r5, #0
	movs r3, #0
	lsls r0, r2, #0x10
	mov r4, ip
	adds r4, #0xac
	asrs r7, r0, #0x10
	mov r6, ip
	adds r6, #0x54
_0803B2B6:
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r7
	lsls r1, r1, #0x10
	lsls r2, r3, #2
	adds r2, r6, r2
	lsrs r5, r1, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _0803B2B6
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	cmp r0, #0
	bne _0803B2EC
	movs r0, #0xf
	str r0, [r4]
	mov r1, ip
	adds r1, #0xa0
	movs r0, #2
	str r0, [r1]
_0803B2EC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B2F4: .4byte gUnknown_080D7A98

	thumb_func_start sub_803B2F8
sub_803B2F8: @ 0x0803B2F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r6, r0, #0
	movs r4, #0
	movs r7, #1
	adds r0, #0xa4
	ldr r0, [r0]
	ands r0, r7
	ldr r1, _0803B31C @ =gUnknown_08097AA4
	mov sb, r1
	cmp r0, #0
	beq _0803B324
	ldr r0, _0803B320 @ =gUnknown_080D7AA2
	b _0803B342
	.align 2, 0
_0803B31C: .4byte gUnknown_08097AA4
_0803B320: .4byte gUnknown_080D7AA2
_0803B324:
	lsls r0, r7, #0x19
	lsrs r7, r0, #0x18
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bhi _0803B344
	adds r0, r6, #0
	adds r0, #0xa4
	ldr r0, [r0]
	ands r0, r7
	cmp r0, #0
	beq _0803B324
	ldr r0, _0803B468 @ =gUnknown_080D7AA2
	adds r0, r4, r0
_0803B342:
	ldrb r7, [r0]
_0803B344:
	adds r2, r6, #0
	adds r2, #0x94
	adds r3, r6, #0
	adds r3, #0xac
	ldr r1, [r3]
	movs r0, #0x3c
	subs r0, r0, r1
	lsls r0, r0, #3
	add r0, sb
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	ldr r1, [r2]
	subs r1, r1, r0
	ldr r0, _0803B46C @ =0x000003FF
	ands r1, r0
	str r1, [r2]
	str r1, [r6, #0x74]
	movs r4, #1
	str r2, [sp, #8]
	mov r8, r3
	subs r2, #0x20
	str r2, [sp, #0xc]
	movs r3, #0x90
	adds r3, r3, r6
	mov sl, r3
	str r2, [sp, #0x10]
	ldr r5, _0803B470 @ =gUnknown_080D7A78
	mov ip, r5
_0803B37E:
	lsls r3, r4, #2
	ldr r0, [sp, #0x10]
	adds r3, r0, r3
	subs r0, r4, #1
	lsls r0, r0, #2
	ldr r1, [sp, #0x10]
	adds r0, r1, r0
	ldr r1, [r0]
	ldr r2, [r3]
	subs r1, r1, r2
	lsls r0, r4, #1
	add r0, ip
	movs r5, #0
	ldrsh r0, [r0, r5]
	muls r0, r1, r0
	asrs r0, r0, #8
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B37E
	ldr r1, [r6]
	asrs r1, r1, #8
	mov r0, sl
	ldr r2, [r0]
	subs r2, r2, r7
	ldr r4, _0803B46C @ =0x000003FF
	ands r2, r4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r0, [r0, r5]
	ldr r3, [r6, #0x70]
	muls r0, r3, r0
	asrs r0, r0, #0x17
	adds r1, r1, r0
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	lsls r2, r2, #1
	add r2, sb
	movs r5, #0
	ldrsh r2, [r2, r5]
	muls r2, r3, r2
	asrs r2, r2, #0x17
	adds r0, r0, r2
	movs r2, #0
	str r2, [sp]
	ldr r2, _0803B474 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E6D4
	adds r5, r0, #0
	cmp r5, #0
	bgt _0803B478
	movs r0, #0xee
	bl m4aSongNumStart
	movs r0, #0x1e
	mov r3, r8
	str r0, [r3]
	adds r1, r6, #0
	adds r1, #0xa0
	movs r0, #4
	str r0, [r1]
	mov r0, sl
	ldr r1, [r0]
	adds r1, r1, r7
	ands r1, r4
	lsls r0, r1, #1
	add r0, sb
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #1
	add r1, sb
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	adds r1, r1, r5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	movs r4, #0
	ldr r1, [sp, #0xc]
_0803B440:
	lsls r0, r4, #2
	adds r0, r1, r0
	str r5, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B440
	ldr r3, [sp, #8]
	str r5, [r3]
	movs r0, #0x80
	lsls r0, r0, #4
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x10
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
	b _0803B490
	.align 2, 0
_0803B468: .4byte gUnknown_080D7AA2
_0803B46C: .4byte 0x000003FF
_0803B470: .4byte gUnknown_080D7A78
_0803B474: .4byte sub_801EE64
_0803B478:
	mov r5, r8
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
	cmp r0, #0
	bne _0803B490
	movs r0, #0x1e
	str r0, [r5]
	adds r1, r6, #0
	adds r1, #0xa0
	movs r0, #4
	str r0, [r1]
_0803B490:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_803B4A0
sub_803B4A0: @ 0x0803B4A0
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	mov r1, ip
	adds r1, #0x94
	ldr r0, [r1]
	adds r0, #8
	str r0, [r1]
	mov r1, ip
	str r0, [r1, #0x74]
	movs r4, #1
	mov r5, ip
	adds r5, #0x74
	ldr r6, _0803B504 @ =gUnknown_080D7A78
_0803B4BA:
	lsls r3, r4, #2
	adds r3, r5, r3
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r1, [r0]
	ldr r2, [r3]
	subs r1, r1, r2
	adds r0, r4, #0
	adds r0, #8
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r1, r0
	asrs r0, r0, #8
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B4BA
	movs r4, #0
	movs r3, #1
	mov r1, ip
	adds r1, #0xa4
	ldr r0, [r1]
	ands r0, r3
	mov r5, ip
	adds r5, #0xac
	cmp r0, #0
	beq _0803B50C
	ldr r0, _0803B508 @ =gUnknown_080D7A98
	movs r1, #0
	ldrsh r0, [r0, r1]
	b _0803B52A
	.align 2, 0
_0803B504: .4byte gUnknown_080D7A78
_0803B508: .4byte gUnknown_080D7A98
_0803B50C:
	lsls r3, r3, #1
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bhi _0803B52C
	ldr r0, [r1]
	ands r0, r3
	cmp r0, #0
	beq _0803B50C
	ldr r0, _0803B574 @ =gUnknown_080D7A98
	lsls r1, r4, #1
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
_0803B52A:
	lsls r3, r0, #1
_0803B52C:
	ldr r0, [r5]
	cmp r0, #0x39
	bhi _0803B558
	movs r4, #0
	mov r6, ip
	adds r6, #0x54
	ldr r7, _0803B578 @ =gUnknown_080D7A58
_0803B53A:
	lsls r1, r4, #2
	adds r2, r6, r1
	ldr r0, [r2]
	subs r0, r0, r3
	str r0, [r2]
	adds r1, r1, r7
	ldr r1, [r1]
	cmp r0, r1
	bge _0803B54E
	str r1, [r2]
_0803B54E:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B53A
_0803B558:
	ldr r0, [r5]
	subs r2, r0, #1
	str r2, [r5]
	cmp r2, #0
	bne _0803B56C
	movs r0, #0x50
	str r0, [r5]
	mov r0, ip
	adds r0, #0xa0
	str r2, [r0]
_0803B56C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B574: .4byte gUnknown_080D7A98
_0803B578: .4byte gUnknown_080D7A58

	thumb_func_start sub_803B57C
sub_803B57C: @ 0x0803B57C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov ip, r0
	movs r1, #0
	movs r5, #1
	adds r0, #0xa4
	ldr r0, [r0]
	ands r0, r5
	cmp r0, #0
	beq _0803B5A0
	ldr r0, _0803B59C @ =gUnknown_080D7A98
	ldrh r0, [r0]
	b _0803B5BC
	.align 2, 0
_0803B59C: .4byte gUnknown_080D7A98
_0803B5A0:
	lsls r5, r5, #1
	adds r1, #1
	cmp r1, #4
	bgt _0803B5C0
	mov r0, ip
	adds r0, #0xa4
	ldr r0, [r0]
	ands r0, r5
	cmp r0, #0
	beq _0803B5A0
	ldr r0, _0803B624 @ =gUnknown_080D7A98
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r0, [r1]
_0803B5BC:
	lsls r0, r0, #0x10
	asrs r5, r0, #0x12
_0803B5C0:
	adds r4, r5, #0
	mov r7, ip
	adds r7, #0xac
	mov sb, r7
	movs r0, #0xa0
	add r0, ip
	mov r8, r0
	mov r3, ip
	adds r3, #0x54
	ldr r6, _0803B628 @ =gUnknown_080D7A58
	movs r2, #5
	mov sl, r2
	movs r1, #7
_0803B5DA:
	adds r4, r4, r5
	ldr r0, [r3]
	subs r0, r0, r4
	str r0, [r3]
	ldr r2, [r6]
	cmp r0, r2
	bge _0803B5F6
	str r2, [r3]
	movs r0, #0x44
	mov r2, sb
	str r0, [r2]
	mov r0, sl
	mov r2, r8
	str r0, [r2]
_0803B5F6:
	adds r3, #4
	adds r6, #4
	subs r1, #1
	cmp r1, #0
	bge _0803B5DA
	ldr r0, [r7]
	subs r0, #1
	str r0, [r7]
	cmp r0, #0
	bne _0803B616
	movs r0, #0x44
	str r0, [r7]
	mov r1, ip
	adds r1, #0xa0
	movs r0, #5
	str r0, [r1]
_0803B616:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B624: .4byte gUnknown_080D7A98
_0803B628: .4byte gUnknown_080D7A58

	thumb_func_start sub_803B62C
sub_803B62C: @ 0x0803B62C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov ip, r0
	mov r1, ip
	adds r1, #0x94
	ldr r0, [r1]
	adds r0, #0xc
	str r0, [r1]
	mov r3, ip
	adds r3, #0xac
	ldr r0, [r3]
	movs r2, #0xc0
	lsls r2, r2, #2
	cmp r0, r2
	bls _0803B64E
	str r2, [r1]
_0803B64E:
	ldr r0, [r1]
	mov r1, ip
	str r0, [r1, #0x74]
	movs r4, #1
	adds r6, r3, #0
	mov r5, ip
	adds r5, #0x74
	ldr r7, _0803B6A8 @ =gUnknown_080D7A78
	mov r8, r7
_0803B660:
	lsls r3, r4, #2
	adds r3, r5, r3
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r1, [r0]
	ldr r2, [r3]
	subs r1, r1, r2
	lsls r0, r4, #1
	add r0, r8
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r1, r0
	asrs r0, r0, #8
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803B660
	ldr r0, [r6]
	subs r1, r0, #1
	str r1, [r6]
	cmp r1, #0
	bne _0803B69E
	movs r0, #0x50
	str r0, [r6]
	mov r0, ip
	adds r0, #0xa0
	str r1, [r0]
_0803B69E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B6A8: .4byte gUnknown_080D7A78

	thumb_func_start sub_803B6AC
sub_803B6AC: @ 0x0803B6AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0xb0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803B77C
	subs r0, #1
	strb r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803B6D2
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0803B6D8
_0803B6D2:
	movs r0, #0xeb
	bl m4aSongNumStart
_0803B6D8:
	adds r1, r6, #0
	adds r1, #0xb1
	movs r0, #0x1e
	strb r0, [r1]
	movs r0, #0xde
	lsls r0, r0, #2
	adds r0, r0, r6
	mov r8, r0
	adds r0, r6, #0
	adds r0, #0xb0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803B764
	ldr r0, _0803B74C @ =0x00000275
	mov r1, r8
	strh r0, [r1, #0xa]
	movs r2, #0xe6
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #3
	strb r0, [r1]
	ldr r1, _0803B750 @ =gUnknown_03005450
	ldr r5, [r1]
	adds r2, #0x50
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0803B754 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _0803B774
	ldr r0, _0803B758 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803B774
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _0803B75C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0803B742
	movs r0, #0xff
_0803B742:
	strb r0, [r1]
	ldr r1, _0803B760 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _0803B774
	.align 2, 0
_0803B74C: .4byte 0x00000275
_0803B750: .4byte gUnknown_03005450
_0803B754: .4byte 0x0000C350
_0803B758: .4byte gUnknown_030054CC
_0803B75C: .4byte gUnknown_03005448
_0803B760: .4byte gUnknown_030054A8
_0803B764:
	ldr r0, _0803B7A4 @ =0x00000275
	mov r1, r8
	strh r0, [r1, #0xa]
	movs r2, #0xe6
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #2
	strb r0, [r1]
_0803B774:
	mov r1, r8
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0803B77C:
	ldr r0, _0803B7A8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _0803B798
	adds r0, r6, #0
	adds r0, #0xb0
	ldrb r0, [r0]
	cmp r0, #4
	bne _0803B798
	ldr r1, _0803B7AC @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_0803B798:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B7A4: .4byte 0x00000275
_0803B7A8: .4byte gUnknown_030055B4
_0803B7AC: .4byte gUnknown_030054A8

	thumb_func_start sub_803B7B0
sub_803B7B0: @ 0x0803B7B0
	push {r4, lr}
	adds r3, r0, #0
	movs r0, #0xde
	lsls r0, r0, #2
	adds r4, r3, r0
	adds r1, r3, #0
	adds r1, #0xb1
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803B810
	adds r2, r3, #0
	adds r2, #0xb2
	movs r0, #0
	strb r0, [r2]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803B83E
	adds r0, r3, #0
	adds r0, #0xb0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803B7F4
	ldr r0, _0803B7F0 @ =0x00000275
	strh r0, [r4, #0xa]
	movs r2, #0xe6
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #3
	b _0803B800
	.align 2, 0
_0803B7F0: .4byte 0x00000275
_0803B7F4:
	movs r0, #0
	ldr r1, _0803B80C @ =0x00000275
	strh r1, [r4, #0xa]
	movs r2, #0xe6
	lsls r2, r2, #2
	adds r1, r3, r2
_0803B800:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	b _0803B83C
	.align 2, 0
_0803B80C: .4byte 0x00000275
_0803B810:
	adds r1, r3, #0
	adds r1, #0xb2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803B83E
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803B83E
	movs r1, #0
	ldr r0, _0803B844 @ =0x00000275
	strh r0, [r4, #0xa]
	movs r4, #0xe6
	lsls r4, r4, #2
	adds r0, r3, r4
	strb r1, [r0]
	ldr r0, _0803B848 @ =0x00000399
	adds r1, r3, r0
	ldrb r0, [r1]
	orrs r0, r2
_0803B83C:
	strb r0, [r1]
_0803B83E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803B844: .4byte 0x00000275
_0803B848: .4byte 0x00000399

	thumb_func_start sub_803B84C
sub_803B84C: @ 0x0803B84C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sb, r0
	mov r7, sb
	adds r7, #0xb4
	ldr r0, [r7, #0x14]
	cmp r0, #0
	bge _0803B868
	movs r0, #0
	str r0, [r7, #0x14]
_0803B868:
	ldr r2, [r7, #0x18]
	adds r2, #0x40
	str r2, [r7, #0x18]
	ldr r1, [r7, #0xc]
	ldr r0, [r7, #0x14]
	adds r1, r1, r0
	str r1, [r7, #0xc]
	ldr r0, [r7, #0x10]
	adds r0, r0, r2
	str r0, [r7, #0x10]
	asrs r0, r0, #8
	adds r0, #0x1c
	asrs r1, r1, #8
	ldr r2, _0803B94C @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	str r0, [sp, #0x24]
	movs r0, #0xb7
	lsls r0, r0, #2
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803B954
	movs r1, #0x9e
	lsls r1, r1, #2
	add r1, sb
	ldr r0, [r7, #0xc]
	ldr r6, _0803B950 @ =0xFFFFEA00
	adds r0, r0, r6
	str r0, [r1]
	movs r2, #0x9f
	lsls r2, r2, #2
	add r2, sb
	movs r0, #0x98
	add r0, sb
	mov r8, r0
	ldr r0, [r7, #0x10]
	mov r3, r8
	ldr r1, [r3]
	adds r0, r0, r1
	movs r3, #0xe8
	lsls r3, r3, #4
	adds r0, r0, r3
	str r0, [r2]
	movs r1, #0xa4
	lsls r1, r1, #2
	add r1, sb
	ldr r0, [r7, #0xc]
	movs r4, #0xc0
	lsls r4, r4, #5
	adds r0, r0, r4
	str r0, [r1]
	movs r2, #0xa5
	lsls r2, r2, #2
	add r2, sb
	mov r5, sb
	adds r5, #0x9c
	ldr r0, [r7, #0x10]
	ldr r1, [r5]
	adds r0, r0, r1
	adds r0, r0, r3
	str r0, [r2]
	movs r1, #0xaa
	lsls r1, r1, #2
	add r1, sb
	ldr r0, [r7, #0xc]
	adds r0, r0, r6
	str r0, [r1]
	movs r2, #0xab
	lsls r2, r2, #2
	add r2, sb
	ldr r0, [r7, #0x10]
	mov r6, r8
	ldr r1, [r6]
	adds r0, r0, r1
	adds r0, r0, r3
	str r0, [r2]
	movs r1, #0xb0
	lsls r1, r1, #2
	add r1, sb
	ldr r0, [r7, #0xc]
	adds r0, r0, r4
	str r0, [r1]
	movs r2, #0xb1
	lsls r2, r2, #2
	add r2, sb
	ldr r0, [r7, #0x10]
	ldr r1, [r5]
	adds r0, r0, r1
	adds r0, r0, r3
	str r0, [r2]
	movs r0, #0x82
	lsls r0, r0, #1
	add r0, sb
	str r0, [sp, #0x34]
	movs r1, #0x80
	lsls r1, r1, #1
	add r1, sb
	str r1, [sp, #0x30]
	mov r2, sb
	adds r2, #0xf8
	str r2, [sp, #0x28]
	mov r3, sb
	adds r3, #0xfc
	str r3, [sp, #0x2c]
	movs r5, #0x84
	lsls r5, r5, #1
	add r5, sb
	str r5, [sp, #0x38]
	b _0803BA42
	.align 2, 0
_0803B94C: .4byte sub_801EC3C
_0803B950: .4byte 0xFFFFEA00
_0803B954:
	movs r6, #0
	mov sl, r6
	movs r0, #0x82
	lsls r0, r0, #1
	add r0, sb
	str r0, [sp, #0x34]
	movs r1, #0x80
	lsls r1, r1, #1
	add r1, sb
	str r1, [sp, #0x30]
	mov r2, sb
	adds r2, #0xf8
	str r2, [sp, #0x28]
	mov r3, sb
	adds r3, #0xfc
	str r3, [sp, #0x2c]
	movs r5, #0x84
	lsls r5, r5, #1
	add r5, sb
	str r5, [sp, #0x38]
_0803B97C:
	mov r6, sl
	lsls r0, r6, #1
	add r0, sl
	lsls r6, r0, #3
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r1, r0, r6
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0x7f
	bgt _0803B99A
	movs r0, #0x80
	str r0, [r1]
_0803B99A:
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r0, r7, r2
	adds r5, r0, r6
	ldr r0, [r5]
	adds r0, #0x28
	str r0, [r5]
	movs r3, #0xe2
	lsls r3, r3, #1
	adds r2, r7, r3
	adds r2, r2, r6
	ldr r0, [r2]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r4, r0, r6
	ldr r0, [r4]
	ldr r1, [r5]
	adds r0, r0, r1
	str r0, [r4]
	asrs r0, r0, #8
	ldr r1, [r2]
	asrs r1, r1, #8
	ldr r2, _0803BA60 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r1, r0, #0
	cmp r1, #0
	bge _0803BA0C
	movs r2, #0xea
	lsls r2, r2, #1
	adds r0, r7, r2
	adds r2, r0, r6
	ldr r0, [r2]
	cmp r0, #0
	beq _0803B9F2
	subs r0, #1
	str r0, [r2]
_0803B9F2:
	lsls r1, r1, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #4
	rsbs r0, r0, #0
	asrs r0, r0, #8
	str r0, [r5]
_0803BA0C:
	mov r3, sl
	lsls r0, r3, #1
	add r0, sl
	lsls r1, r0, #3
	movs r5, #0xea
	lsls r5, r5, #1
	adds r0, r7, r5
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0803BA34
	movs r6, #0xec
	lsls r6, r6, #1
	adds r0, r7, r6
	adds r1, r0, r1
	ldr r0, [r1]
	cmp r0, #0
	beq _0803BA34
	subs r0, #1
	str r0, [r1]
_0803BA34:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #3
	bls _0803B97C
_0803BA42:
	ldr r0, [sp, #0x24]
	cmp r0, #0
	bge _0803BA94
	movs r2, #0x8a
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803BA64
	subs r0, #1
	strb r0, [r1]
	ldr r0, [r7, #0x18]
	rsbs r0, r0, #0
	b _0803BA7A
	.align 2, 0
_0803BA60: .4byte sub_801EC3C
_0803BA64:
	ldr r0, [r7, #0x14]
	subs r0, #0x20
	str r0, [r7, #0x14]
	ldr r1, [r7, #0x18]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #3
	rsbs r0, r0, #0
	asrs r0, r0, #8
_0803BA7A:
	str r0, [r7, #0x18]
	ldr r1, [r7, #0x18]
	movs r0, #0xa0
	rsbs r0, r0, #0
	cmp r1, r0
	ble _0803BA8A
	movs r0, #0
	str r0, [r7, #0x18]
_0803BA8A:
	ldr r3, [sp, #0x24]
	lsls r1, r3, #8
	ldr r0, [r7, #0x10]
	adds r0, r0, r1
	str r0, [r7, #0x10]
_0803BA94:
	movs r5, #0
	mov sl, r5
_0803BA98:
	mov r6, sl
	lsls r1, r6, #1
	adds r0, r1, r6
	lsls r4, r0, #3
	ldr r0, [sp, #0x34]
	adds r5, r0, r4
	ldr r0, [r5]
	adds r0, #0x20
	str r0, [r5]
	ldr r2, [sp, #0x30]
	adds r2, r2, r4
	mov r8, r2
	ldr r2, [r2]
	mov sb, r1
	cmp r2, #0
	ble _0803BAC2
	ldr r3, [sp, #0x28]
	adds r1, r3, r4
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
_0803BAC2:
	ldr r0, [sp, #0x2c]
	adds r6, r0, r4
	ldr r0, [r6]
	ldr r1, [r5]
	adds r0, r0, r1
	str r0, [r6]
	asrs r0, r0, #8
	adds r0, #5
	ldr r2, [sp, #0x28]
	adds r1, r2, r4
	ldr r1, [r1]
	asrs r1, r1, #8
	ldr r2, _0803BD28 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	str r0, [sp, #0x24]
	cmp r0, #0
	bge _0803BB1A
	ldr r3, [sp, #0x38]
	adds r1, r3, r4
	ldr r0, [r1]
	cmp r0, #0
	beq _0803BAFA
	subs r0, #1
	str r0, [r1]
_0803BAFA:
	mov r1, r8
	ldr r0, [r1]
	subs r0, #0x20
	str r0, [r1]
	ldr r2, [sp, #0x24]
	lsls r1, r2, #8
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	mov r3, sl
	lsls r0, r3, #2
	subs r0, #0x40
	ldr r1, [r5]
	muls r0, r1, r0
	asrs r0, r0, #8
	str r0, [r5]
_0803BB1A:
	mov r0, sb
	add r0, sl
	lsls r1, r0, #3
	ldr r5, [sp, #0x38]
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0803BB3A
	adds r0, r7, #0
	adds r0, #0x58
	adds r1, r0, r1
	ldr r0, [r1]
	cmp r0, #0
	beq _0803BB3A
	subs r0, #1
	str r0, [r1]
_0803BB3A:
	mov r0, sb
	add r0, sl
	lsls r4, r0, #3
	movs r6, #0x88
	lsls r6, r6, #1
	adds r0, r7, r6
	adds r5, r0, r4
	ldr r0, [r5]
	adds r0, #0x28
	str r0, [r5]
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r4
	mov r8, r0
	ldr r2, [r0]
	cmp r2, #0
	ble _0803BB6C
	movs r3, #0x82
	lsls r3, r3, #1
	adds r1, r7, r3
	adds r1, r1, r4
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
_0803BB6C:
	movs r6, #0x84
	lsls r6, r6, #1
	adds r0, r7, r6
	adds r6, r0, r4
	ldr r0, [r6]
	ldr r1, [r5]
	adds r0, r0, r1
	str r0, [r6]
	asrs r0, r0, #8
	adds r0, #5
	movs r2, #0x82
	lsls r2, r2, #1
	adds r1, r7, r2
	adds r1, r1, r4
	ldr r1, [r1]
	asrs r1, r1, #8
	ldr r2, _0803BD28 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	str r0, [sp, #0x24]
	cmp r0, #0
	bge _0803BBD2
	movs r3, #0x8a
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r1, r0, r4
	ldr r0, [r1]
	cmp r0, #0
	beq _0803BBB0
	subs r0, #1
	str r0, [r1]
_0803BBB0:
	mov r1, r8
	ldr r0, [r1]
	subs r0, #0x20
	str r0, [r1]
	ldr r2, [sp, #0x24]
	lsls r1, r2, #8
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	mov r3, sl
	lsls r0, r3, #2
	adds r0, #0x40
	rsbs r0, r0, #0
	ldr r1, [r5]
	muls r0, r1, r0
	asrs r0, r0, #8
	str r0, [r5]
_0803BBD2:
	mov r0, sb
	add r0, sl
	lsls r1, r0, #3
	movs r5, #0x8a
	lsls r5, r5, #1
	adds r0, r7, r5
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0803BBF8
	movs r6, #0x8c
	lsls r6, r6, #1
	adds r0, r7, r6
	adds r1, r0, r1
	ldr r0, [r1]
	cmp r0, #0
	beq _0803BBF8
	subs r0, #1
	str r0, [r1]
_0803BBF8:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #7
	bhi _0803BC08
	b _0803BA98
_0803BC08:
	ldr r2, [r7, #0x28]
	adds r2, #0x60
	str r2, [r7, #0x28]
	ldr r1, [r7, #0x1c]
	ldr r0, [r7, #0x24]
	adds r1, r1, r0
	str r1, [r7, #0x1c]
	ldr r0, [r7, #0x20]
	adds r0, r0, r2
	str r0, [r7, #0x20]
	asrs r0, r0, #8
	adds r0, #0x18
	asrs r1, r1, #8
	ldr r2, _0803BD28 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	str r0, [sp, #0x24]
	cmp r0, #0
	blt _0803BC36
	b _0803BD76
_0803BC36:
	ldr r2, [r7, #0x30]
	cmp r2, #0
	bne _0803BD06
	ldr r0, [r7, #0x1c]
	asrs r0, r0, #8
	ldr r1, _0803BD2C @ =gUnknown_03005960
	mov r8, r1
	ldr r1, [r1]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	ldr r0, [r7, #0x20]
	asrs r0, r0, #8
	mov r3, r8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	str r0, [sp, #0x1c]
	add r0, sp, #4
	strh r2, [r0, #0x1c]
	adds r1, r0, #0
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	subs r0, #0xe8
	strh r0, [r1, #0xe]
	ldr r0, _0803BD30 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _0803BD34 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r2, [r0, #0xa]
	str r2, [sp, #8]
	ldr r5, _0803BD38 @ =0x00000229
	adds r5, r5, r7
	mov sb, r5
	mov r1, sb
	bl sub_8039B54
	ldr r3, _0803BD3C @ =gUnknown_030053B8
	ldr r0, [r3]
	ldr r6, _0803BD40 @ =0x00196225
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r4, _0803BD44 @ =0x3C6EF35F
	adds r2, r2, r4
	ldr r1, [r7, #0x1c]
	asrs r1, r1, #8
	mov r5, r8
	ldr r0, [r5]
	subs r1, r1, r0
	movs r5, #0xf
	adds r0, r2, #0
	ands r0, r5
	adds r1, r1, r0
	str r1, [sp, #0x18]
	muls r2, r6, r2
	adds r2, r2, r4
	str r2, [r3]
	ldr r0, [r7, #0x20]
	asrs r0, r0, #8
	mov ip, r0
	mov r0, r8
	ldr r0, [r0, #4]
	mov r1, ip
	subs r1, r1, r0
	ands r2, r5
	adds r0, r1, r2
	str r0, [sp, #0x1c]
	add r0, sp, #4
	mov r1, sb
	str r3, [sp, #0x3c]
	bl sub_8039B54
	ldr r3, [sp, #0x3c]
	ldr r0, [r3]
	adds r2, r0, #0
	muls r2, r6, r2
	adds r2, r2, r4
	ldr r1, [r7, #0x1c]
	asrs r1, r1, #8
	mov sl, r1
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	subs r1, r1, r0
	mov sl, r1
	adds r0, r2, #0
	ands r0, r5
	add r0, sl
	str r0, [sp, #0x18]
	muls r2, r6, r2
	adds r2, r2, r4
	str r2, [r3]
	ldr r0, [r7, #0x20]
	asrs r0, r0, #8
	mov r3, r8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	ands r2, r5
	adds r0, r0, r2
	str r0, [sp, #0x1c]
	add r0, sp, #4
	mov r1, sb
	bl sub_8039B54
_0803BD06:
	ldr r1, [r7, #0x28]
	ldr r0, _0803BD48 @ =0x000002FF
	cmp r1, r0
	bgt _0803BD1C
	ldr r0, [r7, #0x30]
	cmp r0, #0
	bne _0803BD18
	movs r0, #1
	str r0, [r7, #0x30]
_0803BD18:
	movs r0, #0
	str r0, [r7, #0x28]
_0803BD1C:
	ldr r0, [r7, #0x2c]
	cmp r0, #0
	beq _0803BD4C
	movs r0, #0
	b _0803BD4E
	.align 2, 0
_0803BD28: .4byte sub_801EC3C
_0803BD2C: .4byte gUnknown_03005960
_0803BD30: .4byte 0x06012980
_0803BD34: .4byte 0x0000026B
_0803BD38: .4byte 0x00000229
_0803BD3C: .4byte gUnknown_030053B8
_0803BD40: .4byte 0x00196225
_0803BD44: .4byte 0x3C6EF35F
_0803BD48: .4byte 0x000002FF
_0803BD4C:
	movs r0, #1
_0803BD4E:
	str r0, [r7, #0x2c]
	ldr r0, [r7, #0x24]
	subs r0, #0x20
	str r0, [r7, #0x24]
	cmp r0, #0
	bge _0803BD5E
	movs r0, #0
	str r0, [r7, #0x24]
_0803BD5E:
	ldr r5, [sp, #0x24]
	lsls r1, r5, #8
	ldr r0, [r7, #0x20]
	adds r0, r0, r1
	str r0, [r7, #0x20]
	ldr r1, [r7, #0x28]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #6
	rsbs r0, r0, #0
	asrs r0, r0, #8
	str r0, [r7, #0x28]
_0803BD76:
	ldr r0, [r7, #0x2c]
	cmp r0, #0
	beq _0803BD90
	movs r6, #0x89
	lsls r6, r6, #2
	adds r0, r7, r6
	ldrh r1, [r0]
	adds r1, #0x30
	ldr r3, _0803BD8C @ =0x000003FF
	adds r2, r3, #0
	b _0803BD9E
	.align 2, 0
_0803BD8C: .4byte 0x000003FF
_0803BD90:
	movs r5, #0x89
	lsls r5, r5, #2
	adds r0, r7, r5
	ldrh r1, [r0]
	subs r1, #0x30
	ldr r6, _0803BDB4 @ =0x000003FF
	adds r2, r6, #0
_0803BD9E:
	ands r1, r2
	strh r1, [r0]
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803BDB4: .4byte 0x000003FF

	thumb_func_start sub_803BDB8
sub_803BDB8: @ 0x0803BDB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	ldr r0, _0803BE4C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xb4
	adds r0, r0, r1
	mov ip, r0
	ldr r2, _0803BE50 @ =IWRAM_START + 0xA8
	adds r0, r1, r2
	movs r3, #0
	str r3, [r0]
	ldr r4, _0803BE54 @ =IWRAM_START + 0x2DC
	adds r2, r1, r4
	movs r0, #5
	strb r0, [r2]
	ldr r5, _0803BE58 @ =IWRAM_START + 0x2DD
	adds r0, r1, r5
	strb r3, [r0]
	ldr r6, _0803BE5C @ =IWRAM_START + 0x2E0
	adds r2, r1, r6
	movs r0, #0x9d
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	ldr r2, _0803BE60 @ =IWRAM_START + 0x300
	adds r0, r1, r2
	strb r3, [r0]
	ldr r3, _0803BE64 @ =IWRAM_START + 0x301
	adds r2, r1, r3
	movs r0, #0xff
	strb r0, [r2]
	ldr r0, [r7]
	mov r4, ip
	str r0, [r4, #0xc]
	ldr r0, [r7, #4]
	str r0, [r4, #0x10]
	movs r5, #8
	ldrsh r0, [r7, r5]
	str r0, [r4, #0x14]
	ldr r0, _0803BE68 @ =0xFFFFFD00
	str r0, [r4, #0x18]
	movs r6, #0
	mov r8, r6
	ldr r0, _0803BE6C @ =IWRAM_START + 0x278
	adds r0, r1, r0
	str r0, [sp, #8]
	ldr r2, _0803BE70 @ =IWRAM_START + 0x280
	adds r2, r2, r1
	mov sl, r2
	subs r3, #0x85
	adds r3, r1, r3
	str r3, [sp, #0xc]
_0803BE2E:
	mov r4, r8
	lsls r0, r4, #0x18
	asrs r2, r0, #0x18
	adds r3, r0, #0
	cmp r2, #1
	bgt _0803BE78
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #3
	ldr r5, [sp, #8]
	adds r1, r5, r1
	ldr r0, [r7]
	ldr r6, _0803BE74 @ =0xFFFFEA00
	adds r0, r0, r6
	b _0803BE8A
	.align 2, 0
_0803BE4C: .4byte gCurTask
_0803BE50: .4byte IWRAM_START + 0xA8
_0803BE54: .4byte IWRAM_START + 0x2DC
_0803BE58: .4byte IWRAM_START + 0x2DD
_0803BE5C: .4byte IWRAM_START + 0x2E0
_0803BE60: .4byte IWRAM_START + 0x300
_0803BE64: .4byte IWRAM_START + 0x301
_0803BE68: .4byte 0xFFFFFD00
_0803BE6C: .4byte IWRAM_START + 0x278
_0803BE70: .4byte IWRAM_START + 0x280
_0803BE74: .4byte 0xFFFFEA00
_0803BE78:
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #3
	ldr r0, [sp, #8]
	adds r1, r0, r1
	ldr r0, [r7]
	movs r2, #0xc0
	lsls r2, r2, #5
	adds r0, r0, r2
_0803BE8A:
	str r0, [r1]
	asrs r5, r3, #0x18
	lsls r0, r5, #1
	adds r6, r0, r5
	lsls r4, r6, #3
	ldr r0, [sp, #0xc]
	adds r3, r0, r4
	adds r2, r7, #0
	adds r2, #0x98
	ldr r0, [r7, #4]
	ldr r1, [r2]
	adds r0, r0, r1
	movs r1, #0xe8
	lsls r1, r1, #4
	adds r0, r0, r1
	str r0, [r3]
	mov sb, r2
	cmp r5, #1
	bgt _0803BEC4
	mov r2, sl
	adds r3, r2, r4
	movs r4, #8
	ldrsh r2, [r7, r4]
	adds r1, r5, #2
	lsls r0, r1, #2
	adds r0, r0, r1
	adds r2, r2, r0
	str r2, [r3]
	b _0803BED2
_0803BEC4:
	mov r5, sl
	adds r0, r5, r4
	movs r2, #8
	ldrsh r1, [r7, r2]
	lsls r2, r6, #4
	adds r1, r1, r2
	str r1, [r0]
_0803BED2:
	mov r3, r8
	lsls r2, r3, #0x18
	asrs r2, r2, #0x18
	lsls r1, r2, #1
	adds r4, r1, r2
	lsls r4, r4, #3
	movs r3, #0xe8
	lsls r3, r3, #1
	add r3, ip
	adds r3, r3, r4
	movs r0, #0x60
	rsbs r0, r0, #0
	subs r0, r0, r1
	mov r5, sb
	ldr r1, [r5]
	muls r0, r1, r0
	asrs r0, r0, #8
	str r0, [r3]
	movs r0, #0xea
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r4
	movs r1, #4
	str r1, [r0]
	movs r0, #0xec
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r4
	movs r1, #0x3c
	str r1, [r0]
	adds r2, #1
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	mov r8, r6
	asrs r2, r2, #0x18
	cmp r2, #3
	ble _0803BE2E
	movs r0, #0
	mov r8, r0
	mov r1, ip
	adds r1, #0x44
	str r1, [sp, #0x18]
	mov r2, ip
	adds r2, #0x48
	str r2, [sp, #0x1c]
	mov r3, ip
	adds r3, #0x4c
	str r3, [sp, #0x20]
	adds r4, r7, #0
	adds r4, #0x2c
	str r4, [sp, #0x40]
	adds r5, r7, #0
	adds r5, #0xc
	str r5, [sp, #0x3c]
	mov r6, ip
	adds r6, #0x50
	str r6, [sp, #0x24]
	mov r0, ip
	adds r0, #0x54
	str r0, [sp, #0x2c]
	adds r1, #0x14
	str r1, [sp, #0x30]
	adds r2, r7, #0
	adds r2, #0x74
	str r2, [sp, #0x34]
	adds r3, r7, #0
	adds r3, #0x54
	str r3, [sp, #0x28]
	adds r4, #0x5c
	str r4, [sp, #0x38]
	ldr r5, _0803C188 @ =gUnknown_08097AA4
	mov sl, r5
	ldr r6, _0803C18C @ =0x000003FF
	mov sb, r6
_0803BF66:
	mov r0, r8
	lsls r5, r0, #0x18
	asrs r5, r5, #0x18
	lsls r4, r5, #1
	adds r4, r4, r5
	lsls r4, r4, #3
	ldr r1, [sp, #0x18]
	adds r3, r1, r4
	ldr r0, [r3]
	ldr r2, _0803C190 @ =gUnknown_03005960
	ldr r1, [r2]
	adds r0, r0, r1
	str r0, [r3]
	ldr r6, [sp, #0x1c]
	adds r2, r6, r4
	ldr r0, [r2]
	ldr r6, _0803C190 @ =gUnknown_03005960
	ldr r1, [r6, #4]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [r3]
	lsls r0, r0, #8
	str r0, [r3]
	ldr r0, [r2]
	lsls r0, r0, #8
	str r0, [r2]
	ldr r0, [sp, #0x20]
	adds r0, r0, r4
	mov r8, r0
	movs r2, #8
	ldrsh r1, [r7, r2]
	str r1, [sp, #0x44]
	lsls r2, r5, #2
	ldr r3, [sp, #0x40]
	adds r6, r3, r2
	ldr r0, [r6]
	mov r1, sb
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [sp, #0x3c]
	adds r2, r0, r2
	ldr r0, [r2]
	muls r0, r1, r0
	asrs r0, r0, #0x12
	ldr r1, [sp, #0x44]
	adds r3, r1, r0
	mov r0, r8
	str r3, [r0]
	ldr r1, [sp, #0x24]
	adds r3, r1, r4
	ldr r0, [r6]
	mov r6, sb
	ands r0, r6
	lsls r0, r0, #1
	add r0, sl
	movs r6, #0
	ldrsh r1, [r0, r6]
	ldr r0, [r2]
	muls r0, r1, r0
	asrs r0, r0, #0x12
	str r0, [r3]
	ldr r0, [sp, #0x2c]
	adds r1, r0, r4
	movs r0, #3
	str r0, [r1]
	ldr r1, [sp, #0x30]
	adds r4, r1, r4
	movs r0, #0x1e
	str r0, [r4]
	adds r5, #1
	lsls r5, r5, #0x18
	lsrs r2, r5, #0x18
	mov r8, r2
	asrs r5, r5, #0x18
	cmp r5, #7
	ble _0803BF66
	ldr r3, [r7]
	str r3, [sp]
	ldr r4, [r7, #4]
	str r4, [sp, #4]
	movs r5, #0
	mov r8, r5
	movs r6, #0x82
	lsls r6, r6, #1
	add r6, ip
	str r6, [sp, #0x10]
	ldr r0, _0803C188 @ =gUnknown_08097AA4
	mov sl, r0
	ldr r1, _0803C18C @ =0x000003FF
	mov sb, r1
	movs r2, #0x84
	lsls r2, r2, #1
	add r2, ip
	str r2, [sp, #0x14]
_0803C02E:
	mov r3, r8
	lsls r4, r3, #0x18
	asrs r4, r4, #0x18
	lsls r5, r4, #1
	adds r5, r5, r4
	lsls r5, r5, #3
	ldr r6, [sp, #0x10]
	adds r2, r6, r5
	lsls r6, r4, #2
	ldr r0, [sp, #0x34]
	adds r0, r0, r6
	mov r8, r0
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r3, sb
	ands r0, r3
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [sp, #0x28]
	adds r6, r0, r6
	ldr r0, [r6]
	muls r0, r1, r0
	asrs r0, r0, #0xf
	ldr r1, [sp]
	adds r0, r1, r0
	str r0, [r2]
	ldr r3, [sp, #0x14]
	adds r2, r3, r5
	mov r1, r8
	ldr r0, [r1]
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r0, r0, r3
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r6]
	muls r0, r1, r0
	asrs r0, r0, #0xf
	ldr r1, [sp, #4]
	adds r0, r1, r0
	str r0, [r2]
	movs r3, #0x86
	lsls r3, r3, #1
	add r3, ip
	adds r3, r3, r5
	str r3, [sp, #0x44]
	movs r3, #8
	ldrsh r2, [r7, r3]
	mov r1, r8
	ldr r0, [r1]
	mov r3, sb
	ands r0, r3
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r6]
	muls r0, r1, r0
	asrs r0, r0, #0x12
	adds r2, r2, r0
	ldr r0, [sp, #0x44]
	str r2, [r0]
	movs r2, #0x88
	lsls r2, r2, #1
	add r2, ip
	adds r2, r2, r5
	mov r1, r8
	ldr r0, [r1]
	mov r3, sb
	ands r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r6]
	muls r0, r1, r0
	asrs r0, r0, #0x12
	str r0, [r2]
	movs r0, #0x8a
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r5
	movs r1, #3
	str r1, [r0]
	movs r0, #0x8c
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r5
	movs r1, #0x1e
	str r1, [r0]
	adds r4, #1
	lsls r4, r4, #0x18
	lsrs r5, r4, #0x18
	mov r8, r5
	asrs r4, r4, #0x18
	cmp r4, #7
	ble _0803C02E
	movs r6, #0x87
	lsls r6, r6, #3
	adds r3, r7, r6
	ldr r1, [sp, #0x38]
	ldr r0, [r1]
	ldr r2, _0803C18C @ =0x000003FF
	ands r0, r2
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #1
	ldr r5, _0803C188 @ =gUnknown_08097AA4
	adds r0, r0, r5
	movs r6, #0
	ldrsh r1, [r0, r6]
	ldr r0, [r7, #0x68]
	muls r0, r1, r0
	asrs r0, r0, #0xf
	ldr r1, [sp]
	adds r0, r1, r0
	mov r4, ip
	str r0, [r4, #0x1c]
	ldr r5, [sp, #0x38]
	ldr r0, [r5]
	ands r0, r2
	lsls r0, r0, #1
	ldr r6, _0803C188 @ =gUnknown_08097AA4
	adds r0, r0, r6
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r7, #0x68]
	muls r0, r1, r0
	asrs r0, r0, #0xf
	ldr r4, [sp, #4]
	adds r0, r4, r0
	mov r5, ip
	str r0, [r5, #0x20]
	movs r6, #8
	ldrsh r0, [r7, r6]
	str r0, [r5, #0x24]
	movs r1, #0xa
	ldrsh r0, [r7, r1]
	ldr r2, _0803C194 @ =0xFFFFF800
	adds r0, r0, r2
	str r0, [r5, #0x28]
	ldrh r1, [r3]
	movs r0, #0x89
	lsls r0, r0, #2
	add r0, ip
	movs r2, #0
	strh r1, [r0]
	movs r0, #1
	str r0, [r5, #0x2c]
	str r2, [r5, #0x30]
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803C188: .4byte gUnknown_08097AA4
_0803C18C: .4byte 0x000003FF
_0803C190: .4byte gUnknown_03005960
_0803C194: .4byte 0xFFFFF800

	thumb_func_start sub_803C198
sub_803C198: @ 0x0803C198
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	mov sb, r0
	mov r7, sb
	adds r7, #0xb4
	mov r5, sb
	adds r5, #0xa8
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	movs r1, #0x3c
	bl Div
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, [r5]
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #2
	subs r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #7
	ands r1, r0
	cmp r1, #0
	bne _0803C256
	adds r0, r4, #0
	movs r1, #6
	bl Div
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r1, r4, r1
	mov r8, r1
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	ldr r2, _0803C30C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	str r0, [sp, #0x14]
	ldr r0, [r7, #0x10]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	mov r1, sp
	movs r0, #0x40
	strh r0, [r1, #0x1c]
	mov r3, sp
	ldr r2, _0803C310 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803C314 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0803C318 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	ldr r1, _0803C31C @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	mov r1, sp
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r2, _0803C320 @ =gUnknown_080D79D0
	mov r3, r8
	lsls r1, r3, #1
	add r1, r8
	lsls r1, r1, #2
	adds r0, r1, r2
	ldr r0, [r0]
	lsls r0, r0, #5
	ldr r3, _0803C324 @ =0x06010000
	adds r0, r0, r3
	str r0, [sp]
	mov r3, sp
	adds r0, r2, #4
	adds r0, r1, r0
	ldr r0, [r0]
	strh r0, [r3, #8]
	adds r2, #8
	adds r1, r1, r2
	ldr r0, [r1]
	strh r0, [r3, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	ldr r1, _0803C328 @ =0x000002DD
	add r1, sb
	mov r0, sp
	bl sub_8039B54
_0803C256:
	ldr r2, _0803C310 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803C314 @ =0x00196225
	muls r1, r0, r1
	ldr r0, _0803C318 @ =0x3C6EF35F
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, [r5]
	adds r0, r0, r1
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _0803C278
	movs r0, #0x90
	bl m4aSongNumStart
_0803C278:
	movs r6, #0xb8
	lsls r6, r6, #2
	add r6, sb
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	ldr r2, _0803C30C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #0x10]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	mov r1, sb
	adds r1, #0xb3
	str r1, [sp, #0x20]
	mov r2, sb
	adds r2, #0xf8
	str r2, [sp, #0x24]
	mov r3, sb
	adds r3, #0xfc
	str r3, [sp, #0x28]
	movs r0, #0x84
	lsls r0, r0, #1
	add r0, sb
	str r0, [sp, #0x2c]
	mov r5, sp
	movs r2, #0
	movs r1, #1
	mov r8, r1
	ldr r3, _0803C32C @ =0x06012980
	mov sl, r3
_0803C2C6:
	adds r0, r4, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3c
	bne _0803C338
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	str r0, [sp, #0x14]
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	str r0, [sp, #0x18]
	strh r2, [r5, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r5, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r5, #0xe]
	mov r3, sl
	str r3, [sp]
	ldr r0, _0803C330 @ =0x0000026B
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	ldr r3, _0803C334 @ =0x00000229
	adds r1, r7, r3
	str r2, [sp, #0x30]
	bl sub_8039B54
	movs r4, #0
	ldr r2, [sp, #0x30]
	b _0803C344
	.align 2, 0
_0803C30C: .4byte gUnknown_03005960
_0803C310: .4byte gUnknown_030053B8
_0803C314: .4byte 0x00196225
_0803C318: .4byte 0x3C6EF35F
_0803C31C: .4byte 0x000003FF
_0803C320: .4byte gUnknown_080D79D0
_0803C324: .4byte 0x06010000
_0803C328: .4byte 0x000002DD
_0803C32C: .4byte 0x06012980
_0803C330: .4byte 0x0000026B
_0803C334: .4byte 0x00000229
_0803C338:
	cmp r4, #0x3c
	bls _0803C344
	adds r0, r4, #0
	subs r0, #0x3c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0803C344:
	adds r0, r4, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3c
	bne _0803C398
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	adds r0, #0xa
	str r0, [sp, #0x14]
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	adds r0, #0x10
	str r0, [sp, #0x18]
	strh r2, [r5, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r5, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r5, #0xe]
	mov r3, sl
	str r3, [sp]
	ldr r0, _0803C390 @ =0x0000026B
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	ldr r3, _0803C394 @ =0x00000229
	adds r1, r7, r3
	str r2, [sp, #0x30]
	bl sub_8039B54
	movs r4, #0
	ldr r2, [sp, #0x30]
	b _0803C3A4
	.align 2, 0
_0803C390: .4byte 0x0000026B
_0803C394: .4byte 0x00000229
_0803C398:
	cmp r4, #0x3c
	bls _0803C3A4
	adds r0, r4, #0
	subs r0, #0x3c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0803C3A4:
	adds r0, r4, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3c
	bne _0803C3F8
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	subs r0, #0xa
	str r0, [sp, #0x14]
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	adds r0, #8
	str r0, [sp, #0x18]
	strh r2, [r5, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r5, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r5, #0xe]
	mov r3, sl
	str r3, [sp]
	ldr r0, _0803C3F0 @ =0x0000026B
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	ldr r3, _0803C3F4 @ =0x00000229
	adds r1, r7, r3
	str r2, [sp, #0x30]
	bl sub_8039B54
	movs r4, #0
	ldr r2, [sp, #0x30]
	b _0803C404
	.align 2, 0
_0803C3F0: .4byte 0x0000026B
_0803C3F4: .4byte 0x00000229
_0803C3F8:
	cmp r4, #0x3c
	bls _0803C404
	adds r0, r4, #0
	subs r0, #0x3c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0803C404:
	adds r0, r4, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3c
	bne _0803C458
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	adds r0, #0xa
	str r0, [sp, #0x14]
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	subs r0, #0x10
	str r0, [sp, #0x18]
	strh r2, [r5, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r5, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r5, #0xe]
	mov r3, sl
	str r3, [sp]
	ldr r0, _0803C450 @ =0x0000026B
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	ldr r3, _0803C454 @ =0x00000229
	adds r1, r7, r3
	str r2, [sp, #0x30]
	bl sub_8039B54
	movs r4, #0
	ldr r2, [sp, #0x30]
	b _0803C464
	.align 2, 0
_0803C450: .4byte 0x0000026B
_0803C454: .4byte 0x00000229
_0803C458:
	cmp r4, #0x3c
	bls _0803C464
	adds r0, r4, #0
	subs r0, #0x3c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0803C464:
	adds r0, r4, #0
	adds r0, #0xf
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3c
	bne _0803C4B8
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	subs r0, #0xa
	str r0, [sp, #0x14]
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	subs r0, #8
	str r0, [sp, #0x18]
	strh r2, [r5, #0x1c]
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r5, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #2
	strh r1, [r5, #0xe]
	mov r3, sl
	str r3, [sp]
	ldr r0, _0803C4B0 @ =0x0000026B
	strh r0, [r5, #8]
	strh r2, [r5, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	ldr r3, _0803C4B4 @ =0x00000229
	adds r1, r7, r3
	str r2, [sp, #0x30]
	bl sub_8039B54
	movs r4, #0
	ldr r2, [sp, #0x30]
	b _0803C4C4
	.align 2, 0
_0803C4B0: .4byte 0x0000026B
_0803C4B4: .4byte 0x00000229
_0803C4B8:
	cmp r4, #0x3c
	bls _0803C4C4
	adds r0, r4, #0
	subs r0, #0x3c
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0803C4C4:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	mov r1, r8
	cmp r1, #0
	blt _0803C4D2
	b _0803C2C6
_0803C4D2:
	movs r2, #0x16
	ldrsh r0, [r6, r2]
	cmp r0, #0x31
	bgt _0803C4F6
	ldr r3, [sp, #0x20]
	ldrb r0, [r3]
	cmp r0, #0
	bne _0803C4F6
	movs r0, #1
	strb r0, [r3]
	movs r1, #0x16
	ldrsh r0, [r6, r1]
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_8039FA4
_0803C4F6:
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	ldr r4, _0803C7C0 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	movs r1, #0xc8
	rsbs r1, r1, #0
	cmp r0, r1
	bge _0803C528
	movs r1, #0
	strh r1, [r7]
	strh r1, [r7, #4]
	movs r0, #2
	strh r0, [r7, #2]
	strh r1, [r7, #6]
	movs r0, #0xbf
	strh r0, [r7, #8]
	strh r1, [r7, #0xa]
	mov r0, sb
	adds r0, #0xa8
	str r1, [r0]
	ldr r0, _0803C7C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803C7C8 @ =sub_803AA40
	str r0, [r1, #8]
_0803C528:
	ldr r3, [sp, #0x20]
	ldrb r0, [r3]
	cmp r0, #0
	bne _0803C556
	movs r6, #0xde
	lsls r6, r6, #2
	add r6, sb
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #0x10]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0803C556:
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0803C572
	movs r2, #0xec
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C5A4
_0803C572:
	movs r6, #0xea
	lsls r6, r6, #2
	add r6, sb
	movs r3, #0xe2
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0803C5A4:
	movs r2, #0xf6
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _0803C5C0
	movs r3, #0xf8
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C5EE
_0803C5C0:
	movs r6, #0xea
	lsls r6, r6, #2
	add r6, sb
	movs r1, #0xee
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _0803C7C0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r3, #0xf0
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_80051E8
_0803C5EE:
	movs r1, #0x81
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0803C60A
	movs r2, #0x82
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C63E
_0803C60A:
	movs r6, #0xf6
	lsls r6, r6, #2
	add r6, sb
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _0803C7C0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r1, #0xfc
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0803C63E:
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _0803C65A
	movs r3, #0x88
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C688
_0803C65A:
	movs r6, #0xf6
	lsls r6, r6, #2
	add r6, sb
	movs r1, #0x83
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _0803C7C0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_80051E8
_0803C688:
	movs r6, #0xc6
	lsls r6, r6, #2
	add r6, sb
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	movs r0, #6
	mov r8, r0
	ldr r1, _0803C7C0 @ =gUnknown_03005960
	mov sl, r1
	ldr r2, [sp, #0x2c]
	adds r2, #0x90
	ldr r5, [sp, #0x28]
	adds r5, #0x90
	ldr r4, [sp, #0x24]
	adds r4, #0x90
	movs r3, #0x90
_0803C6AA:
	ldr r0, [r4]
	asrs r0, r0, #8
	str r0, [sp, #0x38]
	mov r0, sl
	ldr r0, [r0]
	ldr r1, [sp, #0x38]
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	ldr r0, [r5]
	asrs r0, r0, #8
	str r0, [sp, #0x38]
	mov r0, sl
	ldr r0, [r0, #4]
	ldr r1, [sp, #0x38]
	subs r1, r1, r0
	strh r1, [r6, #0x18]
	ldr r0, [r2]
	cmp r0, #0
	bne _0803C6EA
	adds r0, r7, #0
	adds r0, #0x58
	adds r0, r0, r3
	ldr r0, [r0]
	cmp r0, #0
	beq _0803C6F8
	mov r0, sb
	adds r0, #0xa8
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C6F8
_0803C6EA:
	adds r0, r6, #0
	str r2, [sp, #0x30]
	str r3, [sp, #0x34]
	bl sub_80051E8
	ldr r3, [sp, #0x34]
	ldr r2, [sp, #0x30]
_0803C6F8:
	subs r2, #0x18
	subs r5, #0x18
	subs r4, #0x18
	subs r3, #0x18
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	mov r1, r8
	cmp r1, #0
	bge _0803C6AA
	movs r6, #0xc6
	lsls r6, r6, #2
	add r6, sb
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	ldr r5, _0803C7C0 @ =gUnknown_03005960
	movs r4, #0
	movs r2, #5
	mov r8, r2
_0803C720:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r0, r0, r4
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r5]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r4
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r5, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	movs r2, #0x8a
	lsls r2, r2, #1
	adds r0, r7, r2
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0803C76C
	adds r3, #0x14
	adds r0, r7, r3
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _0803C772
	mov r0, sb
	adds r0, #0xa8
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803C772
_0803C76C:
	adds r0, r6, #0
	bl sub_80051E8
_0803C772:
	adds r4, #0x18
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	mov r1, r8
	cmp r1, #0
	bge _0803C720
	movs r6, #0x81
	lsls r6, r6, #3
	add r6, sb
	movs r3, #0x87
	lsls r3, r3, #3
	add r3, sb
	ldr r0, [r7, #0x1c]
	asrs r0, r0, #8
	ldr r2, _0803C7C0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #0x20]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	ldr r2, _0803C7CC @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803C7D0 @ =0x00002060
	orrs r0, r1
	str r0, [r6, #0x10]
	ldr r0, [r7, #0x30]
	cmp r0, #0
	beq _0803C7D4
	movs r0, #2
	str r0, [r7, #0x30]
	b _0803C7FC
	.align 2, 0
_0803C7C0: .4byte gUnknown_03005960
_0803C7C4: .4byte gCurTask
_0803C7C8: .4byte sub_803AA40
_0803C7CC: .4byte gUnknown_030054B8
_0803C7D0: .4byte 0x00002060
_0803C7D4:
	movs r2, #0x89
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r0, [r0]
	strh r0, [r3]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #2]
	strh r0, [r3, #4]
	ldrh r0, [r6, #0x16]
	strh r0, [r3, #6]
	ldrh r0, [r6, #0x18]
	strh r0, [r3, #8]
	adds r0, r6, #0
	adds r1, r3, #0
	bl sub_8004860
	adds r0, r6, #0
	bl sub_80051E8
_0803C7FC:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_803C80C
sub_803C80C: @ 0x0803C80C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0803C8D4 @ =gUnknown_03005B4C
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r0, _0803C8D8 @ =IWRAM_START + 0xB4
	adds r0, r0, r2
	mov ip, r0
	ldr r0, [r0, #0xc]
	adds r0, r0, r4
	mov r3, ip
	str r0, [r3, #0xc]
	ldr r0, [r1]
	adds r0, r0, r4
	str r0, [r1]
	ldr r0, [r3, #0x10]
	adds r0, r0, r5
	str r0, [r3, #0x10]
	ldr r0, [r1, #4]
	adds r0, r0, r5
	str r0, [r1, #4]
	movs r3, #0
	ldr r0, _0803C8DC @ =IWRAM_START + 0x278
	adds r7, r2, r0
	ldr r1, _0803C8E0 @ =IWRAM_START + 0x27C
	adds r6, r2, r1
_0803C848:
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #3
	adds r2, r7, r1
	ldr r0, [r2]
	adds r0, r0, r4
	str r0, [r2]
	adds r1, r6, r1
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _0803C848
	movs r3, #0
	mov r7, ip
	adds r7, #0x44
	mov r6, ip
	adds r6, #0x48
_0803C872:
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #3
	adds r2, r7, r1
	ldr r0, [r2]
	adds r0, r0, r4
	str r0, [r2]
	adds r1, r6, r1
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _0803C872
	movs r3, #0
	movs r7, #0x82
	lsls r7, r7, #1
	add r7, ip
	movs r6, #0x84
	lsls r6, r6, #1
	add r6, ip
_0803C8A0:
	lsls r1, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #3
	adds r2, r7, r1
	ldr r0, [r2]
	adds r0, r0, r4
	str r0, [r2]
	adds r1, r6, r1
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _0803C8A0
	mov r3, ip
	ldr r0, [r3, #0x1c]
	adds r0, r0, r4
	str r0, [r3, #0x1c]
	ldr r0, [r3, #0x20]
	adds r0, r0, r5
	str r0, [r3, #0x20]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803C8D4: .4byte gUnknown_03005B4C
_0803C8D8: .4byte IWRAM_START + 0xB4
_0803C8DC: .4byte IWRAM_START + 0x278
_0803C8E0: .4byte IWRAM_START + 0x27C

	thumb_func_start sub_803C8E4
sub_803C8E4: @ 0x0803C8E4
	push {r4, lr}
	ldrh r4, [r0, #6]
	ldr r1, _0803C958 @ =IWRAM_START + 0x2E4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C95C @ =IWRAM_START + 0x31C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C960 @ =IWRAM_START + 0x34C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C964 @ =IWRAM_START + 0x37C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C968 @ =IWRAM_START + 0x3AC
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C96C @ =IWRAM_START + 0x3DC
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C970 @ =gUnknown_0300040C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0803C974 @ =gUnknown_03000448
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _0803C93C
	bl sub_8007CF0
_0803C93C:
	ldr r1, _0803C978 @ =gUnknown_03000478
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _0803C94A
	bl sub_8007CF0
_0803C94A:
	ldr r1, _0803C97C @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803C958: .4byte IWRAM_START + 0x2E4
_0803C95C: .4byte IWRAM_START + 0x31C
_0803C960: .4byte IWRAM_START + 0x34C
_0803C964: .4byte IWRAM_START + 0x37C
_0803C968: .4byte IWRAM_START + 0x3AC
_0803C96C: .4byte IWRAM_START + 0x3DC
_0803C970: .4byte gUnknown_0300040C
_0803C974: .4byte gUnknown_03000448
_0803C978: .4byte gUnknown_03000478
_0803C97C: .4byte gUnknown_03005B4C

	thumb_func_start sub_803C980
sub_803C980: @ 0x0803C980
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803CA04 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r6, r4
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r2, #0xa
	ldrsh r1, [r4, r2]
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldr r5, _0803CA08 @ =gUnknown_080D7AA8
	bl sub_803CA40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r5
	ldr r0, [r0]
	bl _call_via_r0
	ldr r1, _0803CA0C @ =gUnknown_080D7AB0
	ldr r2, _0803CA10 @ =IWRAM_START + 0xA0
	adds r0, r6, r2
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_803CB18
	adds r0, r4, #0
	bl sub_803A8E4
	adds r0, r4, #0
	bl sub_803B7B0
	adds r0, r4, #0
	bl sub_803AC2C
	adds r0, r4, #0
	bl sub_803CC3C
	ldr r0, _0803CA14 @ =IWRAM_START + 0xB0
	adds r6, r6, r0
	ldrb r0, [r6]
	cmp r0, #0
	bne _0803C9FE
	bl sub_803BDB8
	ldr r1, [r7]
	ldr r0, _0803CA18 @ =sub_803CA1C
	str r0, [r1, #8]
	bl sub_802A018
_0803C9FE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803CA04: .4byte gCurTask
_0803CA08: .4byte gUnknown_080D7AA8
_0803CA0C: .4byte gUnknown_080D7AB0
_0803CA10: .4byte IWRAM_START + 0xA0
_0803CA14: .4byte IWRAM_START + 0xB0
_0803CA18: .4byte sub_803CA1C

	thumb_func_start sub_803CA1C
sub_803CA1C: @ 0x0803CA1C
	push {r4, lr}
	ldr r0, _0803CA3C @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_803B84C
	adds r0, r4, #0
	bl sub_803C198
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803CA3C: .4byte gCurTask

	thumb_func_start sub_803CA40
sub_803CA40: @ 0x0803CA40
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0803CAA8 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r0, [r4]
	movs r1, #0xc0
	lsls r1, r1, #5
	adds r2, r0, r1
	ldr r0, _0803CAAC @ =IWRAM_START + 0x9C
	adds r1, r5, r0
	ldr r0, [r4, #4]
	ldr r1, [r1]
	adds r0, r0, r1
	movs r1, #0xe8
	lsls r1, r1, #4
	adds r0, r0, r1
	asrs r0, r0, #8
	asrs r1, r2, #8
	ldr r6, _0803CAB0 @ =sub_801EC3C
	str r6, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	ble _0803CABC
	ldr r0, [r4]
	ldr r1, _0803CAB4 @ =0xFFFFEA00
	adds r2, r0, r1
	ldr r0, _0803CAB8 @ =IWRAM_START + 0x98
	adds r1, r5, r0
	ldr r0, [r4, #4]
	ldr r1, [r1]
	adds r0, r0, r1
	movs r1, #0xe8
	lsls r1, r1, #4
	adds r0, r0, r1
	asrs r0, r0, #8
	asrs r1, r2, #8
	str r6, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	ble _0803CABC
	movs r0, #0
	b _0803CABE
	.align 2, 0
_0803CAA8: .4byte gCurTask
_0803CAAC: .4byte IWRAM_START + 0x9C
_0803CAB0: .4byte sub_801EC3C
_0803CAB4: .4byte 0xFFFFEA00
_0803CAB8: .4byte IWRAM_START + 0x98
_0803CABC:
	movs r0, #1
_0803CABE:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_803CAC8
sub_803CAC8: @ 0x0803CAC8
	push {lr}
	ldr r0, _0803CB0C @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldrh r0, [r1, #0xa]
	adds r0, #0x40
	strh r0, [r1, #0xa]
	ldr r0, _0803CB10 @ =IWRAM_START + 0x9C
	adds r3, r2, r0
	ldr r0, [r3]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, _0803CB14 @ =IWRAM_START + 0x98
	adds r2, r2, r0
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [r3]
	movs r1, #0xbc
	lsls r1, r1, #5
	cmp r0, r1
	ble _0803CB00
	str r1, [r3]
_0803CB00:
	ldr r0, [r2]
	cmp r0, r1
	ble _0803CB08
	str r1, [r2]
_0803CB08:
	pop {r0}
	bx r0
	.align 2, 0
_0803CB0C: .4byte gCurTask
_0803CB10: .4byte IWRAM_START + 0x9C
_0803CB14: .4byte IWRAM_START + 0x98

	thumb_func_start sub_803CB18
sub_803CB18: @ 0x0803CB18
	push {r4, r5, r6, r7, lr}
	ldr r1, [r0, #0x4c]
	adds r1, #8
	ldr r2, _0803CB74 @ =0x000003FF
	ands r1, r2
	str r1, [r0, #0x4c]
	ldr r2, _0803CB78 @ =gUnknown_08097AA4
	lsls r1, r1, #1
	adds r1, r1, r2
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x18
	str r1, [r0, #0x50]
	str r1, [r0, #0x2c]
	movs r4, #1
	adds r5, r0, #0
	adds r5, #0x2c
	ldr r0, _0803CB7C @ =gUnknown_080D7A28
	mov ip, r0
	ldr r6, _0803CB80 @ =0xFFFFF400
_0803CB40:
	lsls r3, r4, #2
	adds r3, r5, r3
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r1, [r0]
	ldr r2, [r3]
	subs r1, r1, r2
	lsls r0, r4, #1
	add r0, ip
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r1, r0
	adds r0, r0, r6
	asrs r0, r0, #8
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0803CB40
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803CB74: .4byte 0x000003FF
_0803CB78: .4byte gUnknown_08097AA4
_0803CB7C: .4byte gUnknown_080D7A28
_0803CB80: .4byte 0xFFFFF400

	thumb_func_start sub_803CB84
sub_803CB84: @ 0x0803CB84
	push {lr}
	adds r1, r0, #0
	adds r2, r1, #0
	adds r2, #0xac
	ldr r0, [r2]
	subs r0, #1
	str r0, [r2]
	cmp r0, #0
	bne _0803CBA0
	movs r0, #0x3c
	str r0, [r2]
	adds r1, #0xa0
	movs r0, #3
	str r0, [r1]
_0803CBA0:
	pop {r0}
	bx r0

	thumb_func_start sub_803CBA4
sub_803CBA4: @ 0x0803CBA4
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0xac
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	cmp r0, #0
	bne _0803CBF6
	ldr r2, _0803CBD8 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803CBDC @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0803CBE0 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0803CBE4
	movs r0, #0x44
	str r0, [r4]
	adds r1, r5, #0
	adds r1, #0xa0
	movs r0, #5
	b _0803CBF4
	.align 2, 0
_0803CBD8: .4byte gUnknown_030053B8
_0803CBDC: .4byte 0x00196225
_0803CBE0: .4byte 0x3C6EF35F
_0803CBE4:
	movs r0, #0xef
	bl m4aSongNumStart
	movs r0, #0x3c
	str r0, [r4]
	adds r1, r5, #0
	adds r1, #0xa0
	movs r0, #6
_0803CBF4:
	str r0, [r1]
_0803CBF6:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_803CBFC
sub_803CBFC: @ 0x0803CBFC
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xb2
	movs r0, #0x1e
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0xb1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803CC2E
	movs r0, #0xde
	lsls r0, r0, #2
	adds r1, r2, r0
	ldr r0, _0803CC34 @ =0x00000275
	strh r0, [r1, #0xa]
	movs r0, #0xe6
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _0803CC38 @ =0x00000399
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_0803CC2E:
	pop {r0}
	bx r0
	.align 2, 0
_0803CC34: .4byte 0x00000275
_0803CC38: .4byte 0x00000399

	thumb_func_start sub_803CC3C
sub_803CC3C: @ 0x0803CC3C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r2, r0, #0
	adds r2, #0xb1
	ldrb r0, [r2]
	cmp r0, #0
	beq _0803CC90
	movs r4, #0
	ldr r0, _0803CC9C @ =gFlags
	mov r8, r0
	ldr r1, _0803CCA0 @ =gObjPalette
	mov ip, r1
	ldr r7, _0803CCA4 @ =gUnknown_080D7AD0
	adds r5, r2, #0
	movs r6, #4
_0803CC5C:
	adds r3, r4, #0
	adds r3, #0x80
	lsls r3, r3, #1
	add r3, ip
	lsls r1, r4, #1
	ldrb r2, [r5]
	adds r0, r6, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1a
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r7
	ldrh r0, [r1]
	strh r0, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _0803CC5C
	mov r1, r8
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, r8
	str r0, [r1]
_0803CC90:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803CC9C: .4byte gFlags
_0803CCA0: .4byte gObjPalette
_0803CCA4: .4byte gUnknown_080D7AD0

	thumb_func_start sub_803CCA8
sub_803CCA8: @ 0x0803CCA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	ldr r2, _0803CD0C @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _0803CD10 @ =gUnknown_030053B8
	ldr r0, _0803CD14 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _0803CD18 @ =sub_803E43C
	movs r1, #0xda
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0803CD1C @ =sub_803E768
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	str r0, [sp, #4]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov sl, r0
	ldr r0, _0803CD20 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803CD30
	ldr r0, _0803CD24 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _0803CD30
	ldr r0, _0803CD28 @ =IWRAM_START + 0x71
	adds r1, r2, r0
	movs r0, #6
	strb r0, [r1]
	ldr r0, _0803CD2C @ =IWRAM_START + 0x70
	adds r1, r2, r0
	movs r0, #2
	b _0803CD3C
	.align 2, 0
_0803CD0C: .4byte gUnknown_030059E0
_0803CD10: .4byte gUnknown_030053B8
_0803CD14: .4byte gUnknown_03005590
_0803CD18: .4byte sub_803E43C
_0803CD1C: .4byte sub_803E768
_0803CD20: .4byte gUnknown_030054EC
_0803CD24: .4byte gUnknown_030054CC
_0803CD28: .4byte IWRAM_START + 0x71
_0803CD2C: .4byte IWRAM_START + 0x70
_0803CD30:
	mov r1, sl
	adds r1, #0x71
	movs r0, #8
	strb r0, [r1]
	subs r1, #1
	movs r0, #4
_0803CD3C:
	strb r0, [r1]
	ldr r2, _0803CD74 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	bne _0803CD78
	mov r1, sl
	adds r1, #0x70
	ldrb r0, [r1]
	lsrs r0, r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	lsrs r0, r0, #1
	strb r0, [r1]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	bne _0803CD78
	movs r0, #0xc5
	lsls r0, r0, #0xd
	mov r1, sl
	str r0, [r1]
	movs r0, #0xaa
	lsls r0, r0, #8
	str r0, [r1, #4]
	b _0803CD86
	.align 2, 0
_0803CD74: .4byte gUnknown_030055B4
_0803CD78:
	movs r0, #0xf0
	lsls r0, r0, #9
	mov r2, sl
	str r0, [r2]
	movs r0, #0xaa
	lsls r0, r0, #8
	str r0, [r2, #4]
_0803CD86:
	movs r2, #0
	movs r3, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	mov r1, sl
	strh r0, [r1, #8]
	strh r3, [r1, #0xa]
	str r3, [r1, #0x54]
	str r3, [r1, #0x58]
	adds r1, #0x5c
	movs r0, #0x80
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1]
	mov r0, sl
	adds r0, #0x60
	strh r3, [r0]
	mov r0, sl
	str r3, [r0, #0x64]
	movs r0, #0x96
	mov r1, sl
	str r0, [r1, #0x68]
	mov r0, sl
	adds r0, #0x72
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r1, #0x77
	movs r0, #1
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x78
	strb r2, [r0]
	mov r2, sl
	str r3, [r2, #0x7c]
	mov r7, sl
	adds r7, #0x80
	movs r0, #0xa0
	add r0, sl
	mov r8, r0
	adds r2, #0xa1
	str r2, [sp, #0x28]
	adds r1, #0x2b
	str r1, [sp, #0x30]
	adds r2, #4
	str r2, [sp, #0x3c]
	mov r6, sl
	adds r6, #0xb8
	mov r0, sl
	adds r0, #0xd8
	str r0, [sp, #0x54]
	adds r1, #0x37
	str r1, [sp, #0x58]
	adds r2, #0x35
	str r2, [sp, #0x5c]
	adds r0, #5
	str r0, [sp, #0x60]
	movs r1, #0xe8
	add r1, sl
	mov sb, r1
	movs r2, #0x84
	lsls r2, r2, #1
	add r2, sl
	str r2, [sp, #8]
	ldr r0, _0803D04C @ =0x00000109
	add r0, sl
	str r0, [sp, #0xc]
	movs r1, #0x85
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x10]
	ldr r2, _0803D050 @ =0x0000010D
	add r2, sl
	str r2, [sp, #0x14]
	movs r0, #0x9c
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0x2c]
	ldr r1, _0803D054 @ =0x00000139
	add r1, sl
	str r1, [sp, #0x34]
	movs r2, #0x9d
	lsls r2, r2, #1
	add r2, sl
	str r2, [sp, #0x38]
	ldr r0, _0803D058 @ =0x0000013D
	add r0, sl
	str r0, [sp, #0x40]
	movs r1, #0xb4
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x44]
	ldr r2, _0803D05C @ =0x00000169
	add r2, sl
	str r2, [sp, #0x48]
	movs r0, #0xb5
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0x4c]
	ldr r1, _0803D060 @ =0x0000016D
	add r1, sl
	str r1, [sp, #0x50]
	movs r2, #0xd2
	lsls r2, r2, #1
	add r2, sl
	str r2, [sp, #0x18]
	ldr r0, _0803D064 @ =0x000001A5
	add r0, sl
	str r0, [sp, #0x1c]
	movs r1, #0xd3
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x20]
	ldr r2, _0803D068 @ =0x000001A9
	add r2, sl
	str r2, [sp, #0x24]
	movs r2, #0xaa
	lsls r2, r2, #8
	mov r1, sl
	adds r1, #0x10
	mov r0, sl
	adds r0, #0xc
_0803CE8A:
	str r2, [r0]
	str r2, [r1]
	adds r1, #8
	adds r0, #8
	adds r3, #1
	cmp r3, #2
	bls _0803CE8A
	movs r0, #0xef
	bl sub_8007C10
	adds r5, r0, #0
	mov r0, sl
	str r5, [r0, #0x6c]
	movs r1, #0xb4
	lsls r1, r1, #4
	adds r5, r5, r1
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x63
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0803D06C @ =0x00000281
	strh r0, [r7, #0xa]
	movs r0, #0
	mov r2, r8
	strb r0, [r2]
	movs r0, #0xb8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0xff
	ldr r1, [sp, #0x28]
	strb r0, [r1]
	movs r2, #0x10
	mov r8, r2
	mov r1, r8
	ldr r0, [sp, #0x30]
	strb r1, [r0]
	movs r0, #0
	ldr r2, [sp, #0x3c]
	strb r0, [r2]
	movs r3, #1
	rsbs r3, r3, #0
	str r3, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	mov ip, r1
	str r1, [r7, #0x10]
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	str r5, [r6, #4]
	movs r2, #0xb4
	lsls r2, r2, #3
	adds r5, r5, r2
	ldr r0, _0803D070 @ =0x00000282
	strh r0, [r6, #0xa]
	movs r1, #0
	ldr r0, [sp, #0x54]
	strb r1, [r0]
	adds r2, #0xe0
	strh r2, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r0, r3, #0
	ldr r1, [sp, #0x58]
	strb r0, [r1]
	mov r0, r8
	ldr r2, [sp, #0x5c]
	strb r0, [r2]
	movs r2, #0
	ldr r1, [sp, #0x60]
	strb r2, [r1]
	str r3, [r6, #0x28]
	mov r0, ip
	str r0, [r6, #0x10]
	mov r1, sb
	strh r4, [r1, #0x16]
	strh r4, [r1, #0x18]
	str r5, [r1, #4]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r5, r5, r1
	movs r0, #0xa1
	lsls r0, r0, #2
	mov r2, sb
	strh r0, [r2, #0xa]
	movs r2, #0
	ldr r0, [sp, #8]
	strb r2, [r0]
	movs r0, #0xb0
	lsls r0, r0, #3
	mov r2, sb
	strh r0, [r2, #0x1a]
	strh r4, [r2, #8]
	strh r4, [r2, #0x14]
	strh r4, [r2, #0x1c]
	adds r0, r3, #0
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	mov r2, r8
	ldr r0, [sp, #0x10]
	strb r2, [r0]
	movs r2, #0
	ldr r0, [sp, #0x14]
	strb r2, [r0]
	mov r0, sb
	str r3, [r0, #0x28]
	mov r2, ip
	str r2, [r0, #0x10]
	movs r7, #0x8c
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r5, [r7, #4]
	adds r5, r5, r1
	ldr r0, _0803D074 @ =0x00000285
	strh r0, [r7, #0xa]
	movs r1, #0
	ldr r0, [sp, #0x2c]
	strb r1, [r0]
	movs r0, #0xd8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r3, #0
	ldr r2, [sp, #0x34]
	strb r0, [r2]
	mov r1, r8
	ldr r0, [sp, #0x38]
	strb r1, [r0]
	movs r0, #0
	ldr r2, [sp, #0x40]
	strb r0, [r2]
	str r3, [r7, #0x28]
	mov r1, ip
	str r1, [r7, #0x10]
	movs r7, #0xa4
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r5, [r7, #4]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r5, r5, r2
	ldr r0, _0803D078 @ =0x00000286
	strh r0, [r7, #0xa]
	movs r1, #0
	ldr r0, [sp, #0x44]
	strb r1, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r3, #0
	ldr r2, [sp, #0x48]
	strb r0, [r2]
	mov r1, r8
	ldr r0, [sp, #0x4c]
	strb r1, [r0]
	movs r0, #0
	ldr r2, [sp, #0x50]
	strb r0, [r2]
	str r3, [r7, #0x28]
	ldr r2, _0803D07C @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803D080 @ =0x00002060
	orrs r0, r1
	str r0, [r7, #0x10]
	movs r7, #0xc2
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r5, [r7, #4]
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	movs r2, #0
	ldr r1, [sp, #0x18]
	strb r2, [r1]
	movs r0, #0xd0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r3, #0
	ldr r1, [sp, #0x1c]
	strb r0, [r1]
	mov r0, r8
	ldr r2, [sp, #0x20]
	strb r0, [r2]
	movs r2, #0
	ldr r1, [sp, #0x24]
	strb r2, [r1]
	str r3, [r7, #0x28]
	mov r0, ip
	str r0, [r7, #0x10]
	ldr r0, _0803D084 @ =gUnknown_03005B4C
	ldr r1, [sp, #4]
	str r1, [r0]
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D04C: .4byte 0x00000109
_0803D050: .4byte 0x0000010D
_0803D054: .4byte 0x00000139
_0803D058: .4byte 0x0000013D
_0803D05C: .4byte 0x00000169
_0803D060: .4byte 0x0000016D
_0803D064: .4byte 0x000001A5
_0803D068: .4byte 0x000001A9
_0803D06C: .4byte 0x00000281
_0803D070: .4byte 0x00000282
_0803D074: .4byte 0x00000285
_0803D078: .4byte 0x00000286
_0803D07C: .4byte gUnknown_030054B8
_0803D080: .4byte 0x00002060
_0803D084: .4byte gUnknown_03005B4C

	thumb_func_start sub_803D088
sub_803D088: @ 0x0803D088
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0803D1B8 @ =gCurTask
	ldr r0, [r0]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r7, r0
	ldr r0, _0803D1BC @ =IWRAM_START + 0x148
	adds r0, r0, r7
	mov r8, r0
	movs r2, #8
	ldrsh r1, [r6, r2]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r0, r6, #0
	bl sub_803E63C
	ldr r0, [r6, #0x68]
	cmp r0, #0
	beq _0803D0BA
	subs r0, #1
	str r0, [r6, #0x68]
_0803D0BA:
	adds r0, r6, #0
	bl sub_803DF34
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803D0C8
	b _0803D212
_0803D0C8:
	ldr r0, [r6]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	bl Div
	subs r0, #8
	lsls r0, r0, #8
	str r0, [r6, #0x54]
	ldr r0, [r6, #4]
	adds r1, r4, #0
	bl Div
	subs r0, #0x16
	lsls r0, r0, #8
	str r0, [r6, #0x58]
	ldr r5, _0803D1C0 @ =gUnknown_08097AA4
	ldr r1, _0803D1C4 @ =IWRAM_START + 0x60
	adds r3, r7, r1
	movs r2, #0
	ldrsh r1, [r3, r2]
	adds r1, r1, r4
	lsls r1, r1, #1
	adds r1, r1, r5
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #4
	subs r2, r2, r1
	asrs r2, r2, #5
	ldr r1, [r6, #0x54]
	adds r1, r1, r2
	str r1, [r6, #0x54]
	movs r2, #0
	ldrsh r1, [r3, r2]
	lsls r1, r1, #1
	adds r1, r1, r5
	movs r3, #0
	ldrsh r2, [r1, r3]
	lsls r1, r2, #4
	subs r1, r1, r2
	asrs r1, r1, #5
	adds r0, r0, r1
	str r0, [r6, #0x58]
	ldr r0, _0803D1C8 @ =0x00000286
	mov r1, r8
	strh r0, [r1, #0xa]
	ldr r2, _0803D1CC @ =IWRAM_START + 0x168
	adds r1, r7, r2
	movs r0, #2
	strb r0, [r1]
	ldr r3, _0803D1D0 @ =IWRAM_START + 0x169
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0803D1D4 @ =IWRAM_START + 0x80
	adds r0, r0, r7
	mov r8, r0
	ldr r0, _0803D1D8 @ =0x00000281
	mov r1, r8
	strh r0, [r1, #0xa]
	subs r2, #0xc8
	adds r0, r7, r2
	movs r2, #1
	strb r2, [r0]
	subs r3, #0xc8
	adds r1, r7, r3
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r0, _0803D1DC @ =IWRAM_START + 0xB8
	adds r0, r0, r7
	mov r8, r0
	ldr r0, _0803D1E0 @ =0x00000282
	mov r1, r8
	strh r0, [r1, #0xa]
	adds r3, #0x37
	adds r0, r7, r3
	strb r2, [r0]
	ldr r0, _0803D1E4 @ =IWRAM_START + 0xD9
	adds r1, r7, r0
	subs r2, #2
	mov r8, r2
	adds r0, r2, #0
	strb r0, [r1]
	ldr r1, _0803D1E8 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r5, r3
	str r0, [r1]
	ldr r4, _0803D1EC @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _0803D200
	ldr r0, _0803D1F0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803D200
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _0803D1F4 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0803D1F8
	mov r3, r8
	strb r3, [r1]
	b _0803D1FA
	.align 2, 0
_0803D1B8: .4byte gCurTask
_0803D1BC: .4byte IWRAM_START + 0x148
_0803D1C0: .4byte gUnknown_08097AA4
_0803D1C4: .4byte IWRAM_START + 0x60
_0803D1C8: .4byte 0x00000286
_0803D1CC: .4byte IWRAM_START + 0x168
_0803D1D0: .4byte IWRAM_START + 0x169
_0803D1D4: .4byte IWRAM_START + 0x80
_0803D1D8: .4byte 0x00000281
_0803D1DC: .4byte IWRAM_START + 0xB8
_0803D1E0: .4byte 0x00000282
_0803D1E4: .4byte IWRAM_START + 0xD9
_0803D1E8: .4byte gUnknown_03005450
_0803D1EC: .4byte 0x0000C350
_0803D1F0: .4byte gUnknown_030054CC
_0803D1F4: .4byte gUnknown_03005448
_0803D1F8:
	strb r0, [r1]
_0803D1FA:
	ldr r1, _0803D29C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_0803D200:
	ldr r0, _0803D2A0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _0803D212
	ldr r1, _0803D29C @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_0803D212:
	adds r0, r6, #0
	bl sub_803DB1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803D22A
	movs r0, #0x96
	str r0, [r6, #0x68]
	ldr r0, _0803D2A4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803D2A8 @ =sub_803E494
	str r0, [r1, #8]
_0803D22A:
	adds r0, r6, #0
	bl sub_803DA8C
	adds r0, r6, #0
	bl sub_803D430
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803D26E
	adds r0, r6, #0
	adds r0, #0x71
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803D262
	movs r0, #0xa4
	lsls r0, r0, #1
	adds r1, r6, r0
	movs r2, #0
	ldr r0, _0803D2AC @ =0x00000286
	strh r0, [r1, #0xa]
	movs r1, #0xb4
	lsls r1, r1, #1
	adds r0, r6, r1
	strb r2, [r0]
	ldr r2, _0803D2B0 @ =0x00000169
	adds r1, r6, r2
	movs r0, #0xff
	strb r0, [r1]
_0803D262:
	movs r0, #0x96
	str r0, [r6, #0x68]
	ldr r0, _0803D2A4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803D2A8 @ =sub_803E494
	str r0, [r1, #8]
_0803D26E:
	adds r0, r6, #0
	bl sub_803D978
	ldr r1, _0803D2B4 @ =gUnknown_030059E0
	adds r0, r6, #0
	bl sub_803E0D8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803D292
	bl sub_802A018
	ldr r0, _0803D2B8 @ =0x00000103
	str r0, [r6, #0x68]
	ldr r0, _0803D2A4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803D2BC @ =sub_803E520
	str r0, [r1, #8]
_0803D292:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D29C: .4byte gUnknown_030054A8
_0803D2A0: .4byte gUnknown_030055B4
_0803D2A4: .4byte gCurTask
_0803D2A8: .4byte sub_803E494
_0803D2AC: .4byte 0x00000286
_0803D2B0: .4byte 0x00000169
_0803D2B4: .4byte gUnknown_030059E0
_0803D2B8: .4byte 0x00000103
_0803D2BC: .4byte sub_803E520

	thumb_func_start sub_803D2C0
sub_803D2C0: @ 0x0803D2C0
	push {r4, r5, r6, r7, lr}
	ldr r7, _0803D34C @ =gCurTask
	ldr r0, [r7]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, [r4]
	asrs r0, r0, #8
	ldr r5, _0803D350 @ =gUnknown_03005960
	ldr r1, [r5]
	subs r6, r0, r1
	adds r0, r4, #0
	bl sub_803D754
	adds r0, r4, #0
	movs r1, #1
	bl sub_803D640
	adds r0, r4, #0
	bl sub_803D978
	adds r0, r4, #0
	bl sub_803E214
	ldr r2, _0803D354 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803D358 @ =0x00196225
	muls r1, r0, r1
	ldr r0, _0803D35C @ =0x3C6EF35F
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, _0803D360 @ =gUnknown_03005590
	ldr r0, [r0]
	adds r0, r0, r1
	movs r1, #0x11
	bl DivRem
	cmp r0, #0
	bne _0803D316
	movs r0, #0x90
	bl m4aSongNumStart
_0803D316:
	cmp r6, #0x31
	bgt _0803D344
	ldr r0, [r4]
	asrs r0, r0, #8
	ldr r1, [r5]
	subs r0, r0, r1
	subs r0, #4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r2, [r5, #4]
	subs r1, r1, r2
	subs r1, #0x21
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_8039FA4
	ldr r1, [r7]
	ldr r0, _0803D364 @ =sub_803E5B0
	str r0, [r1, #8]
_0803D344:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D34C: .4byte gCurTask
_0803D350: .4byte gUnknown_03005960
_0803D354: .4byte gUnknown_030053B8
_0803D358: .4byte 0x00196225
_0803D35C: .4byte 0x3C6EF35F
_0803D360: .4byte gUnknown_03005590
_0803D364: .4byte sub_803E5B0

	thumb_func_start sub_803D368
sub_803D368: @ 0x0803D368
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov ip, r0
	movs r0, #0xfd
	lsls r0, r0, #8
	mov r1, ip
	strh r0, [r1, #0xa]
	movs r2, #0
_0803D380:
	movs r0, #0xf4
	cmp r2, #0
	bne _0803D388
	movs r0, #0
_0803D388:
	movs r5, #0
	lsls r1, r2, #1
	mov r3, ip
	adds r3, #0xc
	str r3, [sp]
	lsls r0, r0, #0x18
	movs r7, #0x3c
	add r7, ip
	mov sl, r7
	movs r3, #0x3e
	add r3, ip
	mov sb, r3
	adds r7, r2, #1
	str r7, [sp, #4]
	adds r1, r1, r2
	mov r8, r1
	asrs r0, r0, #0x18
	str r0, [sp, #8]
	mov r6, ip
	adds r6, #0x10
_0803D3B0:
	mov r0, r8
	adds r2, r5, r0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	lsls r3, r2, #3
	ldr r1, [sp]
	adds r4, r1, r3
	ldr r7, _0803D424 @ =gUnknown_080D7B10
	adds r0, r5, r7
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, [sp, #8]
	adds r0, r0, r1
	lsls r0, r0, #8
	mov r7, ip
	ldr r1, [r7]
	adds r1, r1, r0
	str r1, [r4]
	adds r3, r6, r3
	lsls r0, r5, #3
	adds r0, r6, r0
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r0, r1
	str r0, [r3]
	lsls r2, r2, #2
	mov r3, sl
	adds r1, r3, r2
	ldr r7, _0803D428 @ =gUnknown_080D7B4E
	adds r0, r2, r7
	ldrh r0, [r0]
	strh r0, [r1]
	mov r0, sb
	adds r1, r0, r2
	ldr r3, _0803D42C @ =gUnknown_080D7B50
	adds r2, r2, r3
	ldrh r0, [r2]
	strh r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803D3B0
	ldr r7, [sp, #4]
	lsls r0, r7, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #1
	bls _0803D380
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D424: .4byte gUnknown_080D7B10
_0803D428: .4byte gUnknown_080D7B4E
_0803D42C: .4byte gUnknown_080D7B50

	thumb_func_start sub_803D430
sub_803D430: @ 0x0803D430
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x80
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r4, _0803D628 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	adds r0, #4
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	adds r6, #0x38
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	adds r0, #9
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r6, r7, r0
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	subs r0, #1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	subs r0, #0x2a
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	movs r5, #0
_0803D4B6:
	lsls r5, r5, #0x18
	asrs r4, r5, #0x18
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0xe8
	adds r6, r7, r0
	adds r0, r6, #0
	bl sub_8004558
	movs r0, #0xf4
	mov sb, r5
	cmp r4, #0
	bne _0803D4D4
	movs r0, #0
_0803D4D4:
	movs r1, #0
	lsls r0, r0, #0x18
	mov r8, r0
	adds r3, r7, #0
	adds r3, #0x10
	adds r2, r7, #0
	adds r2, #0x71
	str r2, [sp, #4]
	ldr r0, _0803D62C @ =gUnknown_080D7B10
	mov sl, r0
	ldr r5, _0803D628 @ =gUnknown_03005960
_0803D4EA:
	ldr r2, [r7]
	asrs r2, r2, #8
	lsls r4, r1, #0x18
	asrs r4, r4, #0x18
	mov r1, sl
	adds r0, r4, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r1, r1, r2
	ldr r0, [r5]
	subs r1, r1, r0
	mov r2, r8
	asrs r0, r2, #0x18
	adds r0, r0, r1
	strh r0, [r6, #0x16]
	lsls r0, r4, #3
	adds r0, r3, r0
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r5, #4]
	subs r0, r0, r1
	adds r0, #4
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r3, [sp, #8]
	bl sub_80051E8
	adds r4, #1
	lsls r4, r4, #0x18
	lsrs r1, r4, #0x18
	asrs r4, r4, #0x18
	ldr r3, [sp, #8]
	cmp r4, #2
	ble _0803D4EA
	movs r0, #0x80
	lsls r0, r0, #0x11
	add r0, sb
	lsrs r5, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	ble _0803D4B6
	movs r0, #0
	str r0, [sp]
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803D616
	movs r2, #0xa4
	lsls r2, r2, #1
	adds r6, r7, r2
	movs r0, #0xbc
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sb, r0
	ldr r0, [r7]
	movs r1, #0x80
	lsls r1, r1, #1
	mov sl, r1
	bl Div
	ldr r4, _0803D628 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	subs r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	mov r1, sl
	bl Div
	ldr r1, [r4, #4]
	subs r0, r0, r1
	subs r0, #0x16
	strh r0, [r6, #0x18]
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r0, r7, r2
	ldrb r0, [r0]
	movs r1, #0x60
	adds r1, r1, r7
	mov r8, r1
	cmp r0, #1
	bne _0803D5D2
	ldr r5, _0803D630 @ =gUnknown_08097AA4
	movs r2, #0
	ldrsh r0, [r1, r2]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r7, #0x68]
	muls r0, r1, r0
	ldr r4, _0803D634 @ =0x000061A8
	adds r1, r4, #0
	bl Div
	ldrh r1, [r6, #0x16]
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r7, #0x68]
	muls r0, r1, r0
	adds r1, r4, #0
	bl Div
	ldrh r1, [r6, #0x18]
	subs r1, r1, r0
	strh r1, [r6, #0x18]
_0803D5D2:
	ldr r2, _0803D638 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803D63C @ =0x00002060
	orrs r0, r1
	str r0, [r6, #0x10]
	mov r1, r8
	ldrh r0, [r1]
	mov r2, sb
	strh r0, [r2]
	mov r0, sl
	strh r0, [r2, #2]
	strh r0, [r2, #4]
	ldrh r0, [r6, #0x16]
	strh r0, [r2, #6]
	ldrh r0, [r6, #0x18]
	strh r0, [r2, #8]
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _0803D608
	movs r1, #1
	str r1, [sp]
_0803D608:
	adds r0, r6, #0
	mov r1, sb
	bl sub_8004860
	adds r0, r6, #0
	bl sub_80051E8
_0803D616:
	ldr r0, [sp]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803D628: .4byte gUnknown_03005960
_0803D62C: .4byte gUnknown_080D7B10
_0803D630: .4byte gUnknown_08097AA4
_0803D634: .4byte 0x000061A8
_0803D638: .4byte gUnknown_030054B8
_0803D63C: .4byte 0x00002060

	thumb_func_start sub_803D640
sub_803D640: @ 0x0803D640
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	adds r6, r7, #0
	adds r6, #0x80
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r1, _0803D750 @ =gUnknown_03005960
	mov r8, r1
	ldr r1, [r1]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	mov r2, r8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	adds r0, #4
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	adds r6, #0x38
	ldr r0, [r7]
	asrs r0, r0, #8
	mov r3, r8
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	adds r0, #9
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	cmp r4, #0
	beq _0803D6D2
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r6, r7, r0
	ldr r0, [r7]
	asrs r0, r0, #8
	mov r2, r8
	ldr r1, [r2]
	subs r0, r0, r1
	subs r0, #1
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	subs r0, #0x2a
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0803D6D2:
	movs r5, #0
	movs r3, #0xc
	adds r3, r3, r7
	mov sl, r3
	movs r0, #0x10
	adds r0, r0, r7
	mov sb, r0
_0803D6E0:
	lsls r5, r5, #0x18
	asrs r0, r5, #0x18
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r0, r4, #4
	adds r0, #0xe8
	adds r6, r7, r0
	adds r0, r6, #0
	bl sub_8004558
	movs r0, #0
	mov r8, r5
	adds r5, r4, #0
_0803D6FA:
	lsls r4, r0, #0x18
	asrs r4, r4, #0x18
	adds r2, r4, r5
	lsls r2, r2, #0x18
	asrs r2, r2, #0x15
	mov r1, sl
	adds r0, r1, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r3, _0803D750 @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	add r2, sb
	ldr r0, [r2]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	subs r0, #0x12
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_80051E8
	adds r4, #1
	lsls r4, r4, #0x18
	lsrs r0, r4, #0x18
	asrs r4, r4, #0x18
	cmp r4, #2
	ble _0803D6FA
	movs r0, #0x80
	lsls r0, r0, #0x11
	add r0, r8
	lsrs r5, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	ble _0803D6E0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D750: .4byte gUnknown_03005960

	thumb_func_start sub_803D754
sub_803D754: @ 0x0803D754
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r4, r0, #0
	ldrh r0, [r4, #0xa]
	adds r0, #0x40
	movs r5, #0
	strh r0, [r4, #0xa]
	movs r1, #8
	ldrsh r0, [r4, r1]
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	movs r0, #0xa
	ldrsh r2, [r4, r0]
	ldr r0, [r4, #4]
	adds r0, r0, r2
	str r0, [r4, #4]
	asrs r0, r0, #8
	asrs r1, r1, #8
	str r5, [sp]
	ldr r2, _0803D888 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _0803D7C2
	lsls r0, r0, #8
	ldr r1, [r4, #4]
	adds r1, r1, r0
	str r1, [r4, #4]
	ldrh r0, [r4, #8]
	subs r0, #0x10
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0803D7AA
	strh r5, [r4, #8]
_0803D7AA:
	movs r1, #0xa
	ldrsh r0, [r4, r1]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r4, #0xa]
_0803D7C2:
	movs r2, #0
	mov r8, r2
	adds r0, r4, #0
	adds r0, #0x3e
	str r0, [sp, #0xc]
	adds r1, r4, #0
	adds r1, #0xc
	str r1, [sp, #0x10]
	adds r2, r4, #0
	adds r2, #0x3c
	str r2, [sp, #8]
	adds r4, #0x10
	str r4, [sp, #0x14]
_0803D7DC:
	movs r7, #0
	mov r0, r8
	lsls r0, r0, #1
	mov sb, r0
	movs r1, #1
	add r1, r8
	mov sl, r1
_0803D7EA:
	mov r1, sb
	add r1, r8
	adds r1, r7, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r1, #2
	ldr r0, [sp, #0xc]
	adds r5, r0, r2
	ldrh r0, [r5]
	adds r0, #0x40
	strh r0, [r5]
	lsls r1, r1, #3
	ldr r0, [sp, #0x10]
	adds r3, r0, r1
	ldr r0, [sp, #8]
	adds r6, r0, r2
	movs r0, #0
	ldrsh r2, [r6, r0]
	ldr r0, [r3]
	adds r0, r0, r2
	str r0, [r3]
	ldr r2, [sp, #0x14]
	adds r4, r2, r1
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	asrs r0, r0, #8
	subs r0, #8
	ldr r1, [r3]
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _0803D888 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _0803D860
	lsls r1, r0, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldrh r0, [r6]
	subs r0, #0x20
	strh r0, [r6]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
_0803D860:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bls _0803D7EA
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #1
	bls _0803D7DC
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D888: .4byte sub_801EE64

	thumb_func_start sub_803D88C
sub_803D88C: @ 0x0803D88C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r7, r4, r0
	movs r2, #0
	mov r8, r2
	adds r0, r4, #0
	adds r0, #0x72
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803D8AC
	movs r0, #0
	b _0803D96E
_0803D8AC:
	adds r0, r4, #0
	adds r0, #0x70
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _0803D968
	subs r0, r1, #1
	strb r0, [r5]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0803D8CC
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0803D8D2
_0803D8CC:
	movs r0, #0xeb
	bl m4aSongNumStart
_0803D8D2:
	adds r0, r4, #0
	adds r0, #0x72
	movs r1, #0x1e
	strb r1, [r0]
	ldrb r0, [r5]
	cmp r0, #0
	bne _0803D950
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	ldr r1, _0803D93C @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0803D940 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _0803D95E
	ldr r0, _0803D944 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803D95E
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _0803D948 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0803D930
	movs r0, #0xff
_0803D930:
	strb r0, [r1]
	ldr r1, _0803D94C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _0803D95E
	.align 2, 0
_0803D93C: .4byte gUnknown_03005450
_0803D940: .4byte 0x0000C350
_0803D944: .4byte gUnknown_030054CC
_0803D948: .4byte gUnknown_03005448
_0803D94C: .4byte gUnknown_030054A8
_0803D950:
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
_0803D95E:
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	b _0803D96C
_0803D968:
	movs r0, #1
	mov r8, r0
_0803D96C:
	mov r0, r8
_0803D96E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_803D978
sub_803D978: @ 0x0803D978
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r1, r0, #0
	adds r0, #0x72
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803D9D4
	movs r3, #0
	adds r4, r1, #0
	adds r4, #0x78
	ldr r0, _0803D9C4 @ =gFlags
	mov r8, r0
	ldr r1, _0803D9C8 @ =gObjPalette
	mov ip, r1
	ldr r7, _0803D9CC @ =gUnknown_080D7B70
	ldr r6, _0803D9D0 @ =gUnknown_03005590
	movs r5, #2
_0803D99C:
	adds r2, r3, #0
	adds r2, #0x80
	lsls r2, r2, #1
	add r2, ip
	lsls r1, r3, #1
	ldr r0, [r6]
	ands r0, r5
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r7
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0803D99C
	b _0803D9FC
	.align 2, 0
_0803D9C4: .4byte gFlags
_0803D9C8: .4byte gObjPalette
_0803D9CC: .4byte gUnknown_080D7B70
_0803D9D0: .4byte gUnknown_03005590
_0803D9D4:
	movs r3, #0
	adds r4, r1, #0
	adds r4, #0x78
	ldr r0, _0803DA38 @ =gFlags
	mov r8, r0
	ldr r5, _0803DA3C @ =gObjPalette
	ldr r2, _0803DA40 @ =gUnknown_080D7B90
_0803D9E2:
	adds r1, r3, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0803D9E2
_0803D9FC:
	ldrb r0, [r4]
	cmp r0, #0
	beq _0803DA4C
	subs r0, #1
	strb r0, [r4]
	movs r3, #0
	ldr r7, _0803DA3C @ =gObjPalette
	ldr r6, _0803DA44 @ =gUnknown_080D7B70
	ldr r5, _0803DA48 @ =gUnknown_03005590
	movs r4, #2
_0803DA10:
	adds r2, r3, #0
	adds r2, #0xd0
	lsls r2, r2, #1
	adds r2, r2, r7
	lsls r1, r3, #1
	ldr r0, [r5]
	ands r0, r4
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r6
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0803DA10
	b _0803DA6C
	.align 2, 0
_0803DA38: .4byte gFlags
_0803DA3C: .4byte gObjPalette
_0803DA40: .4byte gUnknown_080D7B90
_0803DA44: .4byte gUnknown_080D7B70
_0803DA48: .4byte gUnknown_03005590
_0803DA4C:
	movs r3, #0
	ldr r4, _0803DA84 @ =gObjPalette
	ldr r2, _0803DA88 @ =gUnknown_080D7B90
_0803DA52:
	adds r1, r3, #0
	adds r1, #0xd0
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0803DA52
_0803DA6C:
	mov r1, r8
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, r8
	str r0, [r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803DA84: .4byte gObjPalette
_0803DA88: .4byte gUnknown_080D7B90

	thumb_func_start sub_803DA8C
sub_803DA8C: @ 0x0803DA8C
	push {r4, lr}
	adds r3, r0, #0
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r4, r3, r0
	adds r1, r3, #0
	adds r1, #0x72
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803DAE4
	adds r2, r3, #0
	adds r2, #0x73
	movs r0, #0
	strb r0, [r2]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DB10
	adds r0, r3, #0
	adds r0, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803DACE
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r1, r3, r2
	movs r0, #3
	b _0803DADC
_0803DACE:
	movs r0, #0
	movs r1, #0xa2
	lsls r1, r1, #2
	strh r1, [r4, #0xa]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r1, r3, r2
_0803DADC:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x21
	b _0803DB0C
_0803DAE4:
	adds r1, r3, #0
	adds r1, #0x73
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803DB10
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DB10
	movs r1, #0
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r0, r3, r2
	strb r1, [r0]
	ldr r0, _0803DB18 @ =0x000001A5
	adds r1, r3, r0
_0803DB0C:
	movs r0, #0xff
	strb r0, [r1]
_0803DB10:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803DB18: .4byte 0x000001A5

	thumb_func_start sub_803DB1C
sub_803DB1C: @ 0x0803DB1C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r5, r0, #0
	movs r0, #0xa4
	lsls r0, r0, #1
	adds r0, r0, r5
	mov r8, r0
	movs r1, #0xbc
	lsls r1, r1, #1
	adds r1, r1, r5
	mov sl, r1
	movs r6, #0
	adds r7, r5, #0
	adds r7, #0x77
	ldrb r0, [r7]
	cmp r0, #0
	beq _0803DB50
	adds r0, r5, #0
	adds r0, #0x71
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803DB54
_0803DB50:
	movs r0, #0
	b _0803DCCC
_0803DB54:
	adds r4, r5, #0
	adds r4, #0x60
	ldrh r0, [r4]
	adds r0, #0x52
	ldr r2, _0803DC0C @ =0x000003FF
	adds r1, r2, #0
	ands r0, r1
	movs r1, #0
	mov sb, r1
	strh r0, [r4]
	adds r2, r5, #0
	adds r2, #0x5e
	ldrh r0, [r2]
	adds r0, #0x40
	strh r0, [r2]
	adds r0, r5, #0
	adds r0, #0x5c
	movs r1, #0
	ldrsh r0, [r0, r1]
	ldr r1, [r5, #0x54]
	adds r1, r1, r0
	str r1, [r5, #0x54]
	movs r0, #0
	ldrsh r2, [r2, r0]
	ldr r0, [r5, #0x58]
	adds r0, r0, r2
	str r0, [r5, #0x58]
	asrs r0, r0, #8
	adds r0, #0x18
	asrs r1, r1, #8
	ldr r2, _0803DC10 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	str r4, [sp, #0x24]
	cmp r0, #0
	bge _0803DC24
	movs r0, #0x8f
	bl m4aSongNumStart
	mov r1, sb
	strb r1, [r7]
	add r0, sp, #4
	strh r6, [r0, #0x1c]
	adds r1, r0, #0
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _0803DC14 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _0803DC18 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r6, [r0, #0xa]
	str r6, [sp, #8]
	movs r2, #0x76
	adds r2, r2, r5
	mov sb, r2
	ldr r7, _0803DC1C @ =gUnknown_03005960
	ldr r4, _0803DC20 @ =gUnknown_080D7B43
	movs r6, #4
_0803DBD8:
	ldr r0, [r5, #0x54]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	movs r1, #0
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	str r0, [sp, #0x18]
	ldr r0, [r5, #0x58]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	movs r1, #1
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	str r0, [sp, #0x1c]
	add r0, sp, #4
	mov r1, sb
	bl sub_8039B54
	adds r4, #2
	subs r6, #1
	cmp r6, #0
	bge _0803DBD8
	movs r6, #1
	b _0803DC6E
	.align 2, 0
_0803DC0C: .4byte 0x000003FF
_0803DC10: .4byte sub_801EC3C
_0803DC14: .4byte 0x06012980
_0803DC18: .4byte 0x0000026B
_0803DC1C: .4byte gUnknown_03005960
_0803DC20: .4byte gUnknown_080D7B43
_0803DC24:
	ldr r0, _0803DCDC @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0803DC6E
	ldr r0, [r5, #0x54]
	asrs r0, r0, #8
	ldr r2, _0803DCE0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	ldr r0, [r5, #0x58]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	str r0, [sp, #0x1c]
	add r0, sp, #4
	strh r6, [r0, #0x1c]
	adds r1, r0, #0
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1, #0xe]
	ldr r0, _0803DCE4 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _0803DCE8 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r6, [r0, #0xa]
	str r6, [sp, #8]
	adds r1, r5, #0
	adds r1, #0x76
	bl sub_8039B54
_0803DC6E:
	ldr r0, [r5, #0x54]
	asrs r0, r0, #8
	ldr r2, _0803DCE0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r0, [r5, #0x58]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	mov r2, r8
	strh r0, [r2, #0x18]
	ldr r2, _0803DCEC @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803DCF0 @ =0x00002060
	orrs r0, r1
	mov r1, r8
	str r0, [r1, #0x10]
	ldr r2, [sp, #0x24]
	ldrh r0, [r2]
	mov r1, sl
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	mov r2, r8
	ldrh r0, [r2, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r2, #0x18]
	strh r0, [r1, #8]
	mov r0, r8
	bl sub_8004558
	mov r0, r8
	mov r1, sl
	bl sub_8004860
	mov r0, r8
	bl sub_80051E8
	adds r0, r6, #0
_0803DCCC:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803DCDC: .4byte gUnknown_03005590
_0803DCE0: .4byte gUnknown_03005960
_0803DCE4: .4byte 0x06012980
_0803DCE8: .4byte 0x0000026B
_0803DCEC: .4byte gUnknown_030054B8
_0803DCF0: .4byte 0x00002060

	thumb_func_start sub_803DCF4
sub_803DCF4: @ 0x0803DCF4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r7, r0, #0
	movs r0, #0xa4
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sb, r0
	adds r0, r7, #0
	bl sub_803DF34
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DD16
	b _0803DE50
_0803DD16:
	ldr r0, [r7]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	bl Div
	subs r0, #8
	lsls r0, r0, #8
	str r0, [r7, #0x54]
	ldr r0, [r7, #4]
	adds r1, r4, #0
	bl Div
	subs r0, #0x16
	lsls r0, r0, #8
	str r0, [r7, #0x58]
	ldr r5, _0803DE08 @ =gUnknown_08097AA4
	adds r3, r7, #0
	adds r3, #0x60
	movs r2, #0
	ldrsh r1, [r3, r2]
	adds r1, r1, r4
	lsls r1, r1, #1
	adds r1, r1, r5
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #4
	subs r2, r2, r1
	asrs r2, r2, #5
	ldr r1, [r7, #0x54]
	adds r1, r1, r2
	str r1, [r7, #0x54]
	movs r2, #0
	ldrsh r1, [r3, r2]
	lsls r1, r1, #1
	adds r1, r1, r5
	movs r3, #0
	ldrsh r2, [r1, r3]
	lsls r1, r2, #4
	subs r1, r1, r2
	asrs r1, r1, #5
	adds r0, r0, r1
	str r0, [r7, #0x58]
	ldr r0, _0803DE0C @ =0x00000286
	mov r1, sb
	strh r0, [r1, #0xa]
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #2
	strb r0, [r1]
	ldr r3, _0803DE10 @ =0x00000169
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_803DB1C
	movs r0, #0x80
	adds r0, r0, r7
	mov sb, r0
	ldr r0, _0803DE14 @ =0x00000281
	mov r1, sb
	strh r0, [r1, #0xa]
	adds r0, r7, #0
	adds r0, #0xa0
	movs r1, #1
	strb r1, [r0]
	adds r2, r7, #0
	adds r2, #0xa1
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r2]
	movs r2, #0xc2
	ldr r0, _0803DE18 @ =0x00000282
	strh r0, [r2, r7]
	adds r0, r7, #0
	adds r0, #0xd8
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0xd9
	movs r3, #1
	rsbs r3, r3, #0
	adds r7, r3, #0
	adds r0, r3, #0
	strb r0, [r1]
	ldr r1, _0803DE1C @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0803DE20 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _0803DE34
	ldr r0, _0803DE24 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803DE34
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _0803DE28 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0803DE2C
	strb r7, [r1]
	b _0803DE2E
	.align 2, 0
_0803DE08: .4byte gUnknown_08097AA4
_0803DE0C: .4byte 0x00000286
_0803DE10: .4byte 0x00000169
_0803DE14: .4byte 0x00000281
_0803DE18: .4byte 0x00000282
_0803DE1C: .4byte gUnknown_03005450
_0803DE20: .4byte 0x0000C350
_0803DE24: .4byte gUnknown_030054CC
_0803DE28: .4byte gUnknown_03005448
_0803DE2C:
	strb r0, [r1]
_0803DE2E:
	ldr r1, _0803DE48 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_0803DE34:
	ldr r0, _0803DE4C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _0803DF24
	ldr r1, _0803DE48 @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
	b _0803DF24
	.align 2, 0
_0803DE48: .4byte gUnknown_030054A8
_0803DE4C: .4byte gUnknown_030055B4
_0803DE50:
	ldr r0, [r7, #0x68]
	cmp r0, #0
	bne _0803DF20
	ldr r0, [r7]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	subs r6, #8
	lsls r6, r6, #8
	ldr r0, [r7, #4]
	adds r1, r4, #0
	bl Div
	adds r5, r0, #0
	subs r5, #0x16
	lsls r5, r5, #8
	ldr r3, _0803DEFC @ =gUnknown_08097AA4
	movs r0, #0x60
	adds r0, r0, r7
	mov r8, r0
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r4, r1, r4
	lsls r4, r4, #1
	adds r4, r4, r3
	movs r2, #0
	ldrsh r0, [r4, r2]
	movs r2, #0x32
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r6, r6, r0
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r5, r5, r0
	ldr r0, _0803DF00 @ =0x00000286
	mov r1, sb
	strh r0, [r1, #0xa]
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _0803DF04 @ =0x00000169
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xc
	str r0, [r7, #0x68]
	ldr r0, _0803DF08 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803DF0C @ =sub_803D088
	str r0, [r1, #8]
	movs r0, #0xf1
	bl m4aSongNumStart
	mov r0, r8
	ldrh r3, [r0]
	movs r0, #0x40
	str r0, [sp]
	ldr r4, _0803DF10 @ =gUnknown_080D7B13
	ldr r2, _0803DF14 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803DF18 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0803DF1C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xf
	ands r0, r1
	adds r0, r0, r4
	ldrb r0, [r0]
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_803E7D4
	b _0803DF24
	.align 2, 0
_0803DEFC: .4byte gUnknown_08097AA4
_0803DF00: .4byte 0x00000286
_0803DF04: .4byte 0x00000169
_0803DF08: .4byte gCurTask
_0803DF0C: .4byte sub_803D088
_0803DF10: .4byte gUnknown_080D7B13
_0803DF14: .4byte gUnknown_030053B8
_0803DF18: .4byte 0x00196225
_0803DF1C: .4byte 0x3C6EF35F
_0803DF20:
	subs r0, #1
	str r0, [r7, #0x68]
_0803DF24:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_803DF34
sub_803DF34: @ 0x0803DF34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	ldr r0, [r0]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	bl Div
	subs r0, #8
	lsls r7, r0, #8
	ldr r0, _0803DFC4 @ =gUnknown_08097AA4
	mov sl, r0
	mov r5, r8
	adds r5, #0x60
	movs r1, #0
	ldrsh r0, [r5, r1]
	adds r0, r0, r4
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r6, r7, r0
	ldr r3, _0803DFC8 @ =gUnknown_030059E0
	mov sb, r3
	ldr r0, [r3, #8]
	subs r7, r6, r0
	asrs r7, r7, #8
	mov r1, r8
	ldr r0, [r1, #4]
	adds r1, r4, #0
	bl Div
	subs r0, #0x16
	lsls r2, r0, #8
	movs r3, #0
	ldrsh r0, [r5, r3]
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r5, r2, r0
	mov r1, sb
	ldr r0, [r1, #0xc]
	subs r2, r5, r0
	asrs r2, r2, #8
	adds r1, r2, #0
	muls r1, r2, r1
	adds r0, r7, #0
	muls r0, r7, r0
	adds r4, r1, r0
	movs r7, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_80122DC
	mov r0, r8
	adds r0, #0x78
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803DFCC
	movs r0, #0
	b _0803E0C4
	.align 2, 0
_0803DFC4: .4byte gUnknown_08097AA4
_0803DFC8: .4byte gUnknown_030059E0
_0803DFCC:
	ldr r0, _0803DFFC @ =0x00000257
	cmp r4, r0
	bgt _0803E042
	mov r0, sb
	adds r0, #0x90
	ldr r0, [r0]
	adds r2, r0, #0
	adds r2, #0xc
	mov r3, sb
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0803DFF2
	ldr r1, [r2, #0x30]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0803E000
_0803DFF2:
	mov r0, sb
	bl sub_800CBA4
	movs r0, #0
	b _0803E0C4
	.align 2, 0
_0803DFFC: .4byte 0x00000257
_0803E000:
	mov r0, r8
	adds r0, #0x71
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _0803E010
	subs r0, r1, #1
	strb r0, [r4]
_0803E010:
	mov r0, r8
	adds r0, #0x70
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0803E026
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0803E02C
_0803E026:
	movs r0, #0xeb
	bl m4aSongNumStart
_0803E02C:
	ldrb r0, [r4]
	cmp r0, #0
	bne _0803E034
	movs r7, #1
_0803E034:
	ldr r0, _0803E098 @ =gUnknown_030059E0
	bl sub_800CB18
	mov r1, r8
	adds r1, #0x78
	movs r0, #0x1e
	strb r0, [r1]
_0803E042:
	ldr r0, _0803E09C @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _0803E0C2
	ldr r1, [r2, #0x4c]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0803E0C2
	ldr r0, [r2]
	subs r6, r6, r0
	asrs r6, r6, #8
	ldr r0, [r2, #4]
	subs r5, r5, r0
	asrs r5, r5, #8
	adds r1, r5, #0
	muls r1, r5, r1
	adds r0, r6, #0
	muls r0, r6, r0
	adds r4, r1, r0
	ldr r0, _0803E0A0 @ =0x00000383
	cmp r4, r0
	bgt _0803E0C2
	mov r0, r8
	adds r0, #0x71
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _0803E080
	subs r0, r1, #1
	strb r0, [r4]
_0803E080:
	mov r0, r8
	adds r0, #0x70
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0803E0A4
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0803E0AA
	.align 2, 0
_0803E098: .4byte gUnknown_030059E0
_0803E09C: .4byte gUnknown_030056A4
_0803E0A0: .4byte 0x00000383
_0803E0A4:
	movs r0, #0xeb
	bl m4aSongNumStart
_0803E0AA:
	ldrb r0, [r4]
	cmp r0, #0
	bne _0803E0B2
	movs r7, #1
_0803E0B2:
	ldr r0, _0803E0D4 @ =gUnknown_03005498
	ldr r1, [r0, #4]
	movs r0, #0
	strb r0, [r1, #0x15]
	mov r1, r8
	adds r1, #0x78
	movs r0, #0x1e
	strb r0, [r1]
_0803E0C2:
	adds r0, r7, #0
_0803E0C4:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803E0D4: .4byte gUnknown_03005498

	thumb_func_start sub_803E0D8
sub_803E0D8: @ 0x0803E0D8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r1, #0
	adds r7, r4, #0
	adds r7, #0x80
	movs r0, #0
	mov r8, r0
	adds r0, r4, #0
	adds r0, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803E0FA
	movs r0, #1
	b _0803E202
_0803E0FA:
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	str r6, [sp]
	adds r0, r7, #0
	movs r3, #1
	bl sub_800CA20
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	str r6, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C320
	adds r3, r0, #0
	cmp r3, #1
	bne _0803E17A
	adds r0, r4, #0
	adds r0, #0x71
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803E168
	movs r1, #0xc2
	lsls r1, r1, #1
	adds r2, r4, r1
	adds r1, r4, #0
	adds r1, #0x73
	movs r0, #0x1e
	strb r0, [r1]
	subs r1, #1
	ldrb r0, [r1]
	adds r5, r1, #0
	cmp r0, #0
	bne _0803E15C
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r3, [r0]
	ldr r0, _0803E164 @ =0x000001A5
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
_0803E15C:
	adds r0, r6, #0
	bl sub_800CBA4
	b _0803E1C6
	.align 2, 0
_0803E164: .4byte 0x000001A5
_0803E168:
	adds r0, r4, #0
	bl sub_803D88C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r5, r4, #0
	adds r5, #0x72
	b _0803E1C6
_0803E17A:
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	str r6, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	adds r5, r4, #0
	adds r5, #0x72
	cmp r3, #1
	bne _0803E1C6
	movs r1, #0xc2
	lsls r1, r1, #1
	adds r2, r4, r1
	adds r1, r4, #0
	adds r1, #0x73
	movs r0, #0x1e
	strb r0, [r1]
	ldrb r0, [r5]
	cmp r0, #0
	bne _0803E1C0
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r4, r1
	strb r3, [r0]
	ldr r0, _0803E210 @ =0x000001A5
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
_0803E1C0:
	adds r0, r6, #0
	bl sub_800CBA4
_0803E1C6:
	ldr r0, [r4]
	ldr r1, [r4, #4]
	bl sub_80122DC
	ldrb r0, [r5]
	cmp r0, #0
	bne _0803E200
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	str r6, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _0803E200
	adds r0, r4, #0
	adds r0, #0x71
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803E200
	adds r0, r4, #0
	bl sub_803D88C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
_0803E200:
	mov r0, r8
_0803E202:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803E210: .4byte 0x000001A5

	thumb_func_start sub_803E214
sub_803E214: @ 0x0803E214
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x20
	mov ip, r0
	ldr r0, _0803E2BC @ =gUnknown_03005590
	ldr r7, [r0]
	movs r0, #7
	ands r7, r0
	cmp r7, #0
	bne _0803E2DC
	mov r0, ip
	ldr r1, [r0, #0x68]
	ldr r0, _0803E2C0 @ =0x00000103
	subs r0, r0, r1
	lsrs r0, r0, #5
	movs r1, #0x76
	add r1, ip
	mov sb, r1
	ldrb r2, [r1]
	cmp r0, r2
	bhi _0803E244
	b _0803E3BC
_0803E244:
	ldr r3, _0803E2C4 @ =gUnknown_030053B8
	mov r8, r3
	ldr r0, [r3]
	ldr r6, _0803E2C8 @ =0x00196225
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r4, _0803E2CC @ =0x3C6EF35F
	adds r2, r2, r4
	mov r0, ip
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r5, _0803E2D0 @ =gUnknown_03005960
	ldr r0, [r5]
	subs r1, r1, r0
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #1
	movs r3, #0x3f
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x34
	str r1, [sp, #0x14]
	muls r2, r6, r2
	adds r2, r2, r4
	mov r1, r8
	str r2, [r1]
	mov r0, ip
	ldr r1, [r0, #4]
	asrs r1, r1, #8
	ldr r0, [r5, #4]
	subs r1, r1, r0
	movs r0, #0x34
	muls r0, r2, r0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x30
	str r1, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r1, sp
	movs r0, #0xfa
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _0803E2D4 @ =0x06012980
	str r0, [sp]
	ldr r0, _0803E2D8 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	mov r1, sb
	bl sub_8039B54
	b _0803E3BC
	.align 2, 0
_0803E2BC: .4byte gUnknown_03005590
_0803E2C0: .4byte 0x00000103
_0803E2C4: .4byte gUnknown_030053B8
_0803E2C8: .4byte 0x00196225
_0803E2CC: .4byte 0x3C6EF35F
_0803E2D0: .4byte gUnknown_03005960
_0803E2D4: .4byte 0x06012980
_0803E2D8: .4byte 0x0000026B
_0803E2DC:
	ldr r1, _0803E3CC @ =gUnknown_030053B8
	mov r8, r1
	ldr r0, [r1]
	ldr r7, _0803E3D0 @ =0x00196225
	muls r0, r7, r0
	ldr r6, _0803E3D4 @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r1]
	movs r2, #5
	ands r2, r0
	cmp r2, #0
	bne _0803E3BC
	mov r3, ip
	ldr r1, [r3, #0x68]
	ldr r0, _0803E3D8 @ =0x00000103
	subs r0, r0, r1
	lsrs r0, r0, #5
	movs r1, #0x74
	add r1, ip
	mov sb, r1
	ldrb r3, [r1]
	cmp r0, r3
	bls _0803E3BC
	mov r5, ip
	adds r5, #0x75
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bls _0803E31E
	strb r2, [r5]
_0803E31E:
	mov r1, r8
	ldr r0, [r1]
	adds r2, r0, #0
	muls r2, r7, r2
	adds r2, r2, r6
	mov r3, ip
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r3, _0803E3DC @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	movs r4, #0x3f
	adds r0, r2, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #0x20
	str r1, [sp, #0x14]
	muls r2, r7, r2
	adds r2, r2, r6
	mov r0, ip
	ldr r1, [r0, #4]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	adds r0, r2, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #0x20
	str r1, [sp, #0x18]
	mov r1, sp
	movs r0, #0x40
	strh r0, [r1, #0x1c]
	mov r3, sp
	adds r0, r2, #0
	muls r0, r7, r0
	adds r0, r0, r6
	mov r1, r8
	str r0, [r1]
	ldr r1, _0803E3E0 @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	mov r1, sp
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r2, _0803E3E4 @ =gUnknown_080D79D0
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #5
	ldr r3, _0803E3E8 @ =0x06010000
	adds r0, r0, r3
	str r0, [sp]
	mov r3, sp
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r2, #4
	adds r0, r0, r1
	ldr r0, [r0]
	strh r0, [r3, #8]
	ldrb r1, [r5]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, #8
	adds r0, r0, r2
	ldr r0, [r0]
	strh r0, [r3, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	mov r1, sb
	bl sub_8039B54
_0803E3BC:
	add sp, #0x20
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803E3CC: .4byte gUnknown_030053B8
_0803E3D0: .4byte 0x00196225
_0803E3D4: .4byte 0x3C6EF35F
_0803E3D8: .4byte 0x00000103
_0803E3DC: .4byte gUnknown_03005960
_0803E3E0: .4byte 0x000003FF
_0803E3E4: .4byte gUnknown_080D79D0
_0803E3E8: .4byte 0x06010000

	thumb_func_start sub_803E3EC
sub_803E3EC: @ 0x0803E3EC
	ldr r2, _0803E438 @ =gUnknown_03005B4C
	ldr r2, [r2]
	ldrh r3, [r2, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r3, r3, r2
	ldr r2, [r3]
	adds r2, r2, r0
	str r2, [r3]
	ldr r2, [r3, #4]
	adds r2, r2, r1
	str r2, [r3, #4]
	ldr r2, [r3, #0xc]
	adds r2, r2, r0
	str r2, [r3, #0xc]
	ldr r2, [r3, #0x10]
	adds r2, r2, r1
	str r2, [r3, #0x10]
	ldr r2, [r3, #0x14]
	adds r2, r2, r0
	str r2, [r3, #0x14]
	ldr r2, [r3, #0x18]
	adds r2, r2, r1
	str r2, [r3, #0x18]
	ldr r2, [r3, #0x1c]
	adds r2, r2, r0
	str r2, [r3, #0x1c]
	ldr r2, [r3, #0x20]
	adds r2, r2, r1
	str r2, [r3, #0x20]
	ldr r2, [r3, #0x54]
	adds r2, r2, r0
	str r2, [r3, #0x54]
	ldr r0, [r3, #0x58]
	adds r0, r0, r1
	str r0, [r3, #0x58]
	bx lr
	.align 2, 0
_0803E438: .4byte gUnknown_03005B4C

	thumb_func_start sub_803E43C
sub_803E43C: @ 0x0803E43C
	push {r4, r5, lr}
	ldr r5, _0803E48C @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r2, #8
	ldrsh r1, [r4, r2]
	adds r0, r0, r1
	str r0, [r4]
	adds r0, r4, #0
	bl sub_803E63C
	adds r0, r4, #0
	bl sub_803E6A8
	adds r0, r4, #0
	bl sub_803DA8C
	adds r0, r4, #0
	bl sub_803D430
	ldr r0, [r4, #0x7c]
	adds r0, #1
	str r0, [r4, #0x7c]
	cmp r0, #0x59
	bls _0803E486
	movs r0, #0
	str r0, [r4, #0x7c]
	ldr r1, [r5]
	ldr r0, _0803E490 @ =sub_803E494
	str r0, [r1, #8]
_0803E486:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803E48C: .4byte gCurTask
_0803E490: .4byte sub_803E494

	thumb_func_start sub_803E494
sub_803E494: @ 0x0803E494
	push {r4, r5, r6, lr}
	ldr r6, _0803E508 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	movs r0, #8
	ldrsh r1, [r5, r0]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	adds r0, r5, #0
	bl sub_803E63C
	adds r0, r5, #0
	bl sub_803E6A8
	ldr r2, _0803E50C @ =gUnknown_080D7B68
	ldr r0, _0803E510 @ =IWRAM_START + 0x71
	adds r4, r4, r0
	ldrb r0, [r4]
	movs r1, #0
	cmp r0, #0
	bne _0803E4C8
	movs r1, #4
_0803E4C8:
	adds r0, r1, r2
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	bl sub_803DA8C
	adds r0, r5, #0
	bl sub_803D430
	adds r0, r5, #0
	bl sub_803D978
	ldr r1, _0803E514 @ =gUnknown_030059E0
	adds r0, r5, #0
	bl sub_803E0D8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E500
	bl sub_802A018
	ldr r0, _0803E518 @ =0x00000103
	str r0, [r5, #0x68]
	ldr r1, [r6]
	ldr r0, _0803E51C @ =sub_803E520
	str r0, [r1, #8]
_0803E500:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803E508: .4byte gCurTask
_0803E50C: .4byte gUnknown_080D7B68
_0803E510: .4byte IWRAM_START + 0x71
_0803E514: .4byte gUnknown_030059E0
_0803E518: .4byte 0x00000103
_0803E51C: .4byte sub_803E520

	thumb_func_start sub_803E520
sub_803E520: @ 0x0803E520
	push {r4, r5, lr}
	ldr r5, _0803E598 @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	adds r0, r4, #0
	bl sub_803E63C
	adds r0, r4, #0
	bl sub_803DA8C
	adds r0, r4, #0
	bl sub_803D430
	adds r0, r4, #0
	bl sub_803D978
	adds r0, r4, #0
	bl sub_803E214
	ldr r2, _0803E59C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803E5A0 @ =0x00196225
	muls r1, r0, r1
	ldr r0, _0803E5A4 @ =0x3C6EF35F
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, _0803E5A8 @ =gUnknown_03005590
	ldr r0, [r0]
	adds r0, r0, r1
	movs r1, #0x15
	bl DivRem
	cmp r0, #0
	bne _0803E57A
	movs r0, #0x90
	bl m4aSongNumStart
_0803E57A:
	ldr r0, [r4, #0x68]
	subs r0, #1
	str r0, [r4, #0x68]
	cmp r0, #0
	bne _0803E590
	adds r0, r4, #0
	bl sub_803D368
	ldr r1, [r5]
	ldr r0, _0803E5AC @ =sub_803D2C0
	str r0, [r1, #8]
_0803E590:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803E598: .4byte gCurTask
_0803E59C: .4byte gUnknown_030053B8
_0803E5A0: .4byte 0x00196225
_0803E5A4: .4byte 0x3C6EF35F
_0803E5A8: .4byte gUnknown_03005590
_0803E5AC: .4byte sub_803D2C0

	thumb_func_start sub_803E5B0
sub_803E5B0: @ 0x0803E5B0
	push {r4, r5, r6, lr}
	ldr r6, _0803E624 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4]
	asrs r0, r0, #8
	ldr r1, _0803E628 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r5, r0, r1
	adds r0, r4, #0
	bl sub_803D754
	adds r0, r4, #0
	movs r1, #0
	bl sub_803D640
	adds r0, r4, #0
	bl sub_803D978
	adds r0, r4, #0
	bl sub_803E214
	ldr r2, _0803E62C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0803E630 @ =0x00196225
	muls r1, r0, r1
	ldr r0, _0803E634 @ =0x3C6EF35F
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, _0803E638 @ =gUnknown_03005590
	ldr r0, [r0]
	adds r0, r0, r1
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _0803E606
	movs r0, #0x90
	bl m4aSongNumStart
_0803E606:
	movs r0, #0xc8
	rsbs r0, r0, #0
	cmp r5, r0
	bge _0803E61E
	adds r0, #0xb4
	movs r1, #0x8c
	movs r2, #1
	bl sub_802EF68
	ldr r0, [r6]
	bl TaskDestroy
_0803E61E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803E624: .4byte gCurTask
_0803E628: .4byte gUnknown_03005960
_0803E62C: .4byte gUnknown_030053B8
_0803E630: .4byte 0x00196225
_0803E634: .4byte 0x3C6EF35F
_0803E638: .4byte gUnknown_03005590

	thumb_func_start sub_803E63C
sub_803E63C: @ 0x0803E63C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	movs r7, #0
	movs r5, #0
_0803E646:
	ldr r1, [r6]
	asrs r1, r1, #8
	ldr r0, _0803E69C @ =gUnknown_080D7B10
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r5, #3
	adds r4, r6, #0
	adds r4, #0x10
	adds r4, r4, r0
	ldr r0, [r4]
	asrs r0, r0, #8
	adds r0, #0x12
	adds r7, r7, r0
	ldr r2, _0803E6A0 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	lsls r0, r0, #8
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803E646
	adds r0, r7, #0
	movs r1, #3
	bl Div
	lsls r0, r0, #8
	ldr r1, _0803E6A4 @ =0xFFFFEE00
	adds r0, r0, r1
	str r0, [r6, #4]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803E69C: .4byte gUnknown_080D7B10
_0803E6A0: .4byte sub_801EC3C
_0803E6A4: .4byte 0xFFFFEE00

	thumb_func_start sub_803E6A8
sub_803E6A8: @ 0x0803E6A8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x64]
	lsls r1, r0, #2
	adds r2, r1, r0
	ldr r3, _0803E6E8 @ =0x000003FF
	adds r1, r3, #0
	ands r2, r1
	adds r0, #1
	str r0, [r4, #0x64]
	adds r0, r4, #0
	adds r0, #0x71
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803E6E2
	ldr r1, _0803E6EC @ =gUnknown_08097AA4
	lsls r0, r2, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0xc0
	bl Div
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r1, r4, #0
	adds r1, #0x60
	strh r0, [r1]
_0803E6E2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803E6E8: .4byte 0x000003FF
_0803E6EC: .4byte gUnknown_08097AA4

	thumb_func_start sub_803E6F0
sub_803E6F0: @ 0x0803E6F0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	bl sub_803DB1C
	ldr r0, [r7, #0x68]
	cmp r0, #0
	bne _0803E750
	ldr r1, [r7]
	ldr r0, _0803E738 @ =0xFFFFF800
	adds r1, r1, r0
	ldr r2, [r7, #4]
	ldr r4, _0803E73C @ =0xFFFFEA00
	adds r2, r2, r4
	movs r3, #0x80
	lsls r3, r3, #2
	movs r0, #8
	str r0, [sp]
	ldr r6, _0803E740 @ =gUnknown_080D7B13
	ldr r5, _0803E744 @ =gUnknown_030053B8
	ldr r4, [r5]
	ldr r0, _0803E748 @ =0x00196225
	muls r0, r4, r0
	ldr r4, _0803E74C @ =0x3C6EF35F
	adds r0, r0, r4
	str r0, [r5]
	movs r4, #0xf
	ands r0, r4
	adds r0, r0, r6
	ldrb r0, [r0]
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_803E7D4
	movs r0, #0x71
	b _0803E75C
	.align 2, 0
_0803E738: .4byte 0xFFFFF800
_0803E73C: .4byte 0xFFFFEA00
_0803E740: .4byte gUnknown_080D7B13
_0803E744: .4byte gUnknown_030053B8
_0803E748: .4byte 0x00196225
_0803E74C: .4byte 0x3C6EF35F
_0803E750:
	cmp r0, #0x96
	bls _0803E758
	movs r0, #0x96
	str r0, [r7, #0x68]
_0803E758:
	ldr r0, [r7, #0x68]
	subs r0, #1
_0803E75C:
	str r0, [r7, #0x68]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_803E768
sub_803E768: @ 0x0803E768
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r4, r0
	ldr r0, [r0, #0x6c]
	bl sub_8007CF0
	ldr r0, _0803E790 @ =IWRAM_START + 0x84
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	ldr r1, _0803E794 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803E790: .4byte IWRAM_START + 0x84
_0803E794: .4byte gUnknown_03005B4C

	thumb_func_start sub_803E798
sub_803E798: @ 0x0803E798
	push {lr}
	adds r2, r0, #0
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r3, r2, r0
	adds r1, r2, #0
	adds r1, #0x73
	movs r0, #0x1e
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x72
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803E7CA
	movs r0, #0xa2
	lsls r0, r0, #2
	strh r0, [r3, #0xa]
	subs r0, #0xe4
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _0803E7D0 @ =0x000001A5
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_0803E7CA:
	pop {r0}
	bx r0
	.align 2, 0
_0803E7D0: .4byte 0x000001A5

	thumb_func_start sub_803E7D4
sub_803E7D4: @ 0x0803E7D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	mov r8, r1
	mov sb, r2
	adds r4, r3, #0
	ldr r5, [sp, #0x24]
	ldr r6, [sp, #0x28]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0803E864 @ =sub_803E8DC
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r1, #0
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r1, _0803E868 @ =gUnknown_03005960
	ldr r0, [r1]
	lsls r0, r0, #8
	mov r2, r8
	subs r0, r2, r0
	str r0, [r7]
	ldr r0, [r1, #4]
	lsls r0, r0, #8
	mov r1, sb
	subs r0, r1, r0
	str r0, [r7, #4]
	ldr r1, _0803E86C @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r4, r2
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r5, r0
	asrs r0, r0, #0xe
	strh r0, [r7, #8]
	lsls r0, r4, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r5, r0
	asrs r0, r0, #0xd
	strh r0, [r7, #0xa]
	strb r6, [r7, #0xc]
	mov r2, sl
	str r2, [r7, #0x10]
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r4, r0
	bls _0803E870
	movs r0, #0xf5
	bl m4aSongNumStart
	b _0803E876
	.align 2, 0
_0803E864: .4byte sub_803E8DC
_0803E868: .4byte gUnknown_03005960
_0803E86C: .4byte gUnknown_08097AA4
_0803E870:
	movs r0, #0xf4
	bl m4aSongNumStart
_0803E876:
	adds r1, r7, #0
	adds r1, #0x14
	mov r4, r8
	asrs r0, r4, #8
	movs r3, #0
	movs r2, #0
	strh r0, [r1, #0x16]
	mov r4, sb
	asrs r0, r4, #8
	strh r0, [r1, #0x18]
	mov r4, sl
	ldr r0, [r4, #0x6c]
	str r0, [r1, #4]
	ldr r0, _0803E8D8 @ =0x00000287
	strh r0, [r1, #0xa]
	adds r0, r7, #0
	adds r0, #0x34
	strb r3, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r2, [r1, #8]
	strh r2, [r1, #0x14]
	strh r2, [r1, #0x1c]
	adds r2, r7, #0
	adds r2, #0x35
	movs r0, #0xff
	strb r0, [r2]
	adds r2, #1
	movs r0, #0x10
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x39
	strb r3, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r1, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803E8D8: .4byte 0x00000287

	thumb_func_start sub_803E8DC
sub_803E8DC: @ 0x0803E8DC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	ldr r0, _0803E920 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0x14
	adds r6, r1, r0
	ldrh r0, [r7, #0xa]
	adds r0, #0x20
	strh r0, [r7, #0xa]
	ldr r0, _0803E924 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0803E92C
	movs r2, #8
	ldrsh r1, [r7, r2]
	ldr r0, [r7]
	adds r0, r0, r1
	str r0, [r7]
	movs r0, #0xa
	ldrsh r1, [r7, r0]
	ldr r0, [r7, #4]
	adds r0, r0, r1
	str r0, [r7, #4]
	ldr r4, _0803E928 @ =gUnknown_03005960
	b _0803E950
	.align 2, 0
_0803E920: .4byte gCurTask
_0803E924: .4byte gUnknown_030059E0
_0803E928: .4byte gUnknown_03005960
_0803E92C:
	movs r2, #8
	ldrsh r1, [r7, r2]
	ldr r2, _0803EA5C @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	subs r1, r1, r0
	ldr r0, [r7]
	subs r0, r0, r1
	str r0, [r7]
	movs r0, #0xa
	ldrsh r1, [r7, r0]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r7, #4]
	adds r0, r0, r1
	str r0, [r7, #4]
	adds r4, r2, #0
_0803E950:
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	adds r2, r4, #0
	ldr r1, [r2, #4]
	adds r1, #0xc
	adds r0, r0, r1
	ldr r1, [r7]
	asrs r1, r1, #8
	ldr r2, [r2]
	adds r1, r1, r2
	add r2, sp, #8
	str r2, [sp]
	ldr r2, _0803EA60 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	mov r8, r1
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0803E998
	lsls r1, r0, #8
	ldr r0, [r7, #4]
	adds r0, r0, r1
	str r0, [r7, #4]
	movs r2, #0xa
	ldrsh r0, [r7, r2]
	lsls r0, r0, #3
	rsbs r0, r0, #0
	movs r1, #0xa
	bl Div
	strh r0, [r7, #0xa]
_0803E998:
	ldr r0, [r7]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	strh r0, [r6, #0x18]
	ldr r0, [r7, #0x10]
	adds r0, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803EA00
	ldr r1, [r7]
	asrs r1, r1, #8
	ldr r0, [r4]
	adds r1, r1, r0
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	ldr r0, [r4, #4]
	adds r2, r2, r0
	ldr r0, _0803EA64 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800CA20
	adds r5, r0, #0
	cmp r5, #1
	bne _0803EA00
	ldr r2, [r7, #0x10]
	adds r0, r2, #0
	adds r0, #0x72
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803E9FE
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r1, r2, r0
	adds r3, r2, #0
	adds r3, #0x73
	movs r0, #0x1e
	strb r0, [r3]
	ldr r0, _0803EA68 @ =0x00000275
	strh r0, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r2, r1
	strb r5, [r0]
	ldr r0, _0803EA6C @ =0x000001A5
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_0803E9FE:
	strb r5, [r7, #0xc]
_0803EA00:
	ldrb r0, [r7, #0xc]
	subs r0, #1
	strb r0, [r7, #0xc]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EA16
	ldr r0, [r7, #0x10]
	adds r0, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803EADC
_0803EA16:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0xf
	ble _0803EA7C
	movs r0, #0xf2
	bl m4aSongNumStart
	ldr r3, [r6, #4]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r3, r3, r2
	str r3, [sp, #0xc]
	ldr r5, _0803EA70 @ =0xFFFF0000
	ldr r0, [sp, #0x10]
	ands r5, r0
	ldr r0, _0803EA74 @ =0x0000027E
	orrs r5, r0
	ldr r0, _0803EA78 @ =0xFF00FFFF
	ands r5, r0
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	asrs r1, r1, #8
	ldr r4, _0803EA5C @ =gUnknown_03005960
	ldr r2, [r4]
	adds r1, r1, r2
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	ldr r4, [r4, #4]
	adds r2, r2, r4
	str r5, [sp]
	bl sub_803EAF4
	b _0803EAB8
	.align 2, 0
_0803EA5C: .4byte gUnknown_03005960
_0803EA60: .4byte sub_801EE64
_0803EA64: .4byte gUnknown_030059E0
_0803EA68: .4byte 0x00000275
_0803EA6C: .4byte 0x000001A5
_0803EA70: .4byte 0xFFFF0000
_0803EA74: .4byte 0x0000027E
_0803EA78: .4byte 0xFF00FFFF
_0803EA7C:
	movs r0, #0xf3
	bl m4aSongNumStart
	ldr r3, [r6, #4]
	movs r1, #0xe8
	lsls r1, r1, #3
	adds r3, r3, r1
	str r3, [sp, #0xc]
	ldr r5, _0803EAC4 @ =0xFFFF0000
	ldr r2, [sp, #0x10]
	ands r5, r2
	ldr r0, _0803EAC8 @ =0x0000027F
	orrs r5, r0
	ldr r0, _0803EACC @ =0xFF00FFFF
	ands r5, r0
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	asrs r1, r1, #8
	ldr r6, _0803EAD0 @ =gUnknown_03005960
	ldr r2, [r6]
	adds r1, r1, r2
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	adds r4, #0xf
	adds r2, r2, r4
	ldr r4, [r6, #4]
	adds r2, r2, r4
	str r5, [sp]
	bl sub_803EAF4
_0803EAB8:
	ldr r0, _0803EAD4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803EAD8 @ =sub_803EC84
	str r0, [r1, #8]
	b _0803EAE8
	.align 2, 0
_0803EAC4: .4byte 0xFFFF0000
_0803EAC8: .4byte 0x0000027F
_0803EACC: .4byte 0xFF00FFFF
_0803EAD0: .4byte gUnknown_03005960
_0803EAD4: .4byte gCurTask
_0803EAD8: .4byte sub_803EC84
_0803EADC:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0803EAE8:
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_803EAF4
sub_803EAF4: @ 0x0803EAF4
	sub sp, #4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp, #4]
	mov r8, r1
	mov sb, r2
	str r3, [sp, #0x28]
	ldr r4, [sp, #0x28]
	ldr r5, [sp, #0x2c]
	ldr r0, _0803EBA0 @ =sub_803EBBC
	movs r2, #0xc4
	lsls r2, r2, #7
	movs r6, #0
	str r6, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r2, _0803EBA4 @ =gUnknown_03005960
	ldr r0, [r2]
	mov r7, r8
	subs r0, r7, r0
	str r0, [r1]
	ldr r0, [r2, #4]
	mov r2, sb
	subs r0, r2, r0
	str r0, [r1, #4]
	movs r7, #0
	mov sl, r7
	strh r6, [r1, #8]
	strh r6, [r1, #0xa]
	ldr r0, [sp, #4]
	str r0, [r1, #0x10]
	ldr r2, _0803EBA8 @ =IWRAM_START + 0x14
	adds r1, r3, r2
	mov r7, r8
	strh r7, [r1, #0x16]
	mov r0, sb
	strh r0, [r1, #0x18]
	str r4, [r1, #4]
	strh r5, [r1, #0xa]
	lsrs r2, r5, #0x10
	ldr r4, _0803EBAC @ =IWRAM_START + 0x34
	adds r0, r3, r4
	strb r2, [r0]
	movs r0, #0xc8
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r6, [r1, #8]
	strh r6, [r1, #0x14]
	strh r6, [r1, #0x1c]
	ldr r7, _0803EBB0 @ =IWRAM_START + 0x35
	adds r2, r3, r7
	movs r0, #0xff
	strb r0, [r2]
	ldr r0, _0803EBB4 @ =IWRAM_START + 0x36
	adds r2, r3, r0
	movs r0, #0x10
	strb r0, [r2]
	ldr r2, _0803EBB8 @ =IWRAM_START + 0x39
	adds r3, r3, r2
	mov r4, sl
	strb r4, [r3]
	subs r0, #0x11
	str r0, [r1, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r1, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r3}
	add sp, #4
	bx r3
	.align 2, 0
_0803EBA0: .4byte sub_803EBBC
_0803EBA4: .4byte gUnknown_03005960
_0803EBA8: .4byte IWRAM_START + 0x14
_0803EBAC: .4byte IWRAM_START + 0x34
_0803EBB0: .4byte IWRAM_START + 0x35
_0803EBB4: .4byte IWRAM_START + 0x36
_0803EBB8: .4byte IWRAM_START + 0x39

	thumb_func_start sub_803EBBC
sub_803EBBC: @ 0x0803EBBC
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0803EC6C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldr r6, _0803EC70 @ =gUnknown_030059E0
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0803EBEE
	ldr r2, _0803EC74 @ =gUnknown_03005960
	ldr r0, [r4]
	ldr r1, [r2, #0x38]
	adds r0, r0, r1
	str r0, [r4]
	ldr r0, [r4, #4]
	ldr r1, [r2, #0x3c]
	adds r0, r0, r1
	str r0, [r4, #4]
_0803EBEE:
	ldr r0, [r4]
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	strh r0, [r5, #0x18]
	ldr r0, [r4, #0x10]
	adds r0, #0x70
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803EC4C
	ldr r3, _0803EC74 @ =gUnknown_03005960
	ldr r1, [r4]
	ldr r0, [r3]
	adds r1, r1, r0
	ldr r2, [r4, #4]
	ldr r0, [r3, #4]
	adds r2, r2, r0
	str r6, [sp]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800CA20
	adds r6, r0, #0
	cmp r6, #1
	bne _0803EC4C
	ldr r2, [r4, #0x10]
	adds r0, r2, #0
	adds r0, #0x72
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803EC4C
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r1, r2, r0
	adds r3, r2, #0
	adds r3, #0x73
	movs r0, #0x1e
	strb r0, [r3]
	ldr r0, _0803EC78 @ =0x00000275
	strh r0, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r2, r1
	strb r6, [r0]
	ldr r0, _0803EC7C @ =0x000001A5
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_0803EC4C:
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _0803EC5E
	ldr r0, _0803EC6C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803EC80 @ =sub_803EC84
	str r0, [r1, #8]
_0803EC5E:
	adds r0, r5, #0
	bl sub_80051E8
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803EC6C: .4byte gCurTask
_0803EC70: .4byte gUnknown_030059E0
_0803EC74: .4byte gUnknown_03005960
_0803EC78: .4byte 0x00000275
_0803EC7C: .4byte 0x000001A5
_0803EC80: .4byte sub_803EC84

	thumb_func_start sub_803EC84
sub_803EC84: @ 0x0803EC84
	push {lr}
	ldr r0, _0803EC94 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_0803EC94: .4byte gCurTask

	thumb_func_start sub_803EC98
sub_803EC98: @ 0x0803EC98
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x60
	ldr r2, _0803ECFC @ =gUnknown_030059E0
	movs r0, #0
	str r0, [r2, #0x3c]
	ldr r0, [r2, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _0803ED00 @ =gUnknown_030053B8
	ldr r0, _0803ED04 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _0803ED08 @ =sub_80410E0
	movs r1, #0xe7
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0803ED0C @ =sub_8041028
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	str r0, [sp, #4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r0, _0803ED10 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803ED1C
	ldr r0, _0803ED14 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _0803ED1C
	ldr r0, _0803ED18 @ =IWRAM_START + 0x32
	adds r1, r1, r0
	movs r0, #6
	b _0803ED22
	.align 2, 0
_0803ECFC: .4byte gUnknown_030059E0
_0803ED00: .4byte gUnknown_030053B8
_0803ED04: .4byte gUnknown_03005590
_0803ED08: .4byte sub_80410E0
_0803ED0C: .4byte sub_8041028
_0803ED10: .4byte gUnknown_030054EC
_0803ED14: .4byte gUnknown_030054CC
_0803ED18: .4byte IWRAM_START + 0x32
_0803ED1C:
	adds r1, r6, #0
	adds r1, #0x32
	movs r0, #8
_0803ED22:
	strb r0, [r1]
	ldr r0, _0803EE80 @ =gUnknown_030055B4
	movs r1, #0
	ldrsb r1, [r0, r1]
	mov sl, r0
	cmp r1, #0x1c
	beq _0803ED32
	b _0803EEB0
_0803ED32:
	adds r1, r6, #0
	adds r1, #0x32
	ldrb r0, [r1]
	lsrs r0, r0, #1
	strb r0, [r1]
	mov r1, sl
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	beq _0803ED48
	b _0803EEB0
_0803ED48:
	ldr r0, _0803EE84 @ =0x00359200
	str r0, [r6]
	movs r1, #0xaa
	lsls r1, r1, #8
	str r1, [r6, #4]
	movs r5, #0
	movs r2, #0x3c
	adds r2, r2, r6
	mov sb, r2
	movs r3, #0x40
	adds r3, r3, r6
	mov r8, r3
	adds r7, r6, #0
	adds r7, #0x33
	str r7, [sp, #0x3c]
	adds r2, r6, #0
	adds r2, #0x34
	str r2, [sp, #0x40]
	adds r3, r6, #0
	adds r3, #0x35
	str r3, [sp, #0x44]
	adds r7, #3
	str r7, [sp, #0x48]
	movs r2, #0xb4
	adds r2, r2, r6
	mov ip, r2
	adds r3, #0x8b
	str r3, [sp, #8]
	adds r7, #0xaa
	str r7, [sp, #0xc]
	adds r2, r6, #0
	adds r2, #0xe1
	str r2, [sp, #0x10]
	adds r3, #0x22
	str r3, [sp, #0x14]
	adds r7, #5
	str r7, [sp, #0x18]
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r2, r6, r2
	str r2, [sp, #0x2c]
	ldr r3, _0803EE88 @ =0x00000389
	adds r3, r6, r3
	str r3, [sp, #0x30]
	ldr r7, _0803EE8C @ =0x0000038A
	adds r7, r6, r7
	str r7, [sp, #0x34]
	ldr r2, _0803EE90 @ =0x0000038D
	adds r2, r6, r2
	str r2, [sp, #0x38]
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r3, r6, r3
	str r3, [sp, #0x1c]
	ldr r7, _0803EE94 @ =0x00000359
	adds r7, r6, r7
	str r7, [sp, #0x20]
	ldr r2, _0803EE98 @ =0x0000035A
	adds r2, r6, r2
	str r2, [sp, #0x24]
	ldr r3, _0803EE9C @ =0x0000035D
	adds r3, r6, r3
	str r3, [sp, #0x28]
	movs r7, #0xb2
	lsls r7, r7, #2
	adds r7, r6, r7
	str r7, [sp, #0x4c]
	ldr r2, _0803EEA0 @ =0x000002C9
	adds r2, r6, r2
	str r2, [sp, #0x50]
	ldr r3, _0803EEA4 @ =0x000002CA
	adds r3, r6, r3
	str r3, [sp, #0x54]
	ldr r7, _0803EEA8 @ =0x000002CD
	adds r7, r6, r7
	str r7, [sp, #0x58]
	adds r3, r6, #0
	adds r3, #0xc
	adds r7, r0, #0
	adds r2, r6, #0
	adds r2, #0x10
	adds r4, r1, #0
_0803EDEC:
	lsls r1, r5, #3
	adds r0, r3, r1
	str r7, [r0]
	adds r1, r2, r1
	str r4, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803EDEC
	movs r5, #0
	movs r3, #0
	movs r4, #0
_0803EE06:
	lsls r1, r5, #3
	subs r1, r1, r5
	lsls r1, r1, #2
	mov r0, sb
	adds r2, r0, r1
	ldr r0, _0803EE84 @ =0x00359200
	str r0, [r2]
	mov r7, r8
	adds r2, r7, r1
	lsls r0, r5, #1
	ldr r7, _0803EEAC @ =gUnknown_080D7BE2
	adds r0, r0, r7
	movs r7, #0
	ldrsh r0, [r0, r7]
	movs r7, #0xaa
	lsls r7, r7, #8
	adds r0, r0, r7
	str r0, [r2]
	adds r2, r6, r1
	adds r0, r2, #0
	adds r0, #0x44
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r1, r2, #0
	adds r1, #0x48
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0x4e
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	subs r0, #5
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	mov r1, sl
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _0803EE64
	adds r1, r2, #0
	adds r1, #0x50
	movs r0, #1
	strb r0, [r1]
_0803EE64:
	adds r0, r2, #0
	adds r0, #0x53
	strb r3, [r0]
	subs r0, #2
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803EE06
	b _0803F038
	.align 2, 0
_0803EE80: .4byte gUnknown_030055B4
_0803EE84: .4byte 0x00359200
_0803EE88: .4byte 0x00000389
_0803EE8C: .4byte 0x0000038A
_0803EE90: .4byte 0x0000038D
_0803EE94: .4byte 0x00000359
_0803EE98: .4byte 0x0000035A
_0803EE9C: .4byte 0x0000035D
_0803EEA0: .4byte 0x000002C9
_0803EEA4: .4byte 0x000002CA
_0803EEA8: .4byte 0x000002CD
_0803EEAC: .4byte gUnknown_080D7BE2
_0803EEB0:
	movs r0, #0xaa
	lsls r0, r0, #0xa
	str r0, [r6]
	movs r1, #0xaa
	lsls r1, r1, #8
	str r1, [r6, #4]
	movs r5, #0
	movs r2, #0x3c
	adds r2, r2, r6
	mov sb, r2
	movs r3, #0x40
	adds r3, r3, r6
	mov r8, r3
	adds r7, r6, #0
	adds r7, #0x33
	str r7, [sp, #0x3c]
	adds r2, r6, #0
	adds r2, #0x34
	str r2, [sp, #0x40]
	adds r3, r6, #0
	adds r3, #0x35
	str r3, [sp, #0x44]
	adds r7, #3
	str r7, [sp, #0x48]
	movs r2, #0xb4
	adds r2, r2, r6
	mov ip, r2
	adds r3, #0x8b
	str r3, [sp, #8]
	adds r7, #0xaa
	str r7, [sp, #0xc]
	adds r2, r6, #0
	adds r2, #0xe1
	str r2, [sp, #0x10]
	adds r3, #0x22
	str r3, [sp, #0x14]
	adds r7, #5
	str r7, [sp, #0x18]
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r2, r6, r2
	str r2, [sp, #0x2c]
	ldr r3, _0803EFDC @ =0x00000389
	adds r3, r6, r3
	str r3, [sp, #0x30]
	ldr r7, _0803EFE0 @ =0x0000038A
	adds r7, r6, r7
	str r7, [sp, #0x34]
	ldr r2, _0803EFE4 @ =0x0000038D
	adds r2, r6, r2
	str r2, [sp, #0x38]
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r3, r6, r3
	str r3, [sp, #0x1c]
	ldr r7, _0803EFE8 @ =0x00000359
	adds r7, r6, r7
	str r7, [sp, #0x20]
	ldr r2, _0803EFEC @ =0x0000035A
	adds r2, r6, r2
	str r2, [sp, #0x24]
	ldr r3, _0803EFF0 @ =0x0000035D
	adds r3, r6, r3
	str r3, [sp, #0x28]
	movs r7, #0xb2
	lsls r7, r7, #2
	adds r7, r6, r7
	str r7, [sp, #0x4c]
	ldr r2, _0803EFF4 @ =0x000002C9
	adds r2, r6, r2
	str r2, [sp, #0x50]
	ldr r3, _0803EFF8 @ =0x000002CA
	adds r3, r6, r3
	str r3, [sp, #0x54]
	ldr r7, _0803EFFC @ =0x000002CD
	adds r7, r6, r7
	str r7, [sp, #0x58]
	adds r3, r6, #0
	adds r3, #0xc
	adds r7, r0, #0
	adds r2, r6, #0
	adds r2, #0x10
	adds r4, r1, #0
_0803EF56:
	lsls r1, r5, #3
	adds r0, r3, r1
	str r7, [r0]
	adds r1, r2, r1
	str r4, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803EF56
	movs r5, #0
	movs r4, #0
	ldr r0, _0803F000 @ =gUnknown_030054CC
	mov sl, r0
_0803EF72:
	lsls r3, r5, #3
	subs r2, r3, r5
	lsls r2, r2, #2
	mov r7, sb
	adds r1, r7, r2
	movs r0, #0xaa
	lsls r0, r0, #0xa
	str r0, [r1]
	mov r0, r8
	adds r1, r0, r2
	lsls r0, r5, #1
	ldr r7, _0803F004 @ =gUnknown_080D7BE2
	adds r0, r0, r7
	movs r7, #0
	ldrsh r0, [r0, r7]
	movs r7, #0xaa
	lsls r7, r7, #8
	adds r0, r0, r7
	str r0, [r1]
	adds r2, r6, r2
	adds r0, r2, #0
	adds r0, #0x44
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r1, r2, #0
	adds r1, #0x48
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0x4e
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	subs r0, #5
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldr r7, _0803F008 @ =gUnknown_030054EC
	ldrb r0, [r7]
	cmp r0, #0
	beq _0803F00C
	mov r1, sl
	ldrb r0, [r1]
	cmp r0, #2
	beq _0803F00C
	adds r1, r2, #0
	adds r1, #0x50
	movs r0, #1
	strb r0, [r1]
	b _0803F018
	.align 2, 0
_0803EFDC: .4byte 0x00000389
_0803EFE0: .4byte 0x0000038A
_0803EFE4: .4byte 0x0000038D
_0803EFE8: .4byte 0x00000359
_0803EFEC: .4byte 0x0000035A
_0803EFF0: .4byte 0x0000035D
_0803EFF4: .4byte 0x000002C9
_0803EFF8: .4byte 0x000002CA
_0803EFFC: .4byte 0x000002CD
_0803F000: .4byte gUnknown_030054CC
_0803F004: .4byte gUnknown_080D7BE2
_0803F008: .4byte gUnknown_030054EC
_0803F00C:
	subs r0, r3, r5
	lsls r0, r0, #2
	adds r0, r6, r0
	adds r0, #0x50
	movs r1, #3
	strb r1, [r0]
_0803F018:
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #2
	adds r0, r6, r0
	adds r1, r0, #0
	adds r1, #0x53
	strb r4, [r1]
	subs r1, #2
	strb r4, [r1]
	adds r0, #0x52
	strb r4, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803EF72
_0803F038:
	movs r5, #0
	movs r4, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r6, #8]
	strh r4, [r6, #0xa]
	movs r0, #0xf0
	ldr r2, [sp, #0x3c]
	strb r0, [r2]
	strh r4, [r6, #0x30]
	ldr r3, [sp, #0x40]
	strb r5, [r3]
	ldr r7, [sp, #0x44]
	strb r5, [r7]
	ldr r0, [sp, #0x48]
	strb r5, [r0]
	movs r0, #0x78
	mov r1, ip
	str r0, [r1]
	movs r0, #8
	bl sub_8007C10
	movs r2, #0xe6
	lsls r2, r2, #2
	adds r1, r6, r2
	str r0, [r1]
	ldr r7, [sp, #8]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x78
	bl sub_8007C10
	str r0, [r7, #4]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r3, r3, r0
	mov ip, r3
	ldr r1, _0803F37C @ =0x0000028B
	strh r1, [r7, #0xa]
	ldr r1, [sp, #0xc]
	strb r5, [r1]
	movs r2, #0xb8
	lsls r2, r2, #3
	mov r8, r2
	mov r3, r8
	strh r3, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r1, #0xff
	ldr r2, [sp, #0x10]
	strb r1, [r2]
	movs r3, #0x10
	mov sb, r3
	mov r2, sb
	ldr r1, [sp, #0x14]
	strb r2, [r1]
	ldr r3, [sp, #0x18]
	strb r5, [r3]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	movs r3, #0xda
	lsls r3, r3, #2
	adds r7, r6, r3
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	mov r3, ip
	str r3, [r7, #4]
	movs r3, #0x88
	lsls r3, r3, #4
	adds r3, r3, r0
	mov ip, r3
	ldr r0, _0803F380 @ =0x0000028A
	strh r0, [r7, #0xa]
	ldr r0, [sp, #0x2c]
	strb r5, [r0]
	mov r3, r8
	strh r3, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov sl, r2
	mov r3, sl
	ldr r0, [sp, #0x30]
	strb r3, [r0]
	mov r3, sb
	ldr r0, [sp, #0x34]
	strb r3, [r0]
	ldr r0, [sp, #0x38]
	strb r5, [r0]
	str r2, [r7, #0x28]
	str r1, [r7, #0x10]
	movs r3, #0xce
	lsls r3, r3, #2
	adds r7, r6, r3
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	mov r0, ip
	str r0, [r7, #4]
	movs r0, #0xa5
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	ldr r3, [sp, #0x1c]
	strb r5, [r3]
	mov r0, r8
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r2, #0
	ldr r3, [sp, #0x20]
	strb r0, [r3]
	mov r3, sb
	ldr r0, [sp, #0x24]
	strb r3, [r0]
	ldr r0, [sp, #0x28]
	strb r5, [r0]
	str r2, [r7, #0x28]
	str r1, [r7, #0x10]
	movs r5, #0
	movs r1, #0
	mov r8, r1
	movs r2, #0
_0803F136:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, #0xf8
	adds r7, r6, r0
	strh r2, [r7, #0x16]
	strh r2, [r7, #0x18]
	ldr r0, _0803F384 @ =gUnknown_080D7BB0
	lsls r4, r5, #3
	adds r4, r4, r0
	ldr r0, [r4]
	str r2, [sp, #0x5c]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	ldr r0, _0803F388 @ =gUnknown_080D7BD8
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #6
	strh r0, [r7, #0x1a]
	ldr r2, [sp, #0x5c]
	strh r2, [r7, #8]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	mov r3, r8
	strb r3, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803F136
	movs r5, #0
	movs r2, #0
	movs r4, #0
	ldr r7, _0803F38C @ =0x0000028F
	mov r8, r7
_0803F1A8:
	lsls r0, r5, #6
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r7, r6, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x1e
	str r2, [sp, #0x5c]
	bl sub_8007C10
	str r0, [r7, #4]
	mov r3, r8
	strh r3, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	ldr r2, [sp, #0x5c]
	strb r2, [r0]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0803F1A8
	movs r5, #0
	movs r2, #0
_0803F206:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	movs r7, #0x92
	lsls r7, r7, #2
	adds r0, r0, r7
	adds r7, r6, r0
	strh r2, [r7, #0x16]
	strh r2, [r7, #0x18]
	ldr r0, _0803F390 @ =gUnknown_080D7BC8
	lsls r4, r5, #3
	adds r4, r4, r0
	ldr r0, [r4]
	str r2, [sp, #0x5c]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	ldr r2, [sp, #0x5c]
	strh r2, [r7, #8]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r3, #1
	rsbs r3, r3, #0
	mov r8, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	movs r3, #0
	strb r3, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov sl, r0
	str r0, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	mov sb, r1
	str r1, [r7, #0x10]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _0803F206
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r7, r6, r2
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0803F394 @ =0x00000275
	strh r0, [r7, #0xa]
	ldr r3, [sp, #0x4c]
	strb r5, [r3]
	movs r0, #0xb0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, [sp, #0x50]
	ldrb r0, [r1]
	mov r2, r8
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0x10
	ldr r3, [sp, #0x54]
	strb r0, [r3]
	ldr r1, [sp, #0x58]
	strb r5, [r1]
	mov r2, sl
	str r2, [r7, #0x28]
	mov r3, sb
	str r3, [r7, #0x10]
	ldr r2, _0803F398 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _0803F3BC
	ldr r0, _0803F39C @ =gUnknown_030054F0
	movs r4, #0
	ldrsb r4, [r0, r4]
	cmp r4, #0
	bne _0803F3BC
	ldr r0, _0803F3A0 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _0803F3BC
	movs r0, #0xb6
	lsls r0, r0, #2
	adds r7, r6, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x1e
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xde
	strh r0, [r7, #0xa]
	movs r1, #0xbe
	lsls r1, r1, #2
	adds r0, r6, r1
	strb r5, [r0]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r2, _0803F3A4 @ =0x000002F9
	adds r1, r6, r2
	ldrb r0, [r1]
	mov r3, r8
	orrs r0, r3
	strb r0, [r1]
	ldr r1, _0803F3A8 @ =0x000002FA
	adds r0, r6, r1
	movs r2, #0x10
	strb r2, [r0]
	ldr r3, _0803F3AC @ =0x000002FD
	adds r0, r6, r3
	strb r5, [r0]
	mov r0, sl
	str r0, [r7, #0x28]
	mov r1, sb
	str r1, [r7, #0x10]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r7, r6, r2
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xa4
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	movs r3, #0xca
	lsls r3, r3, #2
	adds r0, r6, r3
	strb r5, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r2, _0803F3B0 @ =0x00000329
	adds r1, r6, r2
	ldrb r0, [r1]
	mov r3, r8
	orrs r0, r3
	strb r0, [r1]
	ldr r1, _0803F3B4 @ =0x0000032A
	adds r0, r6, r1
	movs r2, #0x10
	strb r2, [r0]
	ldr r3, _0803F3B8 @ =0x0000032D
	adds r0, r6, r3
	strb r5, [r0]
	mov r0, sl
	str r0, [r7, #0x28]
	mov r1, sb
	str r1, [r7, #0x10]
	b _0803F3CE
	.align 2, 0
_0803F37C: .4byte 0x0000028B
_0803F380: .4byte 0x0000028A
_0803F384: .4byte gUnknown_080D7BB0
_0803F388: .4byte gUnknown_080D7BD8
_0803F38C: .4byte 0x0000028F
_0803F390: .4byte gUnknown_080D7BC8
_0803F394: .4byte 0x00000275
_0803F398: .4byte gUnknown_030055B4
_0803F39C: .4byte gUnknown_030054F0
_0803F3A0: .4byte gLoadedSaveGame
_0803F3A4: .4byte 0x000002F9
_0803F3A8: .4byte 0x000002FA
_0803F3AC: .4byte 0x000002FD
_0803F3B0: .4byte 0x00000329
_0803F3B4: .4byte 0x0000032A
_0803F3B8: .4byte 0x0000032D
_0803F3BC:
	movs r2, #0xb7
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0
	str r1, [r0]
	movs r3, #0xc3
	lsls r3, r3, #2
	adds r0, r6, r3
	str r1, [r0]
_0803F3CE:
	ldr r0, _0803F3E4 @ =gUnknown_03005B4C
	ldr r7, [sp, #4]
	str r7, [r0]
	add sp, #0x60
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803F3E4: .4byte gUnknown_03005B4C

	thumb_func_start sub_803F3E8
sub_803F3E8: @ 0x0803F3E8
	push {r4, r5, lr}
	ldr r0, _0803F408 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x33
	adds r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803F40C
	subs r0, #1
	strb r0, [r1]
	b _0803F416
	.align 2, 0
_0803F408: .4byte gCurTask
_0803F40C:
	movs r0, #0x50
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_804063C
_0803F416:
	adds r0, r4, #0
	bl sub_803FB88
	adds r0, r4, #0
	bl sub_80407A4
	adds r0, r4, #0
	bl sub_8041264
	adds r0, r4, #0
	bl sub_80408C4
	adds r0, r4, #0
	bl sub_8040A00
	adds r0, r4, #0
	bl sub_803F5E0
	adds r0, r4, #0
	bl sub_8040E78
	adds r0, r4, #0
	bl sub_803F698
	adds r0, r4, #0
	bl sub_8040F14
	adds r0, r4, #0
	adds r0, #0x32
	ldrb r5, [r0]
	cmp r5, #0
	bne _0803F4A4
	bl sub_802A018
	ldr r2, _0803F4AC @ =gUnknown_030059E0
	ldr r0, [r2, #0x3c]
	cmp r0, #0
	bne _0803F46C
	ldr r0, [r2, #0x20]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0803F47C
_0803F46C:
	str r5, [r2, #0x3c]
	ldr r0, [r2, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r2, #0x20]
_0803F47C:
	adds r0, r4, #0
	bl sub_803F4B8
	adds r0, r4, #0
	adds r0, #0x37
	movs r1, #0
	strb r1, [r0]
	adds r2, r4, #0
	adds r2, #0x38
	movs r0, #5
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x39
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r0, _0803F4B0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0803F4B4 @ =sub_8041138
	str r0, [r1, #8]
_0803F4A4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803F4AC: .4byte gUnknown_030059E0
_0803F4B0: .4byte gCurTask
_0803F4B4: .4byte sub_8041138

	thumb_func_start sub_803F4B8
sub_803F4B8: @ 0x0803F4B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov ip, r0
	ldr r4, _0803F5C8 @ =gUnknown_080D7BDC
	movs r1, #0
	ldrsh r0, [r4, r1]
	mov r2, ip
	ldr r5, [r2]
	adds r0, r5, r0
	str r0, [r2, #0xc]
	ldr r2, [r2, #4]
	ldr r3, _0803F5CC @ =0xFFFFF400
	adds r6, r2, r3
	mov r7, ip
	str r6, [r7, #0x10]
	movs r0, #0
	mov r8, r0
	movs r3, #0xa0
	lsls r3, r3, #3
	strh r3, [r7, #0x24]
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r7, #0x26]
	movs r7, #2
	ldrsh r0, [r4, r7]
	adds r0, r5, r0
	mov r7, ip
	str r0, [r7, #0x14]
	str r6, [r7, #0x18]
	strh r3, [r7, #0x28]
	strh r1, [r7, #0x2a]
	movs r6, #4
	ldrsh r0, [r4, r6]
	adds r0, r5, r0
	str r0, [r7, #0x1c]
	ldr r7, _0803F5D0 @ =0xFFFFFA00
	adds r2, r2, r7
	mov r0, ip
	str r2, [r0, #0x20]
	strh r3, [r0, #0x2c]
	strh r1, [r0, #0x2e]
	adds r0, #0x9c
	str r5, [r0]
	mov r1, ip
	adds r1, #0xa0
	mov r2, ip
	ldr r0, [r2, #4]
	str r0, [r1]
	mov r0, ip
	adds r0, #0xa4
	strh r3, [r0]
	adds r1, #6
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r1]
	subs r1, #0x16
	ldr r0, [r2]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #4]
	str r0, [r1]
	mov r0, ip
	adds r0, #0x98
	strh r3, [r0]
	adds r0, #2
	movs r2, #0xff
	lsls r2, r2, #8
	strh r2, [r0]
	adds r1, #0x14
	mov r4, ip
	ldr r0, [r4]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r4, #4]
	ldr r6, _0803F5D4 @ =0xFFFFE600
	adds r0, r0, r6
	str r0, [r1]
	mov r0, ip
	adds r0, #0xb0
	strh r3, [r0]
	adds r0, #2
	mov r7, r8
	strh r7, [r0]
	movs r4, #0
_0803F562:
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	adds r0, #0x3c
	add r0, ip
	strh r3, [r0, #8]
	strh r2, [r0, #0xa]
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, #1
	strb r1, [r0, #0x18]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0803F562
	movs r0, #0xb7
	lsls r0, r0, #2
	add r0, ip
	ldr r0, [r0]
	cmp r0, #0
	beq _0803F5BC
	movs r2, #0xb6
	lsls r2, r2, #2
	add r2, ip
	mov r1, ip
	adds r1, #0xb8
	mov r3, ip
	ldr r0, [r3]
	ldr r4, _0803F5D8 @ =0xFFFFD800
	adds r0, r0, r4
	str r0, [r1]
	adds r1, #4
	ldr r0, [r3, #4]
	ldr r6, _0803F5DC @ =0xFFFF9E00
	adds r0, r0, r6
	str r0, [r1]
	movs r0, #0xde
	strh r0, [r2, #0xa]
	movs r1, #0xbe
	lsls r1, r1, #2
	add r1, ip
	movs r0, #1
	strb r0, [r1]
_0803F5BC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803F5C8: .4byte gUnknown_080D7BDC
_0803F5CC: .4byte 0xFFFFF400
_0803F5D0: .4byte 0xFFFFFA00
_0803F5D4: .4byte 0xFFFFE600
_0803F5D8: .4byte 0xFFFFD800
_0803F5DC: .4byte 0xFFFF9E00

	thumb_func_start sub_803F5E0
sub_803F5E0: @ 0x0803F5E0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0xc0
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r8, r0
	ldr r0, [r4, #4]
	asrs r7, r0, #8
	ldr r1, _0803F634 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	strh r0, [r5, #0x16]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	ldr r6, _0803F638 @ =gUnknown_030059E0
	str r6, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r2, r7, #0
	movs r3, #1
	bl sub_800CA20
	str r6, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _0803F63C
	adds r0, r4, #0
	bl sub_8040D74
	b _0803F654
	.align 2, 0
_0803F634: .4byte gUnknown_03005960
_0803F638: .4byte gUnknown_030059E0
_0803F63C:
	str r6, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _0803F654
	adds r0, r4, #0
	bl sub_80412B4
_0803F654:
	ldr r0, [r4]
	ldr r1, [r4, #4]
	ldr r2, _0803F690 @ =0xFFFFB000
	adds r1, r1, r2
	bl sub_80122DC
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803F684
	ldr r0, _0803F694 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _0803F684
	adds r0, r4, #0
	bl sub_8040D74
_0803F684:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803F690: .4byte 0xFFFFB000
_0803F694: .4byte gUnknown_030059E0

	thumb_func_start sub_803F698
sub_803F698: @ 0x0803F698
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0xc0
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r4, _0803F7B8 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r5, r6, r0
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	subs r0, #0x52
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r7, #0
_0803F6F0:
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #4
	adds r0, #0xf8
	adds r5, r6, r0
	lsls r2, r7, #3
	adds r0, r6, #0
	adds r0, #0xc
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0x10
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r1, r0, r1
	adds r0, r1, #0
	subs r0, #0xe
	strh r0, [r5, #0x18]
	cmp r7, #2
	bne _0803F728
	adds r0, #6
	strh r0, [r5, #0x18]
_0803F728:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bls _0803F6F0
	movs r7, #0
	ldr r1, _0803F7B8 @ =gUnknown_03005960
	mov r8, r1
_0803F744:
	lsls r0, r7, #3
	subs r0, r0, r7
	lsls r0, r0, #2
	adds r0, #0x3c
	adds r4, r6, r0
	lsls r0, r7, #6
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r0, r0, r2
	adds r5, r6, r0
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r2, r8
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r1, _0803F7BC @ =gUnknown_08097AA4
	ldrh r0, [r4, #0xc]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	adds r0, #0x20
	adds r1, r5, #0
	adds r1, #0x22
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	cmp r1, #0
	beq _0803F7FE
	ldrb r0, [r4, #0x14]
	movs r2, #0x9e
	lsls r2, r2, #2
	adds r5, r6, r2
	cmp r0, #0
	beq _0803F7AA
	movs r0, #0x92
	lsls r0, r0, #2
	adds r5, r6, r0
_0803F7AA:
	cmp r1, #0
	ble _0803F7C4
	movs r3, #0
	ldr r0, [r5, #0x10]
	ldr r1, _0803F7C0 @ =0xFFFFF7FF
	ands r0, r1
	b _0803F7CE
	.align 2, 0
_0803F7B8: .4byte gUnknown_03005960
_0803F7BC: .4byte gUnknown_08097AA4
_0803F7C0: .4byte 0xFFFFF7FF
_0803F7C4:
	movs r3, #0xff
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
_0803F7CE:
	str r0, [r5, #0x10]
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r2, r8
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r0, [r2, #4]
	subs r1, r1, r0
	movs r2, #0x17
	ldrsb r2, [r4, r2]
	adds r2, r2, r1
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r2
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0803F7FE:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bls _0803F744
	movs r1, #0xb7
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _0803F868
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r5, r6, r2
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r4, _0803F874 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	subs r0, #0x10
	strh r0, [r5, #0x16]
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xb6
	lsls r0, r0, #2
	adds r5, r6, r0
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	subs r0, #0x28
	strh r0, [r5, #0x16]
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	subs r0, #0x62
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0803F868:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803F874: .4byte gUnknown_03005960

	thumb_func_start sub_803F878
sub_803F878: @ 0x0803F878
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	movs r4, #0
	ldr r7, _0803FA7C @ =gUnknown_03005960
_0803F888:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0xf8
	adds r5, r6, r0
	lsls r2, r4, #3
	adds r0, r6, #0
	adds r0, #0xc
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0x10
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0803F888
	movs r0, #0
	mov sl, r0
	adds r4, r6, #0
	adds r4, #0x37
	ldrb r0, [r4]
	cmp r0, #0
	bne _0803F914
	movs r1, #0xce
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r6, #0
	adds r0, #0xa8
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _0803FA7C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0xac
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _0803F90E
	movs r2, #1
	mov sl, r2
	mov r3, sl
	strb r3, [r4]
_0803F90E:
	adds r0, r5, #0
	bl sub_80051E8
_0803F914:
	movs r0, #0xda
	lsls r0, r0, #2
	adds r5, r6, r0
	adds r0, r6, #0
	adds r0, #0x9c
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, _0803FA7C @ =gUnknown_03005960
	mov r8, r1
	ldr r1, [r1]
	subs r0, r0, r1
	movs r4, #0
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0xa0
	ldr r0, [r0]
	asrs r0, r0, #8
	mov r2, r8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	adds r5, r6, #0
	adds r5, #0xc0
	ldr r0, _0803FA80 @ =0x00000289
	strh r0, [r5, #0xa]
	adds r0, r6, #0
	adds r0, #0xe0
	strb r4, [r0]
	adds r1, r6, #0
	adds r1, #0xe1
	movs r0, #0xff
	strb r0, [r1]
	adds r4, r6, #0
	adds r4, #0x90
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r3, r8
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r7, r6, #0
	adds r7, #0x94
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0x3a
	adds r0, r0, r6
	mov sb, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803F9F4
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r5, r6, r1
	ldr r1, [r4]
	asrs r1, r1, #8
	mov r2, r8
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r0, [r7]
	asrs r0, r0, #8
	ldr r2, [r2, #4]
	subs r0, r0, r2
	subs r0, #0x51
	strh r0, [r5, #0x18]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #0x31
	bgt _0803F9E8
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r3, r8
	ldr r1, [r3]
	subs r0, r0, r1
	subs r0, #4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7]
	asrs r1, r1, #8
	ldr r2, [r3, #4]
	subs r1, r1, r2
	subs r1, #0x4f
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_8039FA4
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
_0803F9E8:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0803F9F4:
	movs r4, #0
	ldr r7, _0803FA7C @ =gUnknown_03005960
_0803F9F8:
	lsls r2, r4, #3
	subs r2, r2, r4
	lsls r2, r2, #2
	adds r2, #0x3c
	adds r2, r6, r2
	lsls r0, r4, #6
	movs r3, #0xc4
	lsls r3, r3, #1
	adds r0, r0, r3
	adds r5, r6, r0
	ldr r0, [r2]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r2, #4]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0803F9F8
	movs r1, #0xb7
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _0803FA6C
	movs r2, #0xb6
	lsls r2, r2, #2
	adds r5, r6, r2
	adds r0, r6, #0
	adds r0, #0xb8
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _0803FA7C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0xbc
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0803FA6C:
	mov r0, sl
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803FA7C: .4byte gUnknown_03005960
_0803FA80: .4byte 0x00000289

	thumb_func_start sub_803FA84
sub_803FA84: @ 0x0803FA84
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _0803FB7C @ =gUnknown_03005B4C
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r0, [r3]
	adds r0, r0, r5
	str r0, [r3]
	ldr r0, [r3, #4]
	adds r0, r0, r6
	str r0, [r3, #4]
	movs r4, #0
	ldr r0, _0803FB80 @ =IWRAM_START + 0xC
	adds r0, r0, r1
	mov ip, r0
	ldr r0, _0803FB84 @ =IWRAM_START + 0x10
	adds r7, r1, r0
_0803FAB8:
	lsls r1, r4, #3
	mov r0, ip
	adds r2, r0, r1
	ldr r0, [r2]
	adds r0, r0, r5
	str r0, [r2]
	adds r1, r7, r1
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0803FAB8
	movs r4, #0
	movs r1, #0x9c
	adds r1, r1, r3
	mov ip, r1
	movs r0, #0xa0
	adds r0, r0, r3
	mov r8, r0
	movs r1, #0x90
	adds r1, r1, r3
	mov sb, r1
	movs r0, #0x94
	adds r0, r0, r3
	mov sl, r0
	adds r1, r3, #0
	adds r1, #0xa8
	str r1, [sp, #4]
	adds r0, r3, #0
	adds r0, #0xac
	str r0, [sp, #8]
	adds r1, #0x10
	str r1, [sp, #0xc]
	adds r0, #0x10
	str r0, [sp]
	adds r7, r3, #0
	adds r7, #0x3c
	adds r3, #0x40
_0803FB0A:
	lsls r1, r4, #3
	subs r1, r1, r4
	lsls r1, r1, #2
	adds r2, r7, r1
	ldr r0, [r2]
	adds r0, r0, r5
	str r0, [r2]
	adds r1, r3, r1
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0803FB0A
	mov r1, ip
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	mov r1, sb
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	mov r1, sl
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	ldr r1, [sp, #4]
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	ldr r1, [sp, #8]
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	ldr r1, [sp, #0xc]
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	ldr r1, [sp]
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803FB7C: .4byte gUnknown_03005B4C
_0803FB80: .4byte IWRAM_START + 0xC
_0803FB84: .4byte IWRAM_START + 0x10

	thumb_func_start sub_803FB88
sub_803FB88: @ 0x0803FB88
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	bl sub_804124C
	movs r7, #0
	movs r6, #0
_0803FB96:
	lsls r2, r6, #3
	adds r0, r5, #0
	adds r0, #0xc
	adds r3, r0, r2
	ldr r1, _0803FC08 @ =gUnknown_080D7BDC
	lsls r0, r6, #1
	adds r0, r0, r1
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r3]
	cmp r6, #0
	bne _0803FBB8
	ldr r0, [r5, #0x10]
	adds r0, #6
	str r0, [r5, #0x10]
_0803FBB8:
	adds r4, r5, #0
	adds r4, #0x10
	adds r4, r4, r2
	ldr r1, [r4]
	adds r7, r7, r1
	asrs r0, r1, #8
	subs r0, #1
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r2, _0803FC0C @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r0, #1
	lsls r0, r0, #8
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _0803FB96
	adds r0, r7, #0
	movs r1, #3
	bl Div
	ldr r2, _0803FC10 @ =0xFFFFFE00
	adds r1, r0, r2
	ldr r0, [r5, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x30]
	str r1, [r5, #4]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803FC08: .4byte gUnknown_080D7BDC
_0803FC0C: .4byte sub_801EC3C
_0803FC10: .4byte 0xFFFFFE00

	thumb_func_start sub_803FC14
sub_803FC14: @ 0x0803FC14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	mov sb, r0
	movs r3, #0
	mov r5, sb
	adds r5, #0xc
	mov r4, sb
	adds r4, #0x24
_0803FC2C:
	lsls r1, r3, #3
	adds r1, r5, r1
	lsls r0, r3, #2
	adds r0, r4, r0
	movs r6, #0
	ldrsh r2, [r0, r6]
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #2
	bls _0803FC2C
	movs r0, #0x9c
	add r0, sb
	mov sl, r0
	mov r0, sb
	adds r0, #0xa4
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r3, sl
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	mov r6, sb
	adds r6, #0x90
	mov r0, sb
	adds r0, #0x98
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	ldr r3, _0803FDCC @ =gUnknown_03005590
	ldr r0, [r3]
	movs r1, #0xe
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _0803FD04
	ldr r0, _0803FDD0 @ =gUnknown_030053B8
	mov r8, r0
	ldr r0, [r0]
	ldr r5, _0803FDD4 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _0803FDD8 @ =0x3C6EF35F
	adds r2, r2, r4
	ldr r1, [r6]
	asrs r1, r1, #8
	ldr r3, _0803FDDC @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	movs r6, #0x3f
	adds r0, r2, #0
	ands r0, r6
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r5, r2
	adds r2, r2, r4
	mov r0, sb
	adds r0, #0x94
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	movs r0, #0x1f
	ands r0, r2
	adds r1, r1, r0
	subs r1, #0x4b
	str r1, [sp, #0x1c]
	add r0, sp, #4
	strh r7, [r0, #0x1c]
	adds r3, r0, #0
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	ands r1, r6
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	mov r2, r8
	str r1, [r2]
	ldr r0, _0803FDE0 @ =0x000001FF
	ands r1, r0
	movs r0, #0xb0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _0803FDE4 @ =0x06012980
	str r0, [sp, #4]
	adds r1, r3, #0
	ldr r0, _0803FDE8 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r7, [r0, #0xa]
	str r7, [sp, #8]
	mov r1, sb
	adds r1, #0x39
	bl sub_8039B54
_0803FD04:
	ldr r3, _0803FDCC @ =gUnknown_03005590
	ldr r0, [r3]
	movs r1, #0xd
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _0803FD9A
	ldr r6, _0803FDD0 @ =gUnknown_030053B8
	mov r8, r6
	ldr r0, [r6]
	ldr r5, _0803FDD4 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _0803FDD8 @ =0x3C6EF35F
	adds r2, r2, r4
	mov r0, sl
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r3, _0803FDDC @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	movs r6, #0x3f
	adds r0, r2, #0
	ands r0, r6
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r5, r2
	adds r2, r2, r4
	mov r0, sb
	adds r0, #0xa0
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	movs r0, #0x1f
	ands r0, r2
	adds r1, r1, r0
	subs r1, #0x10
	str r1, [sp, #0x1c]
	add r0, sp, #4
	strh r7, [r0, #0x1c]
	adds r3, r0, #0
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	ands r1, r6
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	mov r2, r8
	str r1, [r2]
	ldr r0, _0803FDE0 @ =0x000001FF
	ands r1, r0
	movs r0, #0xb0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _0803FDE4 @ =0x06012980
	str r0, [sp, #4]
	adds r1, r3, #0
	ldr r0, _0803FDE8 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r7, [r0, #0xa]
	str r7, [sp, #8]
	mov r1, sb
	adds r1, #0x39
	bl sub_8039B54
_0803FD9A:
	mov r2, sb
	adds r2, #0xa8
	mov r0, sb
	adds r0, #0xb0
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r3, #0
_0803FDAE:
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #2
	adds r0, #0x3c
	mov r6, sb
	adds r4, r6, r0
	ldrb r0, [r4, #0x18]
	cmp r0, #0
	bne _0803FDEC
	ldrh r0, [r4, #0xa]
	adds r0, #0x20
	strh r0, [r4, #0xa]
	adds r3, #1
	str r3, [sp, #0x28]
	b _0803FEA8
	.align 2, 0
_0803FDCC: .4byte gUnknown_03005590
_0803FDD0: .4byte gUnknown_030053B8
_0803FDD4: .4byte 0x00196225
_0803FDD8: .4byte 0x3C6EF35F
_0803FDDC: .4byte gUnknown_03005960
_0803FDE0: .4byte 0x000001FF
_0803FDE4: .4byte 0x06012980
_0803FDE8: .4byte 0x0000026B
_0803FDEC:
	subs r0, #1
	strb r0, [r4, #0x18]
	lsls r0, r0, #0x18
	adds r3, #1
	str r3, [sp, #0x28]
	cmp r0, #0
	bne _0803FEA8
	movs r3, #0
	mov r0, sb
	adds r0, #0x39
	str r0, [sp, #0x24]
	ldr r1, _0803FF20 @ =gUnknown_030053B8
	mov sl, r1
	ldr r7, _0803FF24 @ =0x00196225
	ldr r6, _0803FF28 @ =0x3C6EF35F
	movs r2, #0x3f
	mov r8, r2
	add r5, sp, #4
_0803FE10:
	mov r1, sl
	ldr r0, [r1]
	adds r2, r0, #0
	muls r2, r7, r2
	adds r2, r2, r6
	ldr r1, [r4]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _0803FF2C @ =gUnknown_03005960
	ldr r0, [r1]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	adds r0, r2, #0
	mov r1, r8
	ands r0, r1
	add r0, ip
	adds r1, r0, #0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r7, r2
	adds r2, r2, r6
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _0803FF2C @ =gUnknown_03005960
	ldr r0, [r1, #4]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	movs r0, #7
	ands r0, r2
	add r0, ip
	subs r1, r0, #3
	str r1, [sp, #0x1c]
	movs r0, #0
	strh r0, [r5, #0x1c]
	muls r2, r7, r2
	adds r2, r2, r6
	adds r1, r2, #0
	mov r0, r8
	ands r1, r0
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	adds r1, r2, #0
	muls r1, r7, r1
	adds r1, r1, r6
	mov r2, sl
	str r1, [r2]
	ldr r0, _0803FF30 @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	ldr r0, _0803FF34 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _0803FF38 @ =0x0000026B
	strh r0, [r5, #8]
	movs r0, #0
	strh r0, [r5, #0xa]
	movs r1, #0
	str r1, [sp, #8]
	add r0, sp, #4
	ldr r1, [sp, #0x24]
	str r3, [sp, #0x2c]
	bl sub_8039B54
	ldr r3, [sp, #0x2c]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _0803FE10
_0803FEA8:
	movs r2, #8
	ldrsh r0, [r4, r2]
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	movs r3, #0xa
	ldrsh r2, [r4, r3]
	ldr r0, [r4, #4]
	adds r0, r0, r2
	str r0, [r4, #4]
	asrs r0, r0, #8
	adds r0, #3
	asrs r1, r1, #8
	ldr r2, _0803FF3C @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bge _0803FF02
	lsls r1, r0, #8
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	movs r6, #0xa
	ldrsh r1, [r4, r6]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r4, #0xa]
	ldrh r1, [r4, #8]
	movs r2, #8
	ldrsh r0, [r4, r2]
	cmp r0, #0
	ble _0803FF02
	ldr r3, _0803FF40 @ =0xFFFFFF00
	adds r0, r1, r3
	strh r0, [r4, #8]
_0803FF02:
	ldr r6, [sp, #0x28]
	lsls r0, r6, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #2
	bhi _0803FF0E
	b _0803FDAE
_0803FF0E:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803FF20: .4byte gUnknown_030053B8
_0803FF24: .4byte 0x00196225
_0803FF28: .4byte 0x3C6EF35F
_0803FF2C: .4byte gUnknown_03005960
_0803FF30: .4byte 0x000001FF
_0803FF34: .4byte 0x06012980
_0803FF38: .4byte 0x0000026B
_0803FF3C: .4byte sub_801EC3C
_0803FF40: .4byte 0xFFFFFF00

	thumb_func_start sub_803FF44
sub_803FF44: @ 0x0803FF44
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x5c
	str r0, [sp, #0x24]
	adds r0, #0x38
	ldrb r0, [r0]
	cmp r0, #0
	beq _0803FF5C
	b _080401C0
_0803FF5C:
	movs r6, #0
	ldr r0, [sp, #0x24]
	adds r0, #0x26
	str r0, [sp, #0x38]
	ldr r1, [sp, #0x24]
	adds r1, #0xc
	str r1, [sp, #0x28]
	ldr r2, [sp, #0x24]
	adds r2, #0x24
	str r2, [sp, #0x34]
	ldr r3, [sp, #0x24]
	adds r3, #0x10
	str r3, [sp, #0x2c]
	ldr r7, [sp, #0x24]
	adds r7, #0xa6
	mov sl, r7
	ldr r0, [sp, #0x24]
	adds r0, #0x9c
	str r0, [sp, #0x4c]
	ldr r1, [sp, #0x24]
	adds r1, #0xa4
	str r1, [sp, #0x50]
	ldr r2, [sp, #0x24]
	adds r2, #0xa0
	mov sb, r2
	ldr r3, [sp, #0x24]
	adds r3, #0x90
	str r3, [sp, #0x40]
	ldr r7, [sp, #0x24]
	adds r7, #0x94
	str r7, [sp, #0x44]
_0803FF9A:
	lsls r0, r6, #2
	mov r8, r0
	ldr r5, [sp, #0x38]
	add r5, r8
	ldrh r0, [r5]
	adds r0, #0x20
	strh r0, [r5]
	lsls r2, r6, #3
	ldr r1, [sp, #0x28]
	adds r3, r1, r2
	ldr r7, [sp, #0x34]
	add r7, r8
	movs r0, #0
	ldrsh r1, [r7, r0]
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	ldr r1, [sp, #0x2c]
	adds r4, r1, r2
	movs r2, #0
	ldrsh r1, [r5, r2]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	asrs r0, r0, #8
	ldr r1, _080400AC @ =gUnknown_080D7F10
	adds r1, r6, r1
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	subs r0, #1
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r2, _080400B0 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	bge _0804002E
	lsls r1, r2, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r3, #0
	ldrsh r1, [r5, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080400B4 @ =0xFFFFFF00
	cmp r0, r1
	ble _0804001A
	movs r2, #0
	strh r2, [r5]
_0804001A:
	ldrh r1, [r7]
	movs r3, #0
	ldrsh r0, [r7, r3]
	cmp r0, #0
	ble _0804002E
	adds r0, r1, #0
	subs r0, #0x20
	mov r1, r8
	subs r0, r0, r1
	strh r0, [r7]
_0804002E:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _0803FF9A
	mov r2, sl
	ldrh r0, [r2]
	adds r0, #0x20
	strh r0, [r2]
	ldr r3, [sp, #0x50]
	movs r7, #0
	ldrsh r1, [r3, r7]
	ldr r2, [sp, #0x4c]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	mov r3, sl
	movs r7, #0
	ldrsh r1, [r3, r7]
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	asrs r0, r0, #8
	subs r0, #8
	ldr r3, [sp, #0x4c]
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r2, _080400B0 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	bge _080400E2
	lsls r1, r2, #8
	mov r7, sb
	ldr r0, [r7]
	adds r0, r0, r1
	str r0, [r7]
	mov r0, sl
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	mov r3, sl
	strh r0, [r3]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	ldr r0, _080400B4 @ =0xFFFFFF00
	cmp r1, r0
	ble _080400B8
	movs r0, #0
	strh r0, [r3]
	b _080400D0
	.align 2, 0
_080400AC: .4byte gUnknown_080D7F10
_080400B0: .4byte sub_801EC3C
_080400B4: .4byte 0xFFFFFF00
_080400B8:
	ldr r0, _0804019C @ =0xFFFFFE90
	cmp r1, r0
	bge _080400D0
	movs r0, #0x80
	lsls r0, r0, #3
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x20
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
_080400D0:
	ldr r7, [sp, #0x50]
	ldrh r1, [r7]
	movs r2, #0
	ldrsh r0, [r7, r2]
	cmp r0, #0
	ble _080400E2
	adds r0, r1, #0
	subs r0, #0x30
	strh r0, [r7]
_080400E2:
	ldr r3, [sp, #0x4c]
	ldr r0, [r3]
	ldr r7, [sp, #0x40]
	str r0, [r7]
	mov r1, sb
	ldr r0, [r1]
	movs r2, #0xc8
	lsls r2, r2, #6
	adds r0, r0, r2
	ldr r3, [sp, #0x44]
	str r0, [r3]
	ldr r0, _080401A0 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #6
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	beq _0804010A
	b _0804049E
_0804010A:
	ldr r0, _080401A4 @ =gUnknown_030053B8
	mov r8, r0
	ldr r0, [r0]
	ldr r6, _080401A8 @ =0x00196225
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r5, _080401AC @ =0x3C6EF35F
	adds r2, r2, r5
	mov r1, r8
	str r2, [r1]
	ldr r3, [sp, #0x4c]
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r4, _080401B0 @ =gUnknown_03005960
	ldr r0, [r4]
	subs r1, r1, r0
	movs r3, #0x3f
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r6, r2
	adds r2, r2, r5
	mov r0, r8
	str r2, [r0]
	mov r0, sb
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r4, #4]
	subs r1, r1, r0
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x2d
	str r1, [sp, #0x1c]
	add r0, sp, #4
	strh r7, [r0, #0x1c]
	adds r4, r0, #0
	muls r2, r6, r2
	adds r2, r2, r5
	adds r1, r2, #0
	ands r1, r3
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r4, #0xc]
	adds r3, r4, #0
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r5
	mov r2, r8
	str r1, [r2]
	ldr r0, _080401B4 @ =0x000001FF
	ands r1, r0
	movs r0, #0xb0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _080401B8 @ =0x06012980
	str r0, [sp, #4]
	adds r1, r3, #0
	ldr r0, _080401BC @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r7, [r0, #0xa]
	str r7, [sp, #8]
	ldr r1, [sp, #0x24]
	adds r1, #0x39
	bl sub_8039B54
	b _0804049E
	.align 2, 0
_0804019C: .4byte 0xFFFFFE90
_080401A0: .4byte gUnknown_03005590
_080401A4: .4byte gUnknown_030053B8
_080401A8: .4byte 0x00196225
_080401AC: .4byte 0x3C6EF35F
_080401B0: .4byte gUnknown_03005960
_080401B4: .4byte 0x000001FF
_080401B8: .4byte 0x06012980
_080401BC: .4byte 0x0000026B
_080401C0:
	movs r6, #0
	ldr r3, _080404C0 @ =sub_801EC3C
	mov r8, r3
	ldr r7, [sp, #0x24]
	adds r7, #0x9c
	str r7, [sp, #0x4c]
	ldr r0, [sp, #0x24]
	adds r0, #0xa4
	str r0, [sp, #0x50]
	ldr r1, [sp, #0x24]
	adds r1, #0x90
	str r1, [sp, #0x40]
	ldr r2, [sp, #0x24]
	adds r2, #0x94
	str r2, [sp, #0x44]
	ldr r3, [sp, #0x24]
	adds r3, #0x9a
	str r3, [sp, #0x48]
	ldr r5, [sp, #0x24]
	adds r5, #0x98
	ldr r4, [sp, #0x24]
	adds r4, #0xc
	ldr r3, [sp, #0x24]
	adds r3, #0x24
_080401F0:
	lsls r1, r6, #3
	adds r1, r4, r1
	lsls r0, r6, #2
	adds r0, r3, r0
	movs r7, #0
	ldrsh r2, [r0, r7]
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r1]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _080401F0
	ldr r0, [sp, #0x50]
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r3, [sp, #0x4c]
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	ldr r7, [sp, #0x48]
	ldrh r0, [r7]
	adds r0, #0x20
	strh r0, [r7]
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r2, [sp, #0x40]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r3, #0
	ldrsh r1, [r7, r3]
	ldr r7, [sp, #0x44]
	ldr r0, [r7]
	adds r0, r0, r1
	str r0, [r7]
	asrs r0, r0, #8
	subs r0, #0x32
	ldr r1, [r2]
	asrs r1, r1, #8
	mov r2, r8
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	blt _08040256
	b _08040360
_08040256:
	ldr r1, [sp, #0x24]
	adds r1, #0x38
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	str r1, [sp, #0x3c]
	lsls r2, r2, #8
	str r2, [sp, #0x30]
	cmp r0, #0
	bne _08040324
	movs r3, #0
	ldr r7, [sp, #0x24]
	adds r7, #0xa0
	mov sb, r7
	ldr r0, [sp, #0x24]
	adds r0, #0x39
	mov sl, r0
	ldr r7, _080404C4 @ =gUnknown_030053B8
	ldr r6, _080404C8 @ =0x00196225
	ldr r5, _080404CC @ =0x3C6EF35F
	add r4, sp, #4
	mov r8, r3
_08040284:
	ldr r0, [r7]
	adds r2, r0, #0
	muls r2, r6, r2
	adds r2, r2, r5
	str r2, [r7]
	ldr r0, [sp, #0x4c]
	ldr r1, [r0]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _080404D0 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	adds r0, r2, #0
	movs r1, #0x3f
	ands r0, r1
	add r0, ip
	adds r1, r0, #0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r6, r2
	adds r2, r2, r5
	str r2, [r7]
	mov r0, sb
	ldr r1, [r0]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _080404D0 @ =gUnknown_03005960
	ldr r0, [r1, #4]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	adds r0, r2, #0
	movs r1, #0x3f
	ands r0, r1
	add r0, ip
	adds r1, r0, #0
	subs r1, #0x2d
	str r1, [sp, #0x1c]
	mov r0, r8
	strh r0, [r4, #0x1c]
	muls r2, r6, r2
	adds r2, r2, r5
	adds r1, r2, #0
	movs r0, #0x3f
	ands r1, r0
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r4, #0xc]
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r5
	str r1, [r7]
	ldr r0, _080404D4 @ =0x000001FF
	ands r1, r0
	movs r0, #0xc0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r4, #0xe]
	ldr r0, _080404D8 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _080404DC @ =0x0000026B
	strh r0, [r4, #8]
	mov r1, r8
	strh r1, [r4, #0xa]
	mov r2, r8
	str r2, [sp, #8]
	add r0, sp, #4
	mov r1, sl
	str r3, [sp, #0x58]
	bl sub_8039B54
	ldr r3, [sp, #0x58]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #8
	bls _08040284
_08040324:
	ldr r3, [sp, #0x3c]
	ldrb r0, [r3]
	cmp r0, #2
	bls _0804033E
	movs r0, #0x80
	lsls r0, r0, #3
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x20
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
_0804033E:
	ldr r7, [sp, #0x44]
	ldr r0, [r7]
	ldr r1, [sp, #0x30]
	adds r0, r0, r1
	str r0, [r7]
	ldr r2, [sp, #0x48]
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	ldr r7, [sp, #0x48]
	strh r0, [r7]
_08040360:
	ldr r0, _080404E0 @ =gUnknown_03005590
	mov sb, r0
	ldr r0, [r0]
	movs r1, #0xe
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _08040400
	ldr r6, _080404C4 @ =gUnknown_030053B8
	ldr r0, [r6]
	ldr r5, _080404C8 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _080404CC @ =0x3C6EF35F
	adds r2, r2, r4
	str r2, [r6]
	ldr r3, [sp, #0x40]
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r3, _080404D0 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	mov sl, r1
	movs r0, #0x3f
	mov r8, r0
	adds r0, r2, #0
	mov r1, r8
	ands r0, r1
	add r0, sl
	adds r1, r0, #0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r5, r2
	adds r2, r2, r4
	str r2, [r6]
	ldr r0, [sp, #0x44]
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	movs r0, #0x1f
	ands r0, r2
	adds r1, r1, r0
	subs r1, #0x4b
	str r1, [sp, #0x1c]
	add r0, sp, #4
	strh r7, [r0, #0x1c]
	adds r3, r0, #0
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	mov r0, r8
	ands r1, r0
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	str r1, [r6]
	ldr r0, _080404D4 @ =0x000001FF
	ands r1, r0
	movs r0, #0xb0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _080404D8 @ =0x06012980
	str r0, [sp, #4]
	adds r1, r3, #0
	ldr r0, _080404DC @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r7, [r0, #0xa]
	str r7, [sp, #8]
	ldr r1, [sp, #0x24]
	adds r1, #0x39
	bl sub_8039B54
_08040400:
	mov r1, sb
	ldr r0, [r1]
	movs r1, #0xd
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _0804049E
	ldr r6, _080404C4 @ =gUnknown_030053B8
	ldr r0, [r6]
	ldr r5, _080404C8 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _080404CC @ =0x3C6EF35F
	adds r2, r2, r4
	str r2, [r6]
	ldr r3, [sp, #0x4c]
	ldr r1, [r3]
	asrs r1, r1, #8
	ldr r3, _080404D0 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	mov sb, r1
	movs r0, #0x3f
	mov r8, r0
	adds r0, r2, #0
	mov r1, r8
	ands r0, r1
	add r0, sb
	adds r1, r0, #0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r5, r2
	adds r2, r2, r4
	ldr r0, [sp, #0x24]
	adds r0, #0xa0
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	movs r0, #0x1f
	ands r0, r2
	adds r1, r1, r0
	subs r1, #0x10
	str r1, [sp, #0x1c]
	add r0, sp, #4
	strh r7, [r0, #0x1c]
	adds r3, r0, #0
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	mov r0, r8
	ands r1, r0
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	str r1, [r6]
	ldr r0, _080404D4 @ =0x000001FF
	ands r1, r0
	movs r0, #0xb0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _080404D8 @ =0x06012980
	str r0, [sp, #4]
	adds r1, r3, #0
	ldr r0, _080404DC @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r7, [r0, #0xa]
	str r7, [sp, #8]
	ldr r1, [sp, #0x24]
	adds r1, #0x39
	bl sub_8039B54
_0804049E:
	movs r6, #0
_080404A0:
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x3c
	ldr r1, [sp, #0x24]
	adds r4, r1, r0
	ldrb r0, [r4, #0x18]
	cmp r0, #0
	bne _080404E4
	ldrh r0, [r4, #0xa]
	adds r0, #0x20
	strh r0, [r4, #0xa]
	adds r6, #1
	str r6, [sp, #0x54]
	b _080405A0
	.align 2, 0
_080404C0: .4byte sub_801EC3C
_080404C4: .4byte gUnknown_030053B8
_080404C8: .4byte 0x00196225
_080404CC: .4byte 0x3C6EF35F
_080404D0: .4byte gUnknown_03005960
_080404D4: .4byte 0x000001FF
_080404D8: .4byte 0x06012980
_080404DC: .4byte 0x0000026B
_080404E0: .4byte gUnknown_03005590
_080404E4:
	subs r0, #1
	strb r0, [r4, #0x18]
	lsls r0, r0, #0x18
	adds r6, #1
	str r6, [sp, #0x54]
	cmp r0, #0
	bne _080405A0
	movs r3, #0
	ldr r2, [sp, #0x24]
	adds r2, #0x39
	mov sl, r2
	ldr r7, _08040618 @ =gUnknown_030053B8
	mov sb, r7
	ldr r7, _0804061C @ =0x00196225
	ldr r6, _08040620 @ =0x3C6EF35F
	movs r0, #0x3f
	mov r8, r0
	add r5, sp, #4
_08040508:
	mov r1, sb
	ldr r0, [r1]
	adds r2, r0, #0
	muls r2, r7, r2
	adds r2, r2, r6
	ldr r1, [r4]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _08040624 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	adds r0, r2, #0
	mov r1, r8
	ands r0, r1
	add r0, ip
	adds r1, r0, #0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	muls r2, r7, r2
	adds r2, r2, r6
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _08040624 @ =gUnknown_03005960
	ldr r0, [r1, #4]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	movs r0, #7
	ands r0, r2
	add r0, ip
	subs r1, r0, #3
	str r1, [sp, #0x1c]
	movs r0, #0
	strh r0, [r5, #0x1c]
	muls r2, r7, r2
	adds r2, r2, r6
	adds r1, r2, #0
	mov r0, r8
	ands r1, r0
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	adds r1, r2, #0
	muls r1, r7, r1
	adds r1, r1, r6
	mov r2, sb
	str r1, [r2]
	ldr r0, _08040628 @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	ldr r0, _0804062C @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _08040630 @ =0x0000026B
	strh r0, [r5, #8]
	movs r0, #0
	strh r0, [r5, #0xa]
	movs r1, #0
	str r1, [sp, #8]
	add r0, sp, #4
	mov r1, sl
	str r3, [sp, #0x58]
	bl sub_8039B54
	ldr r3, [sp, #0x58]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _08040508
_080405A0:
	movs r2, #8
	ldrsh r0, [r4, r2]
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	movs r3, #0xa
	ldrsh r2, [r4, r3]
	ldr r0, [r4, #4]
	adds r0, r0, r2
	str r0, [r4, #4]
	asrs r0, r0, #8
	adds r0, #4
	asrs r1, r1, #8
	ldr r2, _08040634 @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r2, r0, #0
	cmp r2, #0
	bge _080405FC
	lsls r1, r2, #8
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	movs r7, #0xa
	ldrsh r1, [r4, r7]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r4, #0xa]
	ldrh r1, [r4, #8]
	movs r2, #8
	ldrsh r0, [r4, r2]
	cmp r0, #0
	ble _080405FC
	ldr r3, _08040638 @ =0xFFFFFF00
	adds r0, r1, r3
	strh r0, [r4, #8]
_080405FC:
	ldr r7, [sp, #0x54]
	lsls r0, r7, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bhi _08040608
	b _080404A0
_08040608:
	add sp, #0x5c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08040618: .4byte gUnknown_030053B8
_0804061C: .4byte 0x00196225
_08040620: .4byte 0x3C6EF35F
_08040624: .4byte gUnknown_03005960
_08040628: .4byte 0x000001FF
_0804062C: .4byte 0x06012980
_08040630: .4byte 0x0000026B
_08040634: .4byte sub_801EC3C
_08040638: .4byte 0xFFFFFF00

	thumb_func_start sub_804063C
sub_804063C: @ 0x0804063C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	ldr r6, _080406C0 @ =gUnknown_030053B8
	ldr r0, [r6]
	ldr r1, _080406C4 @ =0x00196225
	mov sb, r1
	mov r4, sb
	muls r4, r0, r4
	adds r0, r4, #0
	ldr r1, _080406C8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #3
	bl DivRem
	lsls r0, r0, #0x18
	ldr r1, _080406CC @ =gUnknown_03005590
	ldr r4, [r1]
	movs r1, #3
	ands r4, r1
	lsrs r7, r0, #0x18
	asrs r5, r0, #0x18
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #2
	adds r0, #0x3c
	mov r1, r8
	adds r3, r1, r0
	ldrb r0, [r3, #0x13]
	cmp r0, #0
	beq _08040686
	b _0804078A
_08040686:
	movs r0, #0xf6
	bl m4aSongNumStart
	lsls r0, r4, #1
	adds r0, r0, r4
	adds r0, r5, r0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, [r6]
	mov r4, sb
	muls r4, r0, r4
	adds r0, r4, #0
	ldr r1, _080406C8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r6]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080406F8
	cmp r5, #0
	bne _080406D0
	mov r0, r8
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080406D0
	movs r2, #0xc
	b _080406F8
	.align 2, 0
_080406C0: .4byte gUnknown_030053B8
_080406C4: .4byte 0x00196225
_080406C8: .4byte 0x3C6EF35F
_080406CC: .4byte gUnknown_03005590
_080406D0:
	lsls r0, r7, #0x18
	asrs r1, r0, #0x18
	adds r3, r0, #0
	cmp r1, #1
	bne _080406E8
	mov r0, r8
	adds r0, #0x87
	ldrb r0, [r0]
	cmp r0, #0
	bne _080406E8
	movs r2, #0xd
	b _080406F8
_080406E8:
	cmp r3, #0
	bne _080406F8
	mov r0, r8
	adds r0, #0x6b
	ldrb r0, [r0]
	cmp r0, #0
	bne _080406F8
	movs r2, #0xe
_080406F8:
	ldr r0, _08040798 @ =gUnknown_080D7ED4
	lsls r1, r2, #0x18
	asrs r1, r1, #0x16
	adds r1, r1, r0
	ldr r5, [r1]
	ldrb r6, [r5]
	adds r5, #1
	lsls r0, r6, #0x18
	movs r4, #0xff
	lsls r4, r4, #0x18
	adds r0, r0, r4
	lsrs r6, r0, #0x18
	cmp r0, #0
	blt _0804078A
	ldr r0, _0804079C @ =gUnknown_080D7E78
	mov sb, r0
	ldr r1, _080407A0 @ =gUnknown_08097AA4
	mov ip, r1
_0804071C:
	ldrb r7, [r5]
	adds r5, #1
	ldrb r4, [r5]
	adds r5, #1
	lsls r0, r4, #0x18
	asrs r0, r0, #0x16
	add r0, sb
	ldr r2, [r0]
	lsls r1, r7, #0x18
	asrs r1, r1, #0x18
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x3c
	mov r1, r8
	adds r3, r1, r0
	movs r0, #1
	strb r0, [r3, #0x13]
	strb r4, [r3, #0x12]
	ldrh r0, [r2, #2]
	strh r0, [r3, #0x10]
	adds r2, #8
	ldrh r0, [r2]
	strh r0, [r3, #0xe]
	ldrh r0, [r3, #0x10]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #1
	add r0, ip
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldrh r0, [r2, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r3, #8]
	ldrh r0, [r3, #0x10]
	lsls r0, r0, #1
	add r0, ip
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldrh r0, [r2, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r3, #0xa]
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r3, #0xc]
	lsls r0, r6, #0x18
	movs r1, #0xff
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r6, r0, #0x18
	cmp r0, #0
	bge _0804071C
_0804078A:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08040798: .4byte gUnknown_080D7ED4
_0804079C: .4byte gUnknown_080D7E78
_080407A0: .4byte gUnknown_08097AA4

	thumb_func_start sub_80407A4
sub_80407A4: @ 0x080407A4
	push {r4, r5, r6, r7, lr}
	mov ip, r0
	movs r5, #0
	ldr r6, _0804082C @ =gUnknown_08097AA4
_080407AC:
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #2
	adds r0, #0x3c
	mov r1, ip
	adds r2, r1, r0
	ldrb r4, [r2, #0x13]
	cmp r4, #0
	beq _080408AE
	ldr r1, _08040830 @ =gUnknown_080D7E78
	ldrb r0, [r2, #0x12]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r3, [r0]
	ldrb r0, [r2, #0x13]
	lsls r0, r0, #3
	adds r3, r3, r0
	ldrh r0, [r2, #0xe]
	subs r0, #1
	movs r1, #0
	strh r0, [r2, #0xe]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08040838
	ldrh r0, [r3, #2]
	ldrh r4, [r2, #0x10]
	adds r0, r0, r4
	ldr r7, _08040834 @ =0x000003FF
	adds r4, r7, #0
	ands r0, r4
	strh r0, [r2, #0x10]
	ldrh r0, [r2, #0x10]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r1, [r0, r7]
	ldrh r0, [r3, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2, #8]
	ldrh r0, [r2, #0x10]
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r1, [r0, r7]
	ldrh r0, [r3, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2, #0xa]
	ldr r0, [r3]
	cmp r0, #0x20
	bne _0804088C
	ldrh r0, [r3, #4]
	cmp r0, #0
	bne _0804088C
	ldrh r0, [r2, #0xc]
	adds r0, #0x10
	ands r0, r4
	strh r0, [r2, #0xc]
	b _0804088C
	.align 2, 0
_0804082C: .4byte gUnknown_08097AA4
_08040830: .4byte gUnknown_080D7E78
_08040834: .4byte 0x000003FF
_08040838:
	adds r3, #8
	ldrh r0, [r3]
	cmp r0, #0
	bne _0804084C
	strh r0, [r2, #0xe]
	strb r1, [r2, #0x13]
	strb r1, [r2, #0x12]
	strh r0, [r2, #0x10]
	strh r0, [r2, #8]
	b _0804088A
_0804084C:
	adds r0, r4, #1
	strb r0, [r2, #0x13]
	ldrh r0, [r3]
	strh r0, [r2, #0xe]
	ldrh r0, [r3, #2]
	ldrh r1, [r2, #0x10]
	adds r0, r0, r1
	ldr r4, _080408C0 @ =0x000003FF
	adds r1, r4, #0
	ands r0, r1
	strh r0, [r2, #0x10]
	ldrh r0, [r2, #0x10]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldrh r0, [r3, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2, #8]
	ldrh r0, [r2, #0x10]
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r1, [r0, r7]
	ldrh r0, [r3, #4]
	muls r0, r1, r0
	asrs r0, r0, #0xe
_0804088A:
	strh r0, [r2, #0xa]
_0804088C:
	ldr r0, [r2]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r3, #8
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	str r0, [r2]
	movs r4, #0xa
	ldrsh r1, [r2, r4]
	mov r7, ip
	movs r3, #0x30
	ldrsh r0, [r7, r3]
	subs r1, r1, r0
	ldr r0, [r2, #4]
	adds r0, r0, r1
	str r0, [r2, #4]
_080408AE:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bhi _080408BA
	b _080407AC
_080408BA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080408C0: .4byte 0x000003FF

	thumb_func_start sub_80408C4
sub_80408C4: @ 0x080408C4
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r7, #0
_080408CA:
	lsls r0, r7, #3
	subs r0, r0, r7
	lsls r0, r0, #2
	adds r0, #0x3c
	adds r4, r6, r0
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	bne _080408DC
	b _080409EC
_080408DC:
	ldr r1, _08040914 @ =gUnknown_080D7E78
	ldrb r0, [r4, #0x12]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r4, #0x13]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0x3c
	beq _080408F4
	b _080409EC
_080408F4:
	ldrh r2, [r1, #4]
	cmp r2, #0
	bne _080409EC
	ldrh r0, [r4, #0xe]
	adds r3, r0, #0
	cmp r3, #0x3c
	bne _08040926
	ldr r0, _08040918 @ =gUnknown_030059E0
	ldr r1, [r0, #0xc]
	ldr r0, [r4, #4]
	cmp r1, r0
	bge _0804091C
	movs r0, #1
	strb r0, [r4, #0x15]
	b _0804091E
	.align 2, 0
_08040914: .4byte gUnknown_080D7E78
_08040918: .4byte gUnknown_030059E0
_0804091C:
	strb r2, [r4, #0x15]
_0804091E:
	ldrb r1, [r4, #0x16]
	movs r0, #0x80
	orrs r0, r1
	strb r0, [r4, #0x16]
_08040926:
	lsls r0, r3, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x2f
	bls _08040940
	ldrb r0, [r4, #0x15]
	cmp r0, #0
	beq _0804093A
	ldrb r0, [r4, #0x17]
	subs r0, #1
	b _080409BE
_0804093A:
	ldrb r0, [r4, #0x17]
	adds r0, #1
	b _080409BE
_08040940:
	cmp r0, #0x1e
	bne _080409A0
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	beq _080409A0
	ldrb r1, [r4, #0x16]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0804098A
	ldr r2, _08040994 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08040998 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0804099C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0804098A
	ldr r1, [r4]
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	lsls r0, r0, #8
	ldr r2, [r4, #4]
	adds r2, r2, r0
	ldrb r3, [r4, #0x15]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #8
	subs r2, r2, r0
	adds r0, r6, #0
	movs r3, #0x80
	lsls r3, r3, #2
	bl sub_80412F0
_0804098A:
	ldrb r1, [r4, #0x16]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r4, #0x16]
	b _080409C0
	.align 2, 0
_08040994: .4byte gUnknown_030053B8
_08040998: .4byte 0x00196225
_0804099C: .4byte 0x3C6EF35F
_080409A0:
	lsls r0, r3, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x11
	bhi _080409C0
	ldrb r1, [r4, #0x17]
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _080409EC
	ldrb r0, [r4, #0x15]
	cmp r0, #0
	beq _080409BC
	adds r0, r1, #1
	b _080409BE
_080409BC:
	subs r0, r1, #1
_080409BE:
	strb r0, [r4, #0x17]
_080409C0:
	movs r0, #0x17
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _080409EC
	adds r5, r6, #0
	adds r5, #0x36
	ldrb r0, [r5]
	cmp r0, #0
	bne _080409EC
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_8040B30
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080409EC
	ldrb r0, [r4, #0x16]
	movs r1, #0x7f
	ands r1, r0
	strb r1, [r4, #0x16]
	movs r0, #0x1e
	strb r0, [r5]
_080409EC:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bhi _080409F8
	b _080408CA
_080409F8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8040A00
sub_8040A00: @ 0x08040A00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040A18
	b _08040B16
_08040A18:
	movs r0, #0
	mov r8, r0
	ldr r1, _08040AD8 @ =gUnknown_030059E0
	mov sb, r1
_08040A20:
	mov r3, r8
	lsls r0, r3, #6
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r3, sl
	adds r6, r3, r0
	mov r1, r8
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x3c
	adds r4, r3, r0
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	mov r3, sb
	str r3, [sp]
	adds r0, r6, #0
	movs r3, #1
	bl sub_800CA20
	cmp r0, #0
	bne _08040B08
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	mov r0, sb
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #2
	bl sub_800CA20
	cmp r0, #0
	bne _08040B08
	mov r3, sb
	ldr r1, [r3, #0x20]
	movs r0, #8
	ands r1, r0
	movs r7, #0
	cmp r1, #0
	beq _08040A80
	ldr r0, [r3, #0x3c]
	cmp r0, r6
	bne _08040A80
	movs r7, #1
_08040A80:
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	ldr r5, _08040AD8 @ =gUnknown_030059E0
	adds r0, r6, #0
	adds r3, r5, #0
	bl sub_800CCB8
	adds r2, r0, #0
	ldr r0, [r5, #0x20]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08040AE0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r2
	cmp r0, #0
	beq _08040AE0
	ldr r0, [r5, #8]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r3, #8
	ldrsh r1, [r4, r3]
	adds r0, r0, r1
	str r0, [r5, #8]
	ldr r1, [r5, #0xc]
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r1, r0
	lsls r0, r2, #0x18
	asrs r0, r0, #0x10
	adds r1, r1, r0
	str r1, [r5, #0xc]
	cmp r7, #0
	bne _08040B08
	ldr r1, _08040ADC @ =0xFFFFFB00
	adds r0, r1, #0
	ldrh r3, [r5, #0x10]
	adds r0, r0, r3
	strh r0, [r5, #0x10]
	b _08040B08
	.align 2, 0
_08040AD8: .4byte gUnknown_030059E0
_08040ADC: .4byte 0xFFFFFB00
_08040AE0:
	cmp r7, #0
	beq _08040B08
	ldr r2, _08040B28 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r2, #0x20]
	movs r0, #0
	str r0, [r2, #0x3c]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08040B08
	ldr r0, _08040B2C @ =0xFFFFFEFF
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r2, #0x20]
_08040B08:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #2
	bls _08040A20
_08040B16:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08040B28: .4byte gUnknown_030059E0
_08040B2C: .4byte 0xFFFFFEFF

	thumb_func_start sub_8040B30
sub_8040B30: @ 0x08040B30
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	adds r2, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r6, #0
	cmp r1, #3
	bhi _08040B62
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x3c
	adds r7, r2, r0
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _08040B62
	adds r0, r2, #0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040B66
_08040B62:
	movs r0, #0
	b _08040D62
_08040B66:
	movs r0, #0x92
	lsls r0, r0, #2
	adds r0, r0, r2
	mov sb, r0
	ldr r2, [r7]
	lsls r2, r2, #8
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	movs r1, #0x17
	ldrsb r1, [r7, r1]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r0, r2, #0x10
	str r0, [sp, #0x44]
	asrs r4, r2, #0x10
	lsrs r2, r1, #0x10
	mov sl, r2
	asrs r5, r1, #0x10
	ldr r0, _08040C38 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, sb
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _08040C64
	ldrb r0, [r7, #0x14]
	subs r0, #1
	strb r0, [r7, #0x14]
	movs r1, #0xff
	mov r8, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08040C5C
	ldr r1, _08040C3C @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	str r0, [sp, #0x18]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	str r0, [sp, #0x1c]
	add r0, sp, #4
	strh r6, [r0, #0x1c]
	adds r1, r0, #0
	movs r0, #0xf0
	lsls r0, r0, #2
	strh r0, [r1, #0xc]
	movs r0, #0xc0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _08040C40 @ =0x06012980
	str r0, [sp, #4]
	ldr r0, _08040C44 @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r6, [r0, #0xa]
	str r6, [sp, #8]
	adds r1, r7, #0
	adds r1, #0x16
	bl sub_8039B54
	ldr r1, _08040C48 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08040C4C @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08040C2E
	ldr r0, _08040C50 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040C2E
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08040C54 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08040C26
	mov r0, r8
_08040C26:
	strb r0, [r1]
	ldr r1, _08040C58 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08040C2E:
	movs r0, #0x90
	bl m4aSongNumStart
	b _08040C62
	.align 2, 0
_08040C38: .4byte gUnknown_030059E0
_08040C3C: .4byte gUnknown_03005960
_08040C40: .4byte 0x06012980
_08040C44: .4byte 0x0000026B
_08040C48: .4byte gUnknown_03005450
_08040C4C: .4byte 0x0000C350
_08040C50: .4byte gUnknown_030054CC
_08040C54: .4byte gUnknown_03005448
_08040C58: .4byte gUnknown_030054A8
_08040C5C:
	movs r0, #0x8f
	bl m4aSongNumStart
_08040C62:
	movs r6, #1
_08040C64:
	ldr r1, [sp, #0x44]
	lsls r0, r1, #0x10
	asrs r4, r0, #0x10
	lsls r0, r4, #8
	mov r2, sl
	lsls r1, r2, #0x10
	asrs r5, r1, #0x10
	lsls r1, r5, #8
	bl sub_80122DC
	ldr r0, _08040D30 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, sb
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _08040D60
	ldrb r0, [r7, #0x14]
	subs r0, #1
	strb r0, [r7, #0x14]
	movs r1, #0xff
	mov r8, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0
	bne _08040D58
	add r0, sp, #0x24
	ldr r2, _08040D34 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r1, r4, r1
	str r1, [r0, #0x14]
	ldr r1, [r2, #4]
	subs r1, r5, r1
	str r1, [r0, #0x18]
	strh r3, [r0, #0x1c]
	movs r1, #0xf0
	lsls r1, r1, #2
	strh r1, [r0, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #3
	strh r1, [r0, #0xe]
	ldr r1, _08040D38 @ =0x06012980
	str r1, [sp, #0x24]
	ldr r1, _08040D3C @ =0x0000026B
	strh r1, [r0, #8]
	strh r3, [r0, #0xa]
	str r3, [r0, #4]
	adds r1, r7, #0
	adds r1, #0x16
	bl sub_8039B54
	ldr r1, _08040D40 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08040D44 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08040D1A
	ldr r0, _08040D48 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040D1A
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08040D4C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08040D12
	mov r0, r8
_08040D12:
	strb r0, [r1]
	ldr r1, _08040D50 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08040D1A:
	movs r0, #0x90
	bl m4aSongNumStart
	ldr r0, _08040D30 @ =gUnknown_030059E0
	bl sub_800CB18
	ldr r0, _08040D54 @ =gUnknown_03005498
	ldr r1, [r0, #4]
	movs r0, #0
	strb r0, [r1, #0x15]
	b _08040D5E
	.align 2, 0
_08040D30: .4byte gUnknown_030059E0
_08040D34: .4byte gUnknown_03005960
_08040D38: .4byte 0x06012980
_08040D3C: .4byte 0x0000026B
_08040D40: .4byte gUnknown_03005450
_08040D44: .4byte 0x0000C350
_08040D48: .4byte gUnknown_030054CC
_08040D4C: .4byte gUnknown_03005448
_08040D50: .4byte gUnknown_030054A8
_08040D54: .4byte gUnknown_03005498
_08040D58:
	movs r0, #0x8f
	bl m4aSongNumStart
_08040D5E:
	movs r6, #1
_08040D60:
	adds r0, r6, #0
_08040D62:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8040D74
sub_8040D74: @ 0x08040D74
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r7, r4, r0
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040E62
	adds r0, r4, #0
	adds r0, #0x32
	ldrb r1, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08040E48
	subs r0, r1, #1
	mov r1, r8
	strb r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08040DAE
	movs r0, #0x8f
	bl m4aSongNumStart
	b _08040DB4
_08040DAE:
	movs r0, #0xeb
	bl m4aSongNumStart
_08040DB4:
	adds r0, r4, #0
	adds r0, #0x35
	movs r1, #0x1e
	strb r1, [r0]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	bne _08040E34
	ldr r0, _08040E1C @ =0x00000275
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	ldr r1, _08040E20 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08040E24 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08040E40
	ldr r0, _08040E28 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040E40
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08040E2C @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08040E12
	movs r0, #0xff
_08040E12:
	strb r0, [r1]
	ldr r1, _08040E30 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _08040E40
	.align 2, 0
_08040E1C: .4byte 0x00000275
_08040E20: .4byte gUnknown_03005450
_08040E24: .4byte 0x0000C350
_08040E28: .4byte gUnknown_030054CC
_08040E2C: .4byte gUnknown_03005448
_08040E30: .4byte gUnknown_030054A8
_08040E34:
	ldr r0, _08040E6C @ =0x00000275
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
_08040E40:
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08040E48:
	ldr r0, _08040E70 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _08040E62
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #4
	bne _08040E62
	ldr r1, _08040E74 @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_08040E62:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08040E6C: .4byte 0x00000275
_08040E70: .4byte gUnknown_030055B4
_08040E74: .4byte gUnknown_030054A8

	thumb_func_start sub_8040E78
sub_8040E78: @ 0x08040E78
	push {r4, lr}
	adds r3, r0, #0
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r4, r3, r0
	adds r2, r3, #0
	adds r2, #0x35
	ldrb r0, [r2]
	cmp r0, #0
	beq _08040ED8
	adds r1, r3, #0
	adds r1, #0x34
	movs r0, #0
	strb r0, [r1]
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08040F06
	adds r0, r3, #0
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	bne _08040EBC
	ldr r0, _08040EB8 @ =0x00000275
	strh r0, [r4, #0xa]
	movs r2, #0xb2
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #3
	b _08040EC8
	.align 2, 0
_08040EB8: .4byte 0x00000275
_08040EBC:
	movs r0, #0
	ldr r1, _08040ED4 @ =0x00000275
	strh r1, [r4, #0xa]
	movs r2, #0xb2
	lsls r2, r2, #2
	adds r1, r3, r2
_08040EC8:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	b _08040F04
	.align 2, 0
_08040ED4: .4byte 0x00000275
_08040ED8:
	adds r1, r3, #0
	adds r1, #0x34
	ldrb r0, [r1]
	cmp r0, #0
	beq _08040F06
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08040F06
	movs r1, #0
	ldr r0, _08040F0C @ =0x00000275
	strh r0, [r4, #0xa]
	movs r4, #0xb2
	lsls r4, r4, #2
	adds r0, r3, r4
	strb r1, [r0]
	ldr r0, _08040F10 @ =0x000002C9
	adds r1, r3, r0
	ldrb r0, [r1]
	orrs r0, r2
_08040F04:
	strb r0, [r1]
_08040F06:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08040F0C: .4byte 0x00000275
_08040F10: .4byte 0x000002C9

	thumb_func_start sub_8040F14
sub_8040F14: @ 0x08040F14
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	beq _08040F70
	movs r3, #0
	adds r4, r1, #0
	adds r4, #0x36
	ldr r0, _08040F60 @ =gFlags
	mov r8, r0
	ldr r1, _08040F64 @ =gObjPalette
	mov ip, r1
	ldr r7, _08040F68 @ =gUnknown_080D7F14
	ldr r6, _08040F6C @ =gUnknown_03005590
	movs r5, #2
_08040F38:
	adds r2, r3, #0
	adds r2, #0x80
	lsls r2, r2, #1
	add r2, ip
	lsls r1, r3, #1
	ldr r0, [r6]
	ands r0, r5
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r7
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08040F38
	b _08040F98
	.align 2, 0
_08040F60: .4byte gFlags
_08040F64: .4byte gObjPalette
_08040F68: .4byte gUnknown_080D7F14
_08040F6C: .4byte gUnknown_03005590
_08040F70:
	movs r3, #0
	adds r4, r1, #0
	adds r4, #0x36
	ldr r0, _08040FD4 @ =gFlags
	mov r8, r0
	ldr r5, _08040FD8 @ =gObjPalette
	ldr r2, _08040FDC @ =gUnknown_080D7F34
_08040F7E:
	adds r1, r3, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08040F7E
_08040F98:
	ldrb r0, [r4]
	cmp r0, #0
	beq _08040FE8
	subs r0, #1
	strb r0, [r4]
	movs r3, #0
	ldr r7, _08040FD8 @ =gObjPalette
	ldr r6, _08040FE0 @ =gUnknown_080D7F14
	ldr r5, _08040FE4 @ =gUnknown_03005590
	movs r4, #2
_08040FAC:
	adds r2, r3, #0
	adds r2, #0xb0
	lsls r2, r2, #1
	adds r2, r2, r7
	lsls r1, r3, #1
	ldr r0, [r5]
	ands r0, r4
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r6
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08040FAC
	b _08041008
	.align 2, 0
_08040FD4: .4byte gFlags
_08040FD8: .4byte gObjPalette
_08040FDC: .4byte gUnknown_080D7F34
_08040FE0: .4byte gUnknown_080D7F14
_08040FE4: .4byte gUnknown_03005590
_08040FE8:
	movs r3, #0
	ldr r4, _08041020 @ =gObjPalette
	ldr r2, _08041024 @ =gUnknown_080D7F34
_08040FEE:
	adds r1, r3, #0
	adds r1, #0xb0
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08040FEE
_08041008:
	mov r1, r8
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, r8
	str r0, [r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041020: .4byte gObjPalette
_08041024: .4byte gUnknown_080D7F34

	thumb_func_start sub_8041028
sub_8041028: @ 0x08041028
	push {r4, r5, r6, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r4, r0
	ldr r1, _080410D4 @ =IWRAM_START + 0xC4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r5, #0
	ldr r0, _080410D8 @ =IWRAM_START + 0xFC
	adds r4, r4, r0
_08041042:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	bl sub_8007CF0
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08041042
	movs r5, #0
	movs r1, #0xc6
	lsls r1, r1, #1
	adds r4, r6, r1
_08041062:
	lsls r0, r5, #6
	adds r0, r4, r0
	ldr r0, [r0]
	bl sub_8007CF0
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08041062
	movs r1, #0x93
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xe6
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xab
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080410B6
	bl sub_8007CF0
_080410B6:
	movs r1, #0xb7
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _080410C6
	bl sub_8007CF0
_080410C6:
	ldr r1, _080410DC @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080410D4: .4byte IWRAM_START + 0xC4
_080410D8: .4byte IWRAM_START + 0xFC
_080410DC: .4byte gUnknown_03005B4C

	thumb_func_start sub_80410E0
sub_80410E0: @ 0x080410E0
	push {r4, r5, r6, lr}
	ldr r6, _0804112C @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	ldr r0, [r4]
	movs r1, #0xf4
	lsls r1, r1, #2
	adds r0, r0, r1
	str r0, [r4]
	adds r0, r4, #0
	bl sub_803FB88
	adds r0, r4, #0
	bl sub_8041264
	adds r0, r4, #0
	bl sub_8040E78
	adds r0, r4, #0
	bl sub_803F698
	ldr r0, _08041130 @ =IWRAM_START + 0xB4
	adds r5, r5, r0
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
	cmp r0, #0
	bne _08041124
	ldr r1, [r6]
	ldr r0, _08041134 @ =sub_803F3E8
	str r0, [r1, #8]
_08041124:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804112C: .4byte gCurTask
_08041130: .4byte IWRAM_START + 0xB4
_08041134: .4byte sub_803F3E8

	thumb_func_start sub_8041138
sub_8041138: @ 0x08041138
	push {r4, r5, lr}
	ldr r0, _080411AC @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	ldr r0, _080411B0 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _0804115A
	movs r0, #0x90
	bl m4aSongNumStart
_0804115A:
	ldr r1, _080411B4 @ =IWRAM_START + 0x2DC
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08041184
	ldr r2, _080411B8 @ =IWRAM_START + 0xB8
	adds r0, r4, r2
	ldr r1, [r0]
	movs r3, #0xa0
	lsls r3, r3, #3
	adds r1, r1, r3
	str r1, [r0]
	ldr r0, _080411BC @ =IWRAM_START + 0xBC
	adds r2, r4, r0
	ldr r1, [r2]
	ldr r0, _080411C0 @ =0xFFFFD000
	cmp r1, r0
	ble _08041184
	ldr r3, _080411C4 @ =0xFFFFFD00
	adds r0, r1, r3
	str r0, [r2]
_08041184:
	adds r0, r5, #0
	bl sub_803FC14
	adds r0, r5, #0
	bl sub_8040E78
	adds r0, r5, #0
	bl sub_803F878
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080411A4
	ldr r0, _080411AC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080411C8 @ =sub_80411CC
	str r0, [r1, #8]
_080411A4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080411AC: .4byte gCurTask
_080411B0: .4byte gUnknown_03005590
_080411B4: .4byte IWRAM_START + 0x2DC
_080411B8: .4byte IWRAM_START + 0xB8
_080411BC: .4byte IWRAM_START + 0xBC
_080411C0: .4byte 0xFFFFD000
_080411C4: .4byte 0xFFFFFD00
_080411C8: .4byte sub_80411CC

	thumb_func_start sub_80411CC
sub_80411CC: @ 0x080411CC
	push {r4, r5, r6, lr}
	ldr r6, _08041228 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r0, _0804122C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _080411EE
	movs r0, #0x90
	bl m4aSongNumStart
_080411EE:
	adds r0, r4, #0
	bl sub_803FF44
	adds r0, r4, #0
	bl sub_8040E78
	adds r0, r4, #0
	bl sub_803F878
	ldr r1, _08041230 @ =IWRAM_START + 0xD6
	adds r0, r5, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0xc8
	rsbs r0, r0, #0
	cmp r1, r0
	bge _08041220
	adds r0, #0xa0
	movs r1, #0x96
	movs r2, #2
	bl sub_802EF68
	ldr r1, [r6]
	ldr r0, _08041234 @ =sub_8041238
	str r0, [r1, #8]
_08041220:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08041228: .4byte gCurTask
_0804122C: .4byte gUnknown_03005590
_08041230: .4byte IWRAM_START + 0xD6
_08041234: .4byte sub_8041238

	thumb_func_start sub_8041238
sub_8041238: @ 0x08041238
	push {lr}
	ldr r0, _08041248 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08041248: .4byte gCurTask

	thumb_func_start sub_804124C
sub_804124C: @ 0x0804124C
	movs r1, #8
	ldrsh r2, [r0, r1]
	ldr r1, [r0]
	adds r1, r1, r2
	str r1, [r0]
	movs r1, #0xa
	ldrsh r2, [r0, r1]
	ldr r1, [r0, #4]
	adds r1, r1, r2
	str r1, [r0, #4]
	bx lr
	.align 2, 0

	thumb_func_start sub_8041264
sub_8041264: @ 0x08041264
	push {r4, r5, lr}
	mov ip, r0
	movs r4, #0
	ldr r5, _080412B0 @ =gUnknown_080D7BE2
_0804126C:
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r3, r0, #2
	mov r1, ip
	adds r0, r1, r3
	adds r0, #0x4f
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804129E
	mov r0, ip
	adds r0, #0x3c
	adds r0, r0, r3
	ldr r1, [r1]
	str r1, [r0]
	mov r2, ip
	adds r2, #0x40
	adds r2, r2, r3
	lsls r0, r4, #1
	adds r0, r0, r5
	movs r3, #0
	ldrsh r1, [r0, r3]
	mov r3, ip
	ldr r0, [r3, #4]
	adds r0, r0, r1
	str r0, [r2]
_0804129E:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0804126C
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080412B0: .4byte gUnknown_080D7BE2

	thumb_func_start sub_80412B4
sub_80412B4: @ 0x080412B4
	push {lr}
	adds r2, r0, #0
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r3, r2, r0
	adds r0, r2, #0
	adds r0, #0x34
	movs r1, #0x1e
	strb r1, [r0]
	adds r0, #1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080412E2
	ldr r0, _080412E8 @ =0x00000275
	strh r0, [r3, #0xa]
	adds r0, #0x53
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080412EC @ =0x000002C9
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_080412E2:
	pop {r0}
	bx r0
	.align 2, 0
_080412E8: .4byte 0x00000275
_080412EC: .4byte 0x000002C9

	thumb_func_start sub_80412F0
sub_80412F0: @ 0x080412F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r6, r1, #0
	mov r8, r2
	lsls r3, r3, #0x10
	mov sb, r3
	mov r0, sb
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r0, _080413FC @ =sub_8041420
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r7, #0
	str r7, [sp]
	movs r1, #0x40
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	ldr r1, _08041400 @ =gUnknown_03005960
	ldr r0, [r1]
	lsls r0, r0, #8
	subs r0, r6, r0
	str r0, [r4]
	ldr r0, [r1, #4]
	lsls r0, r0, #8
	mov r1, r8
	subs r0, r1, r0
	str r0, [r4, #4]
	ldr r1, _08041404 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	mov r2, r8
	asrs r2, r2, #8
	mov r8, r2
	subs r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	asrs r1, r1, #8
	asrs r6, r6, #8
	str r6, [sp, #4]
	subs r1, r1, r6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08041408 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r0, r3
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r6, #0
	ldrsh r1, [r1, r6]
	mov r3, sb
	muls r3, r1, r3
	adds r1, r3, #0
	asrs r1, r1, #0xe
	movs r3, #0
	movs r6, #0xa0
	lsls r6, r6, #3
	adds r1, r1, r6
	strh r1, [r4, #8]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	mov r2, sb
	muls r2, r0, r2
	adds r0, r2, #0
	asrs r0, r0, #0xe
	strh r0, [r4, #0xa]
	mov r6, sl
	str r6, [r4, #0xc]
	ldr r0, _0804140C @ =IWRAM_START + 0x10
	adds r1, r5, r0
	mov r2, sp
	ldrh r2, [r2, #4]
	strh r2, [r1, #0x16]
	mov r6, r8
	strh r6, [r1, #0x18]
	movs r0, #0xe6
	lsls r0, r0, #2
	add sl, r0
	mov r2, sl
	ldr r0, [r2]
	str r0, [r1, #4]
	ldr r0, _08041410 @ =0x00000292
	strh r0, [r1, #0xa]
	ldr r6, _08041414 @ =IWRAM_START + 0x30
	adds r0, r5, r6
	strb r3, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r7, [r1, #8]
	strh r7, [r1, #0x14]
	strh r7, [r1, #0x1c]
	ldr r0, _08041418 @ =IWRAM_START + 0x31
	adds r2, r5, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r6, #2
	adds r2, r5, r6
	movs r0, #0x10
	strb r0, [r2]
	ldr r0, _0804141C @ =IWRAM_START + 0x35
	adds r5, r5, r0
	strb r3, [r5]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r1, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080413FC: .4byte sub_8041420
_08041400: .4byte gUnknown_03005960
_08041404: .4byte gUnknown_030059E0
_08041408: .4byte gUnknown_08097AA4
_0804140C: .4byte IWRAM_START + 0x10
_08041410: .4byte 0x00000292
_08041414: .4byte IWRAM_START + 0x30
_08041418: .4byte IWRAM_START + 0x31
_0804141C: .4byte IWRAM_START + 0x35

	thumb_func_start sub_8041420
sub_8041420: @ 0x08041420
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r3, _08041458 @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x10
	adds r6, r1, r0
	ldr r2, _0804145C @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #0x80
	ands r1, r0
	mov ip, r2
	cmp r1, #0
	beq _08041464
	movs r5, #8
	ldrsh r1, [r4, r5]
	ldr r0, [r4]
	adds r0, r0, r1
	ldr r7, _08041460 @ =0xFFFFFB00
	adds r0, r0, r7
	str r0, [r4]
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	b _08041480
	.align 2, 0
_08041458: .4byte gCurTask
_0804145C: .4byte gUnknown_030059E0
_08041460: .4byte 0xFFFFFB00
_08041464:
	movs r5, #8
	ldrsh r1, [r4, r5]
	ldr r2, _080414E8 @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r7, #0xa
	ldrsh r1, [r4, r7]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
_08041480:
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldr r0, [r4]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	strh r1, [r6, #0x18]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r5, #0x20
	rsbs r5, r5, #0
	cmp r2, r5
	bge _080414A6
	movs r7, #8
	ldrsh r0, [r4, r7]
	cmp r0, #0
	blt _080414E0
_080414A6:
	movs r0, #0x88
	lsls r0, r0, #1
	cmp r2, r0
	ble _080414B6
	movs r7, #8
	ldrsh r0, [r4, r7]
	cmp r0, #0
	bgt _080414E0
_080414B6:
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, r5
	bge _080414C6
	movs r5, #0xa
	ldrsh r0, [r4, r5]
	cmp r0, #0
	blt _080414E0
_080414C6:
	cmp r1, #0xc0
	ble _080414D2
	movs r7, #0xa
	ldrsh r0, [r4, r7]
	cmp r0, #0
	bgt _080414E0
_080414D2:
	ldr r0, _080414EC @ =0xFFFFFE00
	cmp r2, r0
	blt _080414E0
	movs r0, #0xbc
	lsls r0, r0, #2
	cmp r2, r0
	ble _080414F0
_080414E0:
	ldr r0, [r3]
	bl TaskDestroy
	b _08041558
	.align 2, 0
_080414E8: .4byte gUnknown_03005960
_080414EC: .4byte 0xFFFFFE00
_080414F0:
	ldr r0, [r4, #0xc]
	adds r0, #0x32
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804154C
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r3, _08041560 @ =gUnknown_03005960
	ldr r0, [r3]
	adds r1, r1, r0
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	adds r2, r2, r0
	mov r0, ip
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800CA20
	adds r5, r0, #0
	cmp r5, #1
	bne _0804154C
	ldr r3, [r4, #0xc]
	adds r0, r3, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804154C
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r2, r3, r1
	adds r1, r3, #0
	adds r1, #0x34
	movs r0, #0x1e
	strb r0, [r1]
	ldr r0, _08041564 @ =0x00000275
	strh r0, [r2, #0xa]
	movs r7, #0xb2
	lsls r7, r7, #2
	adds r0, r3, r7
	strb r5, [r0]
	ldr r0, _08041568 @ =0x000002C9
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
_0804154C:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08041558:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041560: .4byte gUnknown_03005960
_08041564: .4byte 0x00000275
_08041568: .4byte 0x000002C9

	thumb_func_start sub_804156C
sub_804156C: @ 0x0804156C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r2, _080415C8 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _080415CC @ =gUnknown_030053B8
	ldr r0, _080415D0 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, _080415D4 @ =sub_8042670
	movs r1, #0xaa
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _080415D8 @ =sub_80427A0
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _080415DC @ =gUnknown_03005B4C
	str r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov sl, r1
	ldr r0, _080415E0 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _080415E8
	ldr r0, _080415E4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _080415E8
	movs r0, #6
	b _080415EC
	.align 2, 0
_080415C8: .4byte gUnknown_030059E0
_080415CC: .4byte gUnknown_030053B8
_080415D0: .4byte gUnknown_03005590
_080415D4: .4byte sub_8042670
_080415D8: .4byte sub_80427A0
_080415DC: .4byte gUnknown_03005B4C
_080415E0: .4byte gUnknown_030054EC
_080415E4: .4byte gUnknown_030054CC
_080415E8:
	movs r0, #8
	mov r1, sl
_080415EC:
	strb r0, [r1, #0x14]
	ldr r1, _08041614 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _0804161C
	mov r2, sl
	ldrb r0, [r2, #0x14]
	lsrs r0, r0, #1
	strb r0, [r2, #0x14]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _0804161C
	ldr r0, _08041618 @ =0x00466E00
	str r0, [r2, #4]
	movs r0, #0xb4
	lsls r0, r0, #7
	str r0, [r2, #8]
	b _0804162A
	.align 2, 0
_08041614: .4byte gUnknown_030055B4
_08041618: .4byte 0x00466E00
_0804161C:
	movs r0, #0xdc
	lsls r0, r0, #0xa
	mov r1, sl
	str r0, [r1, #4]
	movs r0, #0xb4
	lsls r0, r0, #7
	str r0, [r1, #8]
_0804162A:
	movs r5, #0
	movs r4, #0
	movs r6, #0xa0
	lsls r6, r6, #3
	mov r2, sl
	strh r6, [r2, #0xc]
	strh r4, [r2, #0xe]
	strb r5, [r2, #0x15]
	strb r5, [r2, #0x16]
	strh r4, [r2, #0x12]
	movs r0, #0x78
	str r0, [r2]
	strh r4, [r2, #0x10]
	strb r5, [r2, #0x17]
	movs r0, #0x2d
	bl sub_8007C10
	movs r1, #0xa8
	lsls r1, r1, #1
	add r1, sl
	str r0, [r1]
	mov r7, sl
	adds r7, #0x88
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08041780 @ =0x00000295
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0xa8
	strb r5, [r0]
	strh r6, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0xa9
	movs r0, #0xff
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xaa
	movs r1, #0x10
	mov r8, r1
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	movs r0, #0x90
	lsls r0, r0, #6
	mov sb, r0
	str r0, [r7, #0x10]
	adds r7, #0x38
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08041784 @ =0x00000275
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0xe0
	strb r5, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0xe1
	adds r0, r6, #0
	strb r0, [r1]
	mov r0, sl
	adds r0, #0xe2
	mov r1, r8
	strb r1, [r0]
	adds r0, #3
	strb r5, [r0]
	str r6, [r7, #0x28]
	mov r2, sb
	str r2, [r7, #0x10]
	adds r7, #0x30
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #8
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08041788 @ =0x00000299
	strh r0, [r7, #0xa]
	movs r0, #0x88
	lsls r0, r0, #1
	add r0, sl
	strb r5, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, _0804178C @ =0x00000111
	add r1, sl
	adds r0, r6, #0
	strb r0, [r1]
	movs r0, #0x89
	lsls r0, r0, #1
	add r0, sl
	mov r1, r8
	strb r1, [r0]
	ldr r0, _08041790 @ =0x00000115
	add r0, sl
	strb r5, [r0]
	str r6, [r7, #0x28]
	movs r2, #0x80
	lsls r2, r2, #6
	mov sb, r2
	str r2, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r7, #0x90
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x19
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08041794 @ =0x00000296
	strh r0, [r7, #0xa]
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, sl
	strb r5, [r0]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r1, _08041798 @ =0x00000141
	add r1, sl
	adds r0, r6, #0
	strb r0, [r1]
	movs r0, #0xa1
	lsls r0, r0, #1
	add r0, sl
	mov r1, r8
	strb r1, [r0]
	ldr r0, _0804179C @ =0x00000145
	add r0, sl
	strb r5, [r0]
	str r6, [r7, #0x28]
	mov r2, sb
	str r2, [r7, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041780: .4byte 0x00000295
_08041784: .4byte 0x00000275
_08041788: .4byte 0x00000299
_0804178C: .4byte 0x00000111
_08041790: .4byte 0x00000115
_08041794: .4byte 0x00000296
_08041798: .4byte 0x00000141
_0804179C: .4byte 0x00000145

	thumb_func_start sub_80417A0
sub_80417A0: @ 0x080417A0
	push {r4, r5, r6, lr}
	ldr r0, _08041868 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x18
	adds r6, r5, r0
	adds r0, r4, #0
	bl sub_804217C
	adds r0, r4, #0
	bl sub_80424EC
	adds r0, r4, #0
	bl sub_8041C48
	adds r0, r4, #0
	bl sub_8042560
	adds r0, r4, #0
	bl sub_8041D34
	ldr r0, _0804186C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _080417E4
	movs r0, #0x90
	bl m4aSongNumStart
_080417E4:
	ldr r1, _08041870 @ =IWRAM_START + 0x84
	adds r3, r5, r1
	ldrb r0, [r3]
	cmp r0, #0
	bne _08041830
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r2, _08041874 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	cmp r0, #0x31
	bgt _08041830
	ldr r1, _08041878 @ =IWRAM_START + 0x80
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08041830
	movs r0, #1
	strb r0, [r3]
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r6, #8]
	asrs r1, r1, #8
	ldr r2, [r2, #4]
	subs r1, r1, r2
	subs r1, #0xf
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_8039FA4
_08041830:
	ldr r0, [r4, #0x1c]
	asrs r0, r0, #8
	ldr r1, _08041874 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	movs r1, #0xc8
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08041860
	adds r0, r4, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08041860
	movs r0, #0x28
	rsbs r0, r0, #0
	movs r1, #0x96
	movs r2, #3
	bl sub_802EF68
	ldr r0, _08041868 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0804187C @ =sub_8042748
	str r0, [r1, #8]
_08041860:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08041868: .4byte gCurTask
_0804186C: .4byte gUnknown_03005590
_08041870: .4byte IWRAM_START + 0x84
_08041874: .4byte gUnknown_03005960
_08041878: .4byte IWRAM_START + 0x80
_0804187C: .4byte sub_8042748

	thumb_func_start sub_8041880
sub_8041880: @ 0x08041880
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	mov r7, r8
	adds r7, #0x88
	mov r1, r8
	ldr r0, [r1, #4]
	asrs r0, r0, #8
	ldr r4, _080419F8 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	adds r7, #0x38
	mov r6, r8
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	subs r0, #0xe
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	movs r5, #0
	ldr r0, _080419FC @ =gUnknown_08097AA4
	mov sb, r0
	adds r7, #0x30
	mov sl, r4
_080418E6:
	ldr r3, _08041A00 @ =gUnknown_03005590
	ldr r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	lsls r1, r5, #7
	adds r0, r0, r1
	ldr r4, _08041A04 @ =0x000003FF
	ands r0, r4
	lsls r0, r0, #1
	add r0, sb
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	mov r0, r8
	ldr r2, [r0, #4]
	asrs r2, r2, #8
	mov r1, sl
	ldr r0, [r1]
	subs r2, r2, r0
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r3, r6, r4
	ldr r6, _08041A04 @ =0x000003FF
	ands r3, r6
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r3, r1
	lsls r0, r0, #1
	add r0, sb
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #4
	adds r0, r0, r1
	adds r4, r5, #1
	muls r0, r4, r0
	asrs r0, r0, #0xe
	adds r2, r2, r0
	strh r2, [r7, #0x16]
	mov r6, r8
	ldr r2, [r6, #8]
	asrs r2, r2, #8
	mov r1, sl
	ldr r0, [r1, #4]
	subs r2, r2, r0
	lsls r3, r3, #1
	add r3, sb
	movs r6, #0
	ldrsh r1, [r3, r6]
	lsls r0, r1, #4
	adds r0, r0, r1
	muls r0, r4, r0
	asrs r0, r0, #0xe
	adds r0, #0x14
	adds r2, r2, r0
	strh r2, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r5, r4, #0x18
	cmp r5, #2
	bls _080418E6
	ldr r4, _080419FC @ =gUnknown_08097AA4
	ldr r0, _08041A00 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r3, _08041A04 @ =0x000003FF
	ands r0, r3
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x19
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r7, #0x90
	lsls r7, r7, #1
	add r7, r8
	mov r0, r8
	ldr r1, [r0, #4]
	asrs r1, r1, #8
	ldr r5, _080419F8 @ =gUnknown_03005960
	ldr r0, [r5]
	subs r1, r1, r0
	movs r0, #0xfa
	lsls r0, r0, #1
	adds r2, r6, r0
	ands r2, r3
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r6, #0
	ldrsh r3, [r0, r6]
	lsls r0, r3, #4
	subs r0, r0, r3
	asrs r0, r0, #0xc
	adds r1, r1, r0
	strh r1, [r7, #0x16]
	mov r0, r8
	ldr r1, [r0, #8]
	asrs r1, r1, #8
	ldr r0, [r5, #4]
	subs r1, r1, r0
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r3, #0
	ldrsh r2, [r2, r3]
	lsls r0, r2, #4
	subs r0, r0, r2
	asrs r0, r0, #0xc
	adds r0, #0x14
	adds r1, r1, r0
	strh r1, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080419F8: .4byte gUnknown_03005960
_080419FC: .4byte gUnknown_08097AA4
_08041A00: .4byte gUnknown_03005590
_08041A04: .4byte 0x000003FF

	thumb_func_start sub_8041A08
sub_8041A08: @ 0x08041A08
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r7, #0
	ldr r4, _08041AEC @ =gUnknown_08097AA4
	ldr r0, _08041AF0 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r2, _08041AF4 @ =0x000003FF
	ands r0, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x19
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0x90
	lsls r3, r3, #1
	adds r6, r5, r3
	ldr r3, [r5, #4]
	asrs r3, r3, #8
	mov ip, r3
	movs r0, #0xfa
	lsls r0, r0, #1
	adds r1, r1, r0
	ands r1, r2
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r3, #0
	ldrsh r2, [r0, r3]
	lsls r0, r2, #4
	subs r0, r0, r2
	asrs r0, r0, #0xc
	mov r2, ip
	adds r3, r2, r0
	ldr r2, [r5, #8]
	asrs r2, r2, #8
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r0, #0
	ldrsh r1, [r1, r0]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #0xc
	adds r0, #0x14
	adds r2, r2, r0
	ldrb r0, [r5, #0x17]
	cmp r0, #0
	bne _08041B08
	ldr r4, _08041AF8 @ =gUnknown_030059E0
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08041ABA
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08041ABA
	adds r0, r6, #0
	adds r1, r3, #0
	adds r3, r4, #0
	bl sub_800DF38
	cmp r0, #0
	beq _08041ABA
	ldr r0, _08041AFC @ =0x0000FB40
	strh r0, [r4, #0x12]
	ldr r0, [r4, #0x20]
	ldr r1, _08041B00 @ =0xFFFFFEF7
	ands r0, r1
	str r0, [r4, #0x20]
	str r7, [r4, #0x3c]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0xb
	strh r0, [r1]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	movs r7, #1
_08041ABA:
	ldrh r0, [r5, #0x10]
	adds r0, #1
	strh r0, [r5, #0x10]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0x96
	lsls r2, r2, #1
	cmp r0, r2
	bls _08041ACE
	movs r7, #1
_08041ACE:
	cmp r7, #0
	beq _08041B36
	ldr r0, _08041B04 @ =0x00000296
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	strh r2, [r5, #0x10]
	movs r0, #1
	b _08041B34
	.align 2, 0
_08041AEC: .4byte gUnknown_08097AA4
_08041AF0: .4byte gUnknown_03005590
_08041AF4: .4byte 0x000003FF
_08041AF8: .4byte gUnknown_030059E0
_08041AFC: .4byte 0x0000FB40
_08041B00: .4byte 0xFFFFFEF7
_08041B04: .4byte 0x00000296
_08041B08:
	ldrh r0, [r5, #0x10]
	subs r0, #1
	strh r0, [r5, #0x10]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x12
	bne _08041B2C
	ldr r0, _08041B3C @ =0x00000296
	strh r0, [r6, #0xa]
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #3
	strb r0, [r1]
	ldr r3, _08041B40 @ =0x00000141
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
_08041B2C:
	ldrh r0, [r5, #0x10]
	cmp r0, #0
	bne _08041B36
	movs r0, #0
_08041B34:
	strb r0, [r5, #0x17]
_08041B36:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041B3C: .4byte 0x00000296
_08041B40: .4byte 0x00000141

	thumb_func_start sub_8041B44
sub_8041B44: @ 0x08041B44
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	ldrb r0, [r4, #0x16]
	cmp r0, #0
	bne _08041BE8
	ldr r0, [r4, #4]
	asrs r7, r0, #8
	ldr r0, [r4, #8]
	asrs r5, r0, #8
	movs r0, #0x88
	adds r0, r0, r4
	mov r8, r0
	ldr r6, _08041B98 @ =gUnknown_030059E0
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08041BC0
	str r6, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _08041BA4
	ldr r0, [r6, #0xc]
	asrs r0, r0, #8
	cmp r0, r5
	ble _08041B9C
	adds r0, r4, #0
	bl sub_8042774
	adds r0, r6, #0
	bl sub_800CBA4
	b _08041BC0
	.align 2, 0
_08041B98: .4byte gUnknown_030059E0
_08041B9C:
	adds r0, r4, #0
	bl sub_80423EC
	b _08041BC0
_08041BA4:
	str r6, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800CA20
	str r6, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #1
	bl sub_800CA20
_08041BC0:
	lsls r0, r7, #8
	lsls r1, r5, #8
	bl sub_80122DC
	ldrb r0, [r4, #0x16]
	cmp r0, #0
	bne _08041BE8
	ldr r0, _08041BF4 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _08041BE8
	adds r0, r4, #0
	bl sub_80423EC
_08041BE8:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041BF4: .4byte gUnknown_030059E0

	thumb_func_start sub_8041BF8
sub_8041BF8: @ 0x08041BF8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x12]
	cmp r0, #0
	beq _08041C08
	subs r0, #1
	strh r0, [r4, #0x12]
	b _08041C3C
_08041C08:
	adds r5, r4, #0
	adds r5, #0x88
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	movs r0, #0xd0
	lsls r0, r0, #5
	adds r2, r2, r0
	adds r0, r4, #0
	bl sub_80427FC
	ldrb r0, [r4, #0x14]
	cmp r0, #4
	bhi _08041C26
	movs r0, #0x50
	b _08041C28
_08041C26:
	movs r0, #0x8c
_08041C28:
	strh r0, [r4, #0x12]
	ldr r0, _08041C44 @ =0x00000295
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08041C3C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08041C44: .4byte 0x00000295

	thumb_func_start sub_8041C48
sub_8041C48: @ 0x08041C48
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	movs r0, #0x18
	adds r0, r0, r6
	mov r8, r0
	adds r4, r6, #0
	adds r4, #0x88
	ldr r0, [r0, #4]
	asrs r0, r0, #8
	ldr r7, _08041D30 @ =gUnknown_03005960
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	mov r1, r8
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r6, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	bne _08041CB4
	adds r4, #0x38
	mov r1, r8
	ldr r0, [r1, #4]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	mov r1, r8
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	subs r0, #0xe
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_08041CB4:
	adds r4, r6, #0
	adds r4, #0xf0
	movs r5, #0
	movs r0, #0x30
	adds r0, r0, r6
	mov sl, r0
	movs r1, #0x34
	adds r1, r1, r6
	mov sb, r1
_08041CC6:
	lsls r2, r5, #2
	adds r2, r2, r5
	lsls r2, r2, #2
	mov r1, sl
	adds r0, r1, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	add r2, sb
	ldr r0, [r2]
	asrs r0, r0, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08041CC6
	movs r0, #0x90
	lsls r0, r0, #1
	adds r4, r6, r0
	mov r1, r8
	ldr r0, [r1, #0x54]
	asrs r0, r0, #8
	ldr r2, _08041D30 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	mov r1, r8
	ldr r0, [r1, #0x58]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041D30: .4byte gUnknown_03005960

	thumb_func_start sub_8041D34
sub_8041D34: @ 0x08041D34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	str r0, [sp, #0x20]
	adds r0, #0x18
	mov sl, r0
	ldr r1, [sp, #0x20]
	adds r1, #0x82
	mov sb, r1
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldrb r2, [r1]
	str r2, [sp, #0x24]
	ldr r0, [sp, #0x20]
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08041D62
	b _08041FEA
_08041D62:
	adds r0, r2, #0
	movs r1, #0xc
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _08041DFA
	movs r0, #0x30
	mov r3, sb
	strb r0, [r3]
	ldr r0, _08041FFC @ =gUnknown_030053B8
	mov r8, r0
	ldr r0, [r0]
	ldr r5, _08042000 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _08042004 @ =0x3C6EF35F
	adds r2, r2, r4
	mov r3, sl
	ldr r1, [r3, #4]
	asrs r1, r1, #8
	ldr r3, _08042008 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	movs r0, #0x1f
	ands r0, r2
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x14]
	muls r2, r5, r2
	adds r2, r2, r4
	mov r0, sl
	ldr r1, [r0, #8]
	asrs r1, r1, #8
	ldr r0, [r3, #4]
	subs r1, r1, r0
	movs r6, #0x3f
	adds r0, r2, #0
	ands r0, r6
	adds r1, r1, r0
	subs r1, #0x30
	str r1, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r3, sp
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	ands r1, r6
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	mov r2, r8
	str r1, [r2]
	ldr r0, _0804200C @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _08042010 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _08042014 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	ldr r1, [sp, #0x20]
	adds r1, #0x81
	bl sub_8039B54
_08041DFA:
	mov r3, sb
	ldrb r1, [r3]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _08041ED0
	ldr r0, _08041FFC @ =gUnknown_030053B8
	mov sb, r0
	ldr r0, [r0]
	ldr r1, _08042000 @ =0x00196225
	mov r8, r1
	mov r2, r8
	muls r2, r0, r2
	adds r0, r2, #0
	ldr r6, _08042004 @ =0x3C6EF35F
	adds r0, r0, r6
	mov r3, sb
	str r0, [r3]
	movs r5, #0xf
	adds r4, r5, #0
	ands r4, r0
	adds r0, r4, #0
	movs r1, #6
	bl Div
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r1, r4, r1
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	mov r1, sl
	ldr r0, [r1, #4]
	asrs r0, r0, #8
	ldr r3, _08042008 @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	lsls r1, r4, #1
	subs r0, r0, r1
	lsls r4, r4, #2
	adds r0, r0, r4
	str r0, [sp, #0x14]
	mov r2, sb
	ldr r0, [r2]
	mov r2, r8
	muls r2, r0, r2
	adds r2, r2, r6
	ands r5, r2
	mov r1, sl
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	lsls r1, r5, #1
	subs r0, r0, r1
	lsls r5, r5, #2
	adds r0, r0, r5
	str r0, [sp, #0x18]
	mov r1, sp
	movs r0, #0x40
	strh r0, [r1, #0x1c]
	mov r3, sp
	mov r1, r8
	muls r1, r2, r1
	adds r1, r1, r6
	ldr r0, _08042018 @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	mov r2, sp
	mov r3, r8
	muls r3, r1, r3
	adds r1, r3, #0
	adds r1, r1, r6
	mov r0, sb
	str r1, [r0]
	ldr r0, _0804200C @ =0x000001FF
	ands r1, r0
	movs r0, #0xe0
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r2, #0xe]
	ldr r2, _0804201C @ =gUnknown_080D79D0
	lsls r1, r7, #1
	adds r1, r1, r7
	lsls r1, r1, #2
	adds r0, r1, r2
	ldr r0, [r0]
	lsls r0, r0, #5
	ldr r3, _08042020 @ =0x06010000
	adds r0, r0, r3
	str r0, [sp]
	mov r3, sp
	adds r0, r2, #4
	adds r0, r1, r0
	ldr r0, [r0]
	strh r0, [r3, #8]
	adds r2, #8
	adds r1, r1, r2
	ldr r0, [r1]
	strh r0, [r3, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	ldr r1, [sp, #0x20]
	adds r1, #0x81
	mov r0, sp
	bl sub_8039B54
_08041ED0:
	movs r7, #0
	ldr r0, [sp, #0x20]
	adds r0, #0x40
	str r0, [sp, #0x28]
	ldr r1, _08042008 @ =gUnknown_03005960
	mov sb, r1
	mov r5, sp
	ldr r2, _08041FFC @ =gUnknown_030053B8
	mov r8, r2
	ldr r6, _08042000 @ =0x00196225
_08041EE4:
	lsls r0, r7, #2
	adds r0, r0, r7
	lsls r2, r0, #2
	ldr r3, [sp, #0x28]
	adds r0, r3, r2
	ldr r4, [r0]
	cmp r4, #0
	bne _08041F6A
	adds r0, r7, #4
	ldr r1, [sp, #0x24]
	cmp r1, r0
	beq _08041F02
	adds r0, #0x1a
	cmp r1, r0
	bne _08041F6A
_08041F02:
	mov r0, sl
	adds r0, #0x18
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	mov r3, sb
	ldr r1, [r3]
	subs r0, r0, r1
	str r0, [sp, #0x14]
	mov r0, sl
	adds r0, #0x1c
	adds r0, r0, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	strh r4, [r5, #0x1c]
	mov r1, r8
	ldr r0, [r1]
	adds r2, r0, #0
	muls r2, r6, r2
	ldr r3, _08042004 @ =0x3C6EF35F
	adds r2, r2, r3
	movs r1, #0x3f
	ands r1, r2
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r3
	mov r2, r8
	str r1, [r2]
	ldr r0, _0804200C @ =0x000001FF
	ands r1, r0
	movs r0, #0x90
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	ldr r0, _08042010 @ =0x06012980
	str r0, [sp]
	ldr r0, _08042014 @ =0x0000026B
	strh r0, [r5, #8]
	strh r4, [r5, #0xa]
	str r4, [sp, #4]
	mov r0, sp
	mov r1, sl
	adds r1, #0x69
	bl sub_8039B54
_08041F6A:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bls _08041EE4
	ldr r3, [sp, #0x24]
	cmp r3, #0x29
	beq _08041F7E
	cmp r3, #0x12
	bne _08041FEA
_08041F7E:
	mov r0, sl
	ldr r7, [r0, #0x64]
	cmp r7, #0
	bne _08041FEA
	ldr r0, [r0, #0x54]
	asrs r0, r0, #8
	ldr r2, _08042008 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	str r0, [sp, #0x14]
	mov r1, sl
	ldr r0, [r1, #0x58]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	str r0, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r5, sp
	ldr r6, _08041FFC @ =gUnknown_030053B8
	ldr r0, [r6]
	ldr r4, _08042000 @ =0x00196225
	adds r2, r0, #0
	muls r2, r4, r2
	ldr r3, _08042004 @ =0x3C6EF35F
	adds r2, r2, r3
	movs r1, #0x3f
	ands r1, r2
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	adds r1, r2, #0
	muls r1, r4, r1
	adds r1, r1, r3
	str r1, [r6]
	ldr r0, _0804200C @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r5, #0xe]
	ldr r0, _08042010 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _08042014 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	mov r1, sl
	adds r1, #0x69
	bl sub_8039B54
_08041FEA:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08041FFC: .4byte gUnknown_030053B8
_08042000: .4byte 0x00196225
_08042004: .4byte 0x3C6EF35F
_08042008: .4byte gUnknown_03005960
_0804200C: .4byte 0x000001FF
_08042010: .4byte 0x06012980
_08042014: .4byte 0x0000026B
_08042018: .4byte 0x000003FF
_0804201C: .4byte gUnknown_080D79D0
_08042020: .4byte 0x06010000

	thumb_func_start sub_8042024
sub_8042024: @ 0x08042024
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	movs r0, #0x18
	adds r0, r0, r7
	mov ip, r0
	movs r1, #0
	str r1, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #0x80
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r2, r7, #0
	adds r2, #0x82
	movs r0, #0x30
	strb r0, [r2]
	adds r2, #1
	movs r0, #3
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x84
	strb r1, [r0]
	adds r5, r7, #0
	adds r5, #0x88
	movs r2, #0x16
	ldrsh r0, [r5, r2]
	ldr r2, _0804216C @ =gUnknown_03005960
	ldr r4, [r2]
	adds r0, r0, r4
	lsls r0, r0, #8
	mov r3, ip
	str r0, [r3, #4]
	movs r6, #0x18
	ldrsh r0, [r5, r6]
	ldr r3, [r2, #4]
	adds r0, r0, r3
	lsls r0, r0, #8
	mov r2, ip
	str r0, [r2, #8]
	movs r2, #0xb8
	lsls r2, r2, #3
	mov r6, ip
	str r2, [r6, #0xc]
	str r1, [r6, #0x10]
	str r1, [r6, #0x14]
	movs r0, #0x90
	lsls r0, r0, #1
	adds r5, r7, r0
	movs r6, #0x16
	ldrsh r0, [r5, r6]
	adds r0, r0, r4
	lsls r0, r0, #8
	mov r4, ip
	str r0, [r4, #0x54]
	movs r6, #0x18
	ldrsh r0, [r5, r6]
	adds r0, r0, r3
	lsls r0, r0, #8
	str r0, [r4, #0x58]
	str r2, [r4, #0x5c]
	str r1, [r4, #0x60]
	str r1, [r4, #0x64]
	movs r6, #0
	ldr r0, _08042170 @ =gUnknown_08097AA4
	mov r8, r0
	ldr r0, _08042174 @ =gUnknown_03005590
	ldr r1, [r0]
	ldr r2, _08042178 @ =0x000003FF
	mov sl, r2
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	str r0, [sp]
	mov sb, r6
_080420C2:
	lsls r0, r6, #7
	ldr r3, [sp]
	adds r0, r3, r0
	mov r4, sl
	ands r0, r4
	lsls r0, r0, #1
	add r0, r8
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x19
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r4, [r7, #4]
	asrs r4, r4, #8
	movs r0, #0xfa
	lsls r0, r0, #1
	adds r1, r1, r0
	mov r2, sl
	ands r1, r2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	add r0, r8
	movs r3, #0
	ldrsh r2, [r0, r3]
	lsls r0, r2, #4
	adds r0, r0, r2
	adds r5, r6, #1
	muls r0, r5, r0
	asrs r0, r0, #0xe
	adds r4, r4, r0
	ldr r3, [r7, #8]
	asrs r3, r3, #8
	lsls r1, r1, #1
	add r1, r8
	movs r0, #0
	ldrsh r1, [r1, r0]
	lsls r0, r1, #4
	adds r0, r0, r1
	muls r0, r5, r0
	asrs r0, r0, #0xe
	adds r0, #0x14
	adds r3, r3, r0
	lsls r2, r6, #2
	adds r2, r2, r6
	lsls r2, r2, #2
	mov r0, ip
	adds r0, #0x18
	adds r0, r0, r2
	lsls r4, r4, #8
	str r4, [r0]
	mov r0, ip
	adds r0, #0x1c
	adds r0, r0, r2
	lsls r3, r3, #8
	str r3, [r0]
	mov r0, ip
	adds r0, #0x20
	adds r0, r0, r2
	movs r1, #0xb8
	lsls r1, r1, #3
	str r1, [r0]
	mov r0, ip
	adds r0, #0x24
	adds r0, r0, r2
	mov r1, sb
	str r1, [r0]
	mov r0, ip
	adds r0, #0x28
	adds r0, r0, r2
	str r1, [r0]
	lsls r5, r5, #0x18
	lsrs r6, r5, #0x18
	cmp r6, #2
	bls _080420C2
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804216C: .4byte gUnknown_03005960
_08042170: .4byte gUnknown_08097AA4
_08042174: .4byte gUnknown_03005590
_08042178: .4byte 0x000003FF

	thumb_func_start sub_804217C
sub_804217C: @ 0x0804217C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r2, r0, #0
	adds r5, r2, #0
	adds r5, #0x18
	adds r1, r2, #0
	adds r1, #0x80
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r2, #0x18]
	adds r0, #1
	str r0, [r2, #0x18]
	cmp r0, #0xa
	bls _080421AC
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bne _080421AC
	ldr r0, [r5, #0x10]
	adds r0, #0x10
	str r0, [r5, #0x10]
_080421AC:
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	adds r1, r1, r0
	str r1, [r5, #4]
	ldr r0, [r5, #8]
	ldr r2, [r5, #0x10]
	adds r0, r0, r2
	str r0, [r5, #8]
	asrs r0, r0, #8
	adds r0, #0xd
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _08042238 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r1, #0
	bgt _0804223C
	ldr r2, [r5, #0x10]
	cmp r2, #0
	blt _0804223C
	lsls r1, r1, #8
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	subs r0, r0, r2
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	str r0, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0x6b
	ldrb r0, [r1]
	cmp r0, #0
	beq _08042228
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08042216
	str r0, [r5, #0x10]
	movs r0, #1
	str r0, [r5, #0x14]
_08042216:
	movs r0, #0x80
	lsls r0, r0, #3
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x20
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
_08042228:
	ldr r0, [r5, #0xc]
	subs r0, #8
	str r0, [r5, #0xc]
	cmp r0, #0
	bge _0804224A
	movs r0, #0
	str r0, [r5, #0xc]
	b _0804224A
	.align 2, 0
_08042238: .4byte sub_801EE64
_0804223C:
	ldr r0, [r5, #0x14]
	cmp r0, #0
	beq _0804224A
	lsls r1, r1, #8
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
_0804224A:
	movs r0, #0
	str r0, [sp, #8]
	adds r1, r5, #0
	adds r1, #0x24
	str r1, [sp, #0x1c]
	adds r2, r5, #0
	adds r2, #0x18
	str r2, [sp, #0x10]
	adds r3, r5, #0
	adds r3, #0x20
	str r3, [sp, #0x18]
	adds r0, r5, #0
	adds r0, #0x1c
	str r0, [sp, #0x14]
	adds r1, #4
	str r1, [sp, #0xc]
_0804226A:
	ldr r0, [r5]
	ldr r2, [sp, #8]
	lsls r2, r2, #2
	mov sb, r2
	cmp r0, #0xa
	bls _08042290
	ldr r0, [sp, #8]
	add r0, sb
	lsls r1, r0, #2
	ldr r3, [sp, #0xc]
	adds r0, r3, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08042290
	ldr r0, [sp, #0x1c]
	adds r1, r0, r1
	ldr r0, [r1]
	adds r0, #0x10
	str r0, [r1]
_08042290:
	ldr r0, [sp, #8]
	add r0, sb
	lsls r7, r0, #2
	ldr r1, [sp, #0x10]
	adds r2, r1, r7
	ldr r3, [sp, #0x18]
	adds r3, r3, r7
	mov r8, r3
	ldr r0, [r2]
	ldr r1, [r3]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [sp, #0x14]
	adds r4, r0, r7
	ldr r1, [sp, #0x1c]
	adds r6, r1, r7
	ldr r0, [r4]
	ldr r1, [r6]
	adds r0, r0, r1
	str r0, [r4]
	asrs r0, r0, #8
	adds r0, #7
	ldr r1, [r2]
	asrs r1, r1, #8
	movs r2, #0
	mov sl, r2
	str r2, [sp]
	ldr r2, _08042320 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r1, #0
	bgt _08042324
	ldr r0, [r6]
	cmp r0, #0
	blt _08042324
	lsls r1, r1, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0xa
	bl Div
	str r0, [r6]
	movs r1, #0x30
	rsbs r1, r1, #0
	cmp r0, r1
	ble _0804230C
	mov r3, sl
	str r3, [r6]
	ldr r0, [sp, #0xc]
	adds r1, r0, r7
	movs r0, #1
	str r0, [r1]
_0804230C:
	mov r1, r8
	ldr r0, [r1]
	subs r0, #8
	str r0, [r1]
	cmp r0, #0
	bge _08042340
	mov r2, sl
	str r2, [r1]
	b _08042340
	.align 2, 0
_08042320: .4byte sub_801EE64
_08042324:
	ldr r0, [sp, #8]
	add r0, sb
	lsls r2, r0, #2
	ldr r3, [sp, #0xc]
	adds r0, r3, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _08042340
	ldr r0, [sp, #0x14]
	adds r2, r0, r2
	lsls r1, r1, #8
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
_08042340:
	ldr r0, [sp, #8]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	cmp r0, #2
	bls _0804226A
	ldr r0, [r5]
	cmp r0, #0xa
	bls _08042360
	ldr r0, [r5, #0x64]
	cmp r0, #0
	bne _08042360
	ldr r0, [r5, #0x60]
	adds r0, #0x10
	str r0, [r5, #0x60]
_08042360:
	ldr r1, [r5, #0x54]
	ldr r0, [r5, #0x5c]
	adds r1, r1, r0
	str r1, [r5, #0x54]
	ldr r0, [r5, #0x58]
	ldr r2, [r5, #0x60]
	adds r0, r0, r2
	str r0, [r5, #0x58]
	asrs r0, r0, #8
	adds r0, #9
	asrs r1, r1, #8
	movs r4, #0
	str r4, [sp]
	ldr r2, _080423C8 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r1, #0
	bgt _080423CC
	ldr r2, [r5, #0x60]
	cmp r2, #0
	blt _080423CC
	lsls r1, r1, #8
	ldr r0, [r5, #0x58]
	adds r0, r0, r1
	str r0, [r5, #0x58]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0xa
	bl Div
	str r0, [r5, #0x60]
	movs r1, #0x30
	rsbs r1, r1, #0
	cmp r0, r1
	ble _080423B8
	str r4, [r5, #0x60]
	movs r0, #1
	str r0, [r5, #0x64]
_080423B8:
	ldr r0, [r5, #0x5c]
	subs r0, #8
	str r0, [r5, #0x5c]
	cmp r0, #0
	bge _080423DA
	str r4, [r5, #0x5c]
	b _080423DA
	.align 2, 0
_080423C8: .4byte sub_801EE64
_080423CC:
	ldr r0, [r5, #0x64]
	cmp r0, #0
	beq _080423DA
	lsls r1, r1, #8
	ldr r0, [r5, #0x58]
	adds r0, r0, r1
	str r0, [r5, #0x58]
_080423DA:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80423EC
sub_80423EC: @ 0x080423EC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	mov r7, r8
	adds r7, #0xc0
	movs r0, #0
	mov sb, r0
	mov r1, r8
	ldrb r0, [r1, #0x14]
	cmp r0, #0
	beq _080424B8
	subs r0, #1
	strb r0, [r1, #0x14]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0804241A
	movs r0, #0x8f
	bl m4aSongNumStart
	b _08042420
_0804241A:
	movs r0, #0xeb
	bl m4aSongNumStart
_08042420:
	movs r0, #0x1e
	mov r2, r8
	strb r0, [r2, #0x16]
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0804249C
	movs r0, #0xa7
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #4
	strb r0, [r1]
	ldr r1, _08042488 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0804248C @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _080424A8
	ldr r0, _08042490 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _080424A8
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08042494 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0804247C
	movs r0, #0xff
_0804247C:
	strb r0, [r1]
	ldr r1, _08042498 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _080424A8
	.align 2, 0
_08042488: .4byte gUnknown_03005450
_0804248C: .4byte 0x0000C350
_08042490: .4byte gUnknown_030054CC
_08042494: .4byte gUnknown_03005448
_08042498: .4byte gUnknown_030054A8
_0804249C:
	ldr r0, _080424B4 @ =0x00000275
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
_080424A8:
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	b _080424BC
	.align 2, 0
_080424B4: .4byte 0x00000275
_080424B8:
	movs r0, #1
	mov sb, r0
_080424BC:
	ldr r0, _080424E4 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _080424D6
	mov r1, r8
	ldrb r0, [r1, #0x14]
	cmp r0, #4
	bne _080424D6
	ldr r1, _080424E8 @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_080424D6:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080424E4: .4byte gUnknown_030055B4
_080424E8: .4byte gUnknown_030054A8

	thumb_func_start sub_80424EC
sub_80424EC: @ 0x080424EC
	push {lr}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0xc0
	ldrb r1, [r2, #0x16]
	cmp r1, #0
	beq _08042534
	movs r0, #0
	strb r0, [r2, #0x15]
	subs r0, r1, #1
	strb r0, [r2, #0x16]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08042558
	ldrb r0, [r2, #0x14]
	cmp r0, #0
	bne _0804251C
	movs r0, #0xa7
	lsls r0, r0, #2
	strh r0, [r3, #0xa]
	adds r1, r2, #0
	adds r1, #0xe0
	movs r0, #4
	b _08042526
_0804251C:
	movs r0, #0
	ldr r1, _08042530 @ =0x00000275
	strh r1, [r3, #0xa]
	adds r1, r2, #0
	adds r1, #0xe0
_08042526:
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x21
	b _08042554
	.align 2, 0
_08042530: .4byte 0x00000275
_08042534:
	ldrb r0, [r2, #0x15]
	cmp r0, #0
	beq _08042558
	subs r0, #1
	strb r0, [r2, #0x15]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08042558
	movs r1, #0
	ldr r0, _0804255C @ =0x00000275
	strh r0, [r3, #0xa]
	adds r0, r2, #0
	adds r0, #0xe0
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0xe1
_08042554:
	movs r0, #0xff
	strb r0, [r1]
_08042558:
	pop {r0}
	bx r0
	.align 2, 0
_0804255C: .4byte 0x00000275

	thumb_func_start sub_8042560
sub_8042560: @ 0x08042560
	push {r4, r5, r6, r7, lr}
	ldrb r0, [r0, #0x16]
	cmp r0, #0
	beq _080425AC
	movs r3, #0
	ldr r0, _0804259C @ =gFlags
	mov ip, r0
	ldr r7, _080425A0 @ =gObjPalette
	ldr r6, _080425A4 @ =gUnknown_080D7F54
	ldr r5, _080425A8 @ =gUnknown_03005590
	movs r4, #2
_08042576:
	adds r2, r3, #0
	adds r2, #0x80
	lsls r2, r2, #1
	adds r2, r2, r7
	lsls r1, r3, #1
	ldr r0, [r5]
	ands r0, r4
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r6
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08042576
	b _080425D0
	.align 2, 0
_0804259C: .4byte gFlags
_080425A0: .4byte gObjPalette
_080425A4: .4byte gUnknown_080D7F54
_080425A8: .4byte gUnknown_03005590
_080425AC:
	movs r3, #0
	ldr r1, _080425E4 @ =gFlags
	mov ip, r1
	ldr r4, _080425E8 @ =gObjPalette
	ldr r2, _080425EC @ =gUnknown_080D7F74
_080425B6:
	adds r1, r3, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _080425B6
_080425D0:
	mov r1, ip
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, ip
	str r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080425E4: .4byte gFlags
_080425E8: .4byte gObjPalette
_080425EC: .4byte gUnknown_080D7F74

	thumb_func_start sub_80425F0
sub_80425F0: @ 0x080425F0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _08042660 @ =gUnknown_03005B4C
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r0, _08042664 @ =IWRAM_START + 0x18
	adds r4, r2, r0
	ldr r0, [r1, #4]
	adds r0, r0, r5
	str r0, [r1, #4]
	ldr r0, [r1, #8]
	adds r0, r0, r6
	str r0, [r1, #8]
	ldr r0, [r4, #4]
	adds r0, r0, r5
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	adds r0, r0, r6
	str r0, [r4, #8]
	movs r3, #0
	ldr r0, _08042668 @ =IWRAM_START + 0x30
	adds r0, r0, r2
	mov ip, r0
	ldr r0, _0804266C @ =IWRAM_START + 0x34
	adds r7, r2, r0
_0804262A:
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	mov r0, ip
	adds r2, r0, r1
	ldr r0, [r2]
	adds r0, r0, r5
	str r0, [r2]
	adds r1, r7, r1
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #2
	bls _0804262A
	ldr r0, [r4, #0x54]
	adds r0, r0, r5
	str r0, [r4, #0x54]
	ldr r0, [r4, #0x58]
	adds r0, r0, r6
	str r0, [r4, #0x58]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08042660: .4byte gUnknown_03005B4C
_08042664: .4byte IWRAM_START + 0x18
_08042668: .4byte IWRAM_START + 0x30
_0804266C: .4byte IWRAM_START + 0x34

	thumb_func_start sub_8042670
sub_8042670: @ 0x08042670
	push {r4, r5, lr}
	ldr r5, _080426BC @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #4]
	adds r0, r0, r1
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r0, r1
	str r0, [r4, #4]
	adds r0, r4, #0
	bl sub_80424EC
	adds r0, r4, #0
	bl sub_8041880
	adds r0, r4, #0
	bl sub_8042560
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	cmp r0, #0
	bne _080426B4
	movs r0, #0xb4
	strh r0, [r4, #0x12]
	ldr r1, [r5]
	ldr r0, _080426C0 @ =sub_80426C4
	str r0, [r1, #8]
_080426B4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080426BC: .4byte gCurTask
_080426C0: .4byte sub_80426C4

	thumb_func_start sub_80426C4
sub_80426C4: @ 0x080426C4
	push {r4, r5, r6, lr}
	ldr r6, _08042730 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_804275C
	adds r0, r4, #0
	bl sub_8041B44
	adds r0, r4, #0
	bl sub_80424EC
	adds r0, r4, #0
	bl sub_8041BF8
	adds r0, r4, #0
	bl sub_8041880
	adds r0, r4, #0
	bl sub_8042560
	adds r0, r4, #0
	bl sub_8041A08
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _0804272A
	ldr r0, _08042734 @ =IWRAM_START + 0x88
	adds r1, r5, r0
	ldr r0, _08042738 @ =0x00000295
	strh r0, [r1, #0xa]
	ldr r0, _0804273C @ =IWRAM_START + 0xA8
	adds r1, r5, r0
	movs r0, #3
	strb r0, [r1]
	ldr r0, _08042740 @ =IWRAM_START + 0xA9
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	bl sub_802A018
	adds r0, r4, #0
	bl sub_8042024
	ldr r1, [r6]
	ldr r0, _08042744 @ =sub_80417A0
	str r0, [r1, #8]
_0804272A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08042730: .4byte gCurTask
_08042734: .4byte IWRAM_START + 0x88
_08042738: .4byte 0x00000295
_0804273C: .4byte IWRAM_START + 0xA8
_08042740: .4byte IWRAM_START + 0xA9
_08042744: .4byte sub_80417A0

	thumb_func_start sub_8042748
sub_8042748: @ 0x08042748
	push {lr}
	ldr r0, _08042758 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08042758: .4byte gCurTask

	thumb_func_start sub_804275C
sub_804275C: @ 0x0804275C
	movs r1, #0xc
	ldrsh r2, [r0, r1]
	ldr r1, [r0, #4]
	adds r1, r1, r2
	str r1, [r0, #4]
	movs r1, #0xe
	ldrsh r2, [r0, r1]
	ldr r1, [r0, #8]
	adds r1, r1, r2
	str r1, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start sub_8042774
sub_8042774: @ 0x08042774
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xc0
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _08042796
	ldr r0, _0804279C @ =0x00000275
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08042796:
	pop {r0}
	bx r0
	.align 2, 0
_0804279C: .4byte 0x00000275

	thumb_func_start sub_80427A0
sub_80427A0: @ 0x080427A0
	push {r4, lr}
	ldrh r4, [r0, #6]
	ldr r1, _080427E4 @ =IWRAM_START + 0x150
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080427E8 @ =IWRAM_START + 0x8C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080427EC @ =IWRAM_START + 0xC4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080427F0 @ =IWRAM_START + 0xF4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _080427F4 @ =IWRAM_START + 0x124
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	ldr r1, _080427F8 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080427E4: .4byte IWRAM_START + 0x150
_080427E8: .4byte IWRAM_START + 0x8C
_080427EC: .4byte IWRAM_START + 0xC4
_080427F0: .4byte IWRAM_START + 0xF4
_080427F4: .4byte IWRAM_START + 0x124
_080427F8: .4byte gUnknown_03005B4C

	thumb_func_start sub_80427FC
sub_80427FC: @ 0x080427FC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	ldr r0, _080428BC @ =sub_80428D8
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r1, #0
	mov r8, r1
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r3, r2
	ldr r1, _080428C0 @ =gUnknown_03005960
	ldr r0, [r1]
	lsls r0, r0, #8
	subs r4, r4, r0
	str r4, [r2, #4]
	ldr r0, [r1, #4]
	lsls r0, r0, #8
	subs r5, r5, r0
	str r5, [r2, #8]
	movs r5, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r2, #0xc]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #0xe]
	mov r0, r8
	str r0, [r2]
	str r6, [r2, #0x10]
	ldr r0, _080428C4 @ =IWRAM_START + 0x14
	adds r4, r3, r0
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r1, [r1]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r2, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x18]
	movs r1, #0xa8
	lsls r1, r1, #1
	adds r6, r6, r1
	ldr r0, [r6]
	str r0, [r4, #4]
	movs r0, #0xa6
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	ldr r1, _080428C8 @ =IWRAM_START + 0x34
	adds r0, r3, r1
	strb r5, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	mov r0, r8
	strh r0, [r4, #8]
	strh r0, [r4, #0x14]
	strh r0, [r4, #0x1c]
	ldr r0, _080428CC @ =IWRAM_START + 0x35
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080428D0 @ =IWRAM_START + 0x36
	adds r1, r3, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _080428D4 @ =IWRAM_START + 0x39
	adds r3, r3, r1
	strb r5, [r3]
	subs r0, #0x11
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080428BC: .4byte sub_80428D8
_080428C0: .4byte gUnknown_03005960
_080428C4: .4byte IWRAM_START + 0x14
_080428C8: .4byte IWRAM_START + 0x34
_080428CC: .4byte IWRAM_START + 0x35
_080428D0: .4byte IWRAM_START + 0x36
_080428D4: .4byte IWRAM_START + 0x39

	thumb_func_start sub_80428D8
sub_80428D8: @ 0x080428D8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _08042930 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0x14
	adds r6, r1, r0
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	cmp r0, #0xf
	bhi _08042938
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #0x10]
	ldr r0, [r0, #4]
	asrs r0, r0, #8
	ldr r4, _08042934 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x18]
	ldr r0, [r5]
	cmp r0, #0xf
	bne _0804298E
	movs r0, #0xf8
	bl m4aSongNumStart
	ldr r0, [r5, #0x10]
	ldr r1, [r4]
	lsls r1, r1, #8
	ldr r0, [r0, #4]
	subs r0, r0, r1
	str r0, [r5, #4]
	b _0804298E
	.align 2, 0
_08042930: .4byte gCurTask
_08042934: .4byte gUnknown_03005960
_08042938:
	ldrh r0, [r5, #0xe]
	adds r0, #0x10
	strh r0, [r5, #0xe]
	ldr r0, _0804295C @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08042960
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	movs r0, #0xe
	ldrsh r1, [r5, r0]
	b _0804297C
	.align 2, 0
_0804295C: .4byte gUnknown_030059E0
_08042960:
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	ldr r2, _08042A8C @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [r5, #4]
	movs r0, #0xe
	ldrsh r1, [r5, r0]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
_0804297C:
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	ldr r0, [r5, #4]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	strh r0, [r6, #0x18]
_0804298E:
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r7, _08042A8C @ =gUnknown_03005960
	ldr r1, [r7, #4]
	adds r0, r0, r1
	ldr r1, [r5, #4]
	asrs r1, r1, #8
	ldr r2, [r7]
	adds r1, r1, r2
	movs r4, #0
	str r4, [sp]
	ldr r2, _08042A90 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08042A2C
	movs r0, #0xf9
	bl m4aSongNumStart
	movs r1, #0
	strh r4, [r5, #0xc]
	ldr r0, _08042A94 @ =0x00000297
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #4
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x10
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
	ldr r0, [r5, #0x10]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	movs r4, #0xc0
	lsls r4, r4, #3
	ldr r3, _08042A98 @ =0x000002E2
	str r3, [sp]
	adds r3, r4, #0
	bl sub_8042B8C
	ldr r0, [r5, #0x10]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	ldr r3, _08042A9C @ =0x0000031E
	str r3, [sp]
	adds r3, r4, #0
	bl sub_8042B8C
	ldr r0, [r5, #0x10]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	subs r4, #0x80
	movs r3, #0xb1
	lsls r3, r3, #2
	str r3, [sp]
	adds r3, r4, #0
	bl sub_8042B8C
	ldr r0, [r5, #0x10]
	ldr r1, [r5, #4]
	ldr r2, [r5, #8]
	movs r3, #0xcf
	lsls r3, r3, #2
	str r3, [sp]
	adds r3, r4, #0
	bl sub_8042B8C
	ldr r0, _08042AA0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08042AA4 @ =sub_8042AB0
	str r0, [r1, #8]
_08042A2C:
	ldr r0, [r5, #0x10]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	beq _08042A76
	ldr r1, [r5, #4]
	asrs r1, r1, #8
	ldr r0, [r7]
	adds r1, r1, r0
	ldr r2, [r5, #8]
	asrs r2, r2, #8
	ldr r0, [r7, #4]
	adds r2, r2, r0
	ldr r0, _08042AA8 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	cmp r3, #1
	bne _08042A76
	ldr r2, [r5, #0x10]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _08042A76
	adds r1, r2, #0
	adds r1, #0xc0
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _08042AAC @ =0x00000275
	strh r0, [r1, #0xa]
	adds r0, r2, #0
	adds r0, #0xe0
	strb r3, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08042A76:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08042A8C: .4byte gUnknown_03005960
_08042A90: .4byte sub_801EE64
_08042A94: .4byte 0x00000297
_08042A98: .4byte 0x000002E2
_08042A9C: .4byte 0x0000031E
_08042AA0: .4byte gCurTask
_08042AA4: .4byte sub_8042AB0
_08042AA8: .4byte gUnknown_030059E0
_08042AAC: .4byte 0x00000275

	thumb_func_start sub_8042AB0
sub_8042AB0: @ 0x08042AB0
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08042AE0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldr r2, _08042AE4 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	beq _08042AE8
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	b _08042B04
	.align 2, 0
_08042AE0: .4byte gCurTask
_08042AE4: .4byte gUnknown_030059E0
_08042AE8:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r2, _08042B7C @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldr r1, [r2, #0x3c]
	lsls r1, r1, #8
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
_08042B04:
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	strh r0, [r5, #0x16]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r5, #0x18]
	ldr r0, [r4, #0x10]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	beq _08042B5A
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r3, _08042B7C @ =gUnknown_03005960
	ldr r0, [r3]
	adds r1, r1, r0
	ldr r2, [r4, #8]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	adds r2, r2, r0
	str r6, [sp]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	cmp r3, #1
	bne _08042B5A
	ldr r2, [r4, #0x10]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _08042B5A
	adds r1, r2, #0
	adds r1, #0xc0
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _08042B80 @ =0x00000275
	strh r0, [r1, #0xa]
	adds r0, r2, #0
	adds r0, #0xe0
	strb r3, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08042B5A:
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _08042B6C
	ldr r0, _08042B84 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08042B88 @ =sub_8042DF4
	str r0, [r1, #8]
_08042B6C:
	adds r0, r5, #0
	bl sub_80051E8
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08042B7C: .4byte gUnknown_03005960
_08042B80: .4byte 0x00000275
_08042B84: .4byte gCurTask
_08042B88: .4byte sub_8042DF4

	thumb_func_start sub_8042B8C
sub_8042B8C: @ 0x08042B8C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	mov sl, r1
	mov sb, r2
	adds r5, r3, #0
	ldr r4, [sp, #0x28]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	str r5, [sp, #4]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _08042C40 @ =sub_8042CCC
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r1, #0
	mov r8, r1
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	mov r2, sl
	str r2, [r1, #4]
	mov r5, sb
	str r5, [r1, #8]
	ldr r2, _08042C44 @ =gUnknown_08097AA4
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r4, r6
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r5, #0
	ldrsh r0, [r0, r5]
	ldr r6, [sp, #4]
	lsls r5, r6, #0x10
	asrs r5, r5, #0x10
	muls r0, r5, r0
	asrs r0, r0, #0xe
	movs r6, #0
	mov sb, r6
	strh r0, [r1, #0xc]
	lsls r4, r4, #1
	adds r4, r4, r2
	movs r2, #0
	ldrsh r0, [r4, r2]
	muls r0, r5, r0
	asrs r0, r0, #0xe
	strh r0, [r1, #0xe]
	mov r5, r8
	str r5, [r1]
	str r7, [r1, #0x10]
	ldr r6, _08042C48 @ =IWRAM_START + 0x14
	adds r4, r3, r6
	mov r0, sl
	asrs r6, r0, #8
	strh r6, [r4, #0x16]
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	strh r0, [r4, #0x18]
	ldr r2, _08042C4C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08042C50 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08042C54 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08042C5C
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	movs r5, #0x80
	lsls r5, r5, #3
	adds r0, r0, r5
	str r0, [r4, #4]
	ldr r0, _08042C58 @ =0x0000029A
	b _08042C6E
	.align 2, 0
_08042C40: .4byte sub_8042CCC
_08042C44: .4byte gUnknown_08097AA4
_08042C48: .4byte IWRAM_START + 0x14
_08042C4C: .4byte gUnknown_030053B8
_08042C50: .4byte 0x00196225
_08042C54: .4byte 0x3C6EF35F
_08042C58: .4byte 0x0000029A
_08042C5C:
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	movs r5, #0xa4
	lsls r5, r5, #3
	adds r0, r0, r5
	str r0, [r4, #4]
	ldr r0, _08042CC4 @ =0x0000029B
_08042C6E:
	strh r0, [r4, #0xa]
	ldr r6, _08042CC8 @ =IWRAM_START + 0x34
	adds r0, r3, r6
	mov r1, sb
	strb r1, [r0]
	movs r2, #0
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r1, [r4, #8]
	strh r1, [r4, #0x14]
	strh r1, [r4, #0x1c]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08042CC4: .4byte 0x0000029B
_08042CC8: .4byte IWRAM_START + 0x34

	thumb_func_start sub_8042CCC
sub_8042CCC: @ 0x08042CCC
	push {r4, r5, lr}
	sub sp, #8
	ldr r0, _08042D0C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldrh r0, [r4, #0xe]
	adds r0, #0x50
	strh r0, [r4, #0xe]
	ldr r0, _08042D10 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08042D18
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	ldr r2, _08042D14 @ =gUnknown_03005960
	b _08042D3A
	.align 2, 0
_08042D0C: .4byte gCurTask
_08042D10: .4byte gUnknown_030059E0
_08042D14: .4byte gUnknown_03005960
_08042D18:
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r2, _08042D7C @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
_08042D3A:
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	movs r3, #0
	strh r0, [r5, #0x16]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	strh r0, [r5, #0x18]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	adds r0, r0, r1
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r2, [r2]
	adds r1, r1, r2
	str r3, [sp]
	ldr r2, _08042D80 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08042D88
	movs r1, #0xe
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _08042D88
	ldr r0, _08042D84 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08042DE0
	.align 2, 0
_08042D7C: .4byte gUnknown_03005960
_08042D80: .4byte sub_801EE64
_08042D84: .4byte gCurTask
_08042D88:
	ldr r0, [r4, #0x10]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	beq _08042DD4
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r3, _08042DE8 @ =gUnknown_03005960
	ldr r0, [r3]
	adds r1, r1, r0
	ldr r2, [r4, #8]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	adds r2, r2, r0
	ldr r0, _08042DEC @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	cmp r3, #1
	bne _08042DD4
	ldr r2, [r4, #0x10]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _08042DD4
	adds r1, r2, #0
	adds r1, #0xc0
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _08042DF0 @ =0x00000275
	strh r0, [r1, #0xa]
	adds r0, r2, #0
	adds r0, #0xe0
	strb r3, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08042DD4:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08042DE0:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08042DE8: .4byte gUnknown_03005960
_08042DEC: .4byte gUnknown_030059E0
_08042DF0: .4byte 0x00000275

	thumb_func_start sub_8042DF4
sub_8042DF4: @ 0x08042DF4
	push {lr}
	ldr r0, _08042E04 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08042E04: .4byte gCurTask

	thumb_func_start sub_8042E08
sub_8042E08: @ 0x08042E08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x80
	ldr r2, _08042ED0 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08042ED4 @ =gBgCntRegs
	movs r4, #0
	movs r5, #0
	ldr r0, _08042ED8 @ =0x0000560D
	strh r0, [r1]
	ldr r0, _08042EDC @ =gBgScrollRegs
	strh r5, [r0]
	strh r5, [r0, #2]
	ldr r0, _08042EE0 @ =gUnknown_03004D80
	strb r4, [r0]
	ldr r1, _08042EE4 @ =gUnknown_03002280
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x40
	strb r0, [r1, #3]
	ldr r2, _08042EE8 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _08042EEC @ =gUnknown_030053B8
	ldr r0, _08042EF0 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0xfd
	bl m4aSongNumStart
	ldr r1, _08042EF4 @ =gUnknown_03005AF0
	ldr r0, [r1, #0x1c]
	ldr r3, _08042EF8 @ =0xFFFFCFFF
	ands r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r1, _08042EFC @ =gUnknown_03005AA0
	ldr r0, [r1, #0x1c]
	ands r0, r3
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r0, _08042F00 @ =sub_80434AC
	movs r1, #0x96
	lsls r1, r1, #3
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _08042F04 @ =sub_80459CC
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _08042F08 @ =gUnknown_03005B4C
	str r0, [r1]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r1, r0
	mov sl, r1
	ldr r4, _08042F0C @ =IWRAM_START + 0x134
	adds r0, r0, r4
	strh r5, [r0]
	strh r5, [r0, #4]
	movs r1, #2
	strh r1, [r0, #2]
	strh r5, [r0, #6]
	ldr r1, _08042F10 @ =0x000030EF
	strh r1, [r0, #8]
	strh r5, [r0, #0xa]
	ldr r0, _08042F14 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _08042F1C
	ldr r0, _08042F18 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _08042F1C
	movs r0, #6
	mov r6, sl
	strb r0, [r6, #0x10]
	movs r0, #2
	strb r0, [r6, #0x11]
	b _08042F26
	.align 2, 0
_08042ED0: .4byte gDispCnt
_08042ED4: .4byte gBgCntRegs
_08042ED8: .4byte 0x0000560D
_08042EDC: .4byte gBgScrollRegs
_08042EE0: .4byte gUnknown_03004D80
_08042EE4: .4byte gUnknown_03002280
_08042EE8: .4byte gUnknown_030059E0
_08042EEC: .4byte gUnknown_030053B8
_08042EF0: .4byte gUnknown_03005590
_08042EF4: .4byte gUnknown_03005AF0
_08042EF8: .4byte 0xFFFFCFFF
_08042EFC: .4byte gUnknown_03005AA0
_08042F00: .4byte sub_80434AC
_08042F04: .4byte sub_80459CC
_08042F08: .4byte gUnknown_03005B4C
_08042F0C: .4byte IWRAM_START + 0x134
_08042F10: .4byte 0x000030EF
_08042F14: .4byte gUnknown_030054EC
_08042F18: .4byte gUnknown_030054CC
_08042F1C:
	movs r0, #8
	mov r1, sl
	strb r0, [r1, #0x10]
	movs r0, #4
	strb r0, [r1, #0x11]
_08042F26:
	ldr r1, _08042F54 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _08042F5C
	mov r2, sl
	ldrb r0, [r2, #0x10]
	lsrs r0, r0, #1
	strb r0, [r2, #0x10]
	ldrb r0, [r2, #0x11]
	lsrs r0, r0, #1
	strb r0, [r2, #0x11]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _08042F5C
	ldr r0, _08042F58 @ =0x005A0400
	str r0, [r2, #4]
	movs r0, #0x8c
	lsls r0, r0, #8
	str r0, [r2, #8]
	b _08042F6A
	.align 2, 0
_08042F54: .4byte gUnknown_030055B4
_08042F58: .4byte 0x005A0400
_08042F5C:
	movs r0, #0x87
	lsls r0, r0, #0xa
	mov r3, sl
	str r0, [r3, #4]
	movs r0, #0x8c
	lsls r0, r0, #8
	str r0, [r3, #8]
_08042F6A:
	movs r3, #0x98
	lsls r3, r3, #1
	add r3, sl
	movs r2, #0
	movs r1, #0
	movs r0, #0x50
	strh r0, [r3]
	movs r3, #0xa0
	lsls r3, r3, #3
	mov r4, sl
	strh r3, [r4, #0xc]
	strh r1, [r4, #0xe]
	strb r2, [r4, #0x12]
	strb r2, [r4, #0x13]
	ldr r0, _0804316C @ =0x00000155
	strh r0, [r4, #0x16]
	strh r1, [r4, #0x18]
	ldr r0, _08043170 @ =0x000002AA
	strh r0, [r4, #0x30]
	subs r0, #0xaa
	strh r0, [r4, #0x1a]
	ldr r0, _08043174 @ =gUnknown_080D7F94
	ldrh r0, [r0, #2]
	lsls r0, r0, #1
	strh r0, [r4, #0x1c]
	strb r2, [r4, #0x1e]
	strh r1, [r4, #0x34]
	mov r0, sl
	adds r0, #0xb6
	strb r2, [r0]
	strh r1, [r4, #0x32]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	strb r2, [r4, #0x1f]
	strh r3, [r4, #0x22]
	strh r1, [r4, #0x24]
	str r1, [r4, #0x28]
	str r1, [r4, #0x2c]
	subs r0, #0xa0
	strb r2, [r0]
	strb r2, [r4, #0x14]
	strb r2, [r4, #0x15]
	movs r2, #0
	movs r6, #0xb0
	lsls r6, r6, #1
	add r6, sl
	ldr r0, _08043178 @ =0x00000161
	add r0, sl
	mov r8, r0
	movs r1, #0xb1
	lsls r1, r1, #1
	add r1, sl
	mov sb, r1
	ldr r3, _0804317C @ =0x00000165
	add r3, sl
	str r3, [sp, #0x48]
	movs r4, #0xc8
	lsls r4, r4, #1
	add r4, sl
	str r4, [sp, #0x5c]
	ldr r0, _08043180 @ =0x00000191
	add r0, sl
	str r0, [sp, #0x60]
	movs r1, #0xc9
	lsls r1, r1, #1
	add r1, sl
	str r1, [sp, #0x64]
	ldr r3, _08043184 @ =0x00000195
	add r3, sl
	str r3, [sp, #0x68]
	movs r4, #0x8e
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x38]
	ldr r0, _08043188 @ =0x00000239
	add r0, sl
	str r0, [sp, #0x3c]
	ldr r1, _0804318C @ =0x0000023A
	add r1, sl
	str r1, [sp, #0x40]
	ldr r3, _08043190 @ =0x0000023D
	add r3, sl
	str r3, [sp, #0x44]
	movs r4, #0x80
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x18]
	ldr r0, _08043194 @ =0x00000201
	add r0, sl
	str r0, [sp, #0x1c]
	ldr r1, _08043198 @ =0x00000202
	add r1, sl
	str r1, [sp, #0x20]
	ldr r3, _0804319C @ =0x00000205
	add r3, sl
	str r3, [sp, #0x24]
	movs r4, #0x9f
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x4c]
	ldr r0, _080431A0 @ =0x0000027D
	add r0, sl
	str r0, [sp, #0x50]
	ldr r1, _080431A4 @ =0x0000027E
	add r1, sl
	str r1, [sp, #0x54]
	ldr r3, _080431A8 @ =0x00000281
	add r3, sl
	str r3, [sp, #0x58]
	movs r4, #0xab
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x6c]
	ldr r0, _080431AC @ =0x000002AD
	add r0, sl
	str r0, [sp, #0x70]
	ldr r1, _080431B0 @ =0x000002AE
	add r1, sl
	str r1, [sp, #0x74]
	ldr r3, _080431B4 @ =0x000002B1
	add r3, sl
	str r3, [sp, #0x78]
	movs r4, #0xb9
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #8]
	ldr r0, _080431B8 @ =0x000002E5
	add r0, sl
	str r0, [sp, #0xc]
	ldr r1, _080431BC @ =0x000002E6
	add r1, sl
	str r1, [sp, #0x10]
	ldr r3, _080431C0 @ =0x000002E9
	add r3, sl
	str r3, [sp, #0x14]
	movs r4, #0xc5
	lsls r4, r4, #2
	add r4, sl
	str r4, [sp, #0x28]
	ldr r0, _080431C4 @ =0x00000315
	add r0, sl
	str r0, [sp, #0x2c]
	ldr r1, _080431C8 @ =0x00000316
	add r1, sl
	str r1, [sp, #0x30]
	ldr r3, _080431CC @ =0x00000319
	add r3, sl
	str r3, [sp, #0x34]
	mov r5, sl
	adds r5, #0x36
	movs r3, #0
	mov r4, sl
	adds r4, #0x76
_080430B0:
	lsls r1, r2, #1
	adds r0, r5, r1
	strh r3, [r0]
	adds r1, r4, r1
	strh r3, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x1f
	bls _080430B0
	movs r0, #0xea
	bl sub_8007C10
	adds r3, r0, #0
	ldr r0, _080431D0 @ =0x000004AC
	add r0, sl
	str r3, [r0]
	movs r4, #0xc0
	lsls r4, r4, #2
	adds r3, r3, r4
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r7, #0xa0
	lsls r7, r7, #1
	add r7, sl
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r0, _080431D4 @ =0x0600C000
	str r0, [r7, #4]
	ldr r0, _080431AC @ =0x000002AD
	strh r0, [r7, #0xa]
	strb r5, [r6]
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0xff
	mov r6, r8
	strb r0, [r6]
	movs r0, #0x10
	mov r1, sb
	strb r0, [r1]
	ldr r2, [sp, #0x48]
	strb r5, [r2]
	subs r0, #0x11
	str r0, [r7, #0x28]
	movs r0, #0x86
	lsls r0, r0, #0xb
	str r0, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #0x7c]
	bl sub_80036E0
	adds r0, r7, #0
	bl sub_8003914
	movs r7, #0xd8
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r3, [sp, #0x7c]
	str r3, [r7, #4]
	movs r4, #0xf0
	lsls r4, r4, #1
	adds r3, r3, r4
	ldr r2, _080431D8 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _080431E8
	ldr r0, _080431DC @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080431E8
	ldr r0, _080431E0 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _080431E8
	ldr r0, _080431E4 @ =0x0000013B
	strh r0, [r7, #0xa]
	adds r0, #0x95
	add r0, sl
	strb r5, [r0]
	b _080431F6
	.align 2, 0
_0804316C: .4byte 0x00000155
_08043170: .4byte 0x000002AA
_08043174: .4byte gUnknown_080D7F94
_08043178: .4byte 0x00000161
_0804317C: .4byte 0x00000165
_08043180: .4byte 0x00000191
_08043184: .4byte 0x00000195
_08043188: .4byte 0x00000239
_0804318C: .4byte 0x0000023A
_08043190: .4byte 0x0000023D
_08043194: .4byte 0x00000201
_08043198: .4byte 0x00000202
_0804319C: .4byte 0x00000205
_080431A0: .4byte 0x0000027D
_080431A4: .4byte 0x0000027E
_080431A8: .4byte 0x00000281
_080431AC: .4byte 0x000002AD
_080431B0: .4byte 0x000002AE
_080431B4: .4byte 0x000002B1
_080431B8: .4byte 0x000002E5
_080431BC: .4byte 0x000002E6
_080431C0: .4byte 0x000002E9
_080431C4: .4byte 0x00000315
_080431C8: .4byte 0x00000316
_080431CC: .4byte 0x00000319
_080431D0: .4byte 0x000004AC
_080431D4: .4byte 0x0600C000
_080431D8: .4byte gUnknown_030055B4
_080431DC: .4byte gUnknown_030054F0
_080431E0: .4byte gLoadedSaveGame
_080431E4: .4byte 0x0000013B
_080431E8:
	movs r0, #0
	movs r1, #0xab
	lsls r1, r1, #2
	strh r1, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	strb r0, [r1]
_080431F6:
	movs r5, #0
	movs r4, #0
	movs r6, #0xa0
	lsls r6, r6, #3
	strh r6, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	mov r8, r1
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	mov sb, r0
	str r0, [r7, #0x10]
	movs r7, #0xb8
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r3, [r7, #4]
	movs r1, #0x90
	lsls r1, r1, #3
	adds r3, r3, r1
	ldr r0, _0804348C @ =0x0000029D
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0x5c]
	strb r5, [r2]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r6, #0
	ldr r6, [sp, #0x60]
	strb r0, [r6]
	mov r1, r8
	ldr r0, [sp, #0x64]
	strb r1, [r0]
	ldr r2, [sp, #0x68]
	strb r5, [r2]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	mov r0, sb
	str r0, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #0x7c]
	bl sub_8004558
	movs r7, #0x86
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r3, [sp, #0x7c]
	str r3, [r7, #4]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r3, r3, r1
	ldr r0, _08043490 @ =0x0000029F
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0x38]
	strb r5, [r2]
	movs r0, #0xb0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r6, #0
	ldr r6, [sp, #0x3c]
	strb r0, [r6]
	mov r1, r8
	ldr r0, [sp, #0x40]
	strb r1, [r0]
	ldr r2, [sp, #0x44]
	strb r5, [r2]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	mov r0, sb
	str r0, [r7, #0x10]
	movs r7, #0xf0
	lsls r7, r7, #1
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r3, [r7, #4]
	movs r1, #0x80
	lsls r1, r1, #4
	adds r3, r3, r1
	ldr r0, _08043494 @ =0x000002AA
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0x18]
	strb r5, [r2]
	movs r0, #0xb8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r0, r6, #0
	ldr r6, [sp, #0x1c]
	strb r0, [r6]
	mov r1, r8
	ldr r0, [sp, #0x20]
	strb r1, [r0]
	ldr r2, [sp, #0x24]
	strb r5, [r2]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	ldr r2, _08043498 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x83
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r7, #0x10]
	movs r7, #0x97
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r3, [r7, #4]
	adds r3, #0x80
	ldr r0, _0804349C @ =0x000002AB
	strh r0, [r7, #0xa]
	ldr r0, [sp, #0x4c]
	strb r5, [r0]
	movs r6, #0x98
	lsls r6, r6, #3
	strh r6, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x50]
	strb r0, [r1]
	mov r0, r8
	ldr r2, [sp, #0x54]
	strb r0, [r2]
	ldr r1, [sp, #0x58]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	mov r0, sb
	str r0, [r7, #0x10]
	movs r7, #0xa3
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	str r3, [r7, #4]
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r3, r3, r1
	ldr r0, _080434A0 @ =0x0000029E
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0x6c]
	strb r5, [r2]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x70]
	strb r0, [r1]
	mov r0, r8
	ldr r2, [sp, #0x74]
	strb r0, [r2]
	ldr r1, [sp, #0x78]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	mov r0, sb
	str r0, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #0x7c]
	bl sub_8004558
	movs r7, #0xb1
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r3, [sp, #0x7c]
	str r3, [r7, #4]
	adds r3, #0x80
	ldr r0, _080434A4 @ =0x000002A9
	strh r0, [r7, #0xa]
	ldr r1, [sp, #8]
	strb r5, [r1]
	strh r6, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	mov r0, r8
	ldr r6, [sp, #0x10]
	strb r0, [r6]
	ldr r1, [sp, #0x14]
	strb r5, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	mov r6, sb
	str r6, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #0x7c]
	bl sub_8004558
	movs r7, #0xbd
	lsls r7, r7, #2
	add r7, sl
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r3, [sp, #0x7c]
	str r3, [r7, #4]
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	ldr r0, [sp, #0x28]
	strb r5, [r0]
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x2c]
	strb r0, [r1]
	mov r3, r8
	ldr r2, [sp, #0x30]
	strb r3, [r2]
	ldr r4, [sp, #0x34]
	strb r5, [r4]
	str r0, [r7, #0x28]
	str r0, [r7, #0x30]
	str r6, [r7, #0x10]
	movs r2, #0
	movs r3, #0
	ldr r4, _080434A8 @ =gUnknown_080D7FB0
_08043414:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #4
	movs r6, #0xcb
	lsls r6, r6, #2
	adds r0, r0, r6
	mov r1, sl
	adds r7, r1, r0
	strh r3, [r7, #0x16]
	strh r3, [r7, #0x18]
	ldr r6, [sp, #4]
	str r6, [r7, #4]
	lsls r1, r2, #3
	adds r1, r1, r4
	ldr r0, [r1]
	lsls r0, r0, #5
	adds r6, r6, r0
	str r6, [sp, #4]
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xb0
	lsls r0, r0, #2
	strh r0, [r7, #0x1a]
	strh r3, [r7, #8]
	strh r3, [r7, #0x14]
	strh r3, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r7, #0x10]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #7
	bls _08043414
	add sp, #0x80
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804348C: .4byte 0x0000029D
_08043490: .4byte 0x0000029F
_08043494: .4byte 0x000002AA
_08043498: .4byte gUnknown_030054B8
_0804349C: .4byte 0x000002AB
_080434A0: .4byte 0x0000029E
_080434A4: .4byte 0x000002A9
_080434A8: .4byte gUnknown_080D7FB0

	thumb_func_start sub_80434AC
sub_80434AC: @ 0x080434AC
	push {r4, r5, r6, lr}
	ldr r6, _08043518 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	ldr r0, [r4, #4]
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r0, r1
	str r0, [r4, #4]
	adds r0, r4, #0
	bl sub_80444DC
	adds r0, r4, #0
	bl sub_8044784
	ldr r1, _0804351C @ =gUnknown_080D7F98
	ldr r2, _08043520 @ =IWRAM_START + 0xBF
	adds r0, r5, r2
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_80459A0
	adds r0, r4, #0
	bl sub_80454A4
	adds r0, r4, #0
	bl sub_80438C4
	adds r0, r4, #0
	bl sub_8045898
	ldr r0, _08043524 @ =IWRAM_START + 0x130
	adds r5, r5, r0
	ldrh r0, [r5]
	subs r0, #1
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08043512
	ldr r1, [r6]
	ldr r0, _08043528 @ =sub_804352C
	str r0, [r1, #8]
_08043512:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08043518: .4byte gCurTask
_0804351C: .4byte gUnknown_080D7F98
_08043520: .4byte IWRAM_START + 0xBF
_08043524: .4byte IWRAM_START + 0x130
_08043528: .4byte sub_804352C

	thumb_func_start sub_804352C
sub_804352C: @ 0x0804352C
	push {r4, r5, r6, lr}
	ldr r6, _080435A8 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	adds r0, r5, #0
	bl sub_80444DC
	adds r0, r5, #0
	bl sub_8044784
	ldr r1, _080435AC @ =gUnknown_080D7F98
	ldr r0, _080435B0 @ =IWRAM_START + 0xBF
	adds r4, r4, r0
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r5, #0
	bl _call_via_r1
	adds r0, r5, #0
	bl sub_80459A0
	adds r0, r5, #0
	bl sub_8044088
	adds r0, r5, #0
	bl sub_80454A4
	adds r0, r5, #0
	bl sub_80438C4
	adds r0, r5, #0
	bl sub_8043E2C
	adds r0, r5, #0
	bl sub_8045898
	ldrb r1, [r5, #0x10]
	cmp r1, #0
	bne _080435A2
	ldr r0, _080435B4 @ =gBldRegs
	movs r4, #0
	strh r1, [r0]
	bl sub_802A018
	adds r0, r5, #0
	bl sub_80436E4
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r5, #0xc]
	strb r4, [r5, #0x11]
	ldr r1, [r6]
	ldr r0, _080435B8 @ =sub_80435BC
	str r0, [r1, #8]
_080435A2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080435A8: .4byte gCurTask
_080435AC: .4byte gUnknown_080D7F98
_080435B0: .4byte IWRAM_START + 0xBF
_080435B4: .4byte gBldRegs
_080435B8: .4byte sub_80435BC

	thumb_func_start sub_80435BC
sub_80435BC: @ 0x080435BC
	push {r4, r5, lr}
	ldr r0, _08043644 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_8044540
	adds r0, r4, #0
	bl sub_8043BEC
	adds r0, r4, #0
	bl sub_8043E2C
	adds r0, r4, #0
	bl sub_8045564
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	beq _080435EC
	subs r0, #1
	strb r0, [r4, #0x13]
_080435EC:
	ldr r0, _08043648 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _08043600
	movs r0, #0x90
	bl m4aSongNumStart
_08043600:
	ldr r2, _0804364C @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _08043660
	ldr r0, _08043650 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08043660
	ldr r0, _08043654 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _08043660
	ldrb r0, [r4, #0x15]
	ldr r1, _08043658 @ =IWRAM_START + 0xC4
	adds r5, r5, r1
	cmp r0, #0
	bne _080436A0
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, _0804365C @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	cmp r0, #0x31
	bgt _080436A0
	movs r0, #1
	strb r0, [r4, #0x15]
	b _080436A0
	.align 2, 0
_08043644: .4byte gCurTask
_08043648: .4byte gUnknown_03005590
_0804364C: .4byte gUnknown_030055B4
_08043650: .4byte gUnknown_030054F0
_08043654: .4byte gLoadedSaveGame
_08043658: .4byte IWRAM_START + 0xC4
_0804365C: .4byte gUnknown_03005960
_08043660:
	ldrb r0, [r4, #0x15]
	adds r5, r4, #0
	adds r5, #0xc4
	cmp r0, #0
	bne _080436A0
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r2, _080436D8 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	cmp r0, #0x31
	bgt _080436A0
	movs r0, #1
	strb r0, [r4, #0x15]
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r4, #0
	adds r1, #0xc8
	ldr r1, [r1]
	asrs r1, r1, #8
	ldr r2, [r2, #4]
	subs r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #6
	bl sub_8039FA4
_080436A0:
	adds r0, r4, #0
	bl sub_8045898
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, _080436D8 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	movs r1, #0xc8
	rsbs r1, r1, #0
	cmp r0, r1
	bge _080436D2
	ldrb r0, [r4, #0x15]
	cmp r0, #0
	beq _080436D2
	movs r0, #0x28
	rsbs r0, r0, #0
	movs r1, #0x8c
	movs r2, #4
	bl sub_802EF68
	ldr r0, _080436DC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080436E0 @ =sub_804598C
	str r0, [r1, #8]
_080436D2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080436D8: .4byte gUnknown_03005960
_080436DC: .4byte gCurTask
_080436E0: .4byte sub_804598C

	thumb_func_start sub_80436E4
sub_80436E4: @ 0x080436E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov ip, r0
	ldr r6, [r0, #4]
	ldr r7, [r0, #8]
	mov r2, ip
	adds r2, #0xc4
	ldr r4, _080438A4 @ =gUnknown_08097AA4
	mov r1, ip
	ldrh r0, [r1, #0x16]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, r6, r0
	str r0, [r2]
	adds r2, #4
	mov r1, ip
	ldrh r0, [r1, #0x16]
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, r7, r0
	str r0, [r2]
	mov r1, ip
	adds r1, #0xd4
	movs r0, #0xb0
	lsls r0, r0, #3
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080438A8 @ =0x0000FB80
	strh r0, [r1]
	mov r0, ip
	ldrh r2, [r0, #0x30]
	adds r3, r2, r3
	lsls r3, r3, #1
	adds r3, r3, r4
	movs r5, #0
	ldrsh r1, [r3, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r6, r6, r0
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r7, r7, r0
	mov r0, ip
	adds r0, #0xcc
	str r6, [r0]
	adds r0, #4
	str r7, [r0]
	mov r1, ip
	adds r1, #0xd8
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r6, r6, r1
	ldr r2, _080438AC @ =0xFFFFEF00
	adds r7, r7, r2
	movs r3, #0
	mov r8, r3
	mov sb, r3
	movs r5, #0
	movs r0, #0x86
	lsls r0, r0, #1
	add r0, ip
	str r0, [sp]
	subs r1, #0xf2
	add r1, ip
	str r1, [sp, #4]
	mov r2, ip
	adds r2, #0xb6
	str r2, [sp, #8]
	mov r3, ip
	adds r3, #0x36
	str r3, [sp, #0x10]
	mov r0, ip
	adds r0, #0x76
	str r0, [sp, #0xc]
_080437B4:
	mov r0, ip
	adds r0, #0xb6
	ldrb r1, [r0]
	subs r1, #1
	adds r4, r5, #1
	lsls r0, r4, #2
	subs r1, r1, r0
	movs r2, #0x1f
	mov sl, r2
	mov r3, sl
	ands r1, r3
	lsls r1, r1, #1
	mov r0, ip
	adds r0, #0x36
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #8
	add r8, r0
	mov r0, ip
	adds r0, #0x76
	adds r0, r0, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #8
	add sb, r0
	lsls r2, r5, #3
	mov r1, ip
	adds r1, #0xdc
	adds r1, r1, r2
	mov r3, r8
	asrs r0, r3, #3
	adds r0, r6, r0
	str r0, [r1]
	mov r1, ip
	adds r1, #0xe0
	adds r1, r1, r2
	mov r2, sb
	asrs r0, r2, #3
	adds r0, r7, r0
	str r0, [r1]
	lsls r2, r5, #2
	ldr r0, [sp]
	adds r3, r0, r2
	ldr r0, _080438B0 @ =gUnknown_030053B8
	ldr r1, [r0]
	ldr r0, _080438B4 @ =0x00196225
	muls r1, r0, r1
	ldr r0, _080438B8 @ =0x3C6EF35F
	adds r1, r1, r0
	ldr r0, _080438B0 @ =gUnknown_030053B8
	str r1, [r0]
	movs r0, #0xff
	ands r1, r0
	movs r0, #0xa8
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3]
	ldr r1, [sp, #4]
	adds r2, r1, r2
	lsls r1, r5, #6
	ldr r3, _080438BC @ =0xFFFFFC00
	adds r0, r3, #0
	subs r0, r0, r1
	strh r0, [r2]
	lsls r4, r4, #0x18
	lsrs r5, r4, #0x18
	cmp r5, #5
	bls _080437B4
	ldr r5, [sp, #8]
	ldrb r1, [r5]
	adds r1, #0xe5
	mov r0, sl
	ands r1, r0
	lsls r1, r1, #1
	ldr r2, [sp, #0x10]
	adds r0, r2, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #7
	add r8, r0
	ldr r5, [sp, #0xc]
	adds r1, r5, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #7
	add sb, r0
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	mov r3, r8
	asrs r0, r3, #3
	adds r0, r6, r0
	str r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	add r1, ip
	mov r5, sb
	asrs r0, r5, #3
	adds r0, r7, r0
	str r0, [r1]
	movs r1, #0x96
	lsls r1, r1, #1
	add r1, ip
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1]
	movs r1, #0x97
	lsls r1, r1, #1
	add r1, ip
	ldr r0, _080438C0 @ =0x0000FA40
	strh r0, [r1]
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080438A4: .4byte gUnknown_08097AA4
_080438A8: .4byte 0x0000FB80
_080438AC: .4byte 0xFFFFEF00
_080438B0: .4byte gUnknown_030053B8
_080438B4: .4byte 0x00196225
_080438B8: .4byte 0x3C6EF35F
_080438BC: .4byte 0xFFFFFC00
_080438C0: .4byte 0x0000FA40

	thumb_func_start sub_80438C4
sub_80438C4: @ 0x080438C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r6, r0, #0
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	ldr r2, _08043914 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	str r0, [sp]
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	str r0, [sp, #4]
	ldr r1, _08043918 @ =gBgScrollRegs
	movs r0, #0x3c
	ldr r2, [sp]
	subs r0, r0, r2
	strh r0, [r1]
	movs r0, #0x36
	ldr r3, [sp, #4]
	subs r0, r0, r3
	strh r0, [r1, #2]
	adds r1, r2, #0
	adds r1, #0x32
	movs r0, #0xaf
	lsls r0, r0, #1
	cmp r1, r0
	bls _08043924
	ldr r2, _0804391C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08043920 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _08043932
	.align 2, 0
_08043914: .4byte gUnknown_03005960
_08043918: .4byte gBgScrollRegs
_0804391C: .4byte gDispCnt
_08043920: .4byte 0x0000FEFF
_08043924:
	ldr r0, _08043BDC @ =gDispCnt
	ldrh r1, [r0]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r2, r4, #0
	orrs r1, r2
	strh r1, [r0]
_08043932:
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r5, r6, r0
	ldr r7, _08043BE0 @ =gUnknown_08097AA4
	ldrh r0, [r6, #0x16]
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	add r0, r8
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r3, [sp]
	adds r0, r3, r0
	strh r0, [r5, #0x16]
	ldrh r0, [r6, #0x16]
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r1, [sp, #4]
	adds r0, r1, r0
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r2, #0xd8
	lsls r2, r2, #1
	adds r5, r6, r2
	ldrh r0, [r6, #0x16]
	add r0, r8
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r4, [sp]
	adds r0, r4, r0
	strh r0, [r5, #0x16]
	ldrh r0, [r6, #0x16]
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r3, [sp, #4]
	adds r0, r3, r0
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	beq _08043AAA
	movs r4, #0x86
	lsls r4, r4, #2
	adds r5, r6, r4
	ldrh r0, [r6, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r3, [sp]
	adds r0, r3, r0
	strh r0, [r5, #0x16]
	ldrh r0, [r6, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r1, [sp, #4]
	adds r0, r1, r0
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r2, #0xf0
	lsls r2, r2, #1
	adds r5, r6, r2
	movs r3, #0x94
	lsls r3, r3, #2
	adds r4, r6, r3
	ldrh r0, [r6, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r3, [sp]
	adds r0, r3, r0
	subs r0, #2
	strh r0, [r5, #0x16]
	ldrh r0, [r6, #0x18]
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r3, [sp, #4]
	adds r0, r3, r0
	subs r0, #0x13
	strh r0, [r5, #0x18]
	ldr r2, _08043BE4 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x83
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #0x10]
	ldrh r0, [r6, #0x1a]
	strh r0, [r4]
	mov r0, r8
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r4, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r4, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	ldr r0, _08043BE8 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08043AAA
	ldrh r0, [r6, #0x1c]
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xa
	bhi _08043AAA
	movs r1, #0x97
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08043AAA:
	movs r2, #0xa3
	lsls r2, r2, #2
	adds r5, r6, r2
	ldr r3, _08043BE0 @ =gUnknown_08097AA4
	ldrh r2, [r6, #0x30]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r1, [sp]
	adds r1, r1, r0
	str r1, [sp]
	lsls r2, r2, #1
	adds r2, r2, r3
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	ldr r4, [sp, #4]
	adds r4, r4, r0
	str r4, [sp, #4]
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r5, #0x16]
	strh r4, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	ldr r2, [sp]
	adds r2, #2
	str r2, [sp]
	ldr r3, [sp, #4]
	subs r3, #0x11
	str r3, [sp, #4]
	movs r7, #0
	movs r3, #0
	movs r4, #0xb1
	lsls r4, r4, #2
	adds r5, r6, r4
	movs r2, #0
	movs r0, #0xb6
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0x36
	adds r1, r1, r6
	mov sb, r1
	movs r4, #0x76
	adds r4, r4, r6
	mov sl, r4
	adds r0, r6, #0
	adds r0, #0xc0
	str r0, [sp, #8]
_08043B20:
	adds r1, r2, #1
	str r1, [sp, #0x10]
	lsls r1, r1, #2
	mov r4, r8
	ldrb r0, [r4]
	subs r0, r0, r1
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #1
	mov r4, sb
	adds r4, r4, r0
	mov ip, r4
	movs r1, #0
	ldrsh r4, [r4, r1]
	mov ip, r4
	add r7, ip
	add r0, sl
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r3, r3, r0
	asrs r0, r7, #3
	ldr r1, [sp]
	adds r0, r1, r0
	strh r0, [r5, #0x16]
	asrs r0, r3, #3
	ldr r4, [sp, #4]
	adds r0, r4, r0
	strh r0, [r5, #0x18]
	movs r0, #0x13
	subs r0, r0, r2
	lsls r0, r0, #6
	strh r0, [r5, #0x1a]
	adds r0, r5, #0
	str r3, [sp, #0xc]
	bl sub_80051E8
	ldr r0, [sp, #0x10]
	lsls r4, r0, #0x18
	lsrs r2, r4, #0x18
	ldr r3, [sp, #0xc]
	cmp r2, #5
	bls _08043B20
	movs r1, #0xbd
	lsls r1, r1, #2
	adds r5, r6, r1
	mov r2, r8
	ldrb r1, [r2]
	subs r1, #0x1c
	movs r4, #0x1f
	ands r1, r4
	lsls r1, r1, #1
	mov r2, sb
	adds r0, r2, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	adds r7, r7, r0
	add r1, sl
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x11
	adds r3, r3, r0
	asrs r0, r7, #3
	ldr r1, [sp]
	adds r4, r1, r0
	strh r4, [r5, #0x16]
	asrs r0, r3, #3
	ldr r2, [sp, #4]
	adds r7, r2, r0
	strh r7, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldr r3, [sp, #8]
	ldrb r0, [r3]
	cmp r0, #0
	beq _08043BCC
	adds r1, r4, #0
	subs r1, #0x10
	adds r0, r6, #0
	adds r2, r7, #0
	bl sub_8043D94
_08043BCC:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08043BDC: .4byte gDispCnt
_08043BE0: .4byte gUnknown_08097AA4
_08043BE4: .4byte gUnknown_030054B8
_08043BE8: .4byte gUnknown_030059E0

	thumb_func_start sub_8043BEC
sub_8043BEC: @ 0x08043BEC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r3, _08043C2C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	ldr r2, [r7, #8]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	subs r2, r2, r0
	ldr r3, _08043C30 @ =gBgScrollRegs
	movs r0, #0x3c
	subs r0, r0, r1
	strh r0, [r3]
	movs r0, #0x36
	subs r0, r0, r2
	strh r0, [r3, #2]
	adds r1, #0x32
	movs r0, #0xaf
	lsls r0, r0, #1
	cmp r1, r0
	bls _08043C3C
	ldr r2, _08043C34 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08043C38 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _08043C4A
	.align 2, 0
_08043C2C: .4byte gUnknown_03005960
_08043C30: .4byte gBgScrollRegs
_08043C34: .4byte gDispCnt
_08043C38: .4byte 0x0000FEFF
_08043C3C:
	ldr r0, _08043D80 @ =gDispCnt
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
_08043C4A:
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r5, r7, r0
	movs r1, #0xc4
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	asrs r0, r0, #8
	ldr r4, _08043D84 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r6, r7, #0
	adds r6, #0xc8
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldrb r0, [r7, #0x15]
	cmp r0, #0
	beq _08043CA6
	ldr r2, _08043D88 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _08043CCE
	ldr r0, _08043D8C @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08043CCE
	ldr r0, _08043D90 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _08043CCE
_08043CA6:
	movs r3, #0xd8
	lsls r3, r3, #1
	adds r5, r7, r3
	mov r1, r8
	ldr r0, [r1]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08043CCE:
	movs r3, #0xa3
	lsls r3, r3, #2
	adds r5, r7, r3
	adds r0, r7, #0
	adds r0, #0xcc
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r4, _08043D84 @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r7, #0
	adds r0, #0xd0
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0xb1
	lsls r0, r0, #2
	adds r5, r7, r0
	movs r6, #0
	movs r1, #0xdc
	adds r1, r1, r7
	mov sb, r1
	movs r3, #0xe0
	adds r3, r3, r7
	mov r8, r3
_08043D0C:
	lsls r2, r6, #3
	mov r1, sb
	adds r0, r1, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	add r2, r8
	ldr r0, [r2]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	movs r0, #0x13
	subs r0, r0, r6
	lsls r0, r0, #6
	strh r0, [r5, #0x1a]
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #5
	bls _08043D0C
	movs r3, #0xbd
	lsls r3, r3, #2
	adds r5, r7, r3
	movs r1, #0x92
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r2, _08043D84 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	movs r3, #0x94
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08043D80: .4byte gDispCnt
_08043D84: .4byte gUnknown_03005960
_08043D88: .4byte gUnknown_030055B4
_08043D8C: .4byte gUnknown_030054F0
_08043D90: .4byte gLoadedSaveGame

	thumb_func_start sub_8043D94
sub_8043D94: @ 0x08043D94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	mov sl, r1
	mov sb, r2
	mov r1, r8
	adds r1, #0xc0
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldr r2, _08043E28 @ =gUnknown_08097AA4
	ldrb r0, [r1]
	lsls r0, r0, #5
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #0xd
	adds r0, #0x10
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r5, #0
	adds r7, r2, #0
_08043DD0:
	lsls r4, r5, #1
	adds r4, r4, r5
	lsls r4, r4, #4
	movs r0, #0xcb
	lsls r0, r0, #2
	adds r4, r4, r0
	add r4, r8
	lsls r0, r5, #8
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, r0, r7
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	add r0, sl
	strh r0, [r4, #0x16]
	lsls r0, r5, #8
	adds r0, r0, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	add r0, sb
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _08043DD0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08043E28: .4byte gUnknown_08097AA4

	thumb_func_start sub_8043E2C
sub_8043E2C: @ 0x08043E2C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	adds r7, r0, #0
	ldrb r0, [r7, #0x11]
	cmp r0, #0
	beq _08043E40
	b _08043F9A
_08043E40:
	adds r4, r7, #0
	adds r4, #0x20
	ldrb r3, [r4]
	cmp r3, #0
	beq _08043E4C
	b _08043F9A
_08043E4C:
	ldrh r0, [r7, #0x24]
	adds r0, #0x10
	strh r0, [r7, #0x24]
	movs r1, #0x22
	ldrsh r0, [r7, r1]
	ldr r1, [r7, #0x28]
	adds r1, r1, r0
	str r1, [r7, #0x28]
	movs r0, #0x24
	ldrsh r2, [r7, r0]
	ldr r0, [r7, #0x2c]
	adds r0, r0, r2
	str r0, [r7, #0x2c]
	asrs r5, r1, #8
	asrs r0, r0, #8
	mov sb, r0
	adds r0, #0xa
	str r3, [sp]
	ldr r1, _08043FA8 @ =sub_801EE64
	str r1, [sp, #4]
	adds r1, r5, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08043EA2
	lsls r1, r0, #8
	ldr r0, [r7, #0x2c]
	adds r0, r0, r1
	str r0, [r7, #0x2c]
	movs r2, #0x22
	ldrsh r1, [r7, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r7, #0x22]
	movs r0, #1
	strb r0, [r4]
_08043EA2:
	movs r0, #0x86
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, _08043FAC @ =gUnknown_03005960
	mov r8, r1
	ldr r0, [r1]
	subs r0, r5, r0
	strh r0, [r4, #0x16]
	ldr r0, [r1, #4]
	mov r2, sb
	subs r0, r2, r0
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	movs r0, #0xf0
	lsls r0, r0, #1
	adds r4, r7, r0
	movs r2, #0x94
	lsls r2, r2, #2
	adds r1, r7, r2
	mov r2, r8
	ldr r0, [r2]
	subs r0, r5, r0
	subs r0, #2
	strh r0, [r4, #0x16]
	ldr r0, [r2, #4]
	mov r2, sb
	subs r0, r2, r0
	subs r0, #0x13
	strh r0, [r4, #0x18]
	ldr r3, _08043FB0 @ =gUnknown_030054B8
	ldrb r0, [r3]
	adds r2, r0, #1
	strb r2, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x83
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r4, #0x10]
	ldrh r0, [r7, #0x1a]
	strh r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	ldrh r0, [r4, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r4, #0x18]
	strh r0, [r1, #8]
	adds r0, r4, #0
	bl sub_8004860
	adds r0, r4, #0
	bl sub_80051E8
	ldr r0, _08043FB4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #3
	bl DivRem
	adds r6, r0, #0
	cmp r6, #0
	bne _08043F9A
	ldr r0, _08043FB8 @ =gUnknown_030053B8
	mov ip, r0
	ldr r0, [r0]
	ldr r4, _08043FBC @ =0x00196225
	adds r2, r0, #0
	muls r2, r4, r2
	ldr r3, _08043FC0 @ =0x3C6EF35F
	adds r2, r2, r3
	mov r0, r8
	ldr r1, [r0]
	subs r1, r5, r1
	movs r5, #0xf
	adds r0, r2, #0
	ands r0, r5
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x1c]
	muls r2, r4, r2
	adds r2, r2, r3
	mov r1, r8
	ldr r0, [r1, #4]
	mov r1, sb
	subs r0, r1, r0
	adds r1, r2, #0
	ands r1, r5
	adds r0, r0, r1
	subs r0, #8
	str r0, [sp, #0x20]
	add r0, sp, #8
	strh r6, [r0, #0x1c]
	adds r5, r0, #0
	adds r1, r2, #0
	muls r1, r4, r1
	adds r1, r1, r3
	mov r2, ip
	str r1, [r2]
	movs r0, #0x3f
	ands r1, r0
	ldr r0, _08043FC4 @ =0x0000041F
	subs r0, r0, r1
	strh r0, [r5, #0xc]
	adds r1, r5, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _08043FC8 @ =0x06012980
	str r0, [sp, #8]
	ldr r0, _08043FCC @ =0x0000026B
	strh r0, [r1, #8]
	adds r0, r1, #0
	strh r6, [r0, #0xa]
	str r6, [sp, #0xc]
	adds r1, r7, #0
	adds r1, #0x14
	bl sub_8039B54
_08043F9A:
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08043FA8: .4byte sub_801EE64
_08043FAC: .4byte gUnknown_03005960
_08043FB0: .4byte gUnknown_030054B8
_08043FB4: .4byte gUnknown_03005590
_08043FB8: .4byte gUnknown_030053B8
_08043FBC: .4byte 0x00196225
_08043FC0: .4byte 0x3C6EF35F
_08043FC4: .4byte 0x0000041F
_08043FC8: .4byte 0x06012980
_08043FCC: .4byte 0x0000026B

	thumb_func_start sub_8043FD0
sub_8043FD0: @ 0x08043FD0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0804406C @ =gUnknown_03005B4C
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov ip, r0
	ldr r0, [r0, #4]
	adds r0, r0, r4
	mov r1, ip
	str r0, [r1, #4]
	ldr r0, [r1, #8]
	adds r0, r0, r5
	str r0, [r1, #8]
	ldr r0, [r1, #0x28]
	adds r0, r0, r4
	str r0, [r1, #0x28]
	ldr r0, [r1, #0x2c]
	adds r0, r0, r5
	str r0, [r1, #0x2c]
	ldr r0, _08044070 @ =IWRAM_START + 0xC4
	adds r1, r2, r0
	ldr r0, [r1]
	adds r0, r0, r4
	str r0, [r1]
	ldr r0, _08044074 @ =IWRAM_START + 0xC8
	adds r1, r2, r0
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	ldr r0, _08044078 @ =IWRAM_START + 0xCC
	adds r1, r2, r0
	ldr r0, [r1]
	adds r0, r0, r4
	str r0, [r1]
	ldr r0, _0804407C @ =IWRAM_START + 0xD0
	adds r1, r2, r0
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	movs r3, #0
	ldr r1, _08044080 @ =IWRAM_START + 0xDC
	adds r7, r2, r1
	ldr r0, _08044084 @ =IWRAM_START + 0xE0
	adds r6, r2, r0
_08044030:
	lsls r1, r3, #3
	adds r2, r7, r1
	ldr r0, [r2]
	adds r0, r0, r4
	str r0, [r2]
	adds r1, r6, r1
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #5
	bls _08044030
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	ldr r0, [r1]
	adds r0, r0, r4
	str r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	add r1, ip
	ldr r0, [r1]
	adds r0, r0, r5
	str r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804406C: .4byte gUnknown_03005B4C
_08044070: .4byte IWRAM_START + 0xC4
_08044074: .4byte IWRAM_START + 0xC8
_08044078: .4byte IWRAM_START + 0xCC
_0804407C: .4byte IWRAM_START + 0xD0
_08044080: .4byte IWRAM_START + 0xDC
_08044084: .4byte IWRAM_START + 0xE0

	thumb_func_start sub_8044088
sub_8044088: @ 0x08044088
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r0, r0, r6
	mov r8, r0
	ldr r3, [r6, #4]
	asrs r3, r3, #8
	ldr r4, _0804412C @ =gUnknown_08097AA4
	ldrh r2, [r6, #0x16]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r3, r3, r0
	mov sb, r3
	ldr r3, [r6, #8]
	asrs r3, r3, #8
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r7, r3, r0
	ldr r1, _08044130 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, sb
	subs r0, r2, r0
	mov r5, r8
	strh r0, [r5, #0x16]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	ldr r4, _08044134 @ =gUnknown_030059E0
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #2
	bl sub_800CA20
	cmp r0, #1
	bne _080440FE
	adds r0, r6, #0
	bl sub_80452F8
_080440FE:
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #1
	bl sub_800C320
	ldrb r0, [r6, #0x13]
	cmp r0, #0
	bne _08044150
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _08044138
	adds r0, r6, #0
	bl sub_8045368
	b _08044150
	.align 2, 0
_0804412C: .4byte gUnknown_08097AA4
_08044130: .4byte gUnknown_03005960
_08044134: .4byte gUnknown_030059E0
_08044138:
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _08044150
	adds r0, r6, #0
	bl sub_80452F8
_08044150:
	mov r1, sb
	lsls r0, r1, #8
	lsls r1, r7, #8
	bl sub_80122DC
	ldrb r4, [r6, #0x13]
	cmp r4, #0
	bne _08044180
	ldr r0, _08044228 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _08044180
	adds r0, r6, #0
	bl sub_8045368
	ldr r0, _0804422C @ =gUnknown_03005498
	ldr r0, [r0, #4]
	strb r4, [r0, #0x15]
_08044180:
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	bne _08044188
	b _08044372
_08044188:
	ldrb r0, [r6, #0x1f]
	cmp r0, #0
	beq _08044190
	b _08044372
_08044190:
	movs r2, #0x86
	lsls r2, r2, #2
	adds r2, r2, r6
	mov r8, r2
	ldr r3, [r6, #4]
	asrs r3, r3, #8
	ldr r4, _08044230 @ =gUnknown_08097AA4
	ldrh r2, [r6, #0x18]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r2, r5
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r3, r3, r0
	mov sb, r3
	ldr r3, [r6, #8]
	asrs r3, r3, #8
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r7, r3, r0
	ldr r1, _08044234 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, sb
	subs r0, r2, r0
	mov r5, r8
	strh r0, [r5, #0x16]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	ldr r4, _08044228 @ =gUnknown_030059E0
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #1
	bl sub_800CA20
	cmp r0, #1
	bne _080441F8
	adds r0, r6, #0
	bl sub_80452F8
_080441F8:
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C320
	adds r1, r0, #0
	cmp r1, #1
	bne _080442A8
	movs r0, #0x1e
	strb r0, [r6, #0x1f]
	ldrb r0, [r6, #0x11]
	subs r0, #1
	strb r0, [r6, #0x11]
	ands r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08044238
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0804423E
	.align 2, 0
_08044228: .4byte gUnknown_030059E0
_0804422C: .4byte gUnknown_03005498
_08044230: .4byte gUnknown_08097AA4
_08044234: .4byte gUnknown_03005960
_08044238:
	movs r0, #0xeb
	bl m4aSongNumStart
_0804423E:
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	bne _080442C0
	ldr r1, _08044294 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08044298 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	mov sl, r0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp sl, r1
	beq _080442C0
	ldr r0, _0804429C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _080442C0
	mov r5, sl
	subs r0, r5, r1
	lsls r0, r0, #0x10
	ldr r1, _080442A0 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08044288
	movs r0, #0xff
_08044288:
	strb r0, [r1]
	ldr r1, _080442A4 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _080442C0
	.align 2, 0
_08044294: .4byte gUnknown_03005450
_08044298: .4byte 0x0000C350
_0804429C: .4byte gUnknown_030054CC
_080442A0: .4byte gUnknown_03005448
_080442A4: .4byte gUnknown_030054A8
_080442A8:
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _080442C0
	adds r0, r6, #0
	bl sub_80452F8
_080442C0:
	mov r5, sb
	lsls r0, r5, #8
	lsls r1, r7, #8
	bl sub_80122DC
	ldrb r0, [r6, #0x1f]
	cmp r0, #0
	bne _08044364
	ldr r0, _08044300 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C418
	adds r1, r0, #0
	cmp r1, #1
	bne _08044364
	movs r0, #0x1e
	strb r0, [r6, #0x1f]
	ldrb r0, [r6, #0x11]
	subs r0, #1
	strb r0, [r6, #0x11]
	ands r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08044304
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0804430A
	.align 2, 0
_08044300: .4byte gUnknown_030059E0
_08044304:
	movs r0, #0xeb
	bl m4aSongNumStart
_0804430A:
	ldr r0, _080444B8 @ =gUnknown_03005498
	ldr r1, [r0, #4]
	movs r0, #0
	strb r0, [r1, #0x15]
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	bne _08044364
	ldr r1, _080444BC @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _080444C0 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	mov r8, r0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r8, r1
	beq _08044364
	ldr r0, _080444C4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08044364
	mov r5, r8
	subs r0, r5, r1
	lsls r0, r0, #0x10
	ldr r1, _080444C8 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0804435C
	movs r0, #0xff
_0804435C:
	strb r0, [r1]
	ldr r1, _080444CC @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08044364:
	mov r0, sb
	subs r0, #5
	lsls r0, r0, #8
	str r0, [r6, #0x28]
	adds r0, r7, #1
	lsls r0, r0, #8
	str r0, [r6, #0x2c]
_08044372:
	movs r5, #0xa3
	lsls r5, r5, #2
	adds r5, r5, r6
	mov r8, r5
	ldr r3, [r6, #4]
	asrs r3, r3, #8
	ldr r4, _080444D0 @ =gUnknown_08097AA4
	ldrh r2, [r6, #0x30]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r3, r3, r0
	mov sb, r3
	ldr r3, [r6, #8]
	asrs r3, r3, #8
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r7, r3, r0
	ldr r5, _080444D4 @ =gUnknown_03005960
	ldr r0, [r5]
	mov r1, sb
	subs r0, r1, r0
	mov r2, r8
	strh r0, [r2, #0x16]
	ldr r0, [r5, #4]
	subs r0, r7, r0
	strh r0, [r2, #0x18]
	ldr r4, _080444D8 @ =gUnknown_030059E0
	str r4, [sp]
	mov r0, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _080443D8
	adds r0, r6, #0
	bl sub_80452F8
_080443D8:
	str r4, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #1
	bl sub_800CA20
	cmp r0, #1
	bne _080443F0
	adds r0, r6, #0
	bl sub_80452F8
_080443F0:
	movs r0, #2
	add sb, r0
	subs r7, #0x11
	movs r2, #0
	mov ip, r5
	movs r1, #0xb6
	adds r1, r1, r6
	mov sl, r1
	adds r3, r6, #0
	adds r3, #0x36
	adds r4, r6, #0
	adds r4, #0x76
	ldrb r5, [r1]
	mov r8, r5
_0804440C:
	adds r2, #1
	lsls r1, r2, #2
	mov r0, r8
	subs r1, r0, r1
	movs r5, #0x1f
	ands r1, r5
	lsls r1, r1, #1
	adds r0, r3, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	add sb, r0
	adds r1, r4, r1
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	adds r7, r7, r0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	cmp r2, #5
	bls _0804440C
	movs r1, #0xbd
	lsls r1, r1, #2
	adds r1, r1, r6
	mov r8, r1
	mov r2, sl
	ldrb r1, [r2]
	subs r1, #0x1c
	ands r1, r5
	lsls r1, r1, #1
	adds r0, r3, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	add sb, r0
	adds r1, r4, r1
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r7, r7, r0
	mov r5, ip
	ldr r0, [r5]
	mov r1, sb
	subs r0, r1, r0
	mov r2, r8
	strh r0, [r2, #0x16]
	ldr r0, [r5, #4]
	subs r0, r7, r0
	strh r0, [r2, #0x18]
	ldr r4, _080444D8 @ =gUnknown_030059E0
	str r4, [sp]
	mov r0, r8
	adds r2, r7, #0
	movs r3, #1
	bl sub_800CA20
	cmp r0, #1
	bne _0804448E
	adds r0, r6, #0
	bl sub_80452F8
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r4, #0x20]
_0804448E:
	ldr r5, _080444D8 @ =gUnknown_030059E0
	str r5, [sp]
	mov r0, r8
	mov r1, sb
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _080444A8
	adds r0, r6, #0
	bl sub_80452F8
_080444A8:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080444B8: .4byte gUnknown_03005498
_080444BC: .4byte gUnknown_03005450
_080444C0: .4byte 0x0000C350
_080444C4: .4byte gUnknown_030054CC
_080444C8: .4byte gUnknown_03005448
_080444CC: .4byte gUnknown_030054A8
_080444D0: .4byte gUnknown_08097AA4
_080444D4: .4byte gUnknown_03005960
_080444D8: .4byte gUnknown_030059E0

	thumb_func_start sub_80444DC
sub_80444DC: @ 0x080444DC
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	ldr r1, [r4, #4]
	adds r1, r1, r0
	str r1, [r4, #4]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r2
	str r0, [r4, #8]
	asrs r1, r1, #8
	asrs r0, r0, #8
	adds r0, #0x32
	movs r2, #0
	str r2, [sp]
	ldr r2, _08044538 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	lsls r0, r0, #8
	ldr r1, [r4, #8]
	adds r1, r1, r0
	str r1, [r4, #8]
	ldrh r0, [r4, #0x16]
	adds r0, #2
	ldr r1, _0804453C @ =0x000003FF
	ands r0, r1
	strh r0, [r4, #0x16]
	ldrh r0, [r4, #0x18]
	adds r0, #2
	ands r0, r1
	strh r0, [r4, #0x18]
	ldrh r0, [r4, #0x30]
	adds r0, #2
	ands r0, r1
	strh r0, [r4, #0x30]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08044538: .4byte sub_801EE64
_0804453C: .4byte 0x000003FF

	thumb_func_start sub_8044540
sub_8044540: @ 0x08044540
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	ldrh r1, [r6, #0xc]
	movs r2, #0xc
	ldrsh r0, [r6, r2]
	cmp r0, #0
	ble _0804455C
	subs r0, r1, #2
	strh r0, [r6, #0xc]
_0804455C:
	movs r4, #0xc
	ldrsh r0, [r6, r4]
	ldr r1, [r6, #4]
	adds r1, r1, r0
	str r1, [r6, #4]
	movs r0, #0xe
	ldrsh r2, [r6, r0]
	ldr r0, [r6, #8]
	adds r0, r0, r2
	str r0, [r6, #8]
	asrs r2, r1, #8
	asrs r0, r0, #8
	adds r0, #0x32
	movs r1, #0
	mov sb, r1
	str r1, [sp]
	ldr r4, _0804477C @ =sub_801EE64
	mov r8, r4
	str r4, [sp, #4]
	adds r1, r2, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	lsls r0, r0, #8
	ldr r1, [r6, #8]
	adds r1, r1, r0
	str r1, [r6, #8]
	adds r5, r6, #0
	adds r5, #0xd6
	ldrh r0, [r5]
	adds r0, #0x30
	strh r0, [r5]
	adds r2, r6, #0
	adds r2, #0xc4
	adds r7, r6, #0
	adds r7, #0xd4
	movs r0, #0
	ldrsh r1, [r7, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r4, r6, #0
	adds r4, #0xc8
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, [r2]
	asrs r2, r1, #8
	asrs r0, r0, #8
	mov r1, sb
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	adds r1, r2, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08044600
	lsls r1, r0, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r2, #0
	ldrsh r1, [r5, r2]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
	ldrh r0, [r7]
	subs r0, #0x18
	strh r0, [r7]
_08044600:
	adds r5, r6, #0
	adds r5, #0xda
	ldrh r0, [r5]
	adds r0, #0x3d
	strh r0, [r5]
	adds r2, r6, #0
	adds r2, #0xcc
	adds r7, r6, #0
	adds r7, #0xd8
	movs r4, #0
	ldrsh r1, [r7, r4]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r4, r6, #0
	adds r4, #0xd0
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, [r2]
	asrs r2, r1, #8
	asrs r0, r0, #8
	mov r1, sb
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	adds r1, r2, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08044666
	lsls r1, r0, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r2, #0
	ldrsh r1, [r5, r2]
	lsls r0, r1, #6
	adds r0, r0, r1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
	ldrh r0, [r7]
	subs r0, #0x22
	strh r0, [r7]
_08044666:
	movs r4, #0
	mov r8, r4
	adds r0, r6, #0
	adds r0, #0xdc
	str r0, [sp, #8]
	movs r1, #0xe0
	adds r1, r1, r6
	mov sl, r1
_08044676:
	mov r2, r8
	lsls r1, r2, #2
	movs r4, #0x87
	lsls r4, r4, #1
	adds r0, r6, r4
	adds r5, r0, r1
	ldrh r0, [r5]
	adds r0, #0x38
	strh r0, [r5]
	lsls r3, r2, #3
	ldr r0, [sp, #8]
	adds r2, r0, r3
	subs r4, #2
	adds r0, r6, r4
	adds r7, r0, r1
	movs r0, #0
	ldrsh r1, [r7, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	mov r1, sl
	adds r4, r1, r3
	movs r1, #0
	ldrsh r0, [r5, r1]
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	ldr r0, [r2]
	asrs r2, r0, #8
	asrs r0, r1, #8
	movs r1, #0
	str r1, [sp]
	ldr r1, _0804477C @ =sub_801EE64
	mov sb, r1
	str r1, [sp, #4]
	adds r1, r2, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _080446EE
	lsls r1, r0, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r2, #0
	ldrsh r1, [r5, r2]
	mov r0, r8
	subs r0, #0x41
	muls r0, r1, r0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
	ldr r0, _08044780 @ =0x0000FFCD
	add r0, r8
	ldrh r4, [r7]
	adds r0, r0, r4
	strh r0, [r7]
_080446EE:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #5
	bls _08044676
	movs r0, #0x97
	lsls r0, r0, #1
	adds r5, r6, r0
	ldrh r0, [r5]
	adds r0, #0x40
	movs r3, #0
	strh r0, [r5]
	movs r1, #0x92
	lsls r1, r1, #1
	adds r2, r6, r1
	movs r4, #0x96
	lsls r4, r4, #1
	adds r7, r6, r4
	movs r0, #0
	ldrsh r1, [r7, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r4, r6, r1
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	ldr r1, [r2]
	asrs r2, r1, #8
	asrs r0, r0, #8
	str r3, [sp]
	mov r1, sb
	str r1, [sp, #4]
	adds r1, r2, #0
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _0804476C
	lsls r1, r0, #8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r2, #0
	ldrsh r1, [r5, r2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	strh r0, [r5]
	ldrh r0, [r7]
	subs r0, #0x34
	strh r0, [r7]
_0804476C:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804477C: .4byte sub_801EE64
_08044780: .4byte 0x0000FFCD

	thumb_func_start sub_8044784
sub_8044784: @ 0x08044784
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r7, r0, #0
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r0, r0, r7
	mov r8, r0
	ldr r0, _080447CC @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080447D4
	mov r1, r8
	movs r2, #4
	ldrsh r0, [r1, r2]
	movs r1, #0x80
	lsls r1, r1, #6
	cmp r0, r1
	beq _080447BC
	mov r4, r8
	strh r1, [r4, #4]
	mov r0, r8
	bl sub_802D4CC
_080447BC:
	ldr r0, _080447D0 @ =gFlags
	ldr r1, [r0]
	movs r2, #5
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
	b _08044A00
	.align 2, 0
_080447CC: .4byte gUnknown_030059E0
_080447D0: .4byte gFlags
_080447D4:
	ldrb r0, [r7, #0x11]
	cmp r0, #0
	bne _080447FC
	movs r0, #0x80
	lsls r0, r0, #6
	mov r5, r8
	strh r0, [r5, #4]
	mov r0, r8
	bl sub_802D4CC
	ldr r2, _080447F8 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	b _08044A00
	.align 2, 0
_080447F8: .4byte gFlags
_080447FC:
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r6, _080448C0 @ =gUnknown_03005960
	ldr r1, [r6]
	subs r5, r0, r1
	ldrh r3, [r7, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r3, r1
	lsls r0, r0, #1
	ldr r2, _080448C4 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r4, #0
	ldrsh r2, [r0, r4]
	lsls r0, r2, #2
	adds r0, r0, r2
	asrs r0, r0, #0xb
	adds r5, r5, r0
	ldrh r2, [r7, #0x1a]
	adds r1, r2, r1
	lsls r1, r1, #1
	ldr r0, _080448C4 @ =gUnknown_08097AA4
	adds r1, r1, r0
	movs r4, #0
	ldrsh r1, [r1, r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r5, r5, r0
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r6, r0, r1
	lsls r3, r3, #1
	ldr r0, _080448C4 @ =gUnknown_08097AA4
	adds r3, r3, r0
	movs r4, #0
	ldrsh r1, [r3, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r6, r6, r0
	subs r6, #0x12
	lsls r2, r2, #1
	ldr r0, _080448C4 @ =gUnknown_08097AA4
	adds r2, r2, r0
	movs r4, #0
	ldrsh r1, [r2, r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r6, r6, r0
	movs r0, #0
	mov sb, r0
	ldrb r1, [r7, #0x1e]
	cmp r1, #0
	beq _080448CC
	ldrh r0, [r7, #0x1c]
	cmp r0, #0
	bne _080448CC
	subs r1, #1
	strb r1, [r7, #0x1e]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #6
	adds r0, r2, #0
	subs r0, r0, r1
	mov r4, r8
	strh r0, [r4, #4]
	ldrh r0, [r7, #0x1a]
	ldrb r1, [r7, #0x1e]
	adds r1, #8
	lsls r3, r5, #0x10
	asrs r3, r3, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #6
	bl sub_802E784
	movs r5, #1
	mov sb, r5
	ldrb r0, [r7, #0x1e]
	cmp r0, #0
	bne _08044946
	ldr r2, _080448C8 @ =gUnknown_080D7F94
	ldrb r0, [r7, #0x10]
	movs r1, #0
	cmp r0, #4
	bls _080448B8
	movs r1, #2
_080448B8:
	adds r0, r1, r2
	ldrh r0, [r0]
	strh r0, [r7, #0x1c]
	b _08044946
	.align 2, 0
_080448C0: .4byte gUnknown_03005960
_080448C4: .4byte gUnknown_08097AA4
_080448C8: .4byte gUnknown_080D7F94
_080448CC:
	movs r2, #0x80
	lsls r2, r2, #6
	mov r0, r8
	strh r2, [r0, #4]
	ldrh r1, [r7, #0x1c]
	subs r0, r1, #1
	strh r0, [r7, #0x1c]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080448EC
	movs r0, #0xfc
	bl m4aSongNumStart
	movs r0, #0x10
	strb r0, [r7, #0x1e]
	b _0804491C
_080448EC:
	adds r0, r1, #0
	subs r0, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1c
	bhi _0804491C
	adds r0, r1, #0
	subs r0, #0xb
	lsls r0, r0, #7
	subs r0, r2, r0
	mov r1, r8
	strh r0, [r1, #4]
	ldrh r0, [r7, #0x1a]
	lsls r3, r5, #0x10
	asrs r3, r3, #0x10
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0xa
	movs r2, #6
	bl sub_802E784
_0804491C:
	ldrh r0, [r7, #0x1c]
	cmp r0, #0xc
	bhi _08044946
	movs r4, #0x97
	lsls r4, r4, #2
	adds r2, r7, r4
	strh r5, [r2, #0x16]
	strh r6, [r2, #0x18]
	ldrh r0, [r7, #0x1c]
	cmp r0, #0xc
	bne _08044946
	ldr r5, _080449C0 @ =0x0000027D
	adds r1, r7, r5
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080449C4 @ =0x000002AB
	strh r0, [r2, #0xa]
	subs r0, #0x2f
	adds r1, r7, r0
	movs r0, #0
	strb r0, [r1]
_08044946:
	mov r0, r8
	bl sub_802D4CC
	ldr r1, _080449C8 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r6, r0, #8
	adds r6, #0x13
	ldr r3, [r7, #8]
	asrs r3, r3, #8
	ldr r4, _080449CC @ =gUnknown_08097AA4
	ldrh r1, [r7, #0x18]
	lsls r0, r1, #1
	adds r0, r0, r4
	movs r5, #0
	ldrsh r2, [r0, r5]
	lsls r0, r2, #2
	adds r0, r0, r2
	asrs r0, r0, #0xb
	adds r3, r3, r0
	subs r6, r6, r3
	ldr r2, _080449C8 @ =gUnknown_030059E0
	ldr r0, [r2, #8]
	asrs r5, r0, #8
	adds r3, r5, #2
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	movs r5, #0x80
	lsls r5, r5, #1
	adds r1, r1, r5
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r0, #0
	ldrsh r1, [r1, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r2, r2, r0
	subs r5, r3, r2
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, _080449D0 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080449E4
	ldrh r2, [r7, #0x1a]
	adds r1, r2, #0
	cmp r1, r3
	bhs _080449D8
	ldr r0, _080449D4 @ =0x0000023F
	cmp r1, r0
	bhi _080449E4
	adds r0, r2, #1
	b _080449E2
	.align 2, 0
_080449C0: .4byte 0x0000027D
_080449C4: .4byte 0x000002AB
_080449C8: .4byte gUnknown_030059E0
_080449CC: .4byte gUnknown_08097AA4
_080449D0: .4byte gUnknown_03005590
_080449D4: .4byte 0x0000023F
_080449D8:
	movs r0, #0xe0
	lsls r0, r0, #1
	cmp r1, r0
	bls _080449E4
	subs r0, r2, #1
_080449E2:
	strh r0, [r7, #0x1a]
_080449E4:
	mov r1, sb
	cmp r1, #0
	beq _08044A00
	ldrh r1, [r7, #0x1a]
	adds r0, r1, #0
	subs r0, #0x10
	cmp r0, r3
	bge _08044A00
	adds r0, #0x20
	cmp r0, r3
	ble _08044A00
	ldr r0, _08044A10 @ =gUnknown_030059E0
	bl sub_800CBA4
_08044A00:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08044A10: .4byte gUnknown_030059E0

	thumb_func_start sub_8044A14
sub_8044A14: @ 0x08044A14
	push {r4, lr}
	mov ip, r0
	ldr r2, _08044A90 @ =gUnknown_08097AA4
	ldr r0, _08044A94 @ =gUnknown_03005590
	ldr r0, [r0]
	lsls r0, r0, #4
	ldr r1, _08044A98 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	asrs r0, r0, #9
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r0, r3
	ands r0, r1
	mov r1, ip
	strh r0, [r1, #0x32]
	mov r3, ip
	adds r3, #0xb6
	ldrb r0, [r3]
	lsls r0, r0, #1
	adds r1, #0x36
	adds r1, r1, r0
	mov r4, ip
	adds r4, #0xb8
	ldrh r0, [r4]
	strh r0, [r1]
	ldrb r0, [r3]
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x76
	adds r1, r1, r0
	mov r0, ip
	adds r0, #0xba
	ldrh r0, [r0]
	strh r0, [r1]
	mov r3, ip
	ldrh r0, [r3, #0x32]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #0xb
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	bge _08044A9C
	ldrh r0, [r4]
	adds r0, #2
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	ble _08044AAC
	b _08044AAA
	.align 2, 0
_08044A90: .4byte gUnknown_08097AA4
_08044A94: .4byte gUnknown_03005590
_08044A98: .4byte 0x000003FF
_08044A9C:
	ldrh r0, [r4]
	subs r0, #2
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	bge _08044AAC
_08044AAA:
	strh r3, [r4]
_08044AAC:
	mov r3, ip
	ldrh r0, [r3, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #0xb
	mov r1, ip
	adds r1, #0xba
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	bge _08044ADA
	ldrh r0, [r1]
	adds r0, #2
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	ble _08044AEA
	b _08044AE8
_08044ADA:
	ldrh r0, [r1]
	subs r0, #2
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	bge _08044AEA
_08044AE8:
	strh r3, [r1]
_08044AEA:
	mov r1, ip
	adds r1, #0xbc
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x77
	bls _08044B06
	movs r0, #0
	strh r0, [r1]
	adds r1, #3
	movs r0, #1
	strb r0, [r1]
_08044B06:
	mov r2, ip
	adds r2, #0xb6
	ldrb r0, [r2]
	adds r0, #1
	movs r1, #0x1f
	ands r0, r1
	strb r0, [r2]
	movs r1, #0xbd
	lsls r1, r1, #2
	add r1, ip
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	str r0, [r1, #0x30]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8044B28
sub_8044B28: @ 0x08044B28
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r2, _08044BA4 @ =gUnknown_08097AA4
	ldr r3, _08044BA8 @ =gUnknown_03005590
	ldr r0, [r3]
	lsls r0, r0, #4
	ldr r1, _08044BAC @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	asrs r0, r0, #9
	movs r4, #0xfa
	lsls r4, r4, #2
	adds r0, r0, r4
	ands r0, r1
	strh r0, [r6, #0x32]
	adds r4, r6, #0
	adds r4, #0xb6
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r1, r6, #0
	adds r1, #0x36
	adds r1, r1, r0
	adds r5, r6, #0
	adds r5, #0xb8
	ldrh r0, [r5]
	strh r0, [r1]
	ldrb r0, [r4]
	lsls r0, r0, #1
	adds r1, r6, #0
	adds r1, #0x76
	adds r1, r1, r0
	adds r0, r6, #0
	adds r0, #0xba
	ldrh r0, [r0]
	strh r0, [r1]
	ldrh r0, [r6, #0x32]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r4, r0, #0xa
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, r4
	bge _08044BB0
	ldrh r0, [r5]
	adds r0, #2
	strh r0, [r5]
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, r4
	ble _08044BC0
	b _08044BBE
	.align 2, 0
_08044BA4: .4byte gUnknown_08097AA4
_08044BA8: .4byte gUnknown_03005590
_08044BAC: .4byte 0x000003FF
_08044BB0:
	ldrh r0, [r5]
	subs r0, #2
	strh r0, [r5]
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, r4
	bge _08044BC0
_08044BBE:
	strh r4, [r5]
_08044BC0:
	ldrh r0, [r6, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r4, r0, #0xa
	adds r1, r6, #0
	adds r1, #0xba
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r4
	bge _08044BEC
	ldrh r0, [r1]
	adds r0, #2
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r4
	ble _08044BFC
	b _08044BFA
_08044BEC:
	ldrh r0, [r1]
	subs r0, #2
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r4
	bge _08044BFC
_08044BFA:
	strh r4, [r1]
_08044BFC:
	adds r4, r6, #0
	adds r4, #0xbc
	ldrh r0, [r4]
	adds r1, r0, #1
	strh r1, [r4]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x4f
	bls _08044C98
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	bne _08044C2A
	ldr r2, _08044C3C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08044C40 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08044C44 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _08044C48
_08044C2A:
	movs r0, #0
	strh r0, [r4]
	adds r1, r6, #0
	adds r1, #0xbe
	movs r0, #0x40
	strb r0, [r1]
	adds r1, #1
	movs r0, #2
	b _08044C70
	.align 2, 0
_08044C3C: .4byte gUnknown_030053B8
_08044C40: .4byte 0x00196225
_08044C44: .4byte 0x3C6EF35F
_08044C48:
	ldr r3, [r3]
	movs r0, #2
	ands r3, r0
	cmp r3, #0
	beq _08044C62
	strh r1, [r4]
	adds r1, r6, #0
	adds r1, #0xbe
	movs r0, #0x40
	strb r0, [r1]
	adds r1, #1
	movs r0, #4
	b _08044C70
_08044C62:
	strh r3, [r4]
	adds r1, r6, #0
	adds r1, #0xbe
	movs r0, #0x60
	strb r0, [r1]
	adds r1, #1
	movs r0, #5
_08044C70:
	strb r0, [r1]
	movs r2, #0xbd
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r1, #0xa]
	movs r4, #0xc5
	lsls r4, r4, #2
	adds r1, r6, r4
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08044C94 @ =0x00000315
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	b _08044CA6
	.align 2, 0
_08044C94: .4byte 0x00000315
_08044C98:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x46
	bne _08044CA6
	movs r0, #0xfa
	bl m4aSongNumStart
_08044CA6:
	adds r0, r6, #0
	adds r0, #0xb6
	ldrb r1, [r0]
	adds r1, #1
	movs r2, #0x1f
	ands r1, r2
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8044CBC
sub_8044CBC: @ 0x08044CBC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0xbe
	ldrb r0, [r7]
	cmp r0, #0x40
	bne _08044D26
	ldr r1, [r6, #4]
	asrs r1, r1, #8
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r5, _08044DE0 @ =gUnknown_08097AA4
	ldrh r4, [r6, #0x30]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r4, r3
	lsls r2, r2, #1
	adds r3, r2, r5
	movs r2, #0
	ldrsh r3, [r3, r2]
	lsls r2, r3, #2
	adds r2, r2, r3
	asrs r2, r2, #0xb
	adds r1, r1, r2
	lsls r4, r4, #1
	adds r4, r4, r5
	movs r2, #0
	ldrsh r3, [r4, r2]
	lsls r2, r3, #2
	adds r2, r2, r3
	asrs r2, r2, #0xb
	adds r0, r0, r2
	adds r1, #2
	subs r0, #0x11
	ldr r3, _08044DE4 @ =gUnknown_030059E0
	ldr r2, [r3, #8]
	asrs r2, r2, #8
	subs r1, r2, r1
	ldr r2, [r3, #0xc]
	asrs r2, r2, #8
	subs r0, r2, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r6, #0x32]
_08044D26:
	ldrb r0, [r7]
	str r7, [sp]
	movs r3, #0xb6
	adds r3, r3, r6
	mov r8, r3
	movs r1, #0x36
	adds r1, r1, r6
	mov sl, r1
	adds r5, r6, #0
	adds r5, #0xb8
	adds r2, r6, #0
	adds r2, #0x76
	str r2, [sp, #4]
	adds r7, r6, #0
	adds r7, #0xba
	cmp r0, #0x1b
	bne _08044D92
	movs r0, #0xfb
	bl m4aSongNumStart
	adds r1, r6, #0
	adds r1, #0xc0
	movs r0, #0x10
	strb r0, [r1]
	movs r3, #0
	movs r0, #0xcb
	lsls r0, r0, #2
	mov sb, r0
	ldr r1, _08044DE8 @ =gUnknown_080D7FB0
	mov ip, r1
	movs r4, #0xff
_08044D64:
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #4
	add r0, sb
	adds r2, r6, r0
	lsls r1, r3, #3
	add r1, ip
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r4
	strb r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _08044D64
_08044D92:
	mov r2, r8
	ldrb r0, [r2]
	lsls r0, r0, #1
	add r0, sl
	adds r4, r5, #0
	ldrh r1, [r4]
	strh r1, [r0]
	ldrb r0, [r2]
	lsls r0, r0, #1
	ldr r3, [sp, #4]
	adds r0, r3, r0
	ldrh r1, [r7]
	strh r1, [r0]
	ldr r2, _08044DE0 @ =gUnknown_08097AA4
	ldrh r0, [r6, #0x32]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #0xa
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	bge _08044DEC
	ldrh r0, [r4]
	adds r0, #0xa
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	ble _08044DFC
	strh r3, [r4]
	b _08044DFC
	.align 2, 0
_08044DE0: .4byte gUnknown_08097AA4
_08044DE4: .4byte gUnknown_030059E0
_08044DE8: .4byte gUnknown_080D7FB0
_08044DEC:
	ldrh r0, [r5]
	subs r0, #0xa
	strh r0, [r5]
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, r3
	bge _08044DFC
	strh r3, [r5]
_08044DFC:
	ldrh r0, [r6, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #0xa
	adds r1, r7, #0
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	bge _08044E28
	ldrh r0, [r1]
	adds r0, #0xa
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	ble _08044E38
	strh r3, [r1]
	b _08044E38
_08044E28:
	ldrh r0, [r7]
	subs r0, #0xa
	strh r0, [r7]
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, r3
	bge _08044E38
	strh r3, [r7]
_08044E38:
	ldr r1, [sp]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r3, #0xff
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08044E92
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	beq _08044E84
	adds r0, r6, #0
	adds r0, #0xbf
	strb r1, [r0]
	movs r0, #0xbd
	lsls r0, r0, #2
	adds r2, r6, r0
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	str r0, [r2, #0x30]
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	movs r2, #0xc5
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #2
	strb r0, [r1]
	ldr r0, _08044E80 @ =0x00000315
	adds r1, r6, r0
	ldrb r0, [r1]
	orrs r0, r3
	b _08044E90
	.align 2, 0
_08044E80: .4byte 0x00000315
_08044E84:
	adds r0, r6, #0
	adds r0, #0xbf
	movs r1, #3
	strb r1, [r0]
	movs r0, #0x7f
	ldr r1, [sp]
_08044E90:
	strb r0, [r1]
_08044E92:
	mov r2, r8
	ldrb r0, [r2]
	adds r0, #1
	movs r1, #0x1f
	ands r0, r1
	strb r0, [r2]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8044EB0
sub_8044EB0: @ 0x08044EB0
	push {r4, lr}
	mov ip, r0
	adds r0, #0xbe
	ldrb r0, [r0]
	lsls r0, r0, #4
	ldr r1, _08044F34 @ =0x000003FF
	adds r2, r1, #0
	ands r0, r2
	ldr r3, _08044F38 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	mov r1, ip
	ldrh r1, [r1, #0x32]
	adds r0, r0, r1
	ands r0, r2
	mov r2, ip
	strh r0, [r2, #0x32]
	adds r2, #0xb6
	ldrb r0, [r2]
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x36
	adds r1, r1, r0
	mov r4, ip
	adds r4, #0xb8
	ldrh r0, [r4]
	strh r0, [r1]
	ldrb r0, [r2]
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x76
	adds r1, r1, r0
	mov r0, ip
	adds r0, #0xba
	ldrh r0, [r0]
	strh r0, [r1]
	mov r1, ip
	ldrh r0, [r1, #0x32]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r2, r0, #0xa
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r2
	bge _08044F3C
	ldrh r0, [r4]
	adds r0, #0xa
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r2
	ble _08044F4C
	b _08044F4A
	.align 2, 0
_08044F34: .4byte 0x000003FF
_08044F38: .4byte gUnknown_08097AA4
_08044F3C:
	ldrh r0, [r4]
	subs r0, #0xa
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r2
	bge _08044F4C
_08044F4A:
	strh r2, [r4]
_08044F4C:
	mov r2, ip
	ldrh r0, [r2, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r2, r0, #0xa
	mov r1, ip
	adds r1, #0xba
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, r2
	bge _08044F7A
	ldrh r0, [r1]
	adds r0, #0xa
	strh r0, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, r2
	ble _08044F8A
	b _08044F88
_08044F7A:
	ldrh r0, [r1]
	subs r0, #0xa
	strh r0, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, r2
	bge _08044F8A
_08044F88:
	strh r2, [r1]
_08044F8A:
	mov r1, ip
	adds r1, #0xbe
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08044FCA
	adds r1, #1
	strb r0, [r1]
	movs r1, #0xbd
	lsls r1, r1, #2
	add r1, ip
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	str r0, [r1, #0x30]
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r1, #0xa]
	movs r1, #0xc5
	lsls r1, r1, #2
	add r1, ip
	movs r0, #2
	strb r0, [r1]
	ldr r1, _08044FE0 @ =0x00000315
	add r1, ip
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
_08044FCA:
	mov r0, ip
	adds r0, #0xb6
	ldrb r1, [r0]
	adds r1, #1
	movs r2, #0x1f
	ands r1, r2
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08044FE0: .4byte 0x00000315

	thumb_func_start sub_8044FE4
sub_8044FE4: @ 0x08044FE4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0xbe
	ldrb r0, [r7]
	cmp r0, #0x40
	bne _0804504E
	ldr r1, [r6, #4]
	asrs r1, r1, #8
	ldr r0, [r6, #8]
	asrs r0, r0, #8
	ldr r5, _08045108 @ =gUnknown_08097AA4
	ldrh r4, [r6, #0x30]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r4, r3
	lsls r2, r2, #1
	adds r3, r2, r5
	movs r2, #0
	ldrsh r3, [r3, r2]
	lsls r2, r3, #2
	adds r2, r2, r3
	asrs r2, r2, #0xb
	adds r1, r1, r2
	lsls r4, r4, #1
	adds r4, r4, r5
	movs r2, #0
	ldrsh r3, [r4, r2]
	lsls r2, r3, #2
	adds r2, r2, r3
	asrs r2, r2, #0xb
	adds r0, r0, r2
	adds r1, #2
	subs r0, #0x11
	ldr r3, _0804510C @ =gUnknown_030059E0
	ldr r2, [r3, #8]
	asrs r2, r2, #8
	subs r1, r2, r1
	ldr r2, [r3, #0xc]
	asrs r2, r2, #8
	subs r0, r2, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r6, #0x32]
_0804504E:
	ldrb r0, [r7]
	str r7, [sp]
	movs r3, #0xb6
	adds r3, r3, r6
	mov r8, r3
	movs r1, #0x36
	adds r1, r1, r6
	mov sl, r1
	adds r5, r6, #0
	adds r5, #0xb8
	adds r2, r6, #0
	adds r2, #0x76
	str r2, [sp, #4]
	adds r7, r6, #0
	adds r7, #0xba
	cmp r0, #0x1b
	bne _080450BA
	movs r0, #0xfb
	bl m4aSongNumStart
	adds r1, r6, #0
	adds r1, #0xc0
	movs r0, #0x10
	strb r0, [r1]
	movs r3, #0
	movs r0, #0xcb
	lsls r0, r0, #2
	mov sb, r0
	ldr r1, _08045110 @ =gUnknown_080D7FB0
	mov ip, r1
	movs r4, #0xff
_0804508C:
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #4
	add r0, sb
	adds r2, r6, r0
	lsls r1, r3, #3
	add r1, ip
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r4
	strb r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _0804508C
_080450BA:
	mov r2, r8
	ldrb r0, [r2]
	lsls r0, r0, #1
	add r0, sl
	adds r4, r5, #0
	ldrh r1, [r4]
	strh r1, [r0]
	ldrb r0, [r2]
	lsls r0, r0, #1
	ldr r3, [sp, #4]
	adds r0, r3, r0
	ldrh r1, [r7]
	strh r1, [r0]
	ldr r2, _08045108 @ =gUnknown_08097AA4
	ldrh r0, [r6, #0x32]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #9
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	bge _08045114
	ldrh r0, [r4]
	adds r0, #0xa
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, r3
	ble _08045124
	strh r3, [r4]
	b _08045124
	.align 2, 0
_08045108: .4byte gUnknown_08097AA4
_0804510C: .4byte gUnknown_030059E0
_08045110: .4byte gUnknown_080D7FB0
_08045114:
	ldrh r0, [r5]
	subs r0, #0xa
	strh r0, [r5]
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, r3
	bge _08045124
	strh r3, [r5]
_08045124:
	ldrh r0, [r6, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r3, r0, #9
	adds r1, r7, #0
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	bge _08045150
	ldrh r0, [r1]
	adds r0, #0xa
	strh r0, [r1]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r3
	ble _08045160
	strh r3, [r1]
	b _08045160
_08045150:
	ldrh r0, [r7]
	subs r0, #0xa
	strh r0, [r7]
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, r3
	bge _08045160
	strh r3, [r7]
_08045160:
	ldr r2, [sp]
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	movs r3, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080451A0
	adds r1, r6, #0
	adds r1, #0xbf
	strb r0, [r1]
	movs r0, #0xbd
	lsls r0, r0, #2
	adds r2, r6, r0
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	str r0, [r2, #0x30]
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r2, #0xa]
	movs r2, #0xc5
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #2
	strb r0, [r1]
	ldr r0, _080451C0 @ =0x00000315
	adds r1, r6, r0
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
_080451A0:
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	movs r1, #0x1f
	ands r0, r1
	mov r2, r8
	strb r0, [r2]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080451C0: .4byte 0x00000315

	thumb_func_start sub_80451C4
sub_80451C4: @ 0x080451C4
	push {r4, lr}
	mov ip, r0
	ldrh r0, [r0, #0x32]
	subs r0, #0xc
	ldr r1, _0804523C @ =0x000003FF
	ands r0, r1
	mov r1, ip
	strh r0, [r1, #0x32]
	mov r2, ip
	adds r2, #0xb6
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, #0x36
	adds r1, r1, r0
	mov r3, ip
	adds r3, #0xb8
	ldrh r0, [r3]
	strh r0, [r1]
	ldrb r0, [r2]
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x76
	adds r1, r1, r0
	mov r0, ip
	adds r0, #0xba
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _08045240 @ =gUnknown_08097AA4
	mov r4, ip
	ldrh r0, [r4, #0x32]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	subs r1, r1, r0
	mov r0, ip
	adds r0, #0xbe
	ldrb r0, [r0]
	lsrs r0, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #0xb
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	bge _08045244
	ldrh r0, [r3]
	adds r0, #0xa
	strh r0, [r3]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	ble _08045254
	b _08045252
	.align 2, 0
_0804523C: .4byte 0x000003FF
_08045240: .4byte gUnknown_08097AA4
_08045244:
	ldrh r0, [r3]
	subs r0, #0xa
	strh r0, [r3]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	bge _08045254
_08045252:
	strh r1, [r3]
_08045254:
	mov r1, ip
	ldrh r0, [r1, #0x32]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	subs r1, r1, r0
	mov r2, ip
	adds r2, #0xbe
	ldrb r0, [r2]
	lsrs r0, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #0xb
	mov r3, ip
	adds r3, #0xba
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	bge _08045290
	ldrh r0, [r3]
	adds r0, #0xa
	strh r0, [r3]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	ble _080452A0
	b _0804529E
_08045290:
	ldrh r0, [r3]
	subs r0, #0xa
	strh r0, [r3]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r0, r1
	bge _080452A0
_0804529E:
	strh r1, [r3]
_080452A0:
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	movs r2, #0xff
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _080452DE
	mov r1, ip
	adds r1, #0xbf
	strb r0, [r1]
	movs r1, #0xbd
	lsls r1, r1, #2
	add r1, ip
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r1, #0x28]
	str r0, [r1, #0x30]
	movs r0, #0xa8
	lsls r0, r0, #2
	strh r0, [r1, #0xa]
	movs r1, #0xc5
	lsls r1, r1, #2
	add r1, ip
	movs r0, #2
	strb r0, [r1]
	ldr r1, _080452F4 @ =0x00000315
	add r1, ip
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
_080452DE:
	mov r0, ip
	adds r0, #0xb6
	ldrb r1, [r0]
	adds r1, #1
	movs r2, #0x1f
	ands r1, r2
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080452F4: .4byte 0x00000315

	thumb_func_start sub_80452F8
sub_80452F8: @ 0x080452F8
	push {r4, lr}
	adds r2, r0, #0
	movs r0, #0xd8
	lsls r0, r0, #1
	adds r3, r2, r0
	ldrb r0, [r2, #0x13]
	cmp r0, #0
	bne _08045362
	movs r0, #0x1e
	strb r0, [r2, #0x12]
	ldr r4, _0804533C @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1c
	beq _0804534C
	ldr r0, _08045340 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0804534C
	ldr r0, _08045344 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r1, r0
	bgt _0804534C
	ldr r0, _08045348 @ =0x0000013B
	strh r0, [r3, #0xa]
	adds r0, #0x95
	adds r1, r2, r0
	b _08045356
	.align 2, 0
_0804533C: .4byte gUnknown_030055B4
_08045340: .4byte gUnknown_030054F0
_08045344: .4byte gLoadedSaveGame
_08045348: .4byte 0x0000013B
_0804534C:
	movs r0, #0xab
	lsls r0, r0, #2
	strh r0, [r3, #0xa]
	adds r1, r3, #0
	adds r1, #0x20
_08045356:
	movs r0, #1
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08045362:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8045368
sub_8045368: @ 0x08045368
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	movs r7, #0xd8
	lsls r7, r7, #1
	add r7, r8
	ldrb r0, [r0, #0x10]
	subs r0, #1
	mov r1, r8
	strb r0, [r1, #0x10]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0804538E
	movs r0, #0x8f
	bl m4aSongNumStart
	b _08045394
_0804538E:
	movs r0, #0xeb
	bl m4aSongNumStart
_08045394:
	movs r0, #0
	movs r1, #0x1e
	mov r2, r8
	strb r1, [r2, #0x13]
	strb r0, [r2, #0x12]
	ldr r2, _080453D0 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	beq _080453E8
	ldr r0, _080453D4 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080453E8
	ldr r0, _080453D8 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r1, r0
	bgt _080453E8
	mov r1, r8
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	bne _080453E0
	ldr r0, _080453DC @ =0x0000013B
	b _080453F4
	.align 2, 0
_080453D0: .4byte gUnknown_030055B4
_080453D4: .4byte gUnknown_030054F0
_080453D8: .4byte gLoadedSaveGame
_080453DC: .4byte 0x0000013B
_080453E0:
	ldr r0, _080453E4 @ =0x0000013B
	b _08045464
	.align 2, 0
_080453E4: .4byte 0x0000013B
_080453E8:
	mov r1, r8
	ldrb r0, [r1, #0x10]
	cmp r0, #0
	bne _08045460
	movs r0, #0xab
	lsls r0, r0, #2
_080453F4:
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	ldr r1, _0804544C @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08045450 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _0804546E
	ldr r0, _08045454 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804546E
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08045458 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08045440
	movs r0, #0xff
_08045440:
	strb r0, [r1]
	ldr r1, _0804545C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _0804546E
	.align 2, 0
_0804544C: .4byte gUnknown_03005450
_08045450: .4byte 0x0000C350
_08045454: .4byte gUnknown_030054CC
_08045458: .4byte gUnknown_03005448
_0804545C: .4byte gUnknown_030054A8
_08045460:
	movs r0, #0xab
	lsls r0, r0, #2
_08045464:
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
_0804546E:
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0804549C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _08045490
	mov r1, r8
	ldrb r0, [r1, #0x10]
	cmp r0, #4
	bne _08045490
	ldr r1, _080454A0 @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_08045490:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804549C: .4byte gUnknown_030055B4
_080454A0: .4byte gUnknown_030054A8

	thumb_func_start sub_80454A4
sub_80454A4: @ 0x080454A4
	push {r4, lr}
	adds r2, r0, #0
	movs r1, #0
	ldrb r0, [r2, #0x13]
	cmp r0, #0
	beq _080454BA
	subs r0, #1
	strb r0, [r2, #0x13]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080454D0
_080454BA:
	ldrb r0, [r2, #0x12]
	cmp r0, #0
	beq _080454CC
	subs r0, #1
	strb r0, [r2, #0x12]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080454CC
	movs r1, #1
_080454CC:
	cmp r1, #0
	beq _0804555E
_080454D0:
	movs r0, #0xd8
	lsls r0, r0, #1
	adds r3, r2, r0
	ldr r4, _08045510 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0x1c
	beq _08045534
	ldr r0, _08045514 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08045534
	ldr r0, _08045518 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r1, [r0, #7]
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r1, r0
	bgt _08045534
	ldrb r0, [r2, #0x10]
	cmp r0, #0
	bne _08045520
	ldr r0, _0804551C @ =0x0000013B
	strh r0, [r3, #0xa]
	movs r4, #0xe8
	lsls r4, r4, #1
	adds r1, r2, r4
	movs r0, #3
	b _08045554
	.align 2, 0
_08045510: .4byte gUnknown_030055B4
_08045514: .4byte gUnknown_030054F0
_08045518: .4byte gLoadedSaveGame
_0804551C: .4byte 0x0000013B
_08045520:
	movs r0, #0
	ldr r1, _08045530 @ =0x0000013B
	strh r1, [r3, #0xa]
	movs r4, #0xe8
	lsls r4, r4, #1
	adds r1, r2, r4
	b _08045554
	.align 2, 0
_08045530: .4byte 0x0000013B
_08045534:
	ldrb r0, [r2, #0x10]
	cmp r0, #0
	bne _08045548
	movs r0, #0xab
	lsls r0, r0, #2
	strh r0, [r3, #0xa]
	adds r1, r3, #0
	adds r1, #0x20
	movs r0, #3
	b _08045554
_08045548:
	movs r0, #0
	movs r1, #0xab
	lsls r1, r1, #2
	strh r1, [r3, #0xa]
	adds r1, r3, #0
	adds r1, #0x20
_08045554:
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804555E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8045564
sub_8045564: @ 0x08045564
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	mov sb, r0
	ldrb r0, [r0, #0x15]
	cmp r0, #0
	beq _0804557A
	b _08045858
_0804557A:
	ldr r1, _08045868 @ =gUnknown_03005590
	ldr r0, [r1]
	movs r1, #7
	bl DivRem
	adds r5, r0, #0
	cmp r5, #0
	bne _0804563E
	ldr r2, _0804586C @ =gUnknown_030053B8
	ldr r0, [r2]
	ldr r3, _08045870 @ =0x00196225
	adds r2, r0, #0
	muls r2, r3, r2
	ldr r4, _08045874 @ =0x3C6EF35F
	adds r2, r2, r4
	ldr r0, _0804586C @ =gUnknown_030053B8
	str r2, [r0]
	movs r0, #0x1f
	ands r0, r2
	adds r6, r0, #0
	adds r6, #0x18
	ldr r3, _08045868 @ =gUnknown_03005590
	ldr r1, [r3]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r7, r0, #2
	ldr r4, _08045878 @ =0x000003FF
	adds r0, r4, #0
	ands r7, r0
	mov r0, sb
	ldr r1, [r0, #4]
	asrs r1, r1, #8
	ldr r3, _0804587C @ =gUnknown_03005960
	mov ip, r3
	ldr r0, [r3]
	subs r1, r1, r0
	str r1, [sp, #0x14]
	ldr r4, _08045880 @ =gUnknown_08097AA4
	mov sl, r4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r7, r3
	lsls r0, r0, #1
	add r0, sl
	movs r4, #0
	ldrsh r0, [r0, r4]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	str r1, [sp, #0x14]
	mov r0, sb
	ldr r1, [r0, #8]
	asrs r1, r1, #8
	mov r3, ip
	ldr r0, [r3, #4]
	subs r1, r1, r0
	str r1, [sp, #0x18]
	lsls r0, r7, #1
	add r0, sl
	movs r4, #0
	ldrsh r0, [r0, r4]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	str r1, [sp, #0x18]
	mov r0, sp
	strh r5, [r0, #0x1c]
	str r0, [sp, #0x20]
	ldr r3, _08045870 @ =0x00196225
	adds r1, r2, #0
	muls r1, r3, r1
	ldr r4, _08045874 @ =0x3C6EF35F
	adds r1, r1, r4
	ldr r0, _0804586C @ =gUnknown_030053B8
	str r1, [r0]
	movs r0, #0x3f
	ands r1, r0
	ldr r0, _08045884 @ =0x00000407
	subs r0, r0, r1
	ldr r1, [sp, #0x20]
	strh r0, [r1, #0xc]
	mov r1, sp
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _08045888 @ =0x06012980
	str r0, [sp]
	ldr r0, _0804588C @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r5, [r0, #0xa]
	str r5, [sp, #4]
	mov r1, sb
	adds r1, #0x14
	bl sub_8039B54
_0804563E:
	ldr r2, _08045868 @ =gUnknown_03005590
	ldr r0, [r2]
	movs r1, #0xa
	bl DivRem
	str r0, [sp, #0x24]
	cmp r0, #0
	bne _0804572E
	ldr r3, _0804586C @ =gUnknown_030053B8
	mov r8, r3
	ldr r0, [r3]
	ldr r4, _08045870 @ =0x00196225
	muls r0, r4, r0
	ldr r1, _08045874 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r3]
	movs r1, #0x1f
	ands r0, r1
	adds r6, r0, #0
	adds r6, #0x18
	ldr r2, _08045868 @ =gUnknown_03005590
	ldr r0, [r2]
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	lsls r7, r1, #2
	ldr r3, _08045878 @ =0x000003FF
	adds r1, r3, #0
	ands r7, r1
	movs r1, #6
	bl DivRem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r4, sb
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	ldr r1, _0804587C @ =gUnknown_03005960
	mov sl, r1
	ldr r1, [r1]
	subs r2, r2, r1
	str r2, [sp, #0x14]
	ldr r3, _08045880 @ =gUnknown_08097AA4
	mov ip, r3
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r7, r4
	lsls r1, r1, #1
	add r1, ip
	movs r3, #0
	ldrsh r1, [r1, r3]
	muls r1, r6, r1
	asrs r1, r1, #0xe
	adds r2, r2, r1
	str r2, [sp, #0x14]
	mov r4, sb
	ldr r2, [r4, #8]
	asrs r2, r2, #8
	mov r3, sl
	ldr r1, [r3, #4]
	subs r2, r2, r1
	str r2, [sp, #0x18]
	lsls r1, r7, #1
	add r1, ip
	movs r4, #0
	ldrsh r1, [r1, r4]
	muls r1, r6, r1
	asrs r1, r1, #0xe
	adds r2, r2, r1
	str r2, [sp, #0x18]
	mov r2, sp
	movs r1, #0x40
	strh r1, [r2, #0x1c]
	mov r1, sp
	str r1, [sp, #0x28]
	mov r2, r8
	ldr r1, [r2]
	ldr r3, _08045870 @ =0x00196225
	muls r1, r3, r1
	ldr r4, _08045874 @ =0x3C6EF35F
	adds r1, r1, r4
	str r1, [r2]
	ldr r2, _08045878 @ =0x000003FF
	ands r1, r2
	ldr r2, [sp, #0x28]
	strh r1, [r2, #0xc]
	mov r2, sp
	movs r1, #0xc0
	lsls r1, r1, #3
	strh r1, [r2, #0xe]
	ldr r2, _08045890 @ =gUnknown_080D79D0
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r0, r1, r2
	ldr r0, [r0]
	lsls r0, r0, #5
	ldr r3, _08045894 @ =0x06010000
	adds r0, r0, r3
	str r0, [sp]
	mov r4, sp
	adds r0, r2, #4
	adds r0, r1, r0
	ldr r0, [r0]
	strh r0, [r4, #8]
	mov r0, sp
	str r0, [sp, #0x30]
	adds r2, #8
	adds r1, r1, r2
	ldr r0, [r1]
	ldr r1, [sp, #0x30]
	strh r0, [r1, #0xa]
	ldr r2, [sp, #0x24]
	str r2, [sp, #4]
	mov r1, sb
	adds r1, #0x14
	mov r0, sp
	bl sub_8039B54
_0804572E:
	ldr r3, _08045868 @ =gUnknown_03005590
	ldr r0, [r3]
	movs r1, #9
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _080457C4
	ldr r4, _0804586C @ =gUnknown_030053B8
	mov sl, r4
	ldr r0, [r4]
	ldr r1, _08045870 @ =0x00196225
	adds r2, r0, #0
	muls r2, r1, r2
	ldr r3, _08045874 @ =0x3C6EF35F
	adds r2, r2, r3
	mov r0, sb
	adds r0, #0xc4
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r4, _0804587C @ =gUnknown_03005960
	mov ip, r4
	ldr r0, [r4]
	subs r1, r1, r0
	movs r4, #0xf
	adds r0, r2, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x14]
	ldr r0, _08045870 @ =0x00196225
	muls r2, r0, r2
	adds r2, r2, r3
	mov r0, sb
	adds r0, #0xc8
	ldr r1, [r0]
	asrs r1, r1, #8
	mov r3, ip
	ldr r0, [r3, #4]
	subs r1, r1, r0
	adds r0, r2, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r4, sp
	ldr r0, _08045870 @ =0x00196225
	adds r1, r2, #0
	muls r1, r0, r1
	ldr r2, _08045874 @ =0x3C6EF35F
	adds r1, r1, r2
	mov r3, sl
	str r1, [r3]
	movs r0, #0x3f
	ands r1, r0
	ldr r0, _08045884 @ =0x00000407
	subs r0, r0, r1
	strh r0, [r4, #0xc]
	mov r1, sp
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _08045888 @ =0x06012980
	str r0, [sp]
	ldr r0, _0804588C @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	mov r1, sb
	adds r1, #0x14
	bl sub_8039B54
_080457C4:
	ldr r4, _08045868 @ =gUnknown_03005590
	ldr r0, [r4]
	movs r1, #0xb
	bl DivRem
	adds r7, r0, #0
	cmp r7, #0
	bne _08045858
	ldr r0, _0804586C @ =gUnknown_030053B8
	mov sl, r0
	ldr r0, [r0]
	ldr r1, _08045870 @ =0x00196225
	adds r2, r0, #0
	muls r2, r1, r2
	ldr r3, _08045874 @ =0x3C6EF35F
	adds r2, r2, r3
	mov r0, sb
	adds r0, #0xcc
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r4, _0804587C @ =gUnknown_03005960
	ldr r0, [r4]
	subs r1, r1, r0
	movs r3, #0xf
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x14]
	ldr r0, _08045870 @ =0x00196225
	muls r2, r0, r2
	ldr r1, _08045874 @ =0x3C6EF35F
	adds r2, r2, r1
	mov r0, sb
	adds r0, #0xd0
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r4, #4]
	subs r1, r1, r0
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r3, sp
	ldr r4, _08045870 @ =0x00196225
	adds r1, r2, #0
	muls r1, r4, r1
	ldr r0, _08045874 @ =0x3C6EF35F
	adds r1, r1, r0
	mov r2, sl
	str r1, [r2]
	movs r0, #0x3f
	ands r1, r0
	ldr r0, _08045884 @ =0x00000407
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	mov r1, sp
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r1, #0xe]
	ldr r0, _08045888 @ =0x06012980
	str r0, [sp]
	ldr r0, _0804588C @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	mov r1, sb
	adds r1, #0x14
	bl sub_8039B54
_08045858:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08045868: .4byte gUnknown_03005590
_0804586C: .4byte gUnknown_030053B8
_08045870: .4byte 0x00196225
_08045874: .4byte 0x3C6EF35F
_08045878: .4byte 0x000003FF
_0804587C: .4byte gUnknown_03005960
_08045880: .4byte gUnknown_08097AA4
_08045884: .4byte 0x00000407
_08045888: .4byte 0x06012980
_0804588C: .4byte 0x0000026B
_08045890: .4byte gUnknown_080D79D0
_08045894: .4byte 0x06010000

	thumb_func_start sub_8045898
sub_8045898: @ 0x08045898
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x15]
	cmp r0, #0
	bne _0804597C
	ldr r0, _080458DC @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsrs r7, r0, #1
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	beq _080458EC
	movs r2, #0
	ldr r0, _080458E0 @ =gFlags
	mov ip, r0
	ldr r6, _080458E4 @ =gObjPalette
	ldr r5, _080458E8 @ =gUnknown_080D7FF0
	lsls r3, r7, #5
_080458BE:
	adds r1, r2, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r6
	lsls r0, r2, #1
	adds r0, r0, r3
	adds r0, r0, r5
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _080458BE
	b _08045910
	.align 2, 0
_080458DC: .4byte gUnknown_03005590
_080458E0: .4byte gFlags
_080458E4: .4byte gObjPalette
_080458E8: .4byte gUnknown_080D7FF0
_080458EC:
	movs r2, #0
	ldr r1, _08045940 @ =gFlags
	mov ip, r1
	ldr r5, _08045944 @ =gObjPalette
	ldr r3, _08045948 @ =gUnknown_080D8010
_080458F6:
	adds r1, r2, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _080458F6
_08045910:
	ldrb r0, [r4, #0x1f]
	cmp r0, #0
	beq _08045950
	subs r0, #1
	strb r0, [r4, #0x1f]
	movs r2, #0
	ldr r5, _08045944 @ =gObjPalette
	ldr r4, _0804594C @ =gUnknown_080D7FF0
	lsls r3, r7, #5
_08045922:
	adds r1, r2, #0
	adds r1, #0x90
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r2, #1
	adds r0, r0, r3
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _08045922
	b _08045970
	.align 2, 0
_08045940: .4byte gFlags
_08045944: .4byte gObjPalette
_08045948: .4byte gUnknown_080D8010
_0804594C: .4byte gUnknown_080D7FF0
_08045950:
	movs r2, #0
	ldr r4, _08045984 @ =gObjPalette
	ldr r3, _08045988 @ =gUnknown_080D8010
_08045956:
	adds r1, r2, #0
	adds r1, #0x90
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _08045956
_08045970:
	mov r1, ip
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, ip
	str r0, [r1]
_0804597C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08045984: .4byte gObjPalette
_08045988: .4byte gUnknown_080D8010

	thumb_func_start sub_804598C
sub_804598C: @ 0x0804598C
	push {lr}
	ldr r0, _0804599C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_0804599C: .4byte gCurTask

	thumb_func_start sub_80459A0
sub_80459A0: @ 0x080459A0
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0x11]
	cmp r0, #0
	bne _080459C2
	ldrh r2, [r1, #0x30]
	ldrh r0, [r1, #0x16]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r3, _080459C8 @ =0x000003FF
	ands r0, r3
	cmp r2, r0
	beq _080459C2
	adds r0, r2, #1
	ands r0, r3
	strh r0, [r1, #0x30]
_080459C2:
	pop {r0}
	bx r0
	.align 2, 0
_080459C8: .4byte 0x000003FF

	thumb_func_start sub_80459CC
sub_80459CC: @ 0x080459CC
	push {lr}
	ldrh r0, [r0, #6]
	ldr r1, _080459E4 @ =gUnknown_030004AC
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080459E8 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_080459E4: .4byte gUnknown_030004AC
_080459E8: .4byte gUnknown_03005B4C

	thumb_func_start sub_80459EC
sub_80459EC: @ 0x080459EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	ldr r4, _08045A70 @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r4, #0x20]
	bl sub_8039ED4
	ldr r1, _08045A74 @ =gUnknown_030053B8
	ldr r0, _08045A78 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _08045A7C @ =gUnknown_03005AF0
	ldr r0, [r1, #0x1c]
	ldr r3, _08045A80 @ =0xFFFFCFFF
	ands r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r1, _08045A84 @ =gUnknown_03005AA0
	ldr r0, [r1, #0x1c]
	ands r0, r3
	orrs r0, r2
	str r0, [r1, #0x1c]
	movs r0, #0
	str r0, [r4, #0x3c]
	ldr r0, [r4, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r4, #0x20]
	ldr r0, _08045A88 @ =sub_80477F0
	movs r1, #0xf3
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _08045A8C @ =sub_80479F0
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _08045A90 @ =gUnknown_03005B4C
	str r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r0, _08045A94 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _08045AA0
	ldr r0, _08045A98 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _08045AA0
	ldr r0, _08045A9C @ =IWRAM_START + 0x28
	adds r1, r1, r0
	movs r0, #6
	b _08045AA6
	.align 2, 0
_08045A70: .4byte gUnknown_030059E0
_08045A74: .4byte gUnknown_030053B8
_08045A78: .4byte gUnknown_03005590
_08045A7C: .4byte gUnknown_03005AF0
_08045A80: .4byte 0xFFFFCFFF
_08045A84: .4byte gUnknown_03005AA0
_08045A88: .4byte sub_80477F0
_08045A8C: .4byte sub_80479F0
_08045A90: .4byte gUnknown_03005B4C
_08045A94: .4byte gUnknown_030054EC
_08045A98: .4byte gUnknown_030054CC
_08045A9C: .4byte IWRAM_START + 0x28
_08045AA0:
	adds r1, r3, #0
	adds r1, #0x28
	movs r0, #8
_08045AA6:
	strb r0, [r1]
	ldr r2, _08045AD0 @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	bne _08045AD8
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r1, [r0]
	lsrs r1, r1, #1
	strb r1, [r0]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0x1c
	bne _08045AD8
	ldr r0, _08045AD4 @ =0x00719400
	str r0, [r3, #4]
	movs r0, #0xc8
	lsls r0, r0, #7
	b _08045AE2
	.align 2, 0
_08045AD0: .4byte gUnknown_030055B4
_08045AD4: .4byte 0x00719400
_08045AD8:
	movs r0, #0xe1
	lsls r0, r0, #0xa
	str r0, [r3, #4]
	movs r0, #0x96
	lsls r0, r0, #8
_08045AE2:
	str r0, [r3, #8]
	movs r2, #0
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r3, #0xc]
	strh r1, [r3, #0xe]
	adds r0, r3, #0
	adds r0, #0x29
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	str r1, [r3, #0x14]
	str r1, [r3, #0x18]
	subs r0, #3
	strb r2, [r0]
	strh r1, [r3, #0x1e]
	subs r0, #1
	strb r2, [r0]
	strh r1, [r3, #0x20]
	subs r0, #2
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	str r1, [r3, #0x2c]
	str r1, [r3, #0x30]
	str r1, [r3, #0x34]
	str r1, [r3, #0x38]
	movs r0, #0x80
	str r0, [r3]
	movs r0, #0xc0
	lsls r0, r0, #4
	str r0, [r3, #0x10]
	adds r1, r3, #0
	adds r1, #0x2b
	movs r0, #0xe0
	strb r0, [r1]
	adds r0, #0xe2
	strh r0, [r3, #0x22]
	movs r5, #0
	movs r1, #0xef
	lsls r1, r1, #2
	adds r6, r3, r1
	ldr r0, _08045E34 @ =0x000003BD
	adds r0, r0, r3
	mov r8, r0
	adds r1, #2
	adds r1, r1, r3
	mov sl, r1
	ldr r0, _08045E38 @ =0x000003C1
	adds r0, r0, r3
	mov sb, r0
	movs r1, #0xe3
	lsls r1, r1, #2
	adds r1, r3, r1
	str r1, [sp, #0x2c]
	ldr r0, _08045E3C @ =0x0000038D
	adds r0, r3, r0
	str r0, [sp, #0x30]
	ldr r1, _08045E40 @ =0x0000038E
	adds r1, r3, r1
	str r1, [sp, #0x34]
	ldr r0, _08045E44 @ =0x00000391
	adds r0, r3, r0
	str r0, [sp, #0x38]
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r1, r3, r1
	str r1, [sp, #0x1c]
	ldr r0, _08045E48 @ =0x000001E5
	adds r0, r3, r0
	str r0, [sp, #0x20]
	movs r1, #0xf3
	lsls r1, r1, #1
	adds r1, r3, r1
	str r1, [sp, #0x24]
	ldr r0, _08045E4C @ =0x000001E9
	adds r0, r3, r0
	str r0, [sp, #0x28]
	movs r1, #0x87
	lsls r1, r1, #2
	adds r1, r3, r1
	str r1, [sp, #0x3c]
	ldr r0, _08045E50 @ =0x0000021D
	adds r0, r3, r0
	str r0, [sp, #0x40]
	ldr r1, _08045E54 @ =0x0000021E
	adds r1, r3, r1
	str r1, [sp, #0x44]
	ldr r0, _08045E58 @ =0x00000221
	adds r0, r3, r0
	str r0, [sp, #0x48]
	movs r1, #0x93
	lsls r1, r1, #2
	adds r1, r3, r1
	str r1, [sp, #0xc]
	ldr r0, _08045E5C @ =0x0000024D
	adds r0, r3, r0
	str r0, [sp, #0x10]
	ldr r1, _08045E60 @ =0x0000024E
	adds r1, r3, r1
	str r1, [sp, #0x14]
	ldr r0, _08045E64 @ =0x00000251
	adds r0, r3, r0
	str r0, [sp, #0x18]
	movs r1, #0
_08045BB6:
	lsls r0, r5, #4
	adds r0, #0x3c
	adds r0, r3, r0
	strb r1, [r0]
	str r1, [r0, #4]
	str r1, [r0, #8]
	strh r1, [r0, #0xc]
	strh r1, [r0, #0xe]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08045BB6
	movs r1, #0xe7
	lsls r1, r1, #2
	adds r7, r3, r1
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08045E68 @ =0x000002B1
	strh r0, [r7, #0xa]
	strb r5, [r6]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0xff
	mov r1, r8
	strb r0, [r1]
	movs r1, #0x10
	mov r0, sl
	strb r1, [r0]
	mov r0, sb
	strb r5, [r0]
	movs r1, #1
	rsbs r1, r1, #0
	mov r8, r1
	str r1, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #5
	str r6, [r7, #0x10]
	ldr r3, [sp, #0x4c]
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r7, r3, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xac
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	ldr r1, [sp, #0x2c]
	strb r5, [r1]
	subs r0, #0xf0
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x30]
	strb r0, [r1]
	movs r1, #0x10
	ldr r0, [sp, #0x34]
	strb r1, [r0]
	ldr r0, [sp, #0x38]
	strb r5, [r0]
	mov r1, r8
	str r1, [r7, #0x28]
	str r6, [r7, #0x10]
	ldr r3, [sp, #0x4c]
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r7, r3, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x2a
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08045E6C @ =0x000002AF
	strh r0, [r7, #0xa]
	movs r0, #1
	ldr r1, [sp, #0x1c]
	strb r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x20]
	strb r0, [r1]
	movs r1, #0x10
	ldr r0, [sp, #0x24]
	strb r1, [r0]
	ldr r0, [sp, #0x28]
	strb r5, [r0]
	mov r1, r8
	str r1, [r7, #0x28]
	str r6, [r7, #0x10]
	ldr r3, [sp, #0x4c]
	movs r0, #0xfe
	lsls r0, r0, #1
	adds r7, r3, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #8
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08045E70 @ =0x000002B5
	strh r0, [r7, #0xa]
	ldr r1, [sp, #0x3c]
	strb r5, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x40]
	strb r0, [r1]
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r1, #0x10
	ldr r0, [sp, #0x44]
	strb r1, [r0]
	ldr r0, [sp, #0x48]
	strb r5, [r0]
	mov r1, r8
	str r1, [r7, #0x28]
	str r6, [r7, #0x10]
	ldr r3, [sp, #0x4c]
	movs r0, #0x8b
	lsls r0, r0, #2
	adds r7, r3, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xad
	lsls r0, r0, #2
	strh r0, [r7, #0xa]
	ldr r1, [sp, #0xc]
	strb r5, [r1]
	movs r0, #0xb0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	movs r1, #0x10
	ldr r0, [sp, #0x14]
	strb r1, [r0]
	ldr r0, [sp, #0x18]
	strb r5, [r0]
	mov r1, r8
	str r1, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r5, #0
	movs r0, #0
	mov r8, r0
	movs r6, #0
	ldr r3, [sp, #0x4c]
_08045D34:
	lsls r0, r5, #4
	adds r0, r0, r5
	lsls r0, r0, #2
	movs r1, #0x97
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r7, r3, r0
	strh r6, [r7, #0x16]
	strh r6, [r7, #0x18]
	ldr r0, _08045E74 @ =gUnknown_080D8034
	lsls r4, r5, #3
	adds r4, r4, r0
	ldr r0, [r4]
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r7, #4]
	lsls r1, r5, #2
	add r1, sp
	adds r1, #4
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	mov r1, r8
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r3, [sp, #0x4c]
	cmp r5, #1
	bls _08045D34
	cmp r5, #3
	bhi _08045E24
	movs r6, #0
	movs r4, #0
_08045DB2:
	lsls r0, r5, #4
	adds r0, r0, r5
	lsls r0, r0, #2
	movs r1, #0x97
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r7, r3, r0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r1, #1
	ands r1, r5
	lsls r0, r1, #2
	add r0, sp
	adds r0, #4
	ldr r0, [r0]
	str r0, [r7, #4]
	ldr r0, _08045E74 @ =gUnknown_080D8034
	lsls r1, r1, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	strb r6, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r7, #0x10]
	adds r0, r7, #0
	str r3, [sp, #0x4c]
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r3, [sp, #0x4c]
	cmp r5, #3
	bls _08045DB2
_08045E24:
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08045E34: .4byte 0x000003BD
_08045E38: .4byte 0x000003C1
_08045E3C: .4byte 0x0000038D
_08045E40: .4byte 0x0000038E
_08045E44: .4byte 0x00000391
_08045E48: .4byte 0x000001E5
_08045E4C: .4byte 0x000001E9
_08045E50: .4byte 0x0000021D
_08045E54: .4byte 0x0000021E
_08045E58: .4byte 0x00000221
_08045E5C: .4byte 0x0000024D
_08045E60: .4byte 0x0000024E
_08045E64: .4byte 0x00000251
_08045E68: .4byte 0x000002B1
_08045E6C: .4byte 0x000002AF
_08045E70: .4byte 0x000002B5
_08045E74: .4byte gUnknown_080D8034

	thumb_func_start sub_8045E78
sub_8045E78: @ 0x08045E78
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r2, [r4, #0x22]
	subs r1, r2, #1
	strh r1, [r4, #0x22]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x69
	bhi _08045F78
	adds r0, r2, #0
	subs r0, #0x5c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xe
	bhi _08045ED8
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r5, r4, r0
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	ldr r2, _08045ED0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r4, #0x22]
	cmp r0, #0x2d
	bne _08045EC0
	ldr r2, _08045ED4 @ =0x0000038D
	adds r1, r4, r2
	movs r0, #0xff
	strb r0, [r1]
_08045EC0:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	b _08045F78
	.align 2, 0
_08045ED0: .4byte gUnknown_03005960
_08045ED4: .4byte 0x0000038D
_08045ED8:
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _08045F36
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #4
	bhi _08045F30
	movs r0, #0xa0
	lsls r0, r0, #1
	b _08045F34
_08045EEE:
	ldr r0, [r4, #4]
	str r0, [r3, #4]
	ldr r0, [r4, #8]
	movs r4, #0xe0
	lsls r4, r4, #4
	adds r0, r0, r4
	str r0, [r3, #8]
	ldr r2, _08045F28 @ =gUnknown_08097AA4
	ldr r1, _08045F2C @ =0x000003FF
	ands r1, r5
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r1, r4
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	asrs r0, r0, #5
	strh r0, [r3, #0xc]
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r2, #0
	ldrsh r0, [r1, r2]
	asrs r0, r0, #5
	strh r0, [r3, #0xe]
	movs r0, #0xff
	strb r0, [r3]
	b _08045F78
	.align 2, 0
_08045F28: .4byte gUnknown_08097AA4
_08045F2C: .4byte 0x000003FF
_08045F30:
	movs r0, #0xe1
	lsls r0, r0, #1
_08045F34:
	strh r0, [r4, #0x22]
_08045F36:
	ldrh r0, [r4, #0x22]
	movs r1, #0x1e
	bl DivRem
	cmp r0, #0
	bne _08045F78
	ldr r2, _08045F80 @ =gUnknown_030059E0
	ldr r0, [r2, #0xc]
	ldr r1, [r4, #8]
	subs r0, r0, r1
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [r2, #8]
	ldr r2, [r4, #4]
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r1, #0
_08045F62:
	lsls r0, r1, #4
	adds r0, #0x3c
	adds r3, r4, r0
	ldrb r0, [r3]
	cmp r0, #0
	beq _08045EEE
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #2
	bls _08045F62
_08045F78:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08045F80: .4byte gUnknown_030059E0

	thumb_func_start sub_8045F84
sub_8045F84: @ 0x08045F84
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	movs r0, #0xe7
	lsls r0, r0, #2
	adds r5, r7, r0
	movs r1, #0
	mov r8, r1
	movs r6, #0
	ldr r2, _08045FC4 @ =gUnknown_03005960
	mov sb, r2
_08045F9E:
	lsls r0, r6, #4
	adds r0, #0x3c
	adds r4, r7, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _0804602A
	subs r0, #1
	strb r0, [r4]
	ldr r0, _08045FC8 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08045FCC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #4]
	b _08045FD8
	.align 2, 0
_08045FC4: .4byte gUnknown_03005960
_08045FC8: .4byte gUnknown_030059E0
_08045FCC:
	ldr r0, [r4, #4]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r2, #0xc
	ldrsh r1, [r4, r2]
_08045FD8:
	adds r0, r0, r1
	str r0, [r4, #4]
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	mov r1, r8
	cmp r1, #0
	bne _08045FF6
	adds r0, r5, #0
	bl sub_8004558
	movs r2, #1
	mov r8, r2
_08045FF6:
	adds r0, r7, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804600E
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r2, [r4, #8]
	asrs r2, r2, #8
	adds r0, r5, #0
	bl sub_800C84C
_0804600E:
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	mov r2, sb
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
_0804602A:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _08045F9E
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8046040
sub_8046040: @ 0x08046040
	push {r4, r5, r6, lr}
	ldr r6, _080460C4 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_80478D4
	adds r0, r4, #0
	bl sub_804683C
	adds r0, r4, #0
	bl sub_8046C28
	adds r0, r4, #0
	bl sub_8047700
	adds r0, r4, #0
	bl sub_8045E78
	adds r0, r4, #0
	bl sub_8045F84
	adds r0, r4, #0
	bl sub_80475D0
	adds r0, r4, #0
	bl sub_8046328
	adds r0, r4, #0
	bl sub_804766C
	ldr r1, _080460C8 @ =IWRAM_START + 0x28
	adds r0, r5, r1
	ldrb r1, [r0]
	cmp r1, #0
	bne _080460BC
	ldr r2, _080460CC @ =IWRAM_START + 0x2B
	adds r0, r5, r2
	strb r1, [r0]
	str r1, [r4, #0x10]
	movs r0, #0x80
	str r0, [r4]
	ldr r2, _080460D0 @ =IWRAM_START + 0x1C0
	adds r0, r5, r2
	strb r1, [r0]
	ldr r2, _080460D4 @ =gUnknown_030059E0
	str r1, [r2, #0x3c]
	ldr r0, [r2, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_802A018
	ldr r1, [r6]
	ldr r0, _080460D8 @ =sub_80460DC
	str r0, [r1, #8]
_080460BC:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080460C4: .4byte gCurTask
_080460C8: .4byte IWRAM_START + 0x28
_080460CC: .4byte IWRAM_START + 0x2B
_080460D0: .4byte IWRAM_START + 0x1C0
_080460D4: .4byte gUnknown_030059E0
_080460D8: .4byte sub_80460DC

	thumb_func_start sub_80460DC
sub_80460DC: @ 0x080460DC
	push {r4, r5, r6, lr}
	ldr r0, _08046110 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r0, _08046114 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0x15
	bl DivRem
	cmp r0, #0
	bne _080460FE
	movs r0, #0x90
	bl m4aSongNumStart
_080460FE:
	ldr r0, [r5]
	cmp r0, #0x3f
	bls _0804611C
	subs r0, #0x40
	lsls r2, r0, #8
	ldr r1, _08046118 @ =0x000003FF
	adds r0, r1, #0
	ands r2, r0
	b _0804611E
	.align 2, 0
_08046110: .4byte gCurTask
_08046114: .4byte gUnknown_03005590
_08046118: .4byte 0x000003FF
_0804611C:
	movs r2, #0
_0804611E:
	ldr r1, _08046188 @ =gUnknown_08097AA4
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1c
	adds r6, r5, #0
	adds r6, #0x2b
	movs r4, #0
	strb r0, [r6]
	adds r0, r5, #0
	bl sub_80478D4
	adds r0, r5, #0
	bl sub_8045F84
	adds r0, r5, #0
	bl sub_80475D0
	adds r0, r5, #0
	movs r1, #0
	bl sub_804655C
	adds r0, r5, #0
	bl sub_804766C
	adds r0, r5, #0
	bl sub_8047060
	ldr r2, _0804618C @ =gUnknown_030059E0
	str r4, [r2, #0x3c]
	ldr r0, [r2, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #0x20]
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
	cmp r0, #0
	bne _08046180
	strb r0, [r6]
	str r0, [r5, #0x10]
	movs r0, #0x80
	str r0, [r5]
	ldr r0, _08046190 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08046194 @ =sub_8046198
	str r0, [r1, #8]
_08046180:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08046188: .4byte gUnknown_08097AA4
_0804618C: .4byte gUnknown_030059E0
_08046190: .4byte gCurTask
_08046194: .4byte sub_8046198

	thumb_func_start sub_8046198
sub_8046198: @ 0x08046198
	push {r4, r5, r6, lr}
	ldr r6, _08046228 @ =gCurTask
	ldr r0, [r6]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r0, _0804622C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0x11
	bl DivRem
	cmp r0, #0
	bne _080461BA
	movs r0, #0x90
	bl m4aSongNumStart
_080461BA:
	ldr r0, [r4]
	lsls r0, r0, #8
	ldr r2, _08046230 @ =0x000003FF
	adds r1, r2, #0
	ands r0, r1
	ldr r1, _08046234 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1c
	ldr r2, _08046238 @ =IWRAM_START + 0x2B
	adds r1, r5, r2
	movs r2, #0
	strb r0, [r1]
	str r2, [r4, #0x10]
	adds r0, r4, #0
	bl sub_80478D4
	adds r0, r4, #0
	bl sub_8045F84
	adds r0, r4, #0
	bl sub_80475D0
	adds r0, r4, #0
	movs r1, #1
	bl sub_804655C
	adds r0, r4, #0
	bl sub_804766C
	adds r0, r4, #0
	bl sub_8046F00
	adds r0, r4, #0
	bl sub_8047060
	ldr r0, [r4]
	subs r2, r0, #1
	str r2, [r4]
	cmp r2, #0
	bne _08046222
	ldr r1, _0804623C @ =IWRAM_START + 0x1C1
	adds r0, r5, r1
	strb r2, [r0]
	adds r0, r4, #0
	bl sub_804732C
	ldr r1, [r6]
	ldr r0, _08046240 @ =sub_8046244
	str r0, [r1, #8]
_08046222:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08046228: .4byte gCurTask
_0804622C: .4byte gUnknown_03005590
_08046230: .4byte 0x000003FF
_08046234: .4byte gUnknown_08097AA4
_08046238: .4byte IWRAM_START + 0x2B
_0804623C: .4byte IWRAM_START + 0x1C1
_08046240: .4byte sub_8046244

	thumb_func_start sub_8046244
sub_8046244: @ 0x08046244
	push {r4, r5, r6, r7, lr}
	ldr r0, _0804630C @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, #0x6c
	adds r6, r5, r0
	adds r0, r4, #0
	bl sub_804797C
	adds r0, r4, #0
	bl sub_80475D0
	adds r0, r4, #0
	bl sub_8046E90
	adds r0, r4, #0
	bl sub_804766C
	adds r0, r4, #0
	bl sub_8047138
	ldr r0, _08046310 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _08046288
	movs r0, #0x90
	bl m4aSongNumStart
_08046288:
	ldr r1, _08046314 @ =IWRAM_START + 0x1C1
	adds r7, r5, r1
	ldrb r0, [r7]
	cmp r0, #0
	bne _080462D4
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r3, _08046318 @ =gUnknown_03005960
	ldr r1, [r3]
	subs r0, r0, r1
	cmp r0, #0x31
	bgt _080462D4
	ldr r1, _0804631C @ =IWRAM_START + 0x20C
	adds r0, r5, r1
	ldr r2, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r2, r0
	movs r0, #1
	strb r0, [r7]
	ldr r0, [r6]
	asrs r0, r0, #8
	ldr r1, [r3]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r6, #4]
	asrs r1, r1, #8
	ldr r3, [r3, #4]
	subs r1, r1, r3
	subs r1, #0xf
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8039FA4
_080462D4:
	ldr r0, [r4, #0x6c]
	asrs r0, r0, #8
	ldr r1, _08046318 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	movs r1, #0xc8
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08046304
	ldr r1, _08046320 @ =0x000001C1
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08046304
	movs r0, #0x28
	rsbs r0, r0, #0
	movs r1, #0x96
	movs r2, #5
	bl sub_802EF68
	ldr r0, _0804630C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08046324 @ =sub_8047868
	str r0, [r1, #8]
_08046304:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804630C: .4byte gCurTask
_08046310: .4byte gUnknown_03005590
_08046314: .4byte IWRAM_START + 0x1C1
_08046318: .4byte gUnknown_03005960
_0804631C: .4byte IWRAM_START + 0x20C
_08046320: .4byte 0x000001C1
_08046324: .4byte sub_8047868

	thumb_func_start sub_8046328
sub_8046328: @ 0x08046328
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r4, _0804651C @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r5, r7, r1
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r2, #0
	mov r8, r2
	movs r3, #0x8b
	lsls r3, r3, #2
	adds r5, r7, r3
	movs r0, #0x2b
	adds r0, r0, r7
	mov sb, r0
	ldr r1, _08046520 @ =gUnknown_08097AA4
	mov sl, r1
_08046398:
	mov r2, r8
	lsls r1, r2, #0x10
	ldr r0, [r7, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r4, r0, #0x16
	movs r6, #0
_080463A6:
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r3, _0804651C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	ldr r0, _08046524 @ =gUnknown_080D8030
	adds r0, r6, r0
	ldrb r2, [r0]
	mov r3, sb
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r6, r0
	adds r0, r4, r0
	ldr r3, _08046528 @ =0x000003FF
	ands r0, r3
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	ldr r3, _0804651C @ =gUnknown_03005960
	ldr r0, [r3, #4]
	subs r1, r1, r0
	mov r3, sb
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r6, r0
	adds r0, r4, r0
	ldr r3, _08046528 @ =0x000003FF
	ands r0, r3
	lsls r0, r0, #1
	add r0, sl
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _080463A6
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08046398
	movs r0, #0
	mov r8, r0
_08046424:
	mov r1, r8
	lsls r0, r1, #4
	add r0, r8
	lsls r0, r0, #2
	movs r2, #0x97
	lsls r2, r2, #2
	adds r0, r0, r2
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_8004558
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08046424
	movs r3, #0
	mov r8, r3
	ldr r0, _08046524 @ =gUnknown_080D8030
	ldrb r6, [r0, #3]
	movs r0, #0x80
	lsls r0, r0, #1
	mov sl, r0
_08046456:
	mov r2, r8
	lsls r1, r2, #0x10
	ldr r0, [r7, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r4, r0, #0x16
	mov r3, sb
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r4, r4, r0
	ldr r1, _08046528 @ =0x000003FF
	adds r0, r1, #0
	ands r4, r0
	lsls r0, r2, #4
	add r0, r8
	lsls r0, r0, #2
	movs r2, #0x97
	lsls r2, r2, #2
	adds r0, r0, r2
	adds r5, r7, r0
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r3, _0804651C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	mov r2, sl
	adds r0, r4, r2
	lsls r0, r0, #1
	ldr r3, _08046520 @ =gUnknown_08097AA4
	adds r0, r0, r3
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	ldr r3, _0804651C @ =gUnknown_03005960
	ldr r0, [r3, #4]
	subs r1, r1, r0
	lsls r0, r4, #1
	ldr r2, _08046520 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x18]
	ldrh r0, [r7, #0x1e]
	cmp r0, #0
	beq _08046530
	adds r0, r7, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _08046530
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _08046530
	adds r0, r7, #0
	adds r0, #0x25
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08046530
	adds r1, r5, #0
	adds r1, #0x38
	ldr r0, [r7, #0x18]
	lsrs r0, r0, #8
	strh r0, [r5, #0x38]
	mov r2, sl
	strh r2, [r1, #2]
	strh r2, [r1, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r1, #8]
	ldr r3, _0804652C @ =gUnknown_030054B8
	ldrb r0, [r3]
	adds r2, r0, #1
	strb r2, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x81
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004860
	b _08046536
	.align 2, 0
_0804651C: .4byte gUnknown_03005960
_08046520: .4byte gUnknown_08097AA4
_08046524: .4byte gUnknown_080D8030
_08046528: .4byte 0x000003FF
_0804652C: .4byte gUnknown_030054B8
_08046530:
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
_08046536:
	adds r0, r5, #0
	bl sub_80051E8
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08046456
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804655C
sub_804655C: @ 0x0804655C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r4, _080465DC @ =gUnknown_03005960
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r5, r7, r1
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r4]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r4, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldr r1, [r7]
	cmp r1, #0x2f
	bhi _080465E0
	cmp r6, #0
	beq _080465E0
	movs r0, #0x30
	subs r0, r0, r1
	movs r1, #0x10
	bl Div
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	b _080465E4
	.align 2, 0
_080465DC: .4byte gUnknown_03005960
_080465E0:
	movs r2, #0
	str r2, [sp]
_080465E4:
	movs r0, #0
	mov r8, r0
	adds r1, r7, #0
	adds r1, #0x2b
	str r1, [sp, #4]
	movs r2, #0x8b
	lsls r2, r2, #2
	adds r5, r7, r2
_080465F4:
	mov r0, r8
	lsls r1, r0, #0x10
	ldr r0, [r7, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r6, r0, #0x16
	ldr r4, [sp]
	cmp r4, #2
	bhi _080466EE
	ldr r1, _08046668 @ =gUnknown_08097AA4
	mov sl, r1
	ldr r3, [sp, #4]
	ldr r2, _0804666C @ =0x000003FF
	mov sb, r2
_08046610:
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _08046678
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r2, _08046670 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	mov ip, r1
	ldr r0, _08046674 @ =gUnknown_080D8030
	adds r0, r4, r0
	ldrb r2, [r0]
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r4, r0
	adds r0, r6, r0
	mov r1, sb
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	add r0, ip
	strh r0, [r5, #0x16]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _08046670 @ =gUnknown_03005960
	ldr r0, [r1, #4]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r4, r0
	adds r0, r6, r0
	b _080466C4
	.align 2, 0
_08046668: .4byte gUnknown_08097AA4
_0804666C: .4byte 0x000003FF
_08046670: .4byte gUnknown_03005960
_08046674: .4byte gUnknown_080D8030
_08046678:
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r2, _080467FC @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	mov ip, r1
	ldr r0, _08046800 @ =gUnknown_080D8030
	adds r0, r4, r0
	ldrb r2, [r0]
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r4, r0
	subs r0, r6, r0
	mov r1, sb
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	add r0, ip
	strh r0, [r5, #0x16]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	mov ip, r1
	ldr r1, _080467FC @ =gUnknown_03005960
	ldr r0, [r1, #4]
	mov r1, ip
	subs r1, r1, r0
	mov ip, r1
	movs r0, #0
	ldrsb r0, [r3, r0]
	muls r0, r4, r0
	subs r0, r6, r0
_080466C4:
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #1
	add r0, sl
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	mov r2, ip
	adds r1, r2, r0
	strh r1, [r5, #0x18]
	adds r0, r5, #0
	str r3, [sp, #8]
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r3, [sp, #8]
	cmp r4, #2
	bls _08046610
_080466EE:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bhi _080466FE
	b _080465F4
_080466FE:
	movs r0, #0
	mov r8, r0
_08046702:
	mov r1, r8
	lsls r0, r1, #4
	add r0, r8
	lsls r0, r0, #2
	movs r2, #0x97
	lsls r2, r2, #2
	adds r0, r0, r2
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_8004558
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08046702
	movs r0, #0
	mov r8, r0
	ldr r0, _08046800 @ =gUnknown_080D8030
	ldrb r4, [r0, #3]
	movs r1, #0x80
	lsls r1, r1, #1
	mov sb, r1
	ldr r2, _08046804 @ =gUnknown_08097AA4
	mov sl, r2
_08046738:
	mov r0, r8
	lsls r1, r0, #0x10
	ldr r0, [r7, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r6, r0, #0x16
	ldr r2, [sp, #4]
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r6, r6, r0
	ldr r1, _08046808 @ =0x000003FF
	adds r0, r1, #0
	ands r6, r0
	mov r2, r8
	lsls r0, r2, #4
	add r0, r8
	lsls r0, r0, #2
	movs r1, #0x97
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r5, r7, r0
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r2, _080467FC @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	mov r2, sb
	adds r0, r6, r2
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r4, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	ldr r2, _080467FC @ =gUnknown_03005960
	ldr r0, [r2, #4]
	subs r1, r1, r0
	lsls r0, r6, #1
	add r0, sl
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r4, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	strh r1, [r5, #0x18]
	ldrh r0, [r7, #0x1e]
	cmp r0, #0
	beq _08046810
	adds r0, r7, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _08046810
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _08046810
	adds r0, r7, #0
	adds r0, #0x25
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08046810
	adds r1, r5, #0
	adds r1, #0x38
	ldr r0, [r7, #0x18]
	lsrs r0, r0, #8
	strh r0, [r5, #0x38]
	mov r2, sb
	strh r2, [r1, #2]
	strh r2, [r1, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r1, #8]
	ldr r3, _0804680C @ =gUnknown_030054B8
	ldrb r0, [r3]
	adds r2, r0, #1
	strb r2, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x81
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004860
	b _08046816
	.align 2, 0
_080467FC: .4byte gUnknown_03005960
_08046800: .4byte gUnknown_080D8030
_08046804: .4byte gUnknown_08097AA4
_08046808: .4byte 0x000003FF
_0804680C: .4byte gUnknown_030054B8
_08046810:
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
_08046816:
	adds r0, r5, #0
	bl sub_80051E8
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bls _08046738
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804683C
sub_804683C: @ 0x0804683C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldrh r0, [r7, #0x1e]
	cmp r0, #0
	bne _0804684E
	b _08046A84
_0804684E:
	adds r1, r7, #0
	adds r1, #0x24
	ldrb r0, [r1]
	cmp r0, #0
	bne _0804685A
	b _08046990
_0804685A:
	subs r0, #1
	strb r0, [r1]
	movs r5, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08046868
	b _08046A18
_08046868:
	adds r0, r7, #0
	adds r0, #0x25
	ldrb r4, [r0]
	cmp r4, #1
	beq _080468C8
	cmp r4, #1
	bgt _0804687C
	cmp r4, #0
	beq _08046882
	b _08046A18
_0804687C:
	cmp r4, #2
	beq _08046904
	b _08046A18
_08046882:
	movs r0, #0xff
	bl m4aSongNumStart
	movs r0, #0x97
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r3, _080468BC @ =0x000002B2
	strh r3, [r1, #0xa]
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #3
	strb r2, [r0]
	ldr r0, _080468C0 @ =0x0000027D
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	movs r0, #0xb9
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r3, [r1, #0xa]
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
	ldr r0, _080468C4 @ =0x00000305
	b _08046972
	.align 2, 0
_080468BC: .4byte 0x000002B2
_080468C0: .4byte 0x0000027D
_080468C4: .4byte 0x00000305
_080468C8:
	movs r0, #0xff
	bl m4aSongNumStart
	movs r0, #0xa8
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r2, _080468FC @ =0x000002B3
	strh r2, [r1, #0xa]
	movs r1, #0xb0
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	ldr r0, _08046900 @ =0x000002C1
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	movs r0, #0xca
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r2, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	b _08046970
	.align 2, 0
_080468FC: .4byte 0x000002B3
_08046900: .4byte 0x000002C1
_08046904:
	movs r0, #0xff
	bl m4aSongNumStart
	movs r0, #0x97
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r3, _0804697C @ =0x000002B2
	strh r3, [r1, #0xa]
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #3
	strb r2, [r0]
	ldr r0, _08046980 @ =0x0000027D
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	movs r0, #0xb9
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r3, [r1, #0xa]
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
	ldr r0, _08046984 @ =0x00000305
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	movs r0, #0xa8
	lsls r0, r0, #2
	adds r1, r7, r0
	adds r3, #1
	strh r3, [r1, #0xa]
	movs r1, #0xb0
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #1
	strb r2, [r0]
	ldr r0, _08046988 @ =0x000002C1
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	movs r0, #0xca
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r3, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
_08046970:
	ldr r0, _0804698C @ =0x00000349
_08046972:
	adds r1, r7, r0
	ldrb r0, [r1]
	orrs r0, r5
	strb r0, [r1]
	b _08046A18
	.align 2, 0
_0804697C: .4byte 0x000002B2
_08046980: .4byte 0x0000027D
_08046984: .4byte 0x00000305
_08046988: .4byte 0x000002C1
_0804698C: .4byte 0x00000349
_08046990:
	adds r0, r7, #0
	adds r0, #0x27
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _080469E4
	ldr r2, _080469DC @ =gUnknown_080D809E
	adds r4, r7, #0
	adds r4, #0x26
	ldrb r1, [r4]
	adds r3, r7, #0
	adds r3, #0x28
	ldrb r0, [r3]
	lsls r1, r1, #1
	cmp r0, #4
	bhi _080469B2
	adds r1, #0x14
_080469B2:
	adds r0, r1, r2
	ldrh r0, [r0]
	ldrh r1, [r7, #0x20]
	adds r2, r0, r1
	strh r2, [r7, #0x20]
	ldr r6, _080469E0 @ =gUnknown_080D8076
	ldrb r0, [r4]
	ldrb r1, [r3]
	lsls r0, r0, #1
	cmp r1, #4
	bhi _080469CA
	adds r0, #0x14
_080469CA:
	adds r1, r0, r6
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r1]
	cmp r0, r1
	bne _08046A18
	movs r0, #1
	strb r0, [r5]
	b _08046A18
	.align 2, 0
_080469DC: .4byte gUnknown_080D809E
_080469E0: .4byte gUnknown_080D8076
_080469E4:
	cmp r1, #1
	bne _08046A18
	ldr r2, _08046A78 @ =gUnknown_080D809E
	adds r0, r7, #0
	adds r0, #0x26
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r1, #0x28
	ldrb r1, [r1]
	lsls r0, r0, #1
	cmp r1, #4
	bhi _080469FE
	adds r0, #0x14
_080469FE:
	adds r0, r0, r2
	ldrh r1, [r7, #0x20]
	ldrh r0, [r0]
	subs r1, r1, r0
	strh r1, [r7, #0x20]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0
	bne _08046A18
	movs r0, #2
	strb r0, [r5]
	str r1, [r7, #0x18]
	strh r1, [r7, #0x20]
_08046A18:
	ldrh r1, [r7, #0x20]
	ldr r0, [r7, #0x18]
	adds r0, r0, r1
	ldr r1, _08046A7C @ =0x0003FFFF
	ands r0, r1
	str r0, [r7, #0x18]
	ldrh r0, [r7, #0x1e]
	subs r0, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08046A32
	b _08046C08
_08046A32:
	movs r2, #0
	adds r5, r7, #0
	adds r5, #0x27
	ldr r6, _08046A80 @ =gUnknown_080D8034
	movs r4, #0
	movs r3, #0x97
	lsls r3, r3, #2
_08046A40:
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	adds r1, r7, r0
	movs r0, #1
	ands r0, r2
	lsls r0, r0, #3
	adds r0, r0, r6
	ldrh r0, [r0, #4]
	strh r0, [r1, #0xa]
	adds r0, r1, #0
	adds r0, #0x20
	strb r4, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _08046A40
	movs r0, #0
	strb r0, [r5]
	str r0, [r7, #0x18]
	strh r0, [r7, #0x20]
	b _08046C08
	.align 2, 0
_08046A78: .4byte gUnknown_080D809E
_08046A7C: .4byte 0x0003FFFF
_08046A80: .4byte gUnknown_080D8034
_08046A84:
	ldr r4, _08046B00 @ =gUnknown_030053B8
	ldr r0, [r4]
	ldr r1, _08046B04 @ =0x00196225
	mov r8, r1
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	ldr r6, _08046B08 @ =0x3C6EF35F
	adds r0, r0, r6
	str r0, [r4]
	movs r5, #0xff
	ands r0, r5
	movs r1, #0xa
	bl DivRem
	ldr r1, _08046B0C @ =gUnknown_080D8044
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #0x25
	adds r1, r1, r7
	mov sb, r1
	strb r0, [r1]
	ldr r0, [r4]
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	adds r0, r0, r6
	str r0, [r4]
	ands r0, r5
	movs r1, #0xa
	bl DivRem
	adds r1, r7, #0
	adds r1, #0x26
	strb r0, [r1]
	ldr r2, _08046B10 @ =gUnknown_080D804E
	ldrb r1, [r1]
	adds r0, r7, #0
	adds r0, #0x28
	ldrb r0, [r0]
	lsls r1, r1, #1
	cmp r0, #4
	bhi _08046ADC
	adds r1, #0x14
_08046ADC:
	adds r0, r1, r2
	ldrh r0, [r0]
	movs r5, #0
	strh r0, [r7, #0x1e]
	adds r1, r7, #0
	adds r1, #0x24
	movs r0, #0x1e
	strb r0, [r1]
	mov r0, sb
	ldrb r4, [r0]
	cmp r4, #1
	beq _08046B5C
	cmp r4, #1
	bgt _08046B14
	cmp r4, #0
	beq _08046B1A
	b _08046C08
	.align 2, 0
_08046B00: .4byte gUnknown_030053B8
_08046B04: .4byte 0x00196225
_08046B08: .4byte 0x3C6EF35F
_08046B0C: .4byte gUnknown_080D8044
_08046B10: .4byte gUnknown_080D804E
_08046B14:
	cmp r4, #2
	beq _08046B98
	b _08046C08
_08046B1A:
	movs r0, #0xfe
	bl m4aSongNumStart
	movs r0, #0x97
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r3, _08046B50 @ =0x000002B2
	strh r3, [r1, #0xa]
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #2
	strb r2, [r0]
	ldr r0, _08046B54 @ =0x0000027D
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xb9
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r3, [r1, #0xa]
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
	ldr r0, _08046B58 @ =0x00000305
	b _08046C00
	.align 2, 0
_08046B50: .4byte 0x000002B2
_08046B54: .4byte 0x0000027D
_08046B58: .4byte 0x00000305
_08046B5C:
	movs r0, #0xfe
	bl m4aSongNumStart
	movs r0, #0xa8
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r3, _08046B90 @ =0x000002B3
	strh r3, [r1, #0xa]
	movs r1, #0xb0
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #2
	strb r2, [r0]
	ldr r0, _08046B94 @ =0x000002C1
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xca
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r3, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
	b _08046BFE
	.align 2, 0
_08046B90: .4byte 0x000002B3
_08046B94: .4byte 0x000002C1
_08046B98:
	movs r0, #0xfe
	bl m4aSongNumStart
	movs r0, #0x97
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r2, _08046C14 @ =0x000002B2
	strh r2, [r1, #0xa]
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	ldr r0, _08046C18 @ =0x0000027D
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xb9
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r2, [r1, #0xa]
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	ldr r0, _08046C1C @ =0x00000305
	adds r1, r7, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	movs r0, #0xa8
	lsls r0, r0, #2
	adds r1, r7, r0
	adds r2, #1
	strh r2, [r1, #0xa]
	movs r1, #0xb0
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	ldr r0, _08046C20 @ =0x000002C1
	adds r1, r7, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	movs r0, #0xca
	lsls r0, r0, #2
	adds r1, r7, r0
	strh r2, [r1, #0xa]
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
_08046BFE:
	ldr r0, _08046C24 @ =0x00000349
_08046C00:
	adds r1, r7, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
_08046C08:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08046C14: .4byte 0x000002B2
_08046C18: .4byte 0x0000027D
_08046C1C: .4byte 0x00000305
_08046C20: .4byte 0x000002C1
_08046C24: .4byte 0x00000349

	thumb_func_start sub_8046C28
sub_8046C28: @ 0x08046C28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _08046C40
	b _08046E78
_08046C40:
	movs r0, #0
	mov r8, r0
	adds r1, r4, #0
	adds r1, #0x2b
	str r1, [sp]
	ldr r0, _08046D24 @ =gUnknown_080D8030
	ldrb r0, [r0, #3]
	mov sl, r0
_08046C50:
	mov r2, r8
	lsls r0, r2, #0x10
	ldr r2, [r4, #0x14]
	adds r2, r2, r0
	lsls r2, r2, #0xe
	lsrs r2, r2, #0x16
	ldr r3, [sp]
	movs r1, #0
	ldrsb r1, [r3, r1]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r2, r2, r0
	ldr r5, _08046D28 @ =0x000003FF
	adds r0, r5, #0
	ands r2, r0
	mov r1, r8
	lsls r0, r1, #4
	add r0, r8
	lsls r0, r0, #2
	movs r3, #0x97
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r6, r4, r0
	ldr r1, [r4, #4]
	asrs r1, r1, #8
	ldr r3, _08046D2C @ =gUnknown_08097AA4
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r2, r5
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r5, #0
	ldrsh r0, [r0, r5]
	mov r5, sl
	muls r5, r0, r5
	adds r0, r5, #0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	mov sb, r1
	ldr r1, [r4, #8]
	asrs r1, r1, #8
	lsls r2, r2, #1
	adds r2, r2, r3
	movs r3, #0
	ldrsh r0, [r2, r3]
	mov r5, sl
	muls r5, r0, r5
	adds r0, r5, #0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	mov ip, r1
	ldrh r0, [r4, #0x1e]
	adds r5, r0, #0
	cmp r5, #0
	beq _08046D5C
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r2, [r0]
	adds r7, r0, #0
	cmp r2, #0
	bne _08046D34
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _08046D34
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08046D34
	ldr r3, _08046D30 @ =gUnknown_030059E0
	ldr r1, [r3, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08046D34
	ldr r0, [r3, #0x3c]
	cmp r0, r6
	bne _08046D34
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	subs r0, #0xf8
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r3, #0x20]
	str r2, [r3, #0x3c]
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r1, r2, #0
	ldrh r5, [r3, #0x10]
	adds r0, r1, r5
	strh r0, [r3, #0x10]
	ldrh r0, [r3, #0x14]
	adds r1, r1, r0
	strh r1, [r3, #0x14]
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r3, #0x12]
	b _08046E68
	.align 2, 0
_08046D24: .4byte gUnknown_080D8030
_08046D28: .4byte 0x000003FF
_08046D2C: .4byte gUnknown_08097AA4
_08046D30: .4byte gUnknown_030059E0
_08046D34:
	lsls r0, r5, #0x10
	cmp r0, #0
	beq _08046D5C
	ldrb r0, [r7]
	cmp r0, #0
	bne _08046D5C
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _08046D5C
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08046D5C
	b _08046E5A
_08046D5C:
	ldr r3, _08046D90 @ =gUnknown_030059E0
	ldr r2, [r3, #0x3c]
	movs r5, #0
	cmp r2, r6
	bne _08046D68
	movs r5, #1
_08046D68:
	movs r0, #0x12
	ldrsh r7, [r3, r0]
	ldr r1, [r3, #0x20]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08046D82
	movs r0, #8
	ands r1, r0
	cmp r1, #0
	beq _08046D94
	cmp r2, r6
	bne _08046D94
_08046D82:
	adds r0, r6, #0
	mov r1, sb
	mov r2, ip
	bl sub_800CCB8
	adds r3, r0, #0
	b _08046D96
	.align 2, 0
_08046D90: .4byte gUnknown_030059E0
_08046D94:
	movs r3, #0
_08046D96:
	movs r2, #0x80
	lsls r2, r2, #9
	ands r2, r3
	cmp r2, #0
	beq _08046E34
	cmp r5, #0
	bne _08046DC0
	ldr r2, _08046DF8 @ =gUnknown_030059E0
	ldr r0, [r2, #0x3c]
	cmp r0, r6
	bne _08046DC0
	cmp r7, #0
	ble _08046DC0
	ldr r5, _08046DFC @ =0xFFFFFB00
	adds r1, r5, #0
	ldrh r5, [r2, #0x10]
	adds r0, r1, r5
	strh r0, [r2, #0x10]
	ldrh r0, [r2, #0x14]
	adds r1, r1, r0
	strh r1, [r2, #0x14]
_08046DC0:
	ldrh r0, [r4, #0x1e]
	cmp r0, #0
	beq _08046E00
	adds r0, r4, #0
	adds r0, #0x24
	ldrb r0, [r0]
	cmp r0, #0
	bne _08046E00
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	bne _08046E00
	adds r0, r4, #0
	adds r0, #0x25
	ldrb r0, [r0]
	cmp r0, #0
	beq _08046DE8
	cmp r0, #2
	bne _08046E00
_08046DE8:
	adds r0, r4, #0
	bl sub_8047940
	ldr r0, _08046DF8 @ =gUnknown_030059E0
	bl sub_800CBA4
	b _08046E78
	.align 2, 0
_08046DF8: .4byte gUnknown_030059E0
_08046DFC: .4byte 0xFFFFFB00
_08046E00:
	ldr r2, _08046E30 @ =gUnknown_030059E0
	ldr r1, [r2, #0xc]
	movs r5, #0x80
	lsls r5, r5, #2
	adds r1, r1, r5
	lsls r0, r3, #0x18
	asrs r0, r0, #0x10
	adds r1, r1, r0
	str r1, [r2, #0xc]
	mov r0, r8
	lsls r1, r0, #2
	adds r0, r4, #0
	adds r0, #0x2c
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08046E5A
	mov r3, sb
	subs r1, r3, r0
	lsls r1, r1, #8
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	b _08046E5A
	.align 2, 0
_08046E30: .4byte gUnknown_030059E0
_08046E34:
	cmp r5, #0
	beq _08046E5A
	ldr r3, _08046E88 @ =gUnknown_030059E0
	ldr r1, [r3, #0x20]
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r3, #0x20]
	str r2, [r3, #0x3c]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08046E5A
	ldr r0, _08046E8C @ =0xFFFFFEFF
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r3, #0x20]
_08046E5A:
	mov r5, r8
	lsls r1, r5, #2
	adds r0, r4, #0
	adds r0, #0x2c
	adds r0, r0, r1
	mov r1, sb
	str r1, [r0]
_08046E68:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #3
	bhi _08046E78
	b _08046C50
_08046E78:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08046E88: .4byte gUnknown_030059E0
_08046E8C: .4byte 0xFFFFFEFF

	thumb_func_start sub_8046E90
sub_8046E90: @ 0x08046E90
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r7, r5, #0
	adds r7, #0x6c
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r5, #0x6c]
	asrs r0, r0, #8
	ldr r6, _08046EF8 @ =gUnknown_03005960
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldr r1, _08046EFC @ =0x000001C1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08046EF0
	movs r0, #0xfe
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r5, #0x6c]
	asrs r0, r0, #8
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_08046EF0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08046EF8: .4byte gUnknown_03005960
_08046EFC: .4byte 0x000001C1

	thumb_func_start sub_8046F00
sub_8046F00: @ 0x08046F00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov r8, r0
	adds r0, #0x6c
	str r0, [sp, #0x20]
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0x31
	bls _08046F1C
	b _0804702E
_08046F1C:
	movs r4, #0x31
	subs r0, r4, r0
	movs r1, #0x10
	bl Div
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x24]
	lsls r0, r0, #4
	subs r4, r4, r0
	mov r2, r8
	ldr r0, [r2]
	cmp r4, r0
	bne _0804702E
	movs r0, #0x90
	bl m4aSongNumStart
	movs r7, #0
	mov r4, sp
_08046F42:
	lsls r1, r7, #0x10
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r6, r0, #0x16
	ldr r2, [r3, #4]
	asrs r2, r2, #8
	ldr r5, _08047040 @ =gUnknown_03005960
	ldr r0, [r5]
	subs r2, r2, r0
	ldr r0, _08047044 @ =gUnknown_080D8030
	ldr r1, [sp, #0x24]
	adds r0, r1, r0
	ldrb r3, [r0]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r6, r5
	lsls r0, r0, #1
	ldr r1, _08047048 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r5, #0
	ldrsh r0, [r0, r5]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	adds r2, r2, r0
	mov r0, r8
	ldr r1, [r0, #8]
	asrs r1, r1, #8
	ldr r5, _08047040 @ =gUnknown_03005960
	ldr r0, [r5, #4]
	subs r1, r1, r0
	lsls r0, r6, #1
	ldr r5, _08047048 @ =gUnknown_08097AA4
	adds r0, r0, r5
	movs r5, #0
	ldrsh r0, [r0, r5]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	movs r5, #0
	adds r7, #1
	mov sl, r7
	lsls r2, r2, #0x10
	asrs r7, r2, #0x10
_08046FA2:
	ldr r1, _0804704C @ =gUnknown_030053B8
	ldr r0, [r1]
	ldr r2, _08047050 @ =0x00196225
	adds r1, r0, #0
	muls r1, r2, r1
	ldr r3, _08047054 @ =0x3C6EF35F
	adds r1, r1, r3
	adds r0, r1, #0
	movs r2, #0xf
	ands r0, r2
	adds r0, r7, r0
	subs r0, #8
	str r0, [sp, #0x14]
	ldr r3, _08047050 @ =0x00196225
	adds r2, r1, #0
	muls r2, r3, r2
	ldr r0, _08047054 @ =0x3C6EF35F
	adds r2, r2, r0
	mov r3, sb
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	adds r0, r2, #0
	movs r3, #0xf
	ands r0, r3
	adds r1, r1, r0
	subs r1, #8
	str r1, [sp, #0x18]
	movs r3, #0
	strh r3, [r4, #0x1c]
	ldr r1, _08047050 @ =0x00196225
	adds r0, r2, #0
	muls r0, r1, r0
	ldr r2, _08047054 @ =0x3C6EF35F
	adds r0, r0, r2
	ldr r1, _0804704C @ =gUnknown_030053B8
	str r0, [r1]
	movs r1, #0x3f
	ands r0, r1
	subs r0, r6, r0
	adds r0, #0x1f
	strh r0, [r4, #0xc]
	lsls r1, r5, #9
	movs r2, #0xa0
	lsls r2, r2, #4
	adds r0, r2, #0
	subs r0, r0, r1
	strh r0, [r4, #0xe]
	ldr r0, _08047058 @ =0x06012980
	str r0, [sp]
	ldr r0, _0804705C @ =0x0000026B
	strh r0, [r4, #8]
	strh r3, [r4, #0xa]
	str r3, [sp, #4]
	mov r0, sp
	ldr r3, [sp, #0x20]
	movs r2, #0xaa
	lsls r2, r2, #1
	adds r1, r3, r2
	bl sub_8039B54
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08046FA2
	mov r3, sl
	lsls r0, r3, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bls _08046F42
_0804702E:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08047040: .4byte gUnknown_03005960
_08047044: .4byte gUnknown_080D8030
_08047048: .4byte gUnknown_08097AA4
_0804704C: .4byte gUnknown_030053B8
_08047050: .4byte 0x00196225
_08047054: .4byte 0x3C6EF35F
_08047058: .4byte 0x06012980
_0804705C: .4byte 0x0000026B

	thumb_func_start sub_8047060
sub_8047060: @ 0x08047060
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x20
	mov ip, r0
	ldr r0, _08047114 @ =gUnknown_03005590
	ldr r7, [r0]
	movs r0, #0xf
	ands r7, r0
	cmp r7, #0
	bne _08047106
	mov r0, ip
	ldr r1, [r0, #4]
	asrs r1, r1, #8
	ldr r3, _08047118 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	mov r0, ip
	ldr r2, [r0, #8]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	subs r2, r2, r0
	ldr r3, _0804711C @ =gUnknown_030053B8
	mov r8, r3
	ldr r0, [r3]
	ldr r6, _08047120 @ =0x00196225
	adds r3, r0, #0
	muls r3, r6, r3
	ldr r5, _08047124 @ =0x3C6EF35F
	adds r3, r3, r5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r4, #0x3f
	adds r0, r3, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x14]
	adds r1, r3, #0
	muls r1, r6, r1
	adds r1, r1, r5
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r1, #0
	ands r0, r4
	adds r2, r2, r0
	subs r2, #0x1f
	str r2, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r3, sp
	adds r2, r1, #0
	muls r2, r6, r2
	adds r2, r2, r5
	adds r1, r2, #0
	ands r1, r4
	ldr r0, _08047128 @ =0x00000407
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r5
	mov r0, r8
	str r1, [r0]
	ldr r0, _0804712C @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _08047130 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _08047134 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, ip
	bl sub_8039B54
_08047106:
	add sp, #0x20
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08047114: .4byte gUnknown_03005590
_08047118: .4byte gUnknown_03005960
_0804711C: .4byte gUnknown_030053B8
_08047120: .4byte 0x00196225
_08047124: .4byte 0x3C6EF35F
_08047128: .4byte 0x00000407
_0804712C: .4byte 0x000001FF
_08047130: .4byte 0x06012980
_08047134: .4byte 0x0000026B

	thumb_func_start sub_8047138
sub_8047138: @ 0x08047138
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x20
	mov sb, r0
	mov r4, sb
	adds r4, #0x6c
	ldr r0, _080471FC @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #0xa
	bl DivRem
	cmp r0, #0
	bne _080471EE
	ldr r0, _08047200 @ =0x000001C1
	add r0, sb
	ldrb r7, [r0]
	cmp r7, #0
	bne _080471EE
	mov r0, sb
	ldr r1, [r0, #0x6c]
	asrs r1, r1, #8
	ldr r3, _08047204 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	subs r2, r2, r0
	ldr r3, _08047208 @ =gUnknown_030053B8
	mov r8, r3
	ldr r0, [r3]
	ldr r6, _0804720C @ =0x00196225
	adds r3, r0, #0
	muls r3, r6, r3
	ldr r5, _08047210 @ =0x3C6EF35F
	adds r3, r3, r5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r4, #0x3f
	adds r0, r3, #0
	ands r0, r4
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x14]
	adds r1, r3, #0
	muls r1, r6, r1
	adds r1, r1, r5
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r1, #0
	ands r0, r4
	adds r2, r2, r0
	subs r2, #0x1f
	str r2, [sp, #0x18]
	mov r0, sp
	strh r7, [r0, #0x1c]
	mov r3, sp
	adds r2, r1, #0
	muls r2, r6, r2
	adds r2, r2, r5
	adds r1, r2, #0
	ands r1, r4
	ldr r0, _08047214 @ =0x00000407
	subs r0, r0, r1
	strh r0, [r3, #0xc]
	adds r1, r2, #0
	muls r1, r6, r1
	adds r1, r1, r5
	mov r0, r8
	str r1, [r0]
	ldr r0, _08047218 @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _0804721C @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _08047220 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	movs r1, #0xe0
	lsls r1, r1, #1
	add r1, sb
	bl sub_8039B54
_080471EE:
	add sp, #0x20
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080471FC: .4byte gUnknown_03005590
_08047200: .4byte 0x000001C1
_08047204: .4byte gUnknown_03005960
_08047208: .4byte gUnknown_030053B8
_0804720C: .4byte 0x00196225
_08047210: .4byte 0x3C6EF35F
_08047214: .4byte 0x00000407
_08047218: .4byte 0x000001FF
_0804721C: .4byte 0x06012980
_08047220: .4byte 0x0000026B

	thumb_func_start sub_8047224
sub_8047224: @ 0x08047224
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r0, _08047310 @ =gUnknown_03005B4C
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sb, r0
	ldr r0, _08047314 @ =IWRAM_START + 0x6C
	adds r2, r1, r0
	mov r3, sb
	ldr r0, [r3, #4]
	adds r0, r0, r7
	str r0, [r3, #4]
	ldr r0, [r3, #8]
	adds r0, r0, r6
	str r0, [r3, #8]
	ldr r0, [r2]
	adds r0, r0, r7
	str r0, [r2]
	ldr r0, [r2, #4]
	adds r0, r0, r6
	str r0, [r2, #4]
	movs r4, #0
	ldr r5, _08047318 @ =IWRAM_START + 0xD0
	adds r5, r5, r1
	mov r8, r5
	ldr r0, _0804731C @ =IWRAM_START + 0xD4
	adds r0, r0, r1
	mov ip, r0
	ldr r3, _08047320 @ =IWRAM_START + 0x80
	adds r3, r1, r3
	str r3, [sp, #4]
	ldr r5, _08047324 @ =IWRAM_START + 0x84
	adds r5, r5, r1
	mov sl, r5
	ldr r0, _08047328 @ =IWRAM_START + 0x2C
	adds r0, r1, r0
	str r0, [sp]
_08047280:
	movs r3, #0
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r5, r0, #2
_08047288:
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r5
	mov r0, r8
	adds r2, r0, r1
	ldr r0, [r2]
	adds r0, r0, r7
	str r0, [r2]
	add r1, ip
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #2
	bls _08047288
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08047280
	movs r4, #0
	ldr r3, [sp, #4]
	mov r8, r3
	ldr r3, [sp]
	mov ip, r4
_080472C0:
	lsls r2, r4, #2
	adds r0, r2, r4
	lsls r0, r0, #2
	mov r5, r8
	adds r1, r5, r0
	str r7, [r1]
	add r0, sl
	str r6, [r0]
	adds r2, r3, r2
	mov r0, ip
	str r0, [r2]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _080472C0
	movs r4, #0
_080472E2:
	lsls r1, r4, #4
	adds r1, #0x3c
	add r1, sb
	ldr r0, [r1, #4]
	adds r0, r0, r7
	str r0, [r1, #4]
	ldr r0, [r1, #8]
	adds r0, r0, r6
	str r0, [r1, #8]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _080472E2
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08047310: .4byte gUnknown_03005B4C
_08047314: .4byte IWRAM_START + 0x6C
_08047318: .4byte IWRAM_START + 0xD0
_0804731C: .4byte IWRAM_START + 0xD4
_08047320: .4byte IWRAM_START + 0x80
_08047324: .4byte IWRAM_START + 0x84
_08047328: .4byte IWRAM_START + 0x2C

	thumb_func_start sub_804732C
sub_804732C: @ 0x0804732C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	mov ip, r0
	mov r1, ip
	adds r1, #0x6c
	movs r2, #0
	strh r2, [r0, #0x1c]
	ldr r0, [r0, #4]
	mov r3, ip
	str r0, [r3, #0x6c]
	ldr r0, [r3, #8]
	str r0, [r1, #4]
	movs r0, #0xb0
	lsls r0, r0, #3
	str r0, [r1, #8]
	str r2, [r1, #0xc]
	movs r0, #0x96
	lsls r0, r0, #1
	str r0, [r1, #0x10]
	movs r7, #0
	adds r3, #0xd0
	str r3, [sp, #0xc]
	mov r4, ip
	adds r4, #0xd4
	str r4, [sp, #0x14]
	mov r6, ip
	adds r6, #0xd8
	str r6, [sp, #0x1c]
	mov r0, ip
	adds r0, #0xdc
	str r0, [sp, #0x20]
	adds r1, #0x74
	str r1, [sp, #0x24]
	mov r2, ip
	adds r2, #0x80
	str r2, [sp]
	subs r3, #0x4c
	str r3, [sp, #4]
	subs r4, #0x4c
	str r4, [sp, #8]
	subs r6, #0x4c
	str r6, [sp, #0x10]
	subs r0, #0x4c
	str r0, [sp, #0x18]
_0804738C:
	lsls r1, r7, #0x10
	mov r2, ip
	ldr r0, [r2, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r5, r0, #0x16
	movs r6, #0
	lsls r0, r7, #4
	subs r0, r0, r7
	lsls r0, r0, #2
	mov sl, r0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r5, r3
	lsls r0, r0, #1
	ldr r4, _080474B8 @ =gUnknown_08097AA4
	adds r0, r0, r4
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov sb, r1
	lsls r0, r5, #1
	adds r0, r0, r4
	movs r4, #0
	ldrsh r3, [r0, r4]
	mov r8, r3
_080473BE:
	lsls r2, r6, #2
	adds r2, r2, r6
	lsls r2, r2, #2
	add r2, sl
	ldr r0, [sp, #0xc]
	adds r0, r0, r2
	str r0, [sp, #0x28]
	ldr r1, _080474BC @ =gUnknown_080D8030
	adds r0, r6, r1
	ldrb r3, [r0]
	mov r1, sb
	muls r1, r3, r1
	asrs r1, r1, #6
	mov r4, ip
	ldr r0, [r4, #4]
	adds r0, r0, r1
	ldr r1, [sp, #0x28]
	str r0, [r1]
	ldr r0, [sp, #0x14]
	adds r4, r0, r2
	mov r1, r8
	muls r1, r3, r1
	asrs r1, r1, #6
	mov r3, ip
	ldr r0, [r3, #8]
	adds r0, r0, r1
	str r0, [r4]
	ldr r4, [sp, #0x1c]
	adds r3, r4, r2
	movs r1, #7
	subs r1, r1, r6
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	str r0, [r3]
	ldr r0, [sp, #0x20]
	adds r1, r0, r2
	movs r0, #1
	str r0, [r1]
	ldr r1, [sp, #0x24]
	adds r2, r1, r2
	str r5, [r2]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _080473BE
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bls _0804738C
	movs r7, #0
	ldr r2, _080474BC @ =gUnknown_080D8030
	ldrb r4, [r2, #3]
	ldr r3, _080474B8 @ =gUnknown_08097AA4
	mov r8, r3
	movs r1, #6
	subs r1, r1, r6
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	mov sb, r0
_0804743C:
	lsls r1, r7, #0x10
	mov r6, ip
	ldr r0, [r6, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #0xe
	lsrs r5, r0, #0x16
	lsls r2, r7, #2
	adds r2, r2, r7
	lsls r2, r2, #2
	ldr r0, [sp]
	adds r3, r0, r2
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	lsls r0, r0, #1
	add r0, r8
	movs r6, #0
	ldrsh r0, [r0, r6]
	adds r1, r4, #0
	muls r1, r0, r1
	asrs r1, r1, #6
	mov r6, ip
	ldr r0, [r6, #4]
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, [sp, #4]
	adds r3, r0, r2
	lsls r0, r5, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r1, r4, #0
	muls r1, r0, r1
	asrs r1, r1, #6
	ldr r0, [r6, #8]
	adds r0, r0, r1
	str r0, [r3]
	ldr r3, [sp, #8]
	adds r0, r3, r2
	mov r6, sb
	str r6, [r0]
	ldr r0, [sp, #0x10]
	adds r1, r0, r2
	movs r0, #1
	str r0, [r1]
	ldr r1, [sp, #0x18]
	adds r2, r1, r2
	str r5, [r2]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #3
	bls _0804743C
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080474B8: .4byte gUnknown_08097AA4
_080474BC: .4byte gUnknown_080D8030

	thumb_func_start sub_80474C0
sub_80474C0: @ 0x080474C0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	movs r7, #0xfe
	lsls r7, r7, #1
	add r7, r8
	movs r0, #0
	mov sb, r0
	mov r1, r8
	adds r1, #0x28
	ldrb r0, [r1]
	cmp r0, #0
	beq _08047598
	subs r0, #1
	strb r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080474F2
	movs r0, #0x8f
	bl m4aSongNumStart
	b _080474F8
_080474F2:
	movs r0, #0xeb
	bl m4aSongNumStart
_080474F8:
	mov r1, r8
	adds r1, #0x2a
	movs r0, #0x1e
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804757C
	ldr r0, _08047564 @ =0x000002B5
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	ldr r1, _08047568 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0804756C @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08047588
	ldr r0, _08047570 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08047588
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08047574 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08047558
	movs r0, #0xff
_08047558:
	strb r0, [r1]
	ldr r1, _08047578 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _08047588
	.align 2, 0
_08047564: .4byte 0x000002B5
_08047568: .4byte gUnknown_03005450
_0804756C: .4byte 0x0000C350
_08047570: .4byte gUnknown_030054CC
_08047574: .4byte gUnknown_03005448
_08047578: .4byte gUnknown_030054A8
_0804757C:
	movs r0, #0
	ldr r1, _08047594 @ =0x000002B5
	strh r1, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	strb r0, [r1]
_08047588:
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	b _0804759C
	.align 2, 0
_08047594: .4byte 0x000002B5
_08047598:
	movs r0, #1
	mov sb, r0
_0804759C:
	ldr r0, _080475C8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _080475B8
	mov r0, r8
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #4
	bne _080475B8
	ldr r1, _080475CC @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_080475B8:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080475C8: .4byte gUnknown_030055B4
_080475CC: .4byte gUnknown_030054A8

	thumb_func_start sub_80475D0
sub_80475D0: @ 0x080475D0
	push {r4, lr}
	adds r3, r0, #0
	movs r0, #0xfe
	lsls r0, r0, #1
	adds r4, r3, r0
	adds r1, r3, #0
	adds r1, #0x2a
	ldrb r0, [r1]
	cmp r0, #0
	beq _08047630
	adds r2, r3, #0
	adds r2, #0x29
	movs r0, #0
	strb r0, [r2]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804765E
	adds r0, r3, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #0
	bne _08047614
	ldr r0, _08047610 @ =0x000002B5
	strh r0, [r4, #0xa]
	movs r2, #0x87
	lsls r2, r2, #2
	adds r1, r3, r2
	movs r0, #3
	b _08047620
	.align 2, 0
_08047610: .4byte 0x000002B5
_08047614:
	movs r0, #0
	ldr r1, _0804762C @ =0x000002B5
	strh r1, [r4, #0xa]
	movs r2, #0x87
	lsls r2, r2, #2
	adds r1, r3, r2
_08047620:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	b _0804765C
	.align 2, 0
_0804762C: .4byte 0x000002B5
_08047630:
	adds r1, r3, #0
	adds r1, #0x29
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804765E
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804765E
	movs r1, #0
	ldr r0, _08047664 @ =0x000002B5
	strh r0, [r4, #0xa]
	movs r4, #0x87
	lsls r4, r4, #2
	adds r0, r3, r4
	strb r1, [r0]
	ldr r0, _08047668 @ =0x0000021D
	adds r1, r3, r0
	ldrb r0, [r1]
	orrs r0, r2
_0804765C:
	strb r0, [r1]
_0804765E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08047664: .4byte 0x000002B5
_08047668: .4byte 0x0000021D

	thumb_func_start sub_804766C
sub_804766C: @ 0x0804766C
	push {r4, r5, r6, r7, lr}
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	beq _080476BC
	movs r3, #0
	ldr r0, _080476AC @ =gFlags
	mov ip, r0
	ldr r7, _080476B0 @ =gObjPalette
	ldr r6, _080476B4 @ =gUnknown_080D80C6
	ldr r5, _080476B8 @ =gUnknown_03005590
	movs r4, #2
_08047684:
	adds r2, r3, #0
	adds r2, #0x80
	lsls r2, r2, #1
	adds r2, r2, r7
	lsls r1, r3, #1
	ldr r0, [r5]
	ands r0, r4
	lsrs r0, r0, #1
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r6
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _08047684
	b _080476E0
	.align 2, 0
_080476AC: .4byte gFlags
_080476B0: .4byte gObjPalette
_080476B4: .4byte gUnknown_080D80C6
_080476B8: .4byte gUnknown_03005590
_080476BC:
	movs r3, #0
	ldr r1, _080476F4 @ =gFlags
	mov ip, r1
	ldr r4, _080476F8 @ =gObjPalette
	ldr r2, _080476FC @ =gUnknown_080D80E6
_080476C6:
	adds r1, r3, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _080476C6
_080476E0:
	mov r1, ip
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, ip
	str r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080476F4: .4byte gFlags
_080476F8: .4byte gObjPalette
_080476FC: .4byte gUnknown_080D80E6

	thumb_func_start sub_8047700
sub_8047700: @ 0x08047700
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r0, r0, r4
	mov r8, r0
	ldr r0, [r4, #4]
	asrs r7, r0, #8
	ldr r1, [r4, #8]
	asrs r6, r1, #8
	bl sub_80122DC
	ldr r5, _08047760 @ =gUnknown_030059E0
	str r5, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #1
	bl sub_800C320
	cmp r0, #0
	beq _08047764
	ldr r1, [r5, #8]
	ldr r0, [r4, #4]
	cmp r1, r0
	ble _08047750
	movs r2, #0x90
	lsls r2, r2, #2
	adds r0, r2, #0
	ldrh r2, [r5, #0x10]
	adds r0, r0, r2
	strh r0, [r5, #0x10]
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r1, r2
	str r0, [r5, #8]
_08047750:
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r1, #0
	ldrh r2, [r5, #0x12]
	adds r0, r0, r2
	strh r0, [r5, #0x12]
	b _080477DA
	.align 2, 0
_08047760: .4byte gUnknown_030059E0
_08047764:
	movs r0, #0x2a
	adds r0, r0, r4
	mov sb, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080477DA
	str r5, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	beq _08047794
	str r5, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _0804779C
_08047794:
	adds r0, r4, #0
	bl sub_80474C0
	b _080477DA
_0804779C:
	str r5, [sp]
	mov r0, r8
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800CA20
	adds r2, r0, #0
	cmp r2, #1
	bne _080477DA
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r3, r4, r1
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #0x1e
	strb r0, [r1]
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0
	bne _080477DA
	ldr r0, _080477E8 @ =0x000002B5
	strh r0, [r3, #0xa]
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r4, r1
	strb r2, [r0]
	ldr r2, _080477EC @ =0x0000021D
	adds r1, r4, r2
	movs r0, #0xff
	strb r0, [r1]
_080477DA:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080477E8: .4byte 0x000002B5
_080477EC: .4byte 0x0000021D

	thumb_func_start sub_80477F0
sub_80477F0: @ 0x080477F0
	push {r4, r5, lr}
	ldr r0, _0804785C @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_804787C
	adds r0, r4, #0
	bl sub_80475D0
	adds r0, r4, #0
	bl sub_8046328
	ldr r1, [r4]
	cmp r1, #0x3f
	bhi _08047836
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08047828
	ldr r0, _08047860 @ =IWRAM_START + 0x2B
	adds r1, r5, r0
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08047828:
	ldr r1, [r4, #0x10]
	subs r1, #0x2c
	ldr r0, [r4]
	subs r0, #0x20
	lsls r0, r0, #2
	subs r1, r1, r0
	str r1, [r4, #0x10]
_08047836:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	cmp r0, #0
	bne _08047854
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	str r0, [r4, #0x10]
	ldr r0, _0804785C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08047864 @ =sub_8046040
	str r0, [r1, #8]
_08047854:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0804785C: .4byte gCurTask
_08047860: .4byte IWRAM_START + 0x2B
_08047864: .4byte sub_8046040

	thumb_func_start sub_8047868
sub_8047868: @ 0x08047868
	push {lr}
	ldr r0, _08047878 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08047878: .4byte gCurTask

	thumb_func_start sub_804787C
sub_804787C: @ 0x0804787C
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0xc
	ldrsh r2, [r4, r0]
	ldr r0, [r4]
	lsls r0, r0, #3
	adds r2, r2, r0
	ldr r1, [r4, #4]
	adds r1, r1, r2
	str r1, [r4, #4]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r2
	str r0, [r4, #8]
	asrs r0, r0, #8
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _080478CC @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #0
	movs r3, #8
	bl sub_801E4E4
	lsls r0, r0, #8
	ldr r1, [r4, #8]
	adds r1, r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #0x14]
	ldr r1, [r4, #0x10]
	adds r0, r0, r1
	ldr r1, _080478D0 @ =0x0003FFFF
	ands r0, r1
	str r0, [r4, #0x14]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080478CC: .4byte sub_801EE64
_080478D0: .4byte 0x0003FFFF

	thumb_func_start sub_80478D4
sub_80478D4: @ 0x080478D4
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	ldr r1, [r4, #4]
	adds r1, r1, r0
	str r1, [r4, #4]
	movs r0, #0xe
	ldrsh r2, [r4, r0]
	ldr r0, [r4, #8]
	adds r0, r0, r2
	str r0, [r4, #8]
	asrs r0, r0, #8
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _08047934 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #0
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	ldr r1, [r4, #8]
	adds r1, r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #0x14]
	ldr r2, [r4, #0x10]
	adds r0, r0, r2
	ldr r1, _08047938 @ =0x0003FFFF
	ands r0, r1
	str r0, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x28
	ldrb r0, [r0]
	cmp r0, #4
	bhi _0804792A
	ldr r0, _0804793C @ =0xFFFFFF00
	cmp r2, r0
	beq _0804792A
	subs r0, r2, #1
	str r0, [r4, #0x10]
_0804792A:
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08047934: .4byte sub_801EE64
_08047938: .4byte 0x0003FFFF
_0804793C: .4byte 0xFFFFFF00

	thumb_func_start sub_8047940
sub_8047940: @ 0x08047940
	push {lr}
	adds r2, r0, #0
	movs r0, #0xfe
	lsls r0, r0, #1
	adds r3, r2, r0
	adds r1, r2, #0
	adds r1, #0x29
	movs r0, #0x1e
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	bne _08047970
	ldr r0, _08047974 @ =0x000002B5
	strh r0, [r3, #0xa]
	subs r0, #0x99
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08047978 @ =0x0000021D
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
_08047970:
	pop {r0}
	bx r0
	.align 2, 0
_08047974: .4byte 0x000002B5
_08047978: .4byte 0x0000021D

	thumb_func_start sub_804797C
sub_804797C: @ 0x0804797C
	push {r4, r5, lr}
	sub sp, #4
	adds r2, r0, #0
	adds r4, r2, #0
	adds r4, #0x6c
	ldr r0, [r4, #0xc]
	adds r0, #0x30
	str r0, [r4, #0xc]
	ldr r0, [r2, #0x6c]
	ldr r1, [r4, #8]
	adds r0, r0, r1
	str r0, [r2, #0x6c]
	ldr r0, [r4, #4]
	ldr r1, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #4]
	asrs r0, r0, #8
	adds r0, #0x14
	ldr r1, [r2, #0x6c]
	asrs r1, r1, #8
	ldr r2, _080479EC @ =sub_801EC3C
	str r2, [sp]
	movs r2, #1
	movs r3, #8
	bl sub_801F100
	adds r5, r0, #0
	cmp r5, #0
	bge _080479E2
	ldr r0, [r4, #8]
	subs r0, #0x40
	str r0, [r4, #8]
	cmp r0, #0
	bge _080479C4
	movs r0, #0
	str r0, [r4, #8]
_080479C4:
	ldr r1, [r4, #0xc]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #1
	rsbs r0, r0, #0
	movs r1, #0x64
	bl Div
	str r0, [r4, #0xc]
	lsls r1, r5, #8
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
_080479E2:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080479EC: .4byte sub_801EC3C

	thumb_func_start sub_80479F0
sub_80479F0: @ 0x080479F0
	push {r4, lr}
	ldrh r4, [r0, #6]
	ldr r1, _08047A48 @ =IWRAM_START + 0x3A0
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08047A4C @ =IWRAM_START + 0x370
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08047A50 @ =IWRAM_START + 0x1C8
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08047A54 @ =IWRAM_START + 0x200
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08047A58 @ =IWRAM_START + 0x260
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08047A5C @ =IWRAM_START + 0x2A4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _08047A60 @ =IWRAM_START + 0x230
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	ldr r1, _08047A64 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08047A48: .4byte IWRAM_START + 0x3A0
_08047A4C: .4byte IWRAM_START + 0x370
_08047A50: .4byte IWRAM_START + 0x1C8
_08047A54: .4byte IWRAM_START + 0x200
_08047A58: .4byte IWRAM_START + 0x260
_08047A5C: .4byte IWRAM_START + 0x2A4
_08047A60: .4byte IWRAM_START + 0x230
_08047A64: .4byte gUnknown_03005B4C

	thumb_func_start sub_8047A68
sub_8047A68: @ 0x08047A68
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r2, _08047B00 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r3, _08047B04 @ =gBgCntRegs
	movs r2, #0
	movs r1, #0
	ldr r0, _08047B08 @ =0x00005A0D
	strh r0, [r3]
	ldr r0, _08047B0C @ =gBgScrollRegs
	strh r1, [r0]
	strh r1, [r0, #2]
	ldr r0, _08047B10 @ =gUnknown_03004D80
	strb r2, [r0]
	ldr r1, _08047B14 @ =gUnknown_03002280
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x40
	strb r0, [r1, #3]
	ldr r2, _08047B18 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _08047B1C @ =gUnknown_030053B8
	ldr r0, _08047B20 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r2, _08047B24 @ =gUnknown_03005AF0
	ldr r0, [r2, #0x1c]
	ldr r1, _08047B28 @ =0xFFFFCFFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r2, #0x1c]
	ldr r0, _08047B2C @ =sub_8048ED8
	movs r1, #0xf6
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _08047B30 @ =sub_8049380
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _08047B34 @ =gUnknown_03005B4C
	str r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r0, _08047B38 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _08047B40
	ldr r0, _08047B3C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	beq _08047B40
	movs r0, #6
	b _08047B42
	.align 2, 0
_08047B00: .4byte gDispCnt
_08047B04: .4byte gBgCntRegs
_08047B08: .4byte 0x00005A0D
_08047B0C: .4byte gBgScrollRegs
_08047B10: .4byte gUnknown_03004D80
_08047B14: .4byte gUnknown_03002280
_08047B18: .4byte gUnknown_030059E0
_08047B1C: .4byte gUnknown_030053B8
_08047B20: .4byte gUnknown_03005590
_08047B24: .4byte gUnknown_03005AF0
_08047B28: .4byte 0xFFFFCFFF
_08047B2C: .4byte sub_8048ED8
_08047B30: .4byte sub_8049380
_08047B34: .4byte gUnknown_03005B4C
_08047B38: .4byte gUnknown_030054EC
_08047B3C: .4byte gUnknown_030054CC
_08047B40:
	movs r0, #8
_08047B42:
	strb r0, [r3, #0x14]
	ldr r1, _08047B6C @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _08047B78
	ldrb r0, [r3, #0x14]
	lsrs r0, r0, #1
	strb r0, [r3, #0x14]
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0x1c
	bne _08047B78
	ldr r0, _08047B70 @ =0x00942E00
	str r0, [r3, #4]
	movs r0, #0xa0
	lsls r0, r0, #5
	str r0, [r3, #8]
	ldr r0, _08047B74 @ =0x00958C00
	b _08047B86
	.align 2, 0
_08047B6C: .4byte gUnknown_030055B4
_08047B70: .4byte 0x00942E00
_08047B74: .4byte 0x00958C00
_08047B78:
	movs r0, #0x82
	lsls r0, r0, #0xa
	str r0, [r3, #4]
	movs r0, #0x8c
	lsls r0, r0, #8
	str r0, [r3, #8]
	ldr r0, _08047DF8 @ =0x00033E00
_08047B86:
	str r0, [r3, #0x10]
	movs r2, #0
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r3, #0xc]
	strh r1, [r3, #0xe]
	strb r2, [r3, #0x15]
	strb r2, [r3, #0x16]
	strh r1, [r3, #0x1c]
	strh r1, [r3, #0x1e]
	strh r1, [r3, #0x20]
	strh r1, [r3, #0x22]
	strh r1, [r3, #0x2a]
	strh r1, [r3, #0x32]
	strb r2, [r3, #0x18]
	strb r2, [r3, #0x17]
	strb r2, [r3, #0x19]
	strb r2, [r3, #0x1a]
	str r1, [r3]
	adds r0, r3, #0
	adds r0, #0x65
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r4, r3, #0
	adds r4, #0x28
	movs r5, #0
	ldr r6, _08047DFC @ =gUnknown_080D8710
	movs r0, #0x58
	adds r0, r0, r3
	mov r8, r0
	ldr r1, _08047E00 @ =gUnknown_080D86D4
	mov ip, r1
	movs r2, #0x68
	adds r2, r2, r3
	mov sb, r2
	movs r0, #0x88
	adds r0, r0, r3
	mov sl, r0
	adds r1, r3, #0
	adds r1, #0x89
	str r1, [sp, #0x14]
	adds r2, r3, #0
	adds r2, #0x8a
	str r2, [sp, #0x18]
	adds r0, r3, #0
	adds r0, #0x8d
	str r0, [sp, #0x1c]
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r1, r3, r1
	str r1, [sp, #4]
	ldr r2, _08047E04 @ =0x000001A9
	adds r2, r3, r2
	str r2, [sp, #8]
	movs r0, #0xd5
	lsls r0, r0, #1
	adds r0, r3, r0
	str r0, [sp, #0xc]
	ldr r1, _08047E08 @ =0x000001AD
	adds r1, r3, r1
	str r1, [sp, #0x10]
	movs r2, #0xec
	lsls r2, r2, #1
	adds r2, r3, r2
	str r2, [sp, #0x20]
	ldr r0, _08047E0C @ =0x000001D9
	adds r0, r3, r0
	str r0, [sp, #0x24]
	movs r1, #0xed
	lsls r1, r1, #1
	adds r1, r3, r1
	str r1, [sp, #0x28]
	ldr r2, _08047E10 @ =0x000001DD
	adds r2, r3, r2
	str r2, [sp, #0x2c]
	ldr r7, _08047E14 @ =gUnknown_080D859C
_08047C22:
	lsls r0, r5, #2
	adds r0, r0, r7
	ldr r1, [r0]
	adds r1, #2
	movs r2, #0
_08047C2C:
	ldrh r0, [r1]
	strh r0, [r4]
	adds r1, #2
	adds r4, #2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _08047C2C
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #5
	bls _08047C22
	movs r4, #0
	str r4, [r3, #0x5c]
	ldrh r0, [r6, #0x38]
	movs r5, #0
	mov r1, r8
	strh r0, [r1]
	movs r0, #0xe
	strb r0, [r3, #0x1b]
	ldr r0, [r3, #0x5c]
	ldr r1, _08047E18 @ =0x00000FFF
	ands r0, r1
	str r0, [r3, #0x5c]
	mov r2, ip
	ldr r0, [r2, #0x38]
	str r0, [r3, #0x60]
	adds r0, r6, #0
	adds r0, #0x3a
	ldrb r0, [r0]
	strb r0, [r3, #0x18]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	strb r0, [r3, #0x19]
	movs r0, #0x27
	str r3, [sp, #0x30]
	bl sub_8007C10
	ldr r3, [sp, #0x30]
	movs r2, #0xf4
	lsls r2, r2, #1
	adds r1, r3, r2
	str r0, [r1]
	mov r7, sb
	movs r0, #0x20
	strh r0, [r7, #0x16]
	movs r0, #0x28
	strh r0, [r7, #0x18]
	ldr r0, _08047E1C @ =0x0600C000
	str r0, [r7, #4]
	ldr r0, _08047E20 @ =0x000002B6
	strh r0, [r7, #0xa]
	mov r0, sl
	strb r5, [r0]
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0xff
	ldr r1, [sp, #0x14]
	strb r0, [r1]
	movs r0, #0x10
	ldr r2, [sp, #0x18]
	strb r0, [r2]
	ldr r0, [sp, #0x1c]
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x86
	lsls r0, r0, #0xb
	str r0, [r7, #0x10]
	movs r5, #0
	movs r1, #0
	mov r8, r1
	movs r6, #0
_08047CCE:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, #0x98
	adds r7, r3, r0
	strh r6, [r7, #0x16]
	strh r6, [r7, #0x18]
	adds r4, r5, #3
	lsls r4, r4, #3
	ldr r2, _08047E24 @ =gUnknown_080D8108
	adds r4, r4, r2
	ldr r0, [r4]
	str r3, [sp, #0x30]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x1b
	lsls r0, r0, #6
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #1
	rsbs r0, r0, #0
	mov sl, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	mov r2, r8
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r3, [sp, #0x30]
	cmp r5, #4
	bls _08047CCE
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r7, r3, r2
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldr r1, _08047E24 @ =gUnknown_080D8108
	ldr r0, [r1, #0x10]
	str r3, [sp, #0x30]
	bl sub_8007C10
	mov sb, r0
	str r0, [r7, #4]
	ldr r2, _08047E24 @ =gUnknown_080D8108
	ldrh r2, [r2, #0x14]
	mov r8, r2
	strh r2, [r7, #0xa]
	ldr r0, _08047E24 @ =gUnknown_080D8108
	ldrb r6, [r0, #0x16]
	ldr r1, [sp, #4]
	strb r6, [r1]
	movs r5, #0xc8
	lsls r5, r5, #3
	strh r5, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r2, [sp, #8]
	ldrb r0, [r2]
	mov r1, sl
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x10
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	movs r2, #0
	ldr r1, [sp, #0x10]
	strb r2, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r3, [sp, #0x30]
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r7, r3, r2
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	mov r3, sb
	str r3, [r7, #4]
	mov r0, r8
	strh r0, [r7, #0xa]
	ldr r1, [sp, #0x20]
	strb r6, [r1]
	strh r5, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	ldr r2, [sp, #0x24]
	ldrb r0, [r2]
	mov r3, sl
	orrs r0, r3
	strb r0, [r2]
	movs r1, #0x10
	ldr r0, [sp, #0x28]
	strb r1, [r0]
	movs r3, #0
	ldr r2, [sp, #0x2c]
	strb r3, [r2]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08047DF8: .4byte 0x00033E00
_08047DFC: .4byte gUnknown_080D8710
_08047E00: .4byte gUnknown_080D86D4
_08047E04: .4byte 0x000001A9
_08047E08: .4byte 0x000001AD
_08047E0C: .4byte 0x000001D9
_08047E10: .4byte 0x000001DD
_08047E14: .4byte gUnknown_080D859C
_08047E18: .4byte 0x00000FFF
_08047E1C: .4byte 0x0600C000
_08047E20: .4byte 0x000002B6
_08047E24: .4byte gUnknown_080D8108

	thumb_func_start sub_8047E28
sub_8047E28: @ 0x08047E28
	push {r4, r5, r6, r7, lr}
	ldr r7, _08047EAC @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r6, r0
	ldr r1, _08047EB0 @ =gUnknown_080D874C
	ldrb r0, [r4, #0x1b]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_8048408
	adds r0, r4, #0
	bl sub_80492B8
	adds r0, r4, #0
	bl sub_8048858
	adds r0, r4, #0
	bl sub_8048E64
	adds r0, r4, #0
	bl sub_80480E8
	adds r0, r4, #0
	bl sub_804931C
	ldrb r0, [r4, #0x14]
	cmp r0, #0
	bne _08047EC8
	ldr r5, _08047EB4 @ =gUnknown_03005424
	ldrh r1, [r5]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08047E86
	ldr r0, _08047EB8 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #2
	orrs r1, r2
	str r1, [r0, #0x20]
_08047E86:
	bl sub_802A018
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r4, #0xc]
	strb r1, [r4, #0x18]
	ldr r2, _08047EBC @ =IWRAM_START + 0x64
	adds r0, r6, r2
	strb r1, [r0]
	ldrh r1, [r5]
	ldr r0, _08047EC0 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r5]
	ldr r1, [r7]
	ldr r0, _08047EC4 @ =sub_8047F0C
	str r0, [r1, #8]
	b _08047EFE
	.align 2, 0
_08047EAC: .4byte gCurTask
_08047EB0: .4byte gUnknown_080D874C
_08047EB4: .4byte gUnknown_03005424
_08047EB8: .4byte gUnknown_030059E0
_08047EBC: .4byte IWRAM_START + 0x64
_08047EC0: .4byte 0x0000FF7F
_08047EC4: .4byte sub_8047F0C
_08047EC8:
	ldr r0, _08047EE4 @ =gUnknown_030059E0
	adds r0, #0x5c
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08047EEC
	ldr r0, _08047EE8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r2, #0x80
	orrs r1, r2
	strh r1, [r0]
	b _08047EFE
	.align 2, 0
_08047EE4: .4byte gUnknown_030059E0
_08047EE8: .4byte gUnknown_03005424
_08047EEC:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08047EFE
	ldr r2, _08047F04 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08047F08 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
_08047EFE:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08047F04: .4byte gUnknown_03005424
_08047F08: .4byte 0x0000FF7F

	thumb_func_start sub_8047F0C
sub_8047F0C: @ 0x08047F0C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	ldr r0, _080480A0 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov sb, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	mov r1, sb
	adds r7, r1, r0
	ldr r2, _080480A4 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _080480A8 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r2]
	adds r0, r7, #0
	bl sub_8048654
	adds r0, r7, #0
	bl sub_8048E64
	adds r0, r7, #0
	bl sub_80480E8
	adds r0, r7, #0
	bl sub_804931C
	ldr r4, _080480AC @ =gUnknown_03005590
	ldr r0, [r4]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _08047F5E
	movs r0, #0x90
	bl m4aSongNumStart
_08047F5E:
	ldr r0, [r4]
	movs r1, #7
	bl DivRem
	ldr r1, _080480B0 @ =IWRAM_START + 0x65
	add r1, sb
	mov sl, r1
	cmp r0, #0
	bne _0804800A
	ldrb r6, [r1]
	cmp r6, #0
	bne _08048060
	ldr r0, _080480B4 @ =gUnknown_030053B8
	mov r8, r0
	ldr r0, [r0]
	ldr r1, _080480B8 @ =0x00196225
	mov ip, r1
	mov r2, ip
	muls r2, r0, r2
	ldr r5, _080480BC @ =0x3C6EF35F
	adds r2, r2, r5
	mov r0, r8
	str r2, [r0]
	ldr r1, [r7, #4]
	asrs r1, r1, #8
	ldr r4, _080480C0 @ =gUnknown_03005960
	ldr r0, [r4]
	subs r1, r1, r0
	movs r3, #0x3f
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x14]
	mov r1, ip
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, r2, r5
	mov r0, r8
	str r2, [r0]
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	ldr r0, [r4, #4]
	subs r1, r1, r0
	adds r0, r2, #0
	ands r0, r3
	adds r1, r1, r0
	subs r1, #0x1f
	str r1, [sp, #0x18]
	mov r0, sp
	strh r6, [r0, #0x1c]
	mov r4, sp
	mov r1, ip
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, r2, r5
	adds r1, r2, #0
	ands r1, r3
	movs r0, #0xfa
	lsls r0, r0, #2
	subs r0, r0, r1
	strh r0, [r4, #0xc]
	mov r3, sp
	mov r1, ip
	muls r1, r2, r1
	adds r1, r1, r5
	mov r0, r8
	str r1, [r0]
	ldr r0, _080480C4 @ =0x000001FF
	ands r1, r0
	movs r0, #0x80
	lsls r0, r0, #3
	subs r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _080480C8 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _080480CC @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r6, [r0, #0xa]
	str r6, [sp, #4]
	ldr r1, _080480D0 @ =IWRAM_START + 0x64
	add r1, sb
	bl sub_8039B54
_0804800A:
	mov r1, sl
	ldrb r0, [r1]
	cmp r0, #0
	bne _08048060
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r2, _080480C0 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	cmp r0, #0x31
	bgt _08048060
	ldr r1, _080480D4 @ =IWRAM_START + 0x68
	add r1, sb
	ldr r0, _080480D8 @ =0x000002B6
	strh r0, [r1, #0xa]
	ldr r1, _080480DC @ =IWRAM_START + 0x88
	add r1, sb
	movs r0, #4
	strb r0, [r1]
	ldr r1, _080480E0 @ =IWRAM_START + 0x89
	add r1, sb
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #1
	mov r1, sl
	strb r0, [r1]
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7, #8]
	asrs r1, r1, #8
	ldr r2, [r2, #4]
	subs r1, r1, r2
	subs r1, #0xf
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #0x90
	lsls r2, r2, #6
	bl sub_8039FA4
_08048060:
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r1, _080480C0 @ =gUnknown_03005960
	ldr r1, [r1]
	subs r0, r0, r1
	movs r1, #0xc8
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08048090
	adds r0, r7, #0
	adds r0, #0x65
	ldrb r0, [r0]
	cmp r0, #0
	beq _08048090
	movs r0, #0x28
	rsbs r0, r0, #0
	movs r1, #0x96
	movs r2, #6
	bl sub_802EF68
	ldr r0, _080480A0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080480E4 @ =sub_8048F44
	str r0, [r1, #8]
_08048090:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080480A0: .4byte gCurTask
_080480A4: .4byte gUnknown_03005424
_080480A8: .4byte 0x0000FF7F
_080480AC: .4byte gUnknown_03005590
_080480B0: .4byte IWRAM_START + 0x65
_080480B4: .4byte gUnknown_030053B8
_080480B8: .4byte 0x00196225
_080480BC: .4byte 0x3C6EF35F
_080480C0: .4byte gUnknown_03005960
_080480C4: .4byte 0x000001FF
_080480C8: .4byte 0x06012980
_080480CC: .4byte 0x0000026B
_080480D0: .4byte IWRAM_START + 0x64
_080480D4: .4byte IWRAM_START + 0x68
_080480D8: .4byte 0x000002B6
_080480DC: .4byte IWRAM_START + 0x88
_080480E0: .4byte IWRAM_START + 0x89
_080480E4: .4byte sub_8048F44

	thumb_func_start sub_80480E8
sub_80480E8: @ 0x080480E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x68
	movs r4, #0x20
	movs r0, #0x20
	strh r0, [r6, #0x16]
	movs r5, #0x28
	movs r0, #0x28
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_8003914
	ldr r3, _08048148 @ =gBgScrollRegs
	ldr r2, [r7, #4]
	asrs r2, r2, #8
	ldr r1, _0804814C @ =gUnknown_03005960
	ldr r0, [r1]
	subs r2, r2, r0
	subs r4, r4, r2
	strh r4, [r3]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r1, #4]
	subs r0, r0, r1
	subs r5, r5, r0
	strh r5, [r3, #2]
	str r2, [sp, #4]
	adds r1, r2, #0
	adds r1, #0x32
	movs r0, #0xaf
	lsls r0, r0, #1
	cmp r1, r0
	bls _08048158
	ldr r2, _08048150 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08048154 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _08048166
	.align 2, 0
_08048148: .4byte gBgScrollRegs
_0804814C: .4byte gUnknown_03005960
_08048150: .4byte gDispCnt
_08048154: .4byte 0x0000FEFF
_08048158:
	ldr r0, _0804827C @ =gDispCnt
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
_08048166:
	movs r4, #0
	str r4, [sp, #0xc]
	adds r6, r7, #0
	adds r6, #0x1e
	str r6, [sp, #0x2c]
	adds r0, r7, #0
	adds r0, #0x20
	str r0, [sp, #0x30]
_08048176:
	movs r1, #0
	mov r8, r1
	ldr r2, [sp, #0xc]
	lsls r2, r2, #1
	str r2, [sp, #0x24]
	ldr r3, [sp, #0xc]
	adds r3, #1
	str r3, [sp, #0x1c]
	ldr r4, [sp, #0xc]
	adds r0, r2, r4
	lsls r0, r0, #1
	str r0, [sp, #0x10]
	ldr r6, [sp, #0x2c]
	adds r6, r6, r0
	mov sl, r6
	ldr r1, [sp, #0x30]
	adds r0, r1, r0
	str r0, [sp, #0x18]
_0804819A:
	mov r2, r8
	cmp r2, #0
	bne _0804828C
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	ldr r3, _08048280 @ =gUnknown_03005960
	ldr r1, [r3]
	subs r1, r0, r1
	str r1, [sp, #4]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r1, r0, r1
	str r1, [sp, #8]
	adds r0, r7, #0
	adds r0, #0x1c
	ldr r4, [sp, #0x10]
	adds r0, r0, r4
	ldrh r2, [r0]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r2, r6
	lsls r0, r0, #1
	ldr r1, _08048284 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	asrs r0, r0, #0xe
	ldr r4, [sp, #4]
	adds r0, r4, r0
	str r0, [sp, #4]
	lsls r2, r2, #1
	ldr r6, _08048284 @ =gUnknown_08097AA4
	adds r2, r2, r6
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	asrs r0, r0, #0xe
	ldr r1, [sp, #8]
	adds r0, r1, r0
	str r0, [sp, #8]
	movs r4, #0
	movs r2, #0
	str r2, [sp, #0x28]
	movs r3, #1
	str r3, [sp, #0x20]
	ldr r6, _08048288 @ =gUnknown_080D8788
	mov sb, r6
	mov r0, sp
	ldrh r3, [r0, #4]
	ldr r5, _08048284 @ =gUnknown_08097AA4
	ldrh r2, [r0, #8]
_08048210:
	ldr r1, [sp, #0x28]
	mov r6, r8
	subs r0, r1, r6
	adds r0, r4, r0
	add r0, sb
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #0x98
	adds r6, r7, r0
	mov r1, sl
	ldrh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r1, r0, #0
	muls r1, r4, r1
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xd
	adds r0, r3, r0
	strh r0, [r6, #0x16]
	mov r1, sl
	ldrh r0, [r1]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r1, r0, #0
	muls r1, r4, r1
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xd
	adds r0, r2, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r2, [sp, #0x34]
	str r3, [sp, #0x38]
	bl sub_80051E8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r2, [sp, #0x34]
	ldr r3, [sp, #0x38]
	cmp r4, #2
	bls _08048210
	b _08048358
	.align 2, 0
_0804827C: .4byte gDispCnt
_08048280: .4byte gUnknown_03005960
_08048284: .4byte gUnknown_08097AA4
_08048288: .4byte gUnknown_080D8788
_0804828C:
	mov r2, sl
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	ldr r4, _080483C8 @ =gUnknown_08097AA4
	adds r0, r0, r4
	movs r6, #0
	ldrsh r0, [r0, r6]
	asrs r0, r0, #9
	ldr r2, [sp, #4]
	adds r0, r2, r0
	str r0, [sp, #4]
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r3, #0
	ldrsh r0, [r1, r3]
	asrs r0, r0, #9
	ldr r4, [sp, #8]
	adds r0, r4, r0
	str r0, [sp, #8]
	movs r4, #0
	mov r6, r8
	lsls r6, r6, #3
	str r6, [sp, #0x28]
	mov r0, r8
	adds r0, #1
	str r0, [sp, #0x20]
	mov r1, sp
	ldrh r2, [r1, #4]
	strh r2, [r1, #0x14]
	ldr r5, _080483C8 @ =gUnknown_08097AA4
	ldrh r3, [r1, #8]
	mov sb, r3
_080482D2:
	ldr r1, _080483CC @ =gUnknown_080D8788
	ldr r6, [sp, #0x28]
	mov r2, r8
	subs r0, r6, r2
	adds r0, r4, r0
	adds r0, r0, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #0x98
	adds r6, r7, r0
	ldr r3, [sp, #0x18]
	ldrh r0, [r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r4, r0
	asrs r0, r0, #0xb
	mov r3, sp
	ldrh r3, [r3, #0x14]
	adds r0, r3, r0
	strh r0, [r6, #0x16]
	ldr r1, [sp, #0x18]
	ldrh r0, [r1]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r4, r0
	asrs r0, r0, #0xb
	add r0, sb
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_80051E8
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _0804834E
	ldr r0, [r7]
	cmp r0, #0
	bne _0804834E
	movs r3, #0x16
	ldrsh r1, [r6, r3]
	ldr r2, _080483D0 @ =gUnknown_03005960
	ldr r0, [r2]
	adds r1, r1, r0
	movs r3, #0x18
	ldrsh r2, [r6, r3]
	ldr r3, _080483D0 @ =gUnknown_03005960
	ldr r0, [r3, #4]
	adds r2, r2, r0
	ldr r0, _080483D4 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800CA20
_0804834E:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #6
	bls _080482D2
_08048358:
	ldr r4, [sp, #0x20]
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #1
	bhi _08048366
	b _0804819A
_08048366:
	ldr r6, [sp, #0x24]
	ldr r0, [sp, #0xc]
	adds r2, r6, r0
	lsls r0, r2, #1
	ldr r1, [sp, #0x30]
	adds r0, r1, r0
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	ldr r4, _080483C8 @ =gUnknown_08097AA4
	adds r0, r0, r4
	movs r6, #0
	ldrsh r0, [r0, r6]
	movs r3, #0x32
	muls r0, r3, r0
	asrs r0, r0, #0xe
	ldr r4, [sp, #4]
	adds r0, r4, r0
	str r0, [sp, #4]
	lsls r1, r1, #1
	ldr r6, _080483C8 @ =gUnknown_08097AA4
	adds r1, r1, r6
	movs r4, #0
	ldrsh r0, [r1, r4]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	ldr r6, [sp, #8]
	adds r0, r6, r0
	str r0, [sp, #8]
	lsls r2, r2, #4
	movs r0, #0xc4
	lsls r0, r0, #1
	adds r2, r2, r0
	adds r6, r7, r2
	mov r1, sp
	ldrh r1, [r1, #4]
	strh r1, [r6, #0x16]
	mov r2, sp
	ldrh r2, [r2, #8]
	strh r2, [r6, #0x18]
	ldrb r0, [r7, #0x18]
	cmp r0, #0
	beq _080483D8
	movs r0, #0xa0
	lsls r0, r0, #6
	b _080483DC
	.align 2, 0
_080483C8: .4byte gUnknown_08097AA4
_080483CC: .4byte gUnknown_080D8788
_080483D0: .4byte gUnknown_03005960
_080483D4: .4byte gUnknown_030059E0
_080483D8:
	movs r0, #0x80
	lsls r0, r0, #6
_080483DC:
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	cmp r0, #1
	bhi _080483F8
	b _08048176
_080483F8:
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8048408
sub_8048408: @ 0x08048408
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	movs r0, #0x68
	adds r0, r0, r6
	mov sb, r0
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	mov r8, r0
	mov r4, r8
	ldr r0, [r6, #8]
	asrs r7, r0, #8
	adds r5, r7, #0
	ldr r1, _08048460 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	mov r2, sb
	strh r0, [r2, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r2, #0x18]
	ldrb r0, [r6, #0x16]
	cmp r0, #0
	bne _080484B0
	ldr r0, _08048464 @ =gUnknown_030059E0
	mov sl, r0
	str r0, [sp]
	mov r0, sb
	mov r1, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _08048468
	adds r0, r6, #0
	bl sub_8048D78
	b _08048482
	.align 2, 0
_08048460: .4byte gUnknown_03005960
_08048464: .4byte gUnknown_030059E0
_08048468:
	mov r1, sl
	str r1, [sp]
	mov r0, sb
	mov r1, r8
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _08048482
	adds r0, r6, #0
	bl sub_804928C
_08048482:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	ldrb r7, [r6, #0x16]
	cmp r7, #0
	bne _080484B0
	ldr r0, _080484C0 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, sb
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _080484B0
	adds r0, r6, #0
	bl sub_8048D78
	ldr r0, _080484C4 @ =gUnknown_03005498
	ldr r0, [r0, #4]
	strb r7, [r0, #0x15]
_080484B0:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080484C0: .4byte gUnknown_030059E0
_080484C4: .4byte gUnknown_03005498

	thumb_func_start sub_80484C8
sub_80484C8: @ 0x080484C8
	push {r4, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0x19]
	cmp r0, #0
	beq _080484D4
	b _08048642
_080484D4:
	ldr r0, _080484E4 @ =gUnknown_03005490
	ldr r0, [r0]
	movs r3, #1
	ands r0, r3
	cmp r0, #0
	beq _080484E8
	movs r1, #0
	b _080484FA
	.align 2, 0
_080484E4: .4byte gUnknown_03005490
_080484E8:
	ldr r2, _08048534 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08048538 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0804853C @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	adds r1, r3, #0
	ands r1, r0
_080484FA:
	strb r1, [r4, #0x1a]
	ldrb r0, [r4, #0x18]
	cmp r0, #0
	bne _080485A8
	cmp r1, #0
	bne _08048578
	movs r2, #1
	strb r2, [r4, #0x17]
	ldr r0, _08048540 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08048550
	movs r0, #6
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048544 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048548 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x18]
	str r0, [r4, #0x60]
	ldr r1, _0804854C @ =gUnknown_080D8710
	ldrb r0, [r1, #0x1a]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x1b]
	b _08048640
	.align 2, 0
_08048534: .4byte gUnknown_030053B8
_08048538: .4byte 0x00196225
_0804853C: .4byte 0x3C6EF35F
_08048540: .4byte gUnknown_03005424
_08048544: .4byte 0x00000FFF
_08048548: .4byte gUnknown_080D86D4
_0804854C: .4byte gUnknown_080D8710
_08048550:
	strb r2, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _0804856C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048570 @ =gUnknown_080D86D4
	ldr r0, [r0, #4]
	str r0, [r4, #0x60]
	ldr r1, _08048574 @ =gUnknown_080D8710
	ldrb r0, [r1, #6]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #7]
	b _08048640
	.align 2, 0
_0804856C: .4byte 0x00000FFF
_08048570: .4byte gUnknown_080D86D4
_08048574: .4byte gUnknown_080D8710
_08048578:
	movs r0, #0x81
	lsls r0, r0, #1
	bl m4aSongNumStart
	movs r0, #4
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _0804859C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _080485A0 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x10]
	str r0, [r4, #0x60]
	ldr r1, _080485A4 @ =gUnknown_080D8710
	ldrb r0, [r1, #0x12]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x13]
	b _08048640
	.align 2, 0
_0804859C: .4byte 0x00000FFF
_080485A0: .4byte gUnknown_080D86D4
_080485A4: .4byte gUnknown_080D8710
_080485A8:
	cmp r1, #0
	bne _08048618
	movs r0, #1
	strb r0, [r4, #0x17]
	ldr r0, _080485DC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080485EC
	movs r0, #8
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _080485E0 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _080485E4 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x20]
	str r0, [r4, #0x60]
	ldr r0, _080485E8 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x22
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x23
	b _0804863E
	.align 2, 0
_080485DC: .4byte gUnknown_03005424
_080485E0: .4byte 0x00000FFF
_080485E4: .4byte gUnknown_080D86D4
_080485E8: .4byte gUnknown_080D8710
_080485EC:
	movs r0, #0xd
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _0804860C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048610 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x34]
	str r0, [r4, #0x60]
	ldr r0, _08048614 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x36
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x37
	b _0804863E
	.align 2, 0
_0804860C: .4byte 0x00000FFF
_08048610: .4byte gUnknown_080D86D4
_08048614: .4byte gUnknown_080D8710
_08048618:
	movs r0, #0x81
	lsls r0, r0, #1
	bl m4aSongNumStart
	movs r0, #0xb
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048648 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _0804864C @ =gUnknown_080D86D4
	ldr r0, [r0, #0x2c]
	str r0, [r4, #0x60]
	ldr r0, _08048650 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x2e
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x2f
_0804863E:
	ldrb r0, [r0]
_08048640:
	strb r0, [r4, #0x19]
_08048642:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08048648: .4byte 0x00000FFF
_0804864C: .4byte gUnknown_080D86D4
_08048650: .4byte gUnknown_080D8710

	thumb_func_start sub_8048654
sub_8048654: @ 0x08048654
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	ldr r0, _08048764 @ =gUnknown_080D814A
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r1, [r7, #0xe]
	adds r0, r0, r1
	strh r0, [r7, #0xe]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xb0
	lsls r1, r1, #2
	cmp r0, r1
	ble _0804867E
	strh r1, [r7, #0xe]
_0804867E:
	movs r2, #0xc
	ldrsh r0, [r7, r2]
	ldr r1, [r7, #4]
	adds r1, r1, r0
	str r1, [r7, #4]
	movs r3, #0xe
	ldrsh r2, [r7, r3]
	ldr r0, [r7, #8]
	adds r0, r0, r2
	str r0, [r7, #8]
	asrs r0, r0, #8
	adds r0, #0x1e
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _08048768 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _080486D6
	lsls r1, r0, #8
	ldr r0, [r7, #8]
	adds r0, r0, r1
	str r0, [r7, #8]
	movs r4, #0xe
	ldrsh r1, [r7, r4]
	lsls r0, r1, #3
	adds r0, r0, r1
	rsbs r0, r0, #0
	movs r1, #0xa
	bl Div
	strh r0, [r7, #0xe]
	movs r0, #0xc
	ldrsh r1, [r7, r0]
	lsls r0, r1, #3
	adds r0, r0, r1
	movs r1, #0xa
	bl Div
	strh r0, [r7, #0xc]
_080486D6:
	ldr r0, [r7, #4]
	asrs r0, r0, #8
	str r0, [sp, #8]
	movs r1, #0
	mov r8, r1
	adds r2, r7, #0
	adds r2, #0x1c
	str r2, [sp, #0xc]
	adds r3, r7, #0
	adds r3, #0x1e
	str r3, [sp, #0x10]
	adds r4, r7, #0
	adds r4, #0x20
	str r4, [sp, #0x14]
	ldr r0, _0804876C @ =0xFFFFFF00
	mov sl, r0
_080486F6:
	ldr r0, [r7, #8]
	asrs r6, r0, #8
	mov r1, r8
	lsls r4, r1, #1
	adds r2, r4, r1
	lsls r2, r2, #1
	ldr r3, [sp, #0xc]
	adds r0, r3, r2
	ldrh r0, [r0]
	lsls r0, r0, #1
	ldr r1, _08048770 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	asrs r0, r0, #0xe
	adds r6, r6, r0
	ldr r0, [sp, #0x10]
	adds r5, r0, r2
	ldrh r0, [r5]
	lsls r0, r0, #1
	ldr r1, _08048770 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	asrs r0, r0, #9
	adds r6, r6, r0
	adds r0, r6, #6
	movs r3, #0
	str r3, [sp]
	ldr r1, _08048768 @ =sub_801EE64
	str r1, [sp, #4]
	ldr r1, [sp, #8]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	mov sb, r4
	cmp r0, #0
	ble _08048774
	ldrh r1, [r5]
	mov r4, sl
	adds r0, r1, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0x80
	lsls r2, r2, #2
	cmp r0, r2
	bls _0804878A
	adds r0, r1, #2
	b _0804878C
	.align 2, 0
_08048764: .4byte gUnknown_080D814A
_08048768: .4byte sub_801EE64
_0804876C: .4byte 0xFFFFFF00
_08048770: .4byte gUnknown_08097AA4
_08048774:
	ldrh r1, [r5]
	mov r3, sl
	adds r0, r1, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r4, #0x80
	lsls r4, r4, #2
	cmp r0, r4
	bls _0804878A
	adds r0, r1, #2
	b _0804878C
_0804878A:
	subs r0, r1, #2
_0804878C:
	strh r0, [r5]
	mov r2, sb
	add r2, r8
	lsls r2, r2, #1
	ldr r0, [sp, #0x10]
	adds r3, r0, r2
	ldrh r0, [r3]
	ldr r4, _080487F4 @ =0x000003FF
	adds r1, r4, #0
	ands r0, r1
	strh r0, [r3]
	ldr r0, _080487F8 @ =gUnknown_080D8148
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r6, r6, r0
	ldr r0, [sp, #0x14]
	adds r4, r0, r2
	ldrh r0, [r4]
	lsls r0, r0, #1
	ldr r1, _080487FC @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x32
	muls r0, r1, r0
	asrs r0, r0, #0xe
	adds r6, r6, r0
	movs r3, #0
	str r3, [sp]
	ldr r0, _08048800 @ =sub_801EE64
	str r0, [sp, #4]
	adds r0, r6, #0
	ldr r1, [sp, #8]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	ble _08048804
	ldrh r1, [r4]
	mov r2, sl
	adds r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	bhi _0804881A
	subs r0, r1, #2
	b _0804881C
	.align 2, 0
_080487F4: .4byte 0x000003FF
_080487F8: .4byte gUnknown_080D8148
_080487FC: .4byte gUnknown_08097AA4
_08048800: .4byte sub_801EE64
_08048804:
	ldrh r1, [r4]
	mov r2, sl
	adds r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #2
	cmp r0, r3
	bls _0804881A
	subs r0, r1, #2
	b _0804881C
_0804881A:
	adds r0, r1, #2
_0804881C:
	strh r0, [r4]
	mov r2, sb
	add r2, r8
	lsls r2, r2, #1
	ldr r4, [sp, #0x14]
	adds r2, r4, r2
	ldrh r0, [r2]
	ldr r3, _08048854 @ =0x000003FF
	adds r1, r3, #0
	ands r0, r1
	strh r0, [r2]
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #1
	bhi _08048842
	b _080486F6
_08048842:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08048854: .4byte 0x000003FF

	thumb_func_start sub_8048858
sub_8048858: @ 0x08048858
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	str r0, [sp, #8]
	ldrb r0, [r4, #0x18]
	movs r1, #8
	rsbs r1, r1, #0
	str r1, [sp, #0xc]
	cmp r0, #0
	bne _0804887C
	movs r2, #8
	str r2, [sp, #0xc]
_0804887C:
	movs r5, #0
	movs r3, #0x1c
	adds r3, r3, r4
	mov sl, r3
	movs r7, #0x1e
	adds r7, r7, r4
	mov sb, r7
	movs r0, #0x20
	adds r0, r0, r4
	mov r8, r0
	ldr r6, _08048910 @ =gUnknown_08097AA4
_08048892:
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r2, _08048914 @ =gUnknown_080D8148
	ldrb r1, [r4, #0x18]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	lsls r3, r5, #1
	adds r3, r3, r5
	lsls r3, r3, #1
	mov r2, sl
	adds r1, r2, r3
	ldrh r1, [r1]
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r7, #0
	ldrsh r2, [r1, r7]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #3
	subs r1, r1, r2
	asrs r1, r1, #0xe
	adds r0, r0, r1
	mov r2, sb
	adds r1, r2, r3
	ldrh r1, [r1]
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r7, #0
	ldrsh r1, [r1, r7]
	asrs r1, r1, #9
	adds r0, r0, r1
	add r3, r8
	ldrh r1, [r3]
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r1, #0x32
	muls r1, r2, r1
	asrs r1, r1, #0xe
	adds r0, r0, r1
	movs r1, #0
	str r1, [sp]
	ldr r1, _08048918 @ =sub_801EE64
	str r1, [sp, #4]
	ldr r1, [sp, #8]
	movs r2, #1
	ldr r3, [sp, #0xc]
	bl sub_801E4E4
	adds r1, r0, #0
	cmp r1, #0
	bge _08048922
	ldr r2, [r4, #8]
	ldrb r0, [r4, #0x18]
	cmp r0, #0
	beq _0804891C
	lsls r0, r1, #8
	subs r0, r2, r0
	b _08048920
	.align 2, 0
_08048910: .4byte gUnknown_08097AA4
_08048914: .4byte gUnknown_080D8148
_08048918: .4byte sub_801EE64
_0804891C:
	lsls r0, r1, #8
	adds r0, r2, r0
_08048920:
	str r0, [r4, #8]
_08048922:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _08048892
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_804893C
sub_804893C: @ 0x0804893C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _08048998 @ =0x000023FF
	cmp r1, r0
	bls _08048970
	adds r1, r4, #0
	adds r1, #0x66
	movs r0, #0
	strb r0, [r1]
	movs r0, #3
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _0804899C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _080489A0 @ =gUnknown_080D86D4
	ldr r0, [r0, #0xc]
	str r0, [r4, #0x60]
	ldr r1, _080489A4 @ =gUnknown_080D8710
	ldrb r0, [r1, #0xe]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0xf]
	strb r0, [r4, #0x19]
_08048970:
	ldr r1, [r4, #0x5c]
	ldr r0, _080489A8 @ =0x00001FFF
	cmp r1, r0
	bls _08048992
	ldrb r0, [r4, #0x17]
	cmp r0, #0
	beq _0804898E
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	adds r0, r4, #0
	movs r3, #0
	bl sub_80493F8
	movs r0, #0
	strb r0, [r4, #0x17]
_0804898E:
	ldr r0, _080489AC @ =0x0000FC80
	strh r0, [r4, #0xe]
_08048992:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08048998: .4byte 0x000023FF
_0804899C: .4byte 0x00000FFF
_080489A0: .4byte gUnknown_080D86D4
_080489A4: .4byte gUnknown_080D8710
_080489A8: .4byte 0x00001FFF
_080489AC: .4byte 0x0000FC80

	thumb_func_start sub_80489B0
sub_80489B0: @ 0x080489B0
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	adds r5, r4, #0
	adds r5, #0x66
	ldrb r0, [r5]
	cmp r0, #0
	bne _080489D4
	ldr r1, [r4, #0x5c]
	ldr r0, _08048A04 @ =0x000035AC
	cmp r1, r0
	bls _080489D4
	ldr r0, _08048A08 @ =0x00000101
	bl m4aSongNumStart
	movs r0, #1
	strb r0, [r5]
_080489D4:
	ldr r1, [r4, #0x5c]
	ldr r0, _08048A0C @ =0x000043FF
	cmp r1, r0
	bls _08048A38
	ldr r0, _08048A08 @ =0x00000101
	bl m4aSongNumStart
	ldrb r0, [r4, #0x1a]
	cmp r0, #0
	bne _08048A1C
	movs r0, #7
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048A10 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048A14 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x1c]
	str r0, [r4, #0x60]
	ldr r1, _08048A18 @ =gUnknown_080D8710
	ldrb r0, [r1, #0x1e]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x1f]
	b _08048A36
	.align 2, 0
_08048A04: .4byte 0x000035AC
_08048A08: .4byte 0x00000101
_08048A0C: .4byte 0x000043FF
_08048A10: .4byte 0x00000FFF
_08048A14: .4byte gUnknown_080D86D4
_08048A18: .4byte gUnknown_080D8710
_08048A1C:
	movs r0, #5
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048A40 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048A44 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x14]
	str r0, [r4, #0x60]
	ldr r1, _08048A48 @ =gUnknown_080D8710
	ldrb r0, [r1, #0x16]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x17]
_08048A36:
	strb r0, [r4, #0x19]
_08048A38:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08048A40: .4byte 0x00000FFF
_08048A44: .4byte gUnknown_080D86D4
_08048A48: .4byte gUnknown_080D8710

	thumb_func_start sub_8048A4C
sub_8048A4C: @ 0x08048A4C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08048ACC
	ldr r0, _08048A88 @ =gUnknown_03005490
	ldr r0, [r0]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08048A98
	movs r0, #0
	strb r0, [r4, #0x17]
	movs r0, #1
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048A8C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048A90 @ =gUnknown_080D86D4
	ldr r0, [r0, #4]
	str r0, [r4, #0x60]
	ldr r1, _08048A94 @ =gUnknown_080D8710
	ldrb r0, [r1, #6]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #7]
	b _08048AB8
	.align 2, 0
_08048A88: .4byte gUnknown_03005490
_08048A8C: .4byte 0x00000FFF
_08048A90: .4byte gUnknown_080D86D4
_08048A94: .4byte gUnknown_080D8710
_08048A98:
	movs r0, #0xc
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048AC0 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048AC4 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x30]
	str r0, [r4, #0x60]
	ldr r0, _08048AC8 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x32
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x33
	ldrb r0, [r0]
_08048AB8:
	strb r0, [r4, #0x19]
	movs r0, #0xa0
	lsls r0, r0, #3
	b _08048AD0
	.align 2, 0
_08048AC0: .4byte 0x00000FFF
_08048AC4: .4byte gUnknown_080D86D4
_08048AC8: .4byte gUnknown_080D8710
_08048ACC:
	ldrh r0, [r4, #0xc]
	subs r0, #0xc
_08048AD0:
	strh r0, [r4, #0xc]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8048AD8
sub_8048AD8: @ 0x08048AD8
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _08048B3C @ =0x000023FF
	cmp r1, r0
	bls _08048B12
	adds r1, r4, #0
	adds r1, #0x66
	movs r0, #0
	strb r0, [r1]
	movs r0, #0xa
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048B40 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048B44 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x28]
	str r0, [r4, #0x60]
	ldr r0, _08048B48 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x2b
	ldrb r0, [r0]
	strb r0, [r4, #0x19]
_08048B12:
	ldr r1, [r4, #0x5c]
	ldr r0, _08048B4C @ =0x00001FFF
	cmp r1, r0
	bls _08048B36
	ldrb r0, [r4, #0x17]
	cmp r0, #0
	beq _08048B30
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	adds r0, r4, #0
	movs r3, #1
	bl sub_80493F8
	movs r0, #0
	strb r0, [r4, #0x17]
_08048B30:
	movs r0, #0xe0
	lsls r0, r0, #2
	strh r0, [r4, #0xe]
_08048B36:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08048B3C: .4byte 0x000023FF
_08048B40: .4byte 0x00000FFF
_08048B44: .4byte gUnknown_080D86D4
_08048B48: .4byte gUnknown_080D8710
_08048B4C: .4byte 0x00001FFF

	thumb_func_start sub_8048B50
sub_8048B50: @ 0x08048B50
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	adds r5, r4, #0
	adds r5, #0x66
	ldrb r0, [r5]
	cmp r0, #0
	bne _08048B74
	ldr r1, [r4, #0x5c]
	ldr r0, _08048BA4 @ =0x000035AC
	cmp r1, r0
	bls _08048B74
	ldr r0, _08048BA8 @ =0x00000101
	bl m4aSongNumStart
	movs r0, #1
	strb r0, [r5]
_08048B74:
	ldr r1, [r4, #0x5c]
	ldr r0, _08048BAC @ =0x000043FF
	cmp r1, r0
	bls _08048BDE
	ldr r0, _08048BA8 @ =0x00000101
	bl m4aSongNumStart
	ldrb r0, [r4, #0x1a]
	cmp r0, #0
	bne _08048BBC
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048BB0 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048BB4 @ =gUnknown_080D86D4
	ldr r0, [r0]
	str r0, [r4, #0x60]
	ldr r1, _08048BB8 @ =gUnknown_080D8710
	ldrb r0, [r1, #2]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #3]
	b _08048BDC
	.align 2, 0
_08048BA4: .4byte 0x000035AC
_08048BA8: .4byte 0x00000101
_08048BAC: .4byte 0x000043FF
_08048BB0: .4byte 0x00000FFF
_08048BB4: .4byte gUnknown_080D86D4
_08048BB8: .4byte gUnknown_080D8710
_08048BBC:
	movs r0, #0xc
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048BE4 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048BE8 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x30]
	str r0, [r4, #0x60]
	ldr r0, _08048BEC @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x32
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x33
	ldrb r0, [r0]
_08048BDC:
	strb r0, [r4, #0x19]
_08048BDE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08048BE4: .4byte 0x00000FFF
_08048BE8: .4byte gUnknown_080D86D4
_08048BEC: .4byte gUnknown_080D8710

	thumb_func_start sub_8048BF0
sub_8048BF0: @ 0x08048BF0
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08048C70
	ldr r0, _08048C30 @ =gUnknown_03005490
	ldr r0, [r0]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08048C40
	movs r0, #0
	strb r0, [r4, #0x17]
	movs r0, #8
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048C34 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048C38 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x20]
	str r0, [r4, #0x60]
	ldr r0, _08048C3C @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x22
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x23
	ldrb r0, [r0]
	b _08048C5A
	.align 2, 0
_08048C30: .4byte gUnknown_03005490
_08048C34: .4byte 0x00000FFF
_08048C38: .4byte gUnknown_080D86D4
_08048C3C: .4byte gUnknown_080D8710
_08048C40:
	movs r0, #5
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048C64 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048C68 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x14]
	str r0, [r4, #0x60]
	ldr r1, _08048C6C @ =gUnknown_080D8710
	ldrb r0, [r1, #0x16]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x17]
_08048C5A:
	strb r0, [r4, #0x19]
	movs r0, #0xa0
	lsls r0, r0, #3
	b _08048C74
	.align 2, 0
_08048C64: .4byte 0x00000FFF
_08048C68: .4byte gUnknown_080D86D4
_08048C6C: .4byte gUnknown_080D8710
_08048C70:
	ldrh r0, [r4, #0xc]
	subs r0, #0xc
_08048C74:
	strh r0, [r4, #0xc]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8048C7C
sub_8048C7C: @ 0x08048C7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	ldr r0, [r7, #0x60]
	mov sb, r0
	adds r4, r7, #0
	adds r4, #0x28
	adds r2, r7, #0
	adds r2, #0x1c
	ldr r0, _08048D6C @ =gUnknown_080D8710
	ldrb r1, [r7, #0x1b]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrh r1, [r1]
	mov sl, r1
	movs r1, #0
	str r1, [sp]
	ldr r5, [r7, #0x5c]
	lsrs r3, r5, #0xc
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #7
	bls _08048CB8
	movs r0, #1
	str r0, [sp]
_08048CB8:
	movs r1, #7
	mov r8, r1
	movs r0, #7
	ands r6, r0
	ldr r0, _08048D70 @ =0x00000FFF
	mov ip, r0
	mov r1, ip
	ands r1, r5
	mov ip, r1
	mov r0, r8
	ands r3, r0
	adds r1, r7, #0
	adds r1, #0x58
	ldrh r0, [r1]
	subs r0, r5, r0
	lsrs r0, r0, #0xc
	mov r5, r8
	ands r0, r5
	mov r8, r1
	cmp r3, r0
	beq _08048D18
	movs r5, #0
	adds r3, r4, #0
	lsls r1, r6, #1
_08048CE8:
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	mov r6, sb
	adds r6, #4
	mov sb, r6
	subs r6, #4
	ldm r6!, {r0}
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #5
	bls _08048CE8
	adds r4, r3, #0
_08048D18:
	movs r5, #0
	mov r0, ip
	lsls r6, r0, #0x10
_08048D1E:
	lsls r0, r5, #3
	adds r0, r4, r0
	lsrs r1, r6, #0x10
	str r2, [sp, #4]
	bl sub_80859F4
	ldr r2, [sp, #4]
	strh r0, [r2]
	adds r2, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #5
	bls _08048D1E
	mov r1, r8
	ldrh r0, [r1]
	mov r5, sl
	subs r0, r0, r5
	movs r1, #0xe6
	muls r0, r1, r0
	asrs r0, r0, #8
	add r0, sl
	mov r6, r8
	strh r0, [r6]
	ldrh r1, [r6]
	ldr r0, [r7, #0x5c]
	adds r0, r0, r1
	ldr r1, _08048D74 @ =0x00007FFF
	ands r0, r1
	str r0, [r7, #0x5c]
	ldr r0, [sp]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08048D6C: .4byte gUnknown_080D8710
_08048D70: .4byte 0x00000FFF
_08048D74: .4byte 0x00007FFF

	thumb_func_start sub_8048D78
sub_8048D78: @ 0x08048D78
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	movs r0, #0x68
	adds r0, r0, r6
	mov r8, r0
	ldrb r0, [r6, #0x14]
	subs r0, #1
	strb r0, [r6, #0x14]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08048D9C
	movs r0, #0x8f
	bl m4aSongNumStart
	b _08048DA2
_08048D9C:
	movs r0, #0xeb
	bl m4aSongNumStart
_08048DA2:
	movs r0, #0
	movs r1, #0x1e
	strb r1, [r6, #0x16]
	strb r0, [r6, #0x15]
	ldrb r0, [r6, #0x14]
	cmp r0, #0
	bne _08048E20
	ldr r0, _08048E08 @ =0x000002B6
	mov r1, r8
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	ldr r1, _08048E0C @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08048E10 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r7, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r7, r1
	beq _08048E2C
	ldr r0, _08048E14 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08048E2C
	subs r0, r7, r1
	lsls r0, r0, #0x10
	ldr r1, _08048E18 @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08048DFE
	movs r0, #0xff
_08048DFE:
	strb r0, [r1]
	ldr r1, _08048E1C @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
	b _08048E2C
	.align 2, 0
_08048E08: .4byte 0x000002B6
_08048E0C: .4byte gUnknown_03005450
_08048E10: .4byte 0x0000C350
_08048E14: .4byte gUnknown_030054CC
_08048E18: .4byte gUnknown_03005448
_08048E1C: .4byte gUnknown_030054A8
_08048E20:
	ldr r0, _08048E58 @ =0x000002B6
	mov r1, r8
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
_08048E2C:
	mov r1, r8
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08048E5C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x1c
	beq _08048E4C
	ldrb r0, [r6, #0x14]
	cmp r0, #4
	bne _08048E4C
	ldr r1, _08048E60 @ =gUnknown_030054A8
	movs r0, #0x11
	strb r0, [r1, #1]
_08048E4C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08048E58: .4byte 0x000002B6
_08048E5C: .4byte gUnknown_030055B4
_08048E60: .4byte gUnknown_030054A8

	thumb_func_start sub_8048E64
sub_8048E64: @ 0x08048E64
	push {lr}
	adds r3, r0, #0
	movs r1, #0
	ldrb r0, [r3, #0x16]
	cmp r0, #0
	beq _08048E7A
	subs r0, #1
	strb r0, [r3, #0x16]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08048E90
_08048E7A:
	ldrb r0, [r3, #0x15]
	cmp r0, #0
	beq _08048E8C
	subs r0, #1
	strb r0, [r3, #0x15]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08048E8C
	movs r1, #1
_08048E8C:
	cmp r1, #0
	beq _08048EAC
_08048E90:
	ldrb r0, [r3, #0x14]
	cmp r0, #0
	beq _08048EAC
	adds r1, r3, #0
	adds r1, #0x68
	movs r2, #0
	ldr r0, _08048EB0 @ =0x000002B6
	strh r0, [r1, #0xa]
	adds r0, r3, #0
	adds r0, #0x88
	strb r2, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08048EAC:
	pop {r0}
	bx r0
	.align 2, 0
_08048EB0: .4byte 0x000002B6

	thumb_func_start sub_8048EB4
sub_8048EB4: @ 0x08048EB4
	ldr r2, _08048ED4 @ =gUnknown_03005B4C
	ldr r2, [r2]
	ldrh r3, [r2, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r3, r3, r2
	ldr r2, [r3, #4]
	adds r2, r2, r0
	str r2, [r3, #4]
	ldr r2, [r3, #8]
	adds r2, r2, r1
	str r2, [r3, #8]
	ldr r1, [r3, #0x10]
	adds r1, r1, r0
	str r1, [r3, #0x10]
	bx lr
	.align 2, 0
_08048ED4: .4byte gUnknown_03005B4C

	thumb_func_start sub_8048ED8
sub_8048ED8: @ 0x08048ED8
	push {r4, r5, lr}
	ldr r5, _08048F34 @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r1, _08048F38 @ =gUnknown_080D874C
	ldrb r0, [r4, #0x1b]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_80492B8
	adds r0, r4, #0
	bl sub_804920C
	adds r0, r4, #0
	bl sub_8048E64
	adds r0, r4, #0
	bl sub_80480E8
	movs r0, #1
	strb r0, [r4, #0x16]
	adds r0, r4, #0
	bl sub_804931C
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	ldr r1, _08048F3C @ =0x0000012B
	cmp r0, r1
	bls _08048F2E
	movs r0, #0
	str r0, [r4]
	ldr r1, [r5]
	ldr r0, _08048F40 @ =sub_8047E28
	str r0, [r1, #8]
_08048F2E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08048F34: .4byte gCurTask
_08048F38: .4byte gUnknown_080D874C
_08048F3C: .4byte 0x0000012B
_08048F40: .4byte sub_8047E28

	thumb_func_start sub_8048F44
sub_8048F44: @ 0x08048F44
	push {lr}
	ldr r0, _08048F68 @ =gCurTask
	ldr r0, [r0]
	ldr r3, _08048F6C @ =gDispCnt
	ldrh r2, [r3]
	ldr r1, _08048F70 @ =0x0000FEFF
	ands r1, r2
	strh r1, [r3]
	ldr r3, _08048F74 @ =gUnknown_03005424
	ldrh r2, [r3]
	ldr r1, _08048F78 @ =0x0000FF7F
	ands r1, r2
	strh r1, [r3]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_08048F68: .4byte gCurTask
_08048F6C: .4byte gDispCnt
_08048F70: .4byte 0x0000FEFF
_08048F74: .4byte gUnknown_03005424
_08048F78: .4byte 0x0000FF7F

	thumb_func_start sub_8048F7C
sub_8048F7C: @ 0x08048F7C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	strb r0, [r4, #0x19]
	adds r0, r4, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _08048FA0 @ =0x00001FFF
	cmp r1, r0
	bls _08048F98
	adds r0, r4, #0
	bl sub_80484C8
_08048F98:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08048FA0: .4byte 0x00001FFF

	thumb_func_start sub_8048FA4
sub_8048FA4: @ 0x08048FA4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _08048FE4 @ =0x000043FF
	cmp r1, r0
	bls _08048FDE
	adds r1, r4, #0
	adds r1, #0x58
	movs r0, #0x77
	strh r0, [r1]
	adds r0, #0x89
	bl m4aSongNumStart
	movs r0, #2
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08048FE8 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08048FEC @ =gUnknown_080D86D4
	ldr r0, [r0, #8]
	str r0, [r4, #0x60]
	ldr r1, _08048FF0 @ =gUnknown_080D8710
	ldrb r0, [r1, #0xa]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0xb]
	strb r0, [r4, #0x19]
_08048FDE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08048FE4: .4byte 0x000043FF
_08048FE8: .4byte 0x00000FFF
_08048FEC: .4byte gUnknown_080D86D4
_08048FF0: .4byte gUnknown_080D8710

	thumb_func_start sub_8048FF4
sub_8048FF4: @ 0x08048FF4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804900A
	ldr r1, [r4, #4]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	ble _08049040
_0804900A:
	movs r0, #7
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08049034 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08049038 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x1c]
	str r0, [r4, #0x60]
	ldr r1, _0804903C @ =gUnknown_080D8710
	ldrb r0, [r1, #0x1e]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x1f]
	strb r0, [r4, #0x19]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r4, #0xc]
	ldr r0, [r4, #0x10]
	str r0, [r4, #4]
	b _08049046
	.align 2, 0
_08049034: .4byte 0x00000FFF
_08049038: .4byte gUnknown_080D86D4
_0804903C: .4byte gUnknown_080D8710
_08049040:
	ldrh r0, [r4, #0xc]
	adds r0, #0xf
	strh r0, [r4, #0xc]
_08049046:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_804904C
sub_804904C: @ 0x0804904C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _0804908C @ =0x000023FF
	cmp r1, r0
	bls _08049084
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	adds r0, r4, #0
	movs r3, #1
	bl sub_80493F8
	movs r0, #0
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08049090 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08049094 @ =gUnknown_080D86D4
	ldr r0, [r0]
	str r0, [r4, #0x60]
	ldr r1, _08049098 @ =gUnknown_080D8710
	ldrb r0, [r1, #2]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #3]
	strb r0, [r4, #0x19]
_08049084:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0804908C: .4byte 0x000023FF
_08049090: .4byte 0x00000FFF
_08049094: .4byte gUnknown_080D86D4
_08049098: .4byte gUnknown_080D8710

	thumb_func_start sub_804909C
sub_804909C: @ 0x0804909C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	strb r0, [r4, #0x19]
	adds r0, r4, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _080490C0 @ =0x00001FFF
	cmp r1, r0
	bls _080490B8
	adds r0, r4, #0
	bl sub_80484C8
_080490B8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080490C0: .4byte 0x00001FFF

	thumb_func_start sub_80490C4
sub_80490C4: @ 0x080490C4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _0804910C @ =0x000043FF
	cmp r1, r0
	bls _08049104
	adds r1, r4, #0
	adds r1, #0x58
	movs r0, #0x77
	strh r0, [r1]
	adds r0, #0x89
	bl m4aSongNumStart
	movs r0, #9
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08049110 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08049114 @ =gUnknown_080D86D4
	ldr r0, [r0, #0x24]
	str r0, [r4, #0x60]
	ldr r0, _08049118 @ =gUnknown_080D8710
	adds r1, r0, #0
	adds r1, #0x26
	ldrb r1, [r1]
	strb r1, [r4, #0x18]
	adds r0, #0x27
	ldrb r0, [r0]
	strb r0, [r4, #0x19]
_08049104:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0804910C: .4byte 0x000043FF
_08049110: .4byte 0x00000FFF
_08049114: .4byte gUnknown_080D86D4
_08049118: .4byte gUnknown_080D8710

	thumb_func_start sub_804911C
sub_804911C: @ 0x0804911C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08049132
	ldr r1, [r4, #4]
	ldr r0, [r4, #0x10]
	cmp r1, r0
	ble _08049168
_08049132:
	movs r0, #0
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _0804915C @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08049160 @ =gUnknown_080D86D4
	ldr r0, [r0]
	str r0, [r4, #0x60]
	ldr r1, _08049164 @ =gUnknown_080D8710
	ldrb r0, [r1, #2]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #3]
	strb r0, [r4, #0x19]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r4, #0xc]
	ldr r0, [r4, #0x10]
	str r0, [r4, #4]
	b _0804916E
	.align 2, 0
_0804915C: .4byte 0x00000FFF
_08049160: .4byte gUnknown_080D86D4
_08049164: .4byte gUnknown_080D8710
_08049168:
	ldrh r0, [r4, #0xc]
	adds r0, #0xf
	strh r0, [r4, #0xc]
_0804916E:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8049174
sub_8049174: @ 0x08049174
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8048C7C
	ldr r1, [r4, #0x5c]
	ldr r0, _080491B4 @ =0x000023FF
	cmp r1, r0
	bls _080491AC
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	adds r0, r4, #0
	movs r3, #0
	bl sub_80493F8
	movs r0, #7
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _080491B8 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _080491BC @ =gUnknown_080D86D4
	ldr r0, [r0, #0x1c]
	str r0, [r4, #0x60]
	ldr r1, _080491C0 @ =gUnknown_080D8710
	ldrb r0, [r1, #0x1e]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #0x1f]
	strb r0, [r4, #0x19]
_080491AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080491B4: .4byte 0x000023FF
_080491B8: .4byte 0x00000FFF
_080491BC: .4byte gUnknown_080D86D4
_080491C0: .4byte gUnknown_080D8710

	thumb_func_start sub_80491C4
sub_80491C4: @ 0x080491C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r0, r1
	str r0, [r4, #4]
	adds r0, r4, #0
	bl sub_8048C7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080491FA
	movs r0, #0
	strb r0, [r4, #0x1b]
	ldr r0, [r4, #0x5c]
	ldr r1, _08049200 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x5c]
	ldr r0, _08049204 @ =gUnknown_080D86D4
	ldr r0, [r0]
	str r0, [r4, #0x60]
	ldr r1, _08049208 @ =gUnknown_080D8710
	ldrb r0, [r1, #2]
	strb r0, [r4, #0x18]
	ldrb r0, [r1, #3]
	strb r0, [r4, #0x19]
_080491FA:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08049200: .4byte 0x00000FFF
_08049204: .4byte gUnknown_080D86D4
_08049208: .4byte gUnknown_080D8710

	thumb_func_start sub_804920C
sub_804920C: @ 0x0804920C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r1, [r5, #4]
	asrs r1, r1, #8
	ldr r0, [r5, #8]
	asrs r0, r0, #8
	ldr r2, _08049280 @ =gUnknown_080D8148
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r0, r0, r2
	ldr r4, _08049284 @ =gUnknown_08097AA4
	ldrh r2, [r5, #0x22]
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r6, #0
	ldrsh r3, [r2, r6]
	lsls r2, r3, #1
	adds r2, r2, r3
	lsls r2, r2, #3
	subs r2, r2, r3
	asrs r2, r2, #0xe
	adds r0, r0, r2
	ldrh r2, [r5, #0x24]
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r3, #0
	ldrsh r2, [r2, r3]
	asrs r2, r2, #9
	adds r0, r0, r2
	ldrh r2, [r5, #0x26]
	lsls r2, r2, #1
	adds r2, r2, r4
	movs r4, #0
	ldrsh r3, [r2, r4]
	movs r2, #0x32
	muls r2, r3, r2
	asrs r2, r2, #0xe
	adds r0, r0, r2
	movs r2, #0
	str r2, [sp]
	ldr r2, _08049288 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801E4E4
	cmp r0, #0
	bge _08049278
	lsls r1, r0, #8
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
_08049278:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08049280: .4byte gUnknown_080D8148
_08049284: .4byte gUnknown_08097AA4
_08049288: .4byte sub_801EE64

	thumb_func_start sub_804928C
sub_804928C: @ 0x0804928C
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x68
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _080492AE
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _080492B4 @ =0x000002B6
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_080492AE:
	pop {r0}
	bx r0
	.align 2, 0
_080492B4: .4byte 0x000002B6

	thumb_func_start sub_80492B8
sub_80492B8: @ 0x080492B8
	push {lr}
	adds r2, r0, #0
	ldr r1, _080492E4 @ =gUnknown_080D814A
	ldrb r0, [r2, #0x18]
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrh r3, [r2, #0xe]
	adds r1, r0, r3
	strh r1, [r2, #0xe]
	ldrb r0, [r2, #0x18]
	cmp r0, #0
	bne _080492E8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xb0
	lsls r1, r1, #2
	cmp r0, r1
	ble _080492F4
	b _080492F2
	.align 2, 0
_080492E4: .4byte gUnknown_080D814A
_080492E8:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08049318 @ =0xFFFFFD40
	cmp r0, r1
	bge _080492F4
_080492F2:
	strh r1, [r2, #0xe]
_080492F4:
	movs r0, #0xc
	ldrsh r1, [r2, r0]
	ldr r0, [r2, #4]
	adds r0, r0, r1
	str r0, [r2, #4]
	movs r3, #0xe
	ldrsh r1, [r2, r3]
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	ldr r0, [r2, #0x10]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	str r0, [r2, #0x10]
	pop {r0}
	bx r0
	.align 2, 0
_08049318: .4byte 0xFFFFFD40

	thumb_func_start sub_804931C
sub_804931C: @ 0x0804931C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldrb r0, [r5, #0x16]
	ldr r6, _08049374 @ =gFlags
	cmp r0, #0
	beq _08049360
	movs r4, #0
	ldr r0, _08049378 @ =gBgPalette
	mov r8, r0
	ldr r7, _0804937C @ =gUnknown_080D8796
	movs r0, #2
	mov ip, r0
_08049338:
	adds r3, r4, #0
	adds r3, #0xb0
	lsls r3, r3, #1
	add r3, r8
	lsls r1, r4, #1
	ldrb r2, [r5, #0x16]
	mov r0, ip
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x19
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r1, r1, r7
	ldrh r0, [r1]
	strh r0, [r3]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _08049338
_08049360:
	ldr r0, [r6]
	movs r1, #1
	orrs r0, r1
	str r0, [r6]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08049374: .4byte gFlags
_08049378: .4byte gBgPalette
_0804937C: .4byte gUnknown_080D8796

	thumb_func_start sub_8049380
sub_8049380: @ 0x08049380
	push {r4, lr}
	ldrh r4, [r0, #6]
	ldr r1, _080493D8 @ =IWRAM_START + 0x1E8
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080493DC @ =IWRAM_START + 0x9C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080493E0 @ =IWRAM_START + 0xCC
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080493E4 @ =IWRAM_START + 0xFC
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080493E8 @ =IWRAM_START + 0x12C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _080493EC @ =IWRAM_START + 0x15C
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _080493F0 @ =IWRAM_START + 0x18C
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	ldr r1, _080493F4 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080493D8: .4byte IWRAM_START + 0x1E8
_080493DC: .4byte IWRAM_START + 0x9C
_080493E0: .4byte IWRAM_START + 0xCC
_080493E4: .4byte IWRAM_START + 0xFC
_080493E8: .4byte IWRAM_START + 0x12C
_080493EC: .4byte IWRAM_START + 0x15C
_080493F0: .4byte IWRAM_START + 0x18C
_080493F4: .4byte gUnknown_03005B4C

	thumb_func_start sub_80493F8
sub_80493F8: @ 0x080493F8
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	mov sl, r0
	adds r5, r1, #0
	mov r8, r2
	lsls r3, r3, #0x18
	mov sb, r3
	mov r0, sb
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _080494CC @ =sub_80494EC
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r6, #0
	str r6, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r3, r2
	ldr r1, _080494D0 @ =gUnknown_03005960
	ldr r0, [r1]
	lsls r0, r0, #8
	subs r0, r5, r0
	movs r4, #0xa0
	lsls r4, r4, #3
	adds r0, r0, r4
	str r0, [r2]
	ldr r0, [r1, #4]
	lsls r0, r0, #8
	mov r1, r8
	subs r0, r1, r0
	str r0, [r2, #4]
	movs r0, #0
	mov ip, r0
	strh r4, [r2, #8]
	strh r6, [r2, #0xa]
	mov r1, sb
	strb r1, [r2, #0xc]
	mov r0, sl
	str r0, [r2, #0x10]
	ldr r1, _080494D4 @ =IWRAM_START + 0x14
	adds r4, r3, r1
	asrs r5, r5, #8
	strh r5, [r4, #0x16]
	mov r0, r8
	asrs r0, r0, #8
	strh r0, [r4, #0x18]
	movs r1, #0xf4
	lsls r1, r1, #1
	add sl, r1
	mov r1, sl
	ldr r0, [r1]
	str r0, [r4, #4]
	ldr r0, _080494D8 @ =0x000002BA
	strh r0, [r4, #0xa]
	ldr r1, _080494DC @ =IWRAM_START + 0x34
	adds r0, r3, r1
	mov r1, ip
	strb r1, [r0]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r6, [r4, #8]
	strh r6, [r4, #0x14]
	strh r6, [r4, #0x1c]
	ldr r0, _080494E0 @ =IWRAM_START + 0x35
	adds r1, r3, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080494E4 @ =IWRAM_START + 0x36
	adds r1, r3, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _080494E8 @ =IWRAM_START + 0x39
	adds r3, r3, r1
	mov r0, ip
	strb r0, [r3]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	movs r1, #0xc0
	lsls r1, r1, #6
	str r1, [r4, #0x10]
	ldrb r0, [r2, #0xc]
	cmp r0, #0
	beq _080494BC
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r0, r1
	str r0, [r4, #0x10]
_080494BC:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080494CC: .4byte sub_80494EC
_080494D0: .4byte gUnknown_03005960
_080494D4: .4byte IWRAM_START + 0x14
_080494D8: .4byte 0x000002BA
_080494DC: .4byte IWRAM_START + 0x34
_080494E0: .4byte IWRAM_START + 0x35
_080494E4: .4byte IWRAM_START + 0x36
_080494E8: .4byte IWRAM_START + 0x39

	thumb_func_start sub_80494EC
sub_80494EC: @ 0x080494EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _08049510 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r6, r1, r0
	ldrb r5, [r4, #0xc]
	cmp r5, #0
	bne _08049514
	ldrh r0, [r4, #0xa]
	adds r0, #0x20
	b _08049518
	.align 2, 0
_08049510: .4byte gCurTask
_08049514:
	ldrh r0, [r4, #0xa]
	subs r0, #0x20
_08049518:
	strh r0, [r4, #0xa]
	ldr r0, _08049540 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08049548
	movs r2, #8
	ldrsh r1, [r4, r2]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r3, #0xa
	ldrsh r1, [r4, r3]
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldr r0, _08049544 @ =gUnknown_03005960
	mov r8, r0
	b _0804956C
	.align 2, 0
_08049540: .4byte gUnknown_030059E0
_08049544: .4byte gUnknown_03005960
_08049548:
	movs r2, #8
	ldrsh r1, [r4, r2]
	ldr r2, _080495B8 @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r3, #0xa
	ldrsh r1, [r4, r3]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	mov r8, r2
_0804956C:
	movs r3, #8
	rsbs r3, r3, #0
	cmp r5, #0
	bne _08049576
	movs r3, #8
_08049576:
	ldr r1, [r4]
	asrs r1, r1, #8
	mov r2, r8
	ldr r0, [r2]
	adds r1, r1, r0
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	ldr r2, [r2, #4]
	adds r0, r0, r2
	movs r7, #0
	str r7, [sp]
	ldr r2, _080495BC @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	bl sub_801E4E4
	adds r2, r0, #0
	cmp r2, #0
	bge _080495DC
	movs r0, #8
	ldrsh r1, [r4, r0]
	lsls r1, r1, #1
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	strh r7, [r4, #0xa]
	ldr r1, [r4, #4]
	cmp r5, #0
	bne _080495C0
	lsls r0, r2, #8
	adds r0, r1, r0
	b _080495C4
	.align 2, 0
_080495B8: .4byte gUnknown_03005960
_080495BC: .4byte sub_801EE64
_080495C0:
	lsls r0, r2, #8
	subs r0, r1, r0
_080495C4:
	str r0, [r4, #4]
	movs r0, #0x3d
	strb r0, [r4, #0xd]
	ldr r0, _080495D4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080495D8 @ =sub_8049658
	str r0, [r1, #8]
	b _08049642
	.align 2, 0
_080495D4: .4byte gCurTask
_080495D8: .4byte sub_8049658
_080495DC:
	ldr r0, [r4]
	asrs r0, r0, #8
	strh r0, [r6, #0x16]
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	strh r0, [r6, #0x18]
	ldr r0, [r4, #0x10]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	beq _08049636
	ldr r1, [r4]
	asrs r1, r1, #8
	mov r2, r8
	ldr r0, [r2]
	adds r1, r1, r0
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	mov r3, r8
	ldr r0, [r3, #4]
	adds r2, r2, r0
	ldr r0, _08049650 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	cmp r3, #1
	bne _08049636
	ldr r2, [r4, #0x10]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _08049636
	adds r1, r2, #0
	adds r1, #0x68
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _08049654 @ =0x000002B6
	strh r0, [r1, #0xa]
	adds r0, r2, #0
	adds r0, #0x88
	strb r3, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08049636:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08049642:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08049650: .4byte gUnknown_030059E0
_08049654: .4byte 0x000002B6

	thumb_func_start sub_8049658
sub_8049658: @ 0x08049658
	push {r4, lr}
	ldr r2, _08049684 @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, _08049688 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	adds r3, r2, #0
	cmp r0, #0
	beq _0804968C
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	b _080496A8
	.align 2, 0
_08049684: .4byte gCurTask
_08049688: .4byte gUnknown_030059E0
_0804968C:
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r2, _080496C4 @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
_080496A8:
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldrb r0, [r4, #0xd]
	subs r1, r0, #1
	strb r1, [r4, #0xd]
	lsls r0, r1, #0x18
	cmp r0, #0
	bne _080496C8
	ldr r0, [r3]
	bl TaskDestroy
	b _080496F0
	.align 2, 0
_080496C4: .4byte gUnknown_03005960
_080496C8:
	movs r0, #3
	ands r1, r0
	cmp r1, #0
	bne _080496F0
	movs r0, #0x90
	bl m4aSongNumStart
	ldr r2, _080496F8 @ =gUnknown_03005960
	ldr r0, [r2]
	lsls r0, r0, #8
	ldr r1, [r4]
	adds r1, r1, r0
	ldr r0, [r2, #4]
	lsls r0, r0, #8
	ldr r2, [r4, #4]
	adds r2, r2, r0
	ldr r0, [r4, #0x10]
	ldrb r3, [r4, #0xc]
	bl sub_80496FC
_080496F0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080496F8: .4byte gUnknown_03005960

	thumb_func_start sub_80496FC
sub_80496FC: @ 0x080496FC
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r3, r3, #0x18
	mov sb, r3
	mov r0, sb
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _080497C0 @ =sub_80497E0
	movs r2, #0xc2
	lsls r2, r2, #7
	movs r6, #0
	str r6, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r3, _080497C4 @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r0, r0, #8
	subs r4, r4, r0
	str r4, [r1]
	ldr r0, [r3, #4]
	lsls r0, r0, #8
	subs r5, r5, r0
	str r5, [r1, #4]
	movs r3, #0
	strh r6, [r1, #8]
	strh r6, [r1, #0xa]
	movs r0, #0x2e
	strb r0, [r1, #0xd]
	mov r0, r8
	str r0, [r1, #0x10]
	ldr r0, _080497C8 @ =IWRAM_START + 0x14
	adds r5, r2, r0
	asrs r4, r4, #8
	strh r4, [r5, #0x16]
	ldr r0, [r1, #4]
	asrs r0, r0, #8
	strh r0, [r5, #0x18]
	movs r1, #0xf4
	lsls r1, r1, #1
	add r8, r1
	mov r1, r8
	ldr r0, [r1]
	adds r0, #0xc0
	str r0, [r5, #4]
	ldr r0, _080497CC @ =0x000002BB
	strh r0, [r5, #0xa]
	ldr r1, _080497D0 @ =IWRAM_START + 0x34
	adds r0, r2, r1
	strb r3, [r0]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	strh r6, [r5, #8]
	strh r6, [r5, #0x14]
	strh r6, [r5, #0x1c]
	ldr r0, _080497D4 @ =IWRAM_START + 0x35
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080497D8 @ =IWRAM_START + 0x36
	adds r1, r2, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _080497DC @ =IWRAM_START + 0x39
	adds r2, r2, r1
	strb r3, [r2]
	subs r0, #0x11
	str r0, [r5, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r5, #0x10]
	mov r0, sb
	cmp r0, #0
	beq _080497B0
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r0, r1
	str r0, [r5, #0x10]
_080497B0:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080497C0: .4byte sub_80497E0
_080497C4: .4byte gUnknown_03005960
_080497C8: .4byte IWRAM_START + 0x14
_080497CC: .4byte 0x000002BB
_080497D0: .4byte IWRAM_START + 0x34
_080497D4: .4byte IWRAM_START + 0x35
_080497D8: .4byte IWRAM_START + 0x36
_080497DC: .4byte IWRAM_START + 0x39

	thumb_func_start sub_80497E0
sub_80497E0: @ 0x080497E0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r3, _08049814 @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x14
	adds r5, r1, r0
	ldr r2, _08049818 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #0x80
	ands r1, r0
	adds r7, r2, #0
	cmp r1, #0
	beq _0804981C
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	b _08049838
	.align 2, 0
_08049814: .4byte gCurTask
_08049818: .4byte gUnknown_030059E0
_0804981C:
	movs r0, #8
	ldrsh r1, [r4, r0]
	ldr r2, _08049854 @ =gUnknown_03005960
	ldr r0, [r2, #0x38]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
	movs r0, #0xa
	ldrsh r1, [r4, r0]
	ldr r0, [r2, #0x3c]
	lsls r0, r0, #8
	adds r1, r1, r0
_08049838:
	ldr r0, [r4, #4]
	adds r0, r0, r1
	str r0, [r4, #4]
	ldrb r0, [r4, #0xd]
	subs r0, #1
	strb r0, [r4, #0xd]
	movs r6, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08049858
	ldr r0, [r3]
	bl TaskDestroy
	b _080498BC
	.align 2, 0
_08049854: .4byte gUnknown_03005960
_08049858:
	ldr r0, [r4]
	asrs r0, r0, #8
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	asrs r0, r0, #8
	strh r0, [r5, #0x18]
	ldr r0, [r4, #0x10]
	ldrb r0, [r0, #0x14]
	cmp r0, #0
	beq _080498B0
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r3, _080498C4 @ =gUnknown_03005960
	ldr r0, [r3]
	adds r1, r1, r0
	ldr r2, [r4, #4]
	asrs r2, r2, #8
	ldr r0, [r3, #4]
	adds r2, r2, r0
	str r7, [sp]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800CA20
	adds r3, r0, #0
	cmp r3, #1
	bne _080498B0
	ldr r2, [r4, #0x10]
	ldrb r0, [r2, #0x16]
	cmp r0, #0
	bne _080498B0
	adds r1, r2, #0
	adds r1, #0x68
	movs r0, #0x1e
	strb r0, [r2, #0x15]
	ldr r0, _080498C8 @ =0x000002B6
	strh r0, [r1, #0xa]
	adds r0, r2, #0
	adds r0, #0x88
	strb r3, [r0]
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r6
	strb r0, [r1]
_080498B0:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_080498BC:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080498C4: .4byte gUnknown_03005960
_080498C8: .4byte 0x000002B6

	thumb_func_start sub_80498CC
sub_80498CC: @ 0x080498CC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _080499B4 @ =sub_80499D8
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r1, _080499B8 @ =sub_8049D1C
	str r1, [sp]
	movs r1, #8
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	movs r0, #0
	strb r4, [r6, #4]
	strb r0, [r6, #5]
	strb r0, [r6, #6]
	ldr r1, _080499BC @ =gUnknown_080D5964
	ldrb r0, [r6, #4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6]
	ldrb r0, [r6, #4]
	lsls r0, r0, #2
	adds r3, r1, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r6, #2]
	ldr r2, _080499C0 @ =gUnknown_03005440
	ldrb r0, [r6, #4]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2]
	ldr r1, _080499C4 @ =gUnknown_030054BC
	ldrb r0, [r6, #4]
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	cmp r4, #0
	beq _080499AC
	bl sub_802A018
	ldr r3, _080499C8 @ =gUnknown_030059E0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r3, #0x14]
	ldr r1, _080499CC @ =gUnknown_080D87E6
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r5, [r0]
	ldr r2, [r3, #8]
	asrs r0, r2, #8
	subs r5, r5, r0
	lsls r0, r4, #2
	adds r1, #2
	adds r0, r0, r1
	ldrh r4, [r0]
	ldr r1, [r3, #0xc]
	asrs r0, r1, #8
	subs r4, r4, r0
	lsls r7, r5, #8
	adds r2, r2, r7
	str r2, [r3, #8]
	lsls r2, r4, #8
	adds r1, r1, r2
	str r1, [r3, #0xc]
	ldr r1, _080499D0 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, #0x78
	adds r0, r0, r5
	str r0, [r1]
	ldr r0, [r1, #4]
	subs r0, #0x78
	adds r0, r0, r4
	str r0, [r1, #4]
	ldr r0, [r1, #0x20]
	subs r0, #0x78
	adds r0, r0, r5
	str r0, [r1, #0x20]
	ldr r0, [r1, #0x24]
	subs r0, #0x78
	adds r0, r0, r4
	str r0, [r1, #0x24]
	ldr r0, [r1, #0x10]
	subs r0, #0x78
	adds r0, r0, r5
	str r0, [r1, #0x10]
	ldr r0, [r1, #0x14]
	subs r0, #0x78
	adds r0, r0, r4
	str r0, [r1, #0x14]
	ldr r0, _080499D4 @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _080499A6
	ldr r0, [r1]
	adds r0, r0, r7
	str r0, [r1]
	ldr r0, [r1, #4]
	adds r0, r0, r2
	str r0, [r1, #4]
_080499A6:
	ldrb r0, [r6, #4]
	subs r0, #1
	strb r0, [r6, #4]
_080499AC:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080499B4: .4byte sub_80499D8
_080499B8: .4byte sub_8049D1C
_080499BC: .4byte gUnknown_080D5964
_080499C0: .4byte gUnknown_03005440
_080499C4: .4byte gUnknown_030054BC
_080499C8: .4byte gUnknown_030059E0
_080499CC: .4byte gUnknown_080D87E6
_080499D0: .4byte gUnknown_03005960
_080499D4: .4byte gUnknown_030056A4

	thumb_func_start sub_80499D8
sub_80499D8: @ 0x080499D8
	push {r4, r5, r6, r7, lr}
	ldr r0, _08049A64 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldrb r0, [r7, #4]
	cmp r0, #6
	bls _080499EE
	b _08049C4C
_080499EE:
	cmp r0, #6
	beq _080499F4
	b _08049BAC
_080499F4:
	ldr r1, _08049A68 @ =gUnknown_03005440
	ldr r2, _08049A6C @ =gUnknown_080D5964
	ldrh r0, [r2, #0x1c]
	strh r0, [r1]
	ldr r1, _08049A70 @ =gUnknown_030054BC
	ldrh r0, [r2, #0x1e]
	strh r0, [r1]
	ldr r1, _08049A74 @ =gUnknown_030059E0
	ldr r2, [r1, #8]
	ldr r0, _08049A78 @ =0x00A7CFFF
	adds r3, r1, #0
	cmp r2, r0
	bgt _08049A96
	ldr r0, _08049A7C @ =gUnknown_080D8808
	ldr r0, [r0, #0x30]
	adds r0, #0x1e
	lsls r0, r0, #8
	cmp r2, r0
	ble _08049A96
	ldr r0, [r3, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r3, #0x20]
	movs r2, #0
	movs r1, #0
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r3, #0x14]
	adds r0, r3, #0
	adds r0, #0x5e
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	subs r0, #0x38
	strb r2, [r0]
	ldr r0, [r3, #8]
	asrs r0, r0, #8
	subs r0, #0x78
	ldr r1, _08049A80 @ =gUnknown_03005960
	ldr r2, [r1]
	cmp r0, r2
	bne _08049A4C
	b _08049C4C
_08049A4C:
	cmp r0, r2
	ble _08049A84
	ldr r0, [r1, #0x20]
	adds r0, #1
	str r0, [r1, #0x20]
	adds r0, r2, #1
	str r0, [r1]
	ldr r0, [r1, #0x10]
	adds r0, #1
	str r0, [r1, #0x10]
	b _08049C4C
	.align 2, 0
_08049A64: .4byte gCurTask
_08049A68: .4byte gUnknown_03005440
_08049A6C: .4byte gUnknown_080D5964
_08049A70: .4byte gUnknown_030054BC
_08049A74: .4byte gUnknown_030059E0
_08049A78: .4byte 0x00A7CFFF
_08049A7C: .4byte gUnknown_080D8808
_08049A80: .4byte gUnknown_03005960
_08049A84:
	ldr r0, [r1, #0x20]
	subs r0, #1
	str r0, [r1, #0x20]
	subs r0, r2, #1
	str r0, [r1]
	ldr r0, [r1, #0x10]
	subs r0, #1
	str r0, [r1, #0x10]
	b _08049C4C
_08049A96:
	ldr r1, [r3, #8]
	ldr r0, _08049ADC @ =0x00A6CBFF
	cmp r1, r0
	bgt _08049AF4
	ldr r0, _08049AE0 @ =gUnknown_080D8808
	ldr r0, [r0, #0x30]
	adds r0, #0x14
	lsls r0, r0, #8
	cmp r1, r0
	ble _08049AF4
	ldr r0, _08049AE4 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _08049AB4
	b _08049C4C
_08049AB4:
	ldr r4, _08049AE8 @ =gUnknown_03005424
	ldrh r1, [r4]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08049AC4
	b _08049C4C
_08049AC4:
	ldr r0, _08049AEC @ =gUnknown_03005490
	ldr r0, [r0]
	str r0, [r3, #0x78]
	movs r0, #7
	bl sub_8039EA4
	ldrh r1, [r4]
	ldr r0, _08049AF0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r4]
	b _08049C4C
	.align 2, 0
_08049ADC: .4byte 0x00A6CBFF
_08049AE0: .4byte gUnknown_080D8808
_08049AE4: .4byte gUnknown_03005B4C
_08049AE8: .4byte gUnknown_03005424
_08049AEC: .4byte gUnknown_03005490
_08049AF0: .4byte 0x0000FFFD
_08049AF4:
	adds r2, r3, #0
	ldr r5, [r2, #8]
	ldr r0, _08049B1C @ =0x00A7D000
	cmp r5, r0
	ble _08049B24
	ldr r0, [r2, #0x20]
	ldr r1, _08049B20 @ =0xF7FFFFFF
	ands r0, r1
	str r0, [r2, #0x20]
	movs r0, #0
	strh r0, [r2, #0x14]
	adds r0, r2, #0
	adds r0, #0x6d
	movs r1, #1
	strb r1, [r0]
	ldrb r0, [r7, #4]
	adds r0, #1
	strb r0, [r7, #4]
	strb r1, [r7, #6]
	b _08049C4C
	.align 2, 0
_08049B1C: .4byte 0x00A7D000
_08049B20: .4byte 0xF7FFFFFF
_08049B24:
	ldr r0, _08049B90 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	bne _08049B2E
	b _08049C4C
_08049B2E:
	ldr r0, _08049B94 @ =0x00A53BFF
	cmp r5, r0
	ble _08049B36
	b _08049C4C
_08049B36:
	ldr r4, _08049B98 @ =gUnknown_080D8808
	ldrb r0, [r7, #4]
	lsls r2, r0, #3
	adds r0, r2, r4
	ldr r1, [r0]
	cmp r1, #0
	bge _08049B46
	b _08049C4C
_08049B46:
	lsls r0, r1, #8
	cmp r5, r0
	bge _08049B4E
	b _08049C4C
_08049B4E:
	adds r0, r4, #4
	adds r0, r2, r0
	ldr r4, [r0]
	lsls r6, r4, #8
	adds r0, r5, r6
	str r0, [r3, #8]
	ldr r0, _08049B9C @ =gUnknown_030054FC
	str r6, [r0]
	ldrb r1, [r7, #4]
	adds r0, r6, #0
	bl sub_8039F50
	ldr r1, _08049BA0 @ =gUnknown_03005430
	movs r0, #1
	strb r0, [r1]
	ldr r1, _08049BA4 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r0, r0, r4
	str r0, [r1]
	ldr r0, [r1, #0x20]
	adds r0, r0, r4
	str r0, [r1, #0x20]
	ldr r0, [r1, #0x10]
	adds r0, r0, r4
	str r0, [r1, #0x10]
	ldr r0, _08049BA8 @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _08049C4C
	ldr r0, [r1]
	adds r0, r0, r6
	b _08049C4A
	.align 2, 0
_08049B90: .4byte gUnknown_03005B4C
_08049B94: .4byte 0x00A53BFF
_08049B98: .4byte gUnknown_080D8808
_08049B9C: .4byte gUnknown_030054FC
_08049BA0: .4byte gUnknown_03005430
_08049BA4: .4byte gUnknown_03005960
_08049BA8: .4byte gUnknown_030056A4
_08049BAC:
	cmp r0, #5
	bhi _08049C4C
	ldr r6, _08049C84 @ =gUnknown_03005960
	ldr r0, _08049C88 @ =gUnknown_080D87D8
	ldrb r1, [r7, #4]
	lsls r1, r1, #1
	adds r1, r1, r0
	ldr r0, [r6, #0x10]
	ldrh r1, [r1]
	cmp r0, r1
	ble _08049BEE
	ldr r1, _08049C8C @ =gUnknown_03005430
	movs r0, #1
	strb r0, [r1]
	ldr r1, _08049C90 @ =gUnknown_0300542C
	movs r0, #0xa
	strb r0, [r1]
	ldr r1, _08049C94 @ =gUnknown_030059E0
	ldr r0, _08049C98 @ =gUnknown_03005490
	ldr r0, [r0]
	str r0, [r1, #0x78]
	ldrb r0, [r7, #4]
	adds r0, #1
	strb r0, [r7, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_8039EA4
	ldr r2, _08049C9C @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _08049CA0 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
_08049BEE:
	ldr r4, _08049CA4 @ =gUnknown_080D8808
	ldrb r0, [r7, #4]
	lsls r2, r0, #3
	adds r0, r2, r4
	ldr r1, [r0]
	cmp r1, #0
	blt _08049C4C
	ldr r0, _08049CA8 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _08049C4C
	ldr r3, _08049C94 @ =gUnknown_030059E0
	lsls r0, r1, #8
	ldr r1, [r3, #8]
	cmp r1, r0
	blt _08049C4C
	adds r0, r4, #4
	adds r0, r2, r0
	ldr r4, [r0]
	lsls r5, r4, #8
	adds r0, r1, r5
	str r0, [r3, #8]
	ldr r0, _08049CAC @ =gUnknown_030054FC
	str r5, [r0]
	ldrb r1, [r7, #4]
	adds r0, r5, #0
	bl sub_8039F50
	ldr r1, _08049C8C @ =gUnknown_03005430
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r6]
	adds r0, r0, r4
	str r0, [r6]
	ldr r0, [r6, #0x20]
	adds r0, r0, r4
	str r0, [r6, #0x20]
	ldr r0, [r6, #0x10]
	adds r0, r0, r4
	str r0, [r6, #0x10]
	ldr r0, _08049CB0 @ =gUnknown_030056A4
	ldr r1, [r0]
	cmp r1, #0
	beq _08049C4C
	ldr r0, [r1]
	adds r0, r0, r5
_08049C4A:
	str r0, [r1]
_08049C4C:
	ldrb r0, [r7, #5]
	cmp r0, #6
	bhi _08049CC0
	ldr r3, _08049C84 @ =gUnknown_03005960
	ldr r1, _08049C88 @ =gUnknown_080D87D8
	adds r2, r0, #0
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, _08049CB4 @ =0xFFFFFDA8
	adds r0, r0, r1
	ldr r1, [r3, #0x10]
	cmp r1, r0
	ble _08049CC0
	cmp r2, #6
	bne _08049CBC
	ldrb r0, [r7, #6]
	cmp r0, #0
	bne _08049C7C
	movs r0, #1
	str r0, [r3, #0xc]
	movs r0, #0xa0
	lsls r0, r0, #3
	str r0, [r3, #8]
_08049C7C:
	ldr r1, _08049CB8 @ =gUnknown_030054B0
	movs r0, #1
	strb r0, [r1]
	b _08049CC0
	.align 2, 0
_08049C84: .4byte gUnknown_03005960
_08049C88: .4byte gUnknown_080D87D8
_08049C8C: .4byte gUnknown_03005430
_08049C90: .4byte gUnknown_0300542C
_08049C94: .4byte gUnknown_030059E0
_08049C98: .4byte gUnknown_03005490
_08049C9C: .4byte gUnknown_03005424
_08049CA0: .4byte 0x0000FFFD
_08049CA4: .4byte gUnknown_080D8808
_08049CA8: .4byte gUnknown_03005B4C
_08049CAC: .4byte gUnknown_030054FC
_08049CB0: .4byte gUnknown_030056A4
_08049CB4: .4byte 0xFFFFFDA8
_08049CB8: .4byte gUnknown_030054B0
_08049CBC:
	adds r0, r2, #1
	strb r0, [r7, #5]
_08049CC0:
	ldr r0, _08049CDC @ =gUnknown_080D5964
	ldrb r2, [r7, #5]
	lsls r1, r2, #2
	adds r1, r1, r0
	ldrh r3, [r7]
	adds r5, r3, #0
	ldrh r4, [r1]
	adds r6, r0, #0
	cmp r5, r4
	beq _08049CE4
	cmp r5, r4
	bhs _08049CE0
	adds r0, r3, #1
	b _08049CE2
	.align 2, 0
_08049CDC: .4byte gUnknown_080D5964
_08049CE0:
	subs r0, r3, #1
_08049CE2:
	strh r0, [r7]
_08049CE4:
	lsls r1, r2, #2
	adds r0, r6, #2
	adds r1, r1, r0
	ldrh r2, [r7, #2]
	adds r3, r2, #0
	ldrh r0, [r1]
	cmp r3, r0
	beq _08049D00
	cmp r3, r0
	bhs _08049CFC
	adds r0, r2, #1
	b _08049CFE
_08049CFC:
	subs r0, r2, #1
_08049CFE:
	strh r0, [r7, #2]
_08049D00:
	ldr r1, _08049D14 @ =gUnknown_03005440
	ldrh r0, [r7]
	strh r0, [r1]
	ldr r1, _08049D18 @ =gUnknown_030054BC
	ldrh r0, [r7, #2]
	strh r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08049D14: .4byte gUnknown_03005440
_08049D18: .4byte gUnknown_030054BC

	thumb_func_start sub_8049D1C
sub_8049D1C: @ 0x08049D1C
	bx lr
	.align 2, 0

	thumb_func_start sub_8049D20
sub_8049D20: @ 0x08049D20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08049E74 @ =sub_8049E90
	movs r1, #0xb2
	lsls r1, r1, #1
	movs r2, #0x81
	lsls r2, r2, #7
	ldr r3, _08049E78 @ =sub_804A6B4
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r7, r0, r1
	ldr r2, _08049E7C @ =IWRAM_START + 0x15D
	adds r1, r0, r2
	movs r2, #0
	strb r2, [r1]
	ldr r3, _08049E80 @ =IWRAM_START + 0x120
	adds r1, r0, r3
	str r4, [r1]
	adds r3, #0x40
	adds r1, r0, r3
	str r5, [r1]
	subs r3, #2
	adds r1, r0, r3
	strb r2, [r1]
	ldr r1, _08049E84 @ =IWRAM_START + 0x15F
	adds r0, r0, r1
	strb r2, [r0]
	movs r0, #0x2f
	bl sub_8007C10
	str r0, [sp, #4]
	movs r2, #0xf0
	lsls r2, r2, #1
	adds r0, r0, r2
	str r0, [sp, #8]
	movs r5, #0
	ldr r3, _08049E88 @ =gUnknown_080D8840
	mov sb, r3
	movs r0, #4
	add r0, sb
	mov sl, r0
	movs r6, #0
_08049D8A:
	lsls r2, r5, #3
	movs r3, #0x92
	lsls r3, r3, #1
	adds r1, r7, r3
	adds r1, r1, r2
	mov r3, sb
	adds r0, r2, r3
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r1]
	movs r0, #0x94
	lsls r0, r0, #1
	adds r1, r7, r0
	adds r1, r1, r2
	mov r3, sl
	adds r0, r2, r3
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r1]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r2
	str r6, [r0]
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r0, r0, r2
	str r6, [r0]
	lsls r3, r5, #1
	movs r0, #0xaa
	lsls r0, r0, #1
	adds r2, r7, r0
	adds r2, r2, r3
	adds r0, r5, #2
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	strh r0, [r2]
	movs r1, #0xad
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r5
	strb r6, [r0]
	movs r4, #0
	adds r2, r5, #1
	mov r8, r2
	adds r3, r3, r5
	lsls r3, r3, #5
	adds r5, r7, r3
_08049DF2:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r0, #0x50
	strh r0, [r2, #0x16]
	strh r0, [r2, #0x18]
	lsls r0, r4, #2
	add r0, sp
	adds r0, #4
	ldr r0, [r0]
	str r0, [r2, #4]
	ldr r0, _08049E8C @ =gUnknown_080D8864
	lsls r1, r4, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r2, #0x1a]
	strh r6, [r2, #8]
	strh r6, [r2, #0x14]
	strh r6, [r2, #0x1c]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x25
	strb r6, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r2, #0x10]
	adds r0, r2, #0
	bl sub_8004558
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _08049DF2
	mov r3, r8
	lsls r0, r3, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _08049D8A
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08049E74: .4byte sub_8049E90
_08049E78: .4byte sub_804A6B4
_08049E7C: .4byte IWRAM_START + 0x15D
_08049E80: .4byte IWRAM_START + 0x120
_08049E84: .4byte IWRAM_START + 0x15F
_08049E88: .4byte gUnknown_080D8840
_08049E8C: .4byte gUnknown_080D8864

	thumb_func_start sub_8049E90
sub_8049E90: @ 0x08049E90
	push {r4, r5, r6, lr}
	ldr r0, _08049EB0 @ =gCurTask
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r0, _08049EB4 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	bne _08049EB8
	adds r0, r2, #0
	bl TaskDestroy
	b _08049F08
	.align 2, 0
_08049EB0: .4byte gCurTask
_08049EB4: .4byte gUnknown_03005B4C
_08049EB8:
	movs r4, #0
	ldr r6, _08049F10 @ =gUnknown_080D8874
_08049EBC:
	movs r1, #0xad
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r2, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl _call_via_r2
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _08049EBC
	ldr r1, _08049F14 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	cmp r0, #0x84
	bgt _08049EEE
	adds r0, r1, #0
	bl sub_800CBA4
_08049EEE:
	ldr r2, _08049F18 @ =0x0000015F
	adds r1, r5, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _08049F08
	adds r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _08049F08
	movs r0, #1
	strb r0, [r1]
_08049F08:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08049F10: .4byte gUnknown_080D8874
_08049F14: .4byte gUnknown_030059E0
_08049F18: .4byte 0x0000015F

	thumb_func_start sub_8049F1C
sub_8049F1C: @ 0x08049F1C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov ip, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	mov r0, r8
	lsls r0, r0, #1
	str r0, [sp]
	add r0, r8
	lsls r0, r0, #5
	mov r1, ip
	adds r7, r1, r0
	movs r0, #0x30
	adds r0, r0, r7
	mov sl, r0
	mov r1, r8
	lsls r3, r1, #3
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, ip
	adds r2, r0, r3
	ldr r0, [r2]
	rsbs r0, r0, #0
	mov sb, r0
	ldr r6, _0804A060 @ =0x0000015F
	add r6, ip
	ldrb r0, [r6]
	cmp r0, #0
	bne _08049F62
	str r0, [r2]
_08049F62:
	ldr r2, [r2]
	add sb, r2
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	movs r0, #0x9e
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r4, r1, #8
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r0, [r0]
	adds r0, r0, r2
	asrs r5, r0, #8
	ldr r1, _0804A064 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	ldrb r0, [r6]
	cmp r0, #0
	bne _08049FD6
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, ip
	ldr r1, [sp]
	adds r6, r0, r1
	ldrh r0, [r6]
	subs r0, #1
	strh r0, [r6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08049FD6
	ldr r3, _0804A068 @ =gUnknown_080D8858
	movs r2, #0xad
	lsls r2, r2, #1
	add r2, ip
	add r2, r8
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, r3, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r6]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_08049FD6:
	ldr r0, _0804A06C @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #8
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _0804A008
	ldr r0, [r6, #0x3c]
	cmp r0, r7
	bne _0804A008
	ldr r0, [r6, #0xc]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	add r0, sb
	str r0, [r6, #0xc]
	movs r0, #0xaf
	lsls r0, r0, #1
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #1
	bne _0804A008
	ldr r0, [r6, #8]
	adds r0, r0, r1
	str r0, [r6, #8]
_0804A008:
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0804A036
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_800CCB8
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0804A036
	lsls r1, r1, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r6, #0xc]
	adds r0, r0, r1
	str r0, [r6, #0xc]
_0804A036:
	adds r0, r7, #0
	bl sub_80051E8
	ldrh r0, [r7, #0x16]
	mov r1, sl
	strh r0, [r1, #0x16]
	ldrh r0, [r7, #0x18]
	adds r0, #0x40
	strh r0, [r1, #0x18]
	mov r0, sl
	bl sub_80051E8
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A060: .4byte 0x0000015F
_0804A064: .4byte gUnknown_03005960
_0804A068: .4byte gUnknown_080D8858
_0804A06C: .4byte gUnknown_030059E0

	thumb_func_start sub_804A070
sub_804A070: @ 0x0804A070
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #5
	adds r6, r5, r0
	movs r0, #0x30
	adds r0, r0, r6
	mov r8, r0
	ldr r1, _0804A1A8 @ =0x0000015F
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804A0A8
	lsls r0, r7, #3
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r1, r5, r2
	adds r1, r1, r0
	ldr r0, _0804A1AC @ =0xFFFFF800
	str r0, [r1]
_0804A0A8:
	lsls r2, r7, #3
	movs r0, #0x92
	lsls r0, r0, #1
	adds r1, r5, r0
	adds r1, r1, r2
	mov ip, r1
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r0, r2
	mov sl, r0
	mov r0, ip
	ldr r0, [r0]
	mov sb, r0
	mov r1, sl
	ldr r0, [r1]
	add r0, sb
	asrs r0, r0, #8
	mov ip, r0
	mov r3, ip
	movs r0, #0x94
	lsls r0, r0, #1
	adds r1, r5, r0
	adds r1, r1, r2
	mov sb, r1
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r0, r0, r2
	mov r2, sb
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r2, r1, #8
	adds r4, r2, #0
	ldr r1, _0804A1B0 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r3, r0
	strh r0, [r6, #0x16]
	ldr r0, [r1, #4]
	subs r0, r4, r0
	strh r0, [r6, #0x18]
	ldr r4, _0804A1B4 @ =gUnknown_030059E0
	ldr r1, [r4, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0xf
	ands r1, r0
	cmp r1, #0
	bne _0804A136
	str r4, [sp]
	str r1, [sp, #4]
	adds r0, r6, #0
	mov r1, ip
	movs r3, #0
	bl sub_800C204
	cmp r0, #0
	beq _0804A136
	ldr r0, [r4, #0xc]
	ldr r1, _0804A1AC @ =0xFFFFF800
	adds r0, r0, r1
	str r0, [r4, #0xc]
	ldr r0, _0804A1B8 @ =0x0000FC80
	strh r0, [r4, #0x12]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x14
	strh r0, [r1]
	adds r1, #9
	movs r0, #6
	strb r0, [r1]
_0804A136:
	ldr r2, _0804A1A8 @ =0x0000015F
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804A17E
	movs r0, #0x84
	lsls r0, r0, #1
	bl m4aSongNumStart
	lsls r1, r7, #1
	movs r2, #0xaa
	lsls r2, r2, #1
	adds r0, r5, r2
	adds r4, r0, r1
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804A17E
	ldr r3, _0804A1BC @ =gUnknown_080D8858
	movs r0, #0xad
	lsls r0, r0, #1
	adds r2, r5, r0
	adds r2, r2, r7
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, r3, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_0804A17E:
	adds r0, r6, #0
	bl sub_80051E8
	ldrh r0, [r6, #0x16]
	mov r1, r8
	strh r0, [r1, #0x16]
	ldrh r0, [r6, #0x18]
	adds r0, #0x40
	strh r0, [r1, #0x18]
	mov r0, r8
	bl sub_80051E8
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A1A8: .4byte 0x0000015F
_0804A1AC: .4byte 0xFFFFF800
_0804A1B0: .4byte gUnknown_03005960
_0804A1B4: .4byte gUnknown_030059E0
_0804A1B8: .4byte 0x0000FC80
_0804A1BC: .4byte gUnknown_080D8858

	thumb_func_start sub_804A1C0
sub_804A1C0: @ 0x0804A1C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r4, r1, #1
	adds r0, r4, r1
	lsls r0, r0, #5
	add r0, r8
	mov sb, r0
	adds r0, #0x30
	str r0, [sp, #0x20]
	lsls r3, r1, #3
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, r8
	adds r2, r0, r3
	ldr r0, [r2]
	rsbs r0, r0, #0
	str r0, [sp, #0x24]
	ldr r7, _0804A378 @ =0x0000015F
	add r7, r8
	ldrb r0, [r7]
	cmp r0, #0
	bne _0804A200
	ldr r0, _0804A37C @ =0xFFFFF800
	str r0, [r2]
_0804A200:
	ldr r2, [r2]
	ldr r1, [sp, #0x24]
	adds r1, r1, r2
	str r1, [sp, #0x24]
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, r8
	adds r1, r1, r3
	movs r0, #0x9e
	lsls r0, r0, #1
	add r0, r8
	adds r0, r0, r3
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r5, r1, #8
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, r8
	adds r0, r0, r3
	ldr r0, [r0]
	adds r0, r0, r2
	asrs r6, r0, #8
	ldr r1, _0804A380 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r5, r0
	mov r2, sb
	strh r0, [r2, #0x16]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	strh r0, [r2, #0x18]
	ldrb r0, [r7]
	cmp r0, #0
	bne _0804A2EC
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, r8
	adds r0, r0, r4
	ldrh r0, [r0]
	cmp r0, #0x3c
	beq _0804A258
	str r4, [sp, #0x28]
	cmp r0, #0x32
	bne _0804A2B6
_0804A258:
	movs r7, #0
	str r4, [sp, #0x28]
	adds r3, r6, #0
	subs r3, #0x10
	str r3, [sp, #0x2c]
	mov r4, sp
	movs r2, #0
_0804A266:
	lsls r0, r7, #6
	ldr r1, _0804A384 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r0, r0, r5
	subs r0, #0x14
	str r0, [sp, #0x14]
	movs r0, #0xc0
	lsls r0, r0, #2
	strh r0, [r4, #0xc]
	ldr r0, [sp, #0x2c]
	str r0, [sp, #0x18]
	movs r0, #0x30
	strh r0, [r4, #0x1c]
	adds r0, #0xd0
	strh r0, [r4, #0xe]
	adds r0, #0x20
	add r0, r8
	ldr r0, [r0]
	str r0, [sp]
	ldr r1, _0804A388 @ =0x000002C3
	strh r1, [r4, #8]
	strh r2, [r4, #0xa]
	str r2, [sp, #4]
	mov r0, sp
	ldr r1, _0804A38C @ =0x0000015D
	add r1, r8
	str r2, [sp, #0x30]
	bl sub_8039D04
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r2, [sp, #0x30]
	cmp r7, #7
	bls _0804A266
_0804A2B6:
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, r8
	ldr r2, [sp, #0x28]
	adds r4, r0, r2
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804A2EC
	ldr r3, _0804A390 @ =gUnknown_080D8858
	movs r2, #0xad
	lsls r2, r2, #1
	add r2, r8
	add r2, sl
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, r3, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_0804A2EC:
	ldr r0, _0804A394 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #8
	ands r1, r2
	adds r4, r0, #0
	cmp r1, #0
	beq _0804A320
	ldr r0, [r4, #0x3c]
	cmp r0, sb
	bne _0804A320
	ldr r0, [r4, #0xc]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	ldr r1, [sp, #0x24]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	movs r0, #0xaf
	lsls r0, r0, #1
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #1
	bne _0804A320
	ldr r0, [r4, #8]
	adds r0, r0, r3
	str r0, [r4, #8]
_0804A320:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0804A34E
	mov r0, sb
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_800CCB8
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0804A34E
	lsls r1, r1, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
_0804A34E:
	mov r0, sb
	bl sub_80051E8
	mov r2, sb
	ldrh r0, [r2, #0x16]
	ldr r3, [sp, #0x20]
	strh r0, [r3, #0x16]
	ldrh r0, [r2, #0x18]
	adds r0, #0x40
	strh r0, [r3, #0x18]
	ldr r0, [sp, #0x20]
	bl sub_80051E8
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A378: .4byte 0x0000015F
_0804A37C: .4byte 0xFFFFF800
_0804A380: .4byte gUnknown_03005960
_0804A384: .4byte gUnknown_08097AA4
_0804A388: .4byte 0x000002C3
_0804A38C: .4byte 0x0000015D
_0804A390: .4byte gUnknown_080D8858
_0804A394: .4byte gUnknown_030059E0

	thumb_func_start sub_804A398
sub_804A398: @ 0x0804A398
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov ip, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	mov r0, sb
	lsls r0, r0, #1
	mov sl, r0
	add r0, sb
	lsls r0, r0, #5
	mov r1, ip
	adds r7, r1, r0
	movs r4, #0x30
	adds r4, r4, r7
	mov r8, r4
	mov r0, sb
	lsls r3, r0, #3
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, ip
	adds r2, r0, r3
	ldr r1, [r2]
	str r1, [sp, #0xc]
	rsbs r4, r1, #0
	str r4, [sp]
	ldr r0, _0804A528 @ =0x0000015F
	add r0, ip
	str r0, [sp, #4]
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804A406
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, ip
	add r0, sl
	ldrh r0, [r0]
	lsls r0, r0, #2
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r4, _0804A52C @ =gUnknown_08097AA4
	adds r0, r0, r4
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #7
	ldr r1, [sp, #0xc]
	subs r0, r1, r0
	str r0, [r2]
_0804A406:
	ldr r2, [r2]
	ldr r4, [sp]
	adds r4, r4, r2
	str r4, [sp]
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	movs r0, #0x9e
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r5, r1, #8
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r0, [r0]
	adds r0, r0, r2
	asrs r6, r0, #8
	ldr r1, _0804A530 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	cmp r0, #0
	bne _0804A480
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, ip
	mov r1, sl
	adds r4, r0, r1
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804A480
	ldr r3, _0804A534 @ =gUnknown_080D8858
	movs r2, #0xad
	lsls r2, r2, #1
	add r2, ip
	add r2, sb
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, r3, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_0804A480:
	ldr r0, _0804A538 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #8
	ands r1, r2
	adds r4, r0, #0
	cmp r1, #0
	beq _0804A4B8
	ldr r0, [r4, #0x3c]
	cmp r0, r7
	bne _0804A4B8
	ldr r0, [r4, #0xc]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r1, [sp]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	movs r0, #0xaf
	lsls r0, r0, #1
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #1
	bne _0804A4B8
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r4, #8]
_0804A4B8:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0804A4E6
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_800CCB8
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0804A4E6
	lsls r1, r1, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
_0804A4E6:
	adds r0, r7, #0
	bl sub_80051E8
	ldrh r0, [r7, #0x16]
	mov r4, r8
	strh r0, [r4, #0x16]
	ldrh r0, [r7, #0x18]
	adds r0, #0x40
	strh r0, [r4, #0x18]
	mov r0, r8
	bl sub_80051E8
	ldrh r0, [r7, #0x18]
	adds r0, #0x80
	strh r0, [r4, #0x18]
	mov r0, r8
	bl sub_80051E8
	ldrh r0, [r7, #0x18]
	adds r0, #0xc0
	strh r0, [r4, #0x18]
	mov r0, r8
	bl sub_80051E8
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A528: .4byte 0x0000015F
_0804A52C: .4byte gUnknown_08097AA4
_0804A530: .4byte gUnknown_03005960
_0804A534: .4byte gUnknown_080D8858
_0804A538: .4byte gUnknown_030059E0

	thumb_func_start sub_804A53C
sub_804A53C: @ 0x0804A53C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov ip, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	mov r0, sb
	lsls r0, r0, #1
	str r0, [sp]
	add r0, sb
	lsls r0, r0, #5
	mov r1, ip
	adds r7, r1, r0
	movs r0, #0x30
	adds r0, r0, r7
	mov r8, r0
	mov r1, sb
	lsls r3, r1, #3
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, ip
	adds r2, r0, r3
	ldr r1, [r2]
	rsbs r0, r1, #0
	mov sl, r0
	ldr r4, _0804A6A4 @ =0x0000015F
	add r4, ip
	ldrb r0, [r4]
	cmp r0, #0
	bne _0804A588
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r1, r0
	str r1, [r2]
_0804A588:
	ldr r2, [r2]
	add sl, r2
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	movs r0, #0x9e
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r5, r1, #8
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r3
	ldr r0, [r0]
	adds r0, r0, r2
	asrs r6, r0, #8
	ldr r1, _0804A6A8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	ldrb r0, [r4]
	cmp r0, #0
	bne _0804A5FC
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, ip
	ldr r1, [sp]
	adds r4, r0, r1
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804A5FC
	ldr r3, _0804A6AC @ =gUnknown_080D8858
	movs r2, #0xad
	lsls r2, r2, #1
	add r2, ip
	add r2, sb
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r1, r3, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrb r0, [r0]
	strb r0, [r2]
_0804A5FC:
	ldr r0, _0804A6B0 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #8
	ands r1, r2
	adds r4, r0, #0
	cmp r1, #0
	beq _0804A632
	ldr r0, [r4, #0x3c]
	cmp r0, r7
	bne _0804A632
	ldr r0, [r4, #0xc]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	add r0, sl
	str r0, [r4, #0xc]
	movs r0, #0xaf
	lsls r0, r0, #1
	add r0, ip
	ldrb r0, [r0]
	cmp r0, #1
	bne _0804A632
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r4, #8]
_0804A632:
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0804A660
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_800CCB8
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _0804A660
	lsls r1, r1, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
_0804A660:
	adds r0, r7, #0
	bl sub_80051E8
	ldrh r0, [r7, #0x16]
	mov r1, r8
	strh r0, [r1, #0x16]
	ldrh r0, [r7, #0x18]
	adds r0, #0x40
	strh r0, [r1, #0x18]
	mov r0, r8
	bl sub_80051E8
	ldrh r0, [r7, #0x18]
	adds r0, #0x80
	mov r1, r8
	strh r0, [r1, #0x18]
	mov r0, r8
	bl sub_80051E8
	ldrh r0, [r7, #0x18]
	adds r0, #0xc0
	mov r1, r8
	strh r0, [r1, #0x18]
	mov r0, r8
	bl sub_80051E8
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A6A4: .4byte 0x0000015F
_0804A6A8: .4byte gUnknown_03005960
_0804A6AC: .4byte gUnknown_080D8858
_0804A6B0: .4byte gUnknown_030059E0

	thumb_func_start sub_804A6B4
sub_804A6B4: @ 0x0804A6B4
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_804A6C8
sub_804A6C8: @ 0x0804A6C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	ldr r1, _0804A764 @ =gBgCntRegs
	movs r2, #0
	movs r3, #0
	ldr r0, _0804A768 @ =0x0000D40E
	strh r0, [r1]
	ldr r0, _0804A76C @ =0x00001F01
	strh r0, [r1, #4]
	ldr r0, _0804A770 @ =gBgScrollRegs
	strh r3, [r0]
	strh r3, [r0, #2]
	ldr r0, _0804A774 @ =gUnknown_03004D80
	strb r2, [r0]
	ldr r1, _0804A778 @ =gUnknown_03002280
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x40
	strb r0, [r1, #3]
	ldr r2, _0804A77C @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r2, #0x20]
	bl sub_8039ED4
	ldr r1, _0804A780 @ =gUnknown_030053B8
	ldr r0, _0804A784 @ =gUnknown_03005590
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, _0804A788 @ =gUnknown_03005AF0
	ldr r0, [r1, #0x1c]
	ldr r3, _0804A78C @ =0xFFFFCFFF
	ands r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r1, _0804A790 @ =gUnknown_03005AA0
	ldr r0, [r1, #0x1c]
	ands r0, r3
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r0, _0804A794 @ =sub_804CBC8
	movs r1, #0xa4
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0804A798 @ =sub_804CD0C
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r1, _0804A79C @ =gUnknown_03005B4C
	str r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0x48
	adds r0, r0, r1
	mov sb, r0
	ldr r0, _0804A7A0 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804A7A4
	movs r0, #6
	strb r0, [r7, #8]
	movs r0, #4
	b _0804A7AA
	.align 2, 0
_0804A764: .4byte gBgCntRegs
_0804A768: .4byte 0x0000D40E
_0804A76C: .4byte 0x00001F01
_0804A770: .4byte gBgScrollRegs
_0804A774: .4byte gUnknown_03004D80
_0804A778: .4byte gUnknown_03002280
_0804A77C: .4byte gUnknown_030059E0
_0804A780: .4byte gUnknown_030053B8
_0804A784: .4byte gUnknown_03005590
_0804A788: .4byte gUnknown_03005AF0
_0804A78C: .4byte 0xFFFFCFFF
_0804A790: .4byte gUnknown_03005AA0
_0804A794: .4byte sub_804CBC8
_0804A798: .4byte sub_804CD0C
_0804A79C: .4byte gUnknown_03005B4C
_0804A7A0: .4byte gUnknown_030054EC
_0804A7A4:
	movs r0, #8
	strb r0, [r7, #8]
	movs r0, #6
_0804A7AA:
	strb r0, [r7, #9]
	strb r0, [r7, #0xa]
	ldr r0, _0804A8B0 @ =0x00A77C00
	str r0, [r7]
	movs r0, #0xb9
	lsls r0, r0, #9
	str r0, [r7, #4]
	movs r1, #0
	movs r0, #0xb4
	lsls r0, r0, #1
	strh r0, [r7, #0xe]
	adds r0, #0x98
	strh r0, [r7, #0x10]
	strb r1, [r7, #0xb]
	strb r1, [r7, #0xc]
	movs r0, #0x1e
	str r0, [r7, #0x14]
	movs r0, #0x20
	bl sub_8007C10
	str r0, [r7, #0x44]
	adds r1, r7, #0
	bl sub_8049D20
	movs r4, #0
	adds r1, r7, #0
	adds r1, #0x28
	str r1, [sp, #0x24]
	adds r2, r7, #0
	adds r2, #0x2c
	str r2, [sp, #0x28]
	adds r6, r7, #0
	adds r6, #0x18
	str r6, [sp, #0x18]
	adds r0, r7, #0
	adds r0, #0x1c
	str r0, [sp, #0x1c]
	adds r1, #0x14
	str r1, [sp, #0x38]
	adds r2, #4
	str r2, [sp, #0x2c]
	adds r6, #0x26
	str r6, [sp, #0x3c]
	adds r0, #0x24
	str r0, [sp, #0x40]
	adds r1, #6
	str r1, [sp, #0x44]
	adds r2, #4
	str r2, [sp, #0x30]
	subs r6, #8
	str r6, [sp, #0x34]
	movs r0, #0x99
	lsls r0, r0, #1
	adds r0, r7, r0
	str r0, [sp, #0x20]
	adds r1, #0x12
	str r1, [sp, #0x48]
	adds r2, #0x40
	str r2, [sp, #8]
	adds r6, #0x3f
	str r6, [sp, #0xc]
	adds r0, r7, #0
	adds r0, #0x76
	str r0, [sp, #0x10]
	adds r1, #0x25
	str r1, [sp, #0x14]
	movs r3, #0
	movs r5, #0
_0804A832:
	lsls r2, r4, #1
	ldr r6, [sp, #0x24]
	adds r0, r6, r2
	movs r1, #0x80
	lsls r1, r1, #2
	strh r1, [r0]
	ldr r6, [sp, #0x28]
	adds r0, r6, r2
	strh r1, [r0]
	lsls r1, r4, #3
	ldr r6, [sp, #0x18]
	adds r0, r6, r1
	str r5, [r0]
	ldr r0, [sp, #0x1c]
	adds r1, r0, r1
	str r5, [r1]
	ldr r1, [sp, #0x38]
	adds r0, r1, r4
	strb r3, [r0]
	ldr r6, [sp, #0x2c]
	adds r1, r6, r2
	adds r2, r2, r4
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r0, r0, r2
	strh r0, [r1]
	ldr r6, [sp, #0x3c]
	adds r0, r6, r4
	strb r3, [r0]
	ldr r1, [sp, #0x40]
	adds r0, r1, r4
	strb r3, [r0]
	ldr r2, [sp, #0x44]
	adds r0, r2, r4
	strb r3, [r0]
	lsls r1, r4, #2
	ldr r6, [sp, #0x30]
	adds r0, r6, r1
	strh r5, [r0]
	ldr r2, [sp, #0x34]
	adds r0, r2, r1
	strh r5, [r0]
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #2
	adds r0, #0x90
	adds r6, r7, r0
	strh r5, [r6, #0x16]
	strh r5, [r6, #0x18]
	mov r8, r1
	cmp r4, #0
	beq _0804A8B4
	movs r0, #0x40
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804A8C0
	.align 2, 0
_0804A8B0: .4byte 0x00A77C00
_0804A8B4:
	movs r0, #0x40
	str r3, [sp, #0x4c]
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0804A9BC @ =0x000002BF
_0804A8C0:
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	ldr r3, [sp, #0x4c]
	strb r3, [r0]
	mov r0, r8
	adds r0, #0x1b
	lsls r0, r0, #6
	strh r0, [r6, #0x1a]
	strh r5, [r6, #8]
	strh r5, [r6, #0x14]
	strh r5, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r2, #1
	rsbs r2, r2, #0
	mov r0, sp
	strb r2, [r0, #4]
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x22
	movs r1, #0x10
	mov sl, r1
	mov r2, sl
	strb r2, [r0]
	adds r0, #3
	strb r3, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r6, #0x10]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #1
	bls _0804A832
	movs r5, #0
	movs r4, #0
	mov r1, sb
	strh r4, [r1]
	strh r4, [r1, #4]
	movs r0, #2
	strh r0, [r1, #2]
	strh r4, [r1, #6]
	ldr r0, _0804A9C0 @ =0x000037BF
	strh r0, [r1, #8]
	strh r4, [r1, #0xa]
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r1, _0804A9C4 @ =0x0600C000
	str r1, [r0, #4]
	strh r4, [r0, #0xa]
	ldr r1, _0804A9C8 @ =0x0600A000
	str r1, [r0, #0xc]
	strh r4, [r0, #0x18]
	strh r4, [r0, #0x1a]
	movs r1, #0xb8
	lsls r1, r1, #1
	strh r1, [r0, #0x1c]
	strh r4, [r0, #0x1e]
	strh r4, [r0, #0x20]
	strh r4, [r0, #0x22]
	strh r4, [r0, #0x24]
	movs r1, #0x1e
	strh r1, [r0, #0x26]
	movs r1, #0x14
	strh r1, [r0, #0x28]
	ldr r6, [sp, #0x20]
	strb r5, [r6]
	strh r4, [r0, #0x2e]
	bl sub_8002A3C
	ldr r6, [sp, #0x48]
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	movs r0, #0x40
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _0804A9CC @ =0x000002C1
	strh r0, [r6, #0xa]
	ldr r0, [sp, #8]
	strb r5, [r0]
	movs r0, #0xf8
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	ldr r1, [sp, #0xc]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #4]
	orrs r0, r2
	strb r0, [r1]
	mov r1, sl
	ldr r0, [sp, #0x10]
	strb r1, [r0]
	ldr r2, [sp, #0x14]
	strb r5, [r2]
	mov r0, r8
	str r0, [r6, #0x28]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	ldr r1, _0804A9D0 @ =gUnknown_030054A8
	movs r0, #0xc8
	strh r0, [r1, #6]
	ldr r2, _0804A9D4 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r2]
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804A9BC: .4byte 0x000002BF
_0804A9C0: .4byte 0x000037BF
_0804A9C4: .4byte 0x0600C000
_0804A9C8: .4byte 0x0600A000
_0804A9CC: .4byte 0x000002C1
_0804A9D0: .4byte gUnknown_030054A8
_0804A9D4: .4byte gUnknown_03005424

	thumb_func_start sub_804A9D8
sub_804A9D8: @ 0x0804A9D8
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0804AAE4 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r0, [r5, #0x14]
	cmp r0, #0x3c
	bls _0804AA68
	ldr r0, [r5, #4]
	ldr r1, _0804AAE8 @ =0xFFFFFF00
	adds r0, r0, r1
	str r0, [r5, #4]
	ldr r4, _0804AAEC @ =gUnknown_03005590
	ldr r0, [r4]
	movs r1, #0x1f
	ands r0, r1
	cmp r0, #0
	bne _0804AA0A
	movs r0, #0x82
	lsls r0, r0, #1
	bl m4aSongNumStart
_0804AA0A:
	ldr r0, [r4]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0804AA26
	movs r0, #0x80
	lsls r0, r0, #1
	movs r1, #0x83
	str r1, [sp]
	movs r1, #0x10
	movs r2, #0x80
	movs r3, #0x14
	bl sub_802B4F8
_0804AA26:
	ldr r0, [r5, #0x14]
	movs r1, #0x1e
	bl DivRem
	cmp r0, #0
	bne _0804AA68
	ldr r4, _0804AAF0 @ =gUnknown_030059E0
	str r0, [r4, #0x20]
	ldr r0, [r5, #0x14]
	subs r0, #0x3c
	movs r1, #0x1e
	bl __udivsi3
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	ble _0804AA4E
	movs r1, #3
_0804AA4E:
	lsls r1, r1, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #3
	bhi _0804AA68
	asrs r1, r1, #0x18
	movs r0, #0x46
	subs r0, r0, r1
	adds r1, r4, #0
	adds r1, #0x64
	strh r0, [r1]
	adds r1, #2
	ldr r0, _0804AAF4 @ =0x0000FFFF
	strh r0, [r1]
_0804AA68:
	movs r0, #1
	strb r0, [r5, #0xb]
	adds r0, r5, #0
	bl sub_804C3AC
	ldr r6, _0804AAF0 @ =gUnknown_030059E0
	ldr r0, [r6, #0x20]
	movs r1, #0xc0
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r6, #0x20]
	ldr r0, [r5, #0x14]
	subs r4, r0, #1
	str r4, [r5, #0x14]
	cmp r4, #0
	bne _0804AADC
	ldr r2, _0804AAF8 @ =gUnknown_03005424
	ldrh r1, [r2]
	ldr r0, _0804AAFC @ =0x0000FFDF
	ands r0, r1
	strh r0, [r2]
	ldr r0, [r6, #0x20]
	ldr r1, _0804AB00 @ =0xFF9FFFFF
	ands r0, r1
	str r0, [r6, #0x20]
	movs r0, #0x82
	lsls r0, r0, #1
	bl m4aSongNumStart
	ldr r1, _0804AB04 @ =gUnknown_030054A8
	strb r4, [r1]
	movs r0, #0x12
	strb r0, [r1, #1]
	ldr r1, _0804AB08 @ =gUnknown_03005960
	ldr r0, _0804AB0C @ =0x0000A744
	str r0, [r1, #0x30]
	strb r4, [r5, #0xb]
	ldr r0, [r6, #0x20]
	ldr r1, _0804AB10 @ =0xFFDFFFFF
	ands r0, r1
	str r0, [r6, #0x20]
	ldr r1, _0804AB14 @ =gUnknown_03005AF0
	ldr r0, [r1, #0x1c]
	ldr r3, _0804AB18 @ =0xFFFFCFFF
	ands r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r1, _0804AB1C @ =gUnknown_03005AA0
	ldr r0, [r1, #0x1c]
	ands r0, r3
	orrs r0, r2
	str r0, [r1, #0x1c]
	ldr r0, _0804AAE4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0804AB20 @ =sub_804AB24
	str r0, [r1, #8]
_0804AADC:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804AAE4: .4byte gCurTask
_0804AAE8: .4byte 0xFFFFFF00
_0804AAEC: .4byte gUnknown_03005590
_0804AAF0: .4byte gUnknown_030059E0
_0804AAF4: .4byte 0x0000FFFF
_0804AAF8: .4byte gUnknown_03005424
_0804AAFC: .4byte 0x0000FFDF
_0804AB00: .4byte 0xFF9FFFFF
_0804AB04: .4byte gUnknown_030054A8
_0804AB08: .4byte gUnknown_03005960
_0804AB0C: .4byte 0x0000A744
_0804AB10: .4byte 0xFFDFFFFF
_0804AB14: .4byte gUnknown_03005AF0
_0804AB18: .4byte 0xFFFFCFFF
_0804AB1C: .4byte gUnknown_03005AA0
_0804AB20: .4byte sub_804AB24

	thumb_func_start sub_804AB24
sub_804AB24: @ 0x0804AB24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _0804AC44 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	adds r0, #0x48
	adds r6, r4, r0
	adds r0, r7, #0
	bl sub_804CC98
	adds r0, r7, #0
	bl sub_804CA08
	adds r0, r7, #0
	bl sub_804AE40
	ldr r5, _0804AC48 @ =gUnknown_080D8890
	ldr r1, _0804AC4C @ =IWRAM_START + 0x3C
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	bl _call_via_r2
	ldr r2, _0804AC50 @ =IWRAM_START + 0x3D
	adds r4, r4, r2
	ldrb r0, [r4]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r2, [r0]
	adds r0, r7, #0
	movs r1, #1
	bl _call_via_r2
	adds r0, r7, #0
	bl sub_804C5B8
	adds r0, r7, #0
	bl sub_804C830
	adds r0, r7, #0
	bl sub_804CA70
	ldr r4, _0804AC54 @ =gUnknown_030059E0
	ldr r0, [r4, #0xc]
	asrs r0, r0, #8
	cmp r0, #0xb8
	ble _0804ABC0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, _0804AC58 @ =0x0000A819
	cmp r0, r1
	ble _0804ABC0
	adds r0, r4, #0
	bl sub_800CBA4
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0804ABB4
	rsbs r0, r0, #0
	strh r0, [r4, #0x10]
_0804ABB4:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0804ABC0
	rsbs r0, r0, #0
	strh r0, [r4, #0x14]
_0804ABC0:
	ldr r4, _0804AC54 @ =gUnknown_030059E0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	ldr r1, _0804AC5C @ =0x0000A84F
	cmp r0, r1
	ble _0804ABEA
	adds r0, r4, #0
	bl sub_800CBA4
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0804ABDE
	rsbs r0, r0, #0
	strh r0, [r4, #0x10]
_0804ABDE:
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _0804ABEA
	rsbs r0, r0, #0
	strh r0, [r4, #0x14]
_0804ABEA:
	ldrb r4, [r7, #8]
	cmp r4, #0
	beq _0804ABF2
	b _0804AD54
_0804ABF2:
	ldr r2, _0804AC60 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r0, _0804AC44 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0804AC64 @ =sub_804AD68
	str r0, [r1, #8]
	movs r0, #0xff
	str r0, [r7, #0x14]
	bl sub_802A050
	ldr r2, _0804AC54 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0xe
	orrs r1, r0
	str r1, [r2, #0x20]
	adds r0, r2, #0
	adds r0, #0x5c
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0804AC68
	adds r1, r2, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r2, #0x10]
	strh r4, [r2, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	b _0804AC6E
	.align 2, 0
_0804AC44: .4byte gCurTask
_0804AC48: .4byte gUnknown_080D8890
_0804AC4C: .4byte IWRAM_START + 0x3C
_0804AC50: .4byte IWRAM_START + 0x3D
_0804AC54: .4byte gUnknown_030059E0
_0804AC58: .4byte 0x0000A819
_0804AC5C: .4byte 0x0000A84F
_0804AC60: .4byte gFlags
_0804AC64: .4byte sub_804AD68
_0804AC68:
	strh r0, [r2, #0x14]
	strh r0, [r2, #0x10]
	strh r0, [r2, #0x12]
_0804AC6E:
	movs r1, #0
	strh r1, [r6]
	strh r1, [r6, #4]
	movs r0, #1
	strh r0, [r6, #2]
	movs r0, #0x10
	strh r0, [r6, #6]
	ldr r0, _0804AD2C @ =0x00003FBF
	strh r0, [r6, #8]
	strh r1, [r6, #0xa]
	movs r6, #0
	adds r0, r7, #0
	adds r0, #0x18
	str r0, [sp]
	adds r1, r7, #0
	adds r1, #0x28
	str r1, [sp, #8]
	adds r2, r7, #0
	adds r2, #0x1c
	str r2, [sp, #4]
	adds r0, #0x1c
	str r0, [sp, #0xc]
	adds r1, #0xe
	str r1, [sp, #0x10]
	movs r2, #0x3c
	adds r2, r2, r7
	mov sl, r2
	movs r0, #0x30
	adds r0, r0, r7
	mov sb, r0
	ldr r1, _0804AD30 @ =gUnknown_08097AA4
	mov r8, r1
	movs r2, #2
	mov ip, r2
_0804ACB2:
	lsls r2, r6, #3
	ldr r0, [sp]
	adds r3, r0, r2
	lsls r5, r6, #1
	ldr r1, [sp, #8]
	adds r4, r1, r5
	ldrh r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	ldr r0, [sp, #4]
	adds r2, r0, r2
	ldrh r0, [r4]
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	lsls r1, r6, #2
	ldr r2, [sp, #0xc]
	adds r0, r2, r1
	ldr r2, _0804AD34 @ =0xFFFFFE80
	strh r2, [r0]
	ldr r0, [sp, #0x10]
	adds r1, r0, r1
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r1]
	mov r2, sl
	adds r1, r2, r6
	movs r0, #7
	strb r0, [r1]
	add r5, sb
	movs r0, #0x3c
	strh r0, [r5]
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x90
	adds r1, r7, r0
	cmp r6, #0
	beq _0804AD38
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804AD3A
	.align 2, 0
_0804AD2C: .4byte 0x00003FBF
_0804AD30: .4byte gUnknown_08097AA4
_0804AD34: .4byte 0xFFFFFE80
_0804AD38:
	ldr r0, _0804AD64 @ =0x000002BF
_0804AD3A:
	strh r0, [r1, #0xa]
	adds r0, r1, #0
	adds r0, #0x20
	mov r2, ip
	strb r2, [r0]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bls _0804ACB2
_0804AD54:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804AD64: .4byte 0x000002BF

	thumb_func_start sub_804AD68
sub_804AD68: @ 0x0804AD68
	push {r4, r5, r6, lr}
	ldr r4, _0804ADC0 @ =gCurTask
	ldr r0, [r4]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r6, r0
	ldr r1, _0804ADC4 @ =IWRAM_START + 0x48
	adds r0, r6, r1
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0804ADE4
	ldr r0, _0804ADC8 @ =0x00005010
	ldr r1, _0804ADCC @ =0x00005011
	bl sub_80029D0
	ldr r0, _0804ADD0 @ =0x00005431
	ldr r1, _0804ADD4 @ =0x00005434
	bl sub_80029D0
	ldr r2, _0804ADD8 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r2, _0804ADDC @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r2, #0x20]
	ldr r1, [r4]
	ldr r0, _0804ADE0 @ =sub_804CC30
	str r0, [r1, #8]
	b _0804AE2C
	.align 2, 0
_0804ADC0: .4byte gCurTask
_0804ADC4: .4byte IWRAM_START + 0x48
_0804ADC8: .4byte 0x00005010
_0804ADCC: .4byte 0x00005011
_0804ADD0: .4byte 0x00005431
_0804ADD4: .4byte 0x00005434
_0804ADD8: .4byte gUnknown_03005424
_0804ADDC: .4byte gUnknown_030059E0
_0804ADE0: .4byte sub_804CC30
_0804ADE4:
	adds r0, r5, #0
	bl sub_804CC98
	adds r0, r5, #0
	bl sub_804CA08
	ldr r4, _0804AE34 @ =gUnknown_080D8890
	ldr r1, _0804AE38 @ =IWRAM_START + 0x3C
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	adds r0, r5, #0
	movs r1, #0
	bl _call_via_r2
	ldr r3, _0804AE3C @ =IWRAM_START + 0x3D
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	adds r0, r5, #0
	movs r1, #1
	bl _call_via_r2
	adds r0, r5, #0
	bl sub_804C5B8
	adds r0, r5, #0
	bl sub_804CA70
	adds r0, r5, #0
	bl sub_804C080
_0804AE2C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804AE34: .4byte gUnknown_080D8890
_0804AE38: .4byte IWRAM_START + 0x3C
_0804AE3C: .4byte IWRAM_START + 0x3D

	thumb_func_start sub_804AE40
sub_804AE40: @ 0x0804AE40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _0804AE94 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0804AE7A
	ldrh r1, [r5, #0xe]
	cmp r1, #0
	bne _0804AE76
	ldr r0, _0804AE98 @ =gBldRegs
	strh r1, [r0, #4]
	adds r0, r5, #0
	adds r0, #0x4c
	strh r1, [r0]
	ldr r2, _0804AE9C @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
_0804AE76:
	movs r0, #2
	strh r0, [r5, #0xe]
_0804AE7A:
	ldrh r0, [r5, #0xe]
	cmp r0, #0
	beq _0804AEA0
	subs r0, #1
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0804AE8C
	b _0804B0CE
_0804AE8C:
	movs r0, #0x78
	strb r0, [r5, #0x12]
	b _0804B0CE
	.align 2, 0
_0804AE94: .4byte gUnknown_030059E0
_0804AE98: .4byte gBldRegs
_0804AE9C: .4byte gFlags
_0804AEA0:
	ldrb r0, [r5, #0xb]
	cmp r0, #0
	beq _0804AED4
	ldrb r0, [r5, #0x12]
	cmp r0, #0
	beq _0804AEC2
	movs r0, #0x78
	strb r0, [r5, #0x12]
	adds r1, r5, #0
	adds r1, #0x4c
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x48
	bl sub_802D4CC
_0804AEC2:
	ldr r0, _0804AED0 @ =gFlags
	ldr r1, [r0]
	movs r2, #5
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
	b _0804B0CE
	.align 2, 0
_0804AED0: .4byte gFlags
_0804AED4:
	ldrb r0, [r5, #0x12]
	subs r4, r0, #1
	strb r4, [r5, #0x12]
	movs r0, #0xff
	mov sb, r0
	lsls r0, r4, #0x18
	cmp r0, #0
	bne _0804AF34
	ldr r2, _0804AF2C @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	adds r1, r5, #0
	adds r1, #0x4c
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x48
	bl sub_802D4CC
	ldrb r0, [r5, #8]
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r1, r2, #0
	cmp r0, #4
	bhi _0804AF10
	movs r1, #0x8c
_0804AF10:
	strh r1, [r5, #0xe]
	adds r1, r5, #0
	adds r1, #0x54
	ldr r0, _0804AF30 @ =0x000002C1
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	mov r6, sb
	orrs r0, r6
	strb r0, [r1]
	b _0804B0CE
	.align 2, 0
_0804AF2C: .4byte gFlags
_0804AF30: .4byte 0x000002C1
_0804AF34:
	ldr r0, [r5]
	movs r7, #0xbe
	lsls r7, r7, #8
	adds r0, r0, r7
	asrs r0, r0, #8
	mov r8, r0
	ldr r0, _0804AFF4 @ =gUnknown_08097AA4
	mov sl, r0
	ldrh r1, [r5, #0x10]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	add r0, sl
	movs r6, #0
	ldrsh r0, [r0, r6]
	movs r3, #0xb
	muls r0, r3, r0
	asrs r0, r0, #0xe
	add r8, r0
	ldr r2, _0804AFF8 @ =gUnknown_03005960
	ldr r0, [r2]
	mov r7, r8
	subs r7, r7, r0
	mov r8, r7
	ldr r0, [r5, #4]
	movs r6, #0xa0
	lsls r6, r6, #6
	adds r0, r0, r6
	asrs r6, r0, #8
	lsls r1, r1, #1
	add r1, sl
	movs r7, #0
	ldrsh r0, [r1, r7]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	adds r6, r6, r0
	ldr r0, [r2, #4]
	subs r6, r6, r0
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x5a
	bls _0804B008
	movs r0, #0
	bl sub_802EFDC
	mov r0, r8
	lsls r3, r0, #0x10
	asrs r3, r3, #0x10
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	ldr r4, _0804AFFC @ =gUnknown_030053B8
	ldr r1, [r4]
	ldr r0, _0804B000 @ =0x00196225
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r1, _0804B004 @ =0x3C6EF35F
	adds r2, r2, r1
	str r2, [r4]
	ldrb r0, [r5, #0x12]
	subs r0, #0x5a
	lsls r0, r0, #3
	movs r1, #0xff
	ands r0, r1
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	movs r1, #7
	ands r2, r1
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	bl sub_80075D0
	ldrb r1, [r5, #0x12]
	subs r1, #0x5a
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, r0, r1
	adds r1, r5, #0
	adds r1, #0x4c
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x48
	bl sub_802D4CC
	b _0804B0CE
	.align 2, 0
_0804AFF4: .4byte gUnknown_08097AA4
_0804AFF8: .4byte gUnknown_03005960
_0804AFFC: .4byte gUnknown_030053B8
_0804B000: .4byte 0x00196225
_0804B004: .4byte 0x3C6EF35F
_0804B008:
	cmp r0, #0x5a
	bne _0804B02A
	adds r1, r5, #0
	adds r1, #0x54
	ldr r0, _0804B060 @ =0x000002C1
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	mov r2, sb
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _0804B064 @ =0x00000105
	bl m4aSongNumStart
_0804B02A:
	ldrb r0, [r5, #0x12]
	lsls r3, r0, #0x18
	lsrs r7, r3, #0x18
	cmp r7, #0x45
	bhi _0804B074
	ldr r2, _0804B068 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0804B06C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0804B070 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	lsrs r2, r3, #0x19
	movs r1, #7
	ands r0, r1
	adds r0, #8
	adds r4, r2, r0
	cmp r7, #0x3c
	bls _0804B096
	adds r1, r4, #0
	subs r1, #0xa
	lsls r1, r1, #8
	adds r0, r5, #0
	bl sub_804CCD0
	b _0804B096
	.align 2, 0
_0804B060: .4byte 0x000002C1
_0804B064: .4byte 0x00000105
_0804B068: .4byte gUnknown_030053B8
_0804B06C: .4byte 0x00196225
_0804B070: .4byte 0x3C6EF35F
_0804B074:
	ldr r2, _0804B0E0 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0804B0E4 @ =0x00196225
	muls r1, r0, r1
	ldr r7, _0804B0E8 @ =0x3C6EF35F
	adds r1, r1, r7
	str r1, [r2]
	ldrb r2, [r5, #0x12]
	movs r0, #0x74
	subs r0, r0, r2
	asrs r0, r0, #2
	movs r2, #7
	ands r1, r2
	adds r1, #0x1e
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0804B096:
	ldrh r0, [r5, #0x10]
	mov r1, r8
	lsls r3, r1, #0x10
	asrs r3, r3, #0x10
	adds r1, r6, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	adds r1, r4, #0
	movs r2, #6
	bl sub_802E784
	ldrb r1, [r5, #0x12]
	movs r0, #0x5b
	muls r1, r0, r1
	movs r2, #0x80
	lsls r2, r2, #6
	adds r0, r2, #0
	subs r0, r0, r1
	adds r1, r5, #0
	adds r1, #0x4c
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x48
	bl sub_802D4CC
_0804B0CE:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804B0E0: .4byte gUnknown_030053B8
_0804B0E4: .4byte 0x00196225
_0804B0E8: .4byte 0x3C6EF35F

	thumb_func_start sub_804B0EC
sub_804B0EC: @ 0x0804B0EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	movs r0, #0
	str r0, [sp]
	mov r0, r8
	adds r0, #0x3e
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804B114
_0804B110:
	movs r0, #0
	b _0804B2CE
_0804B114:
	mov r1, sb
	lsls r4, r1, #3
	mov r0, r8
	adds r0, #0x18
	adds r0, r0, r4
	mov r2, r8
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [sp, #4]
	ldr r2, _0804B1CC @ =gUnknown_080D8888
	mov r0, sb
	lsls r3, r0, #2
	adds r0, r3, r2
	ldrh r0, [r0]
	mov sl, r0
	adds r5, r1, #0
	add r5, sl
	mov r0, r8
	adds r0, #0x1c
	adds r0, r0, r4
	mov r4, r8
	ldr r1, [r4, #4]
	ldr r0, [r0]
	adds r1, r1, r0
	mov ip, r1
	adds r2, #2
	adds r3, r3, r2
	ldrh r7, [r3]
	adds r4, r1, r7
	ldr r3, _0804B1D0 @ =gUnknown_08097AA4
	mov r0, sb
	lsls r1, r0, #1
	mov r0, r8
	adds r0, #0x28
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r6, [r0, r2]
	movs r2, #0xbe
	adds r0, r6, #0
	muls r0, r2, r0
	asrs r0, r0, #9
	adds r5, r5, r0
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r0, #0
	ldrsh r3, [r1, r0]
	adds r0, r3, #0
	muls r0, r2, r0
	asrs r0, r0, #9
	adds r4, r4, r0
	ldr r2, _0804B1D4 @ =gUnknown_030059E0
	ldr r0, [r2, #8]
	subs r0, r0, r5
	asrs r5, r0, #8
	ldr r0, [r2, #0xc]
	subs r0, r0, r4
	asrs r4, r0, #8
	adds r1, r5, #0
	muls r1, r5, r1
	adds r5, r1, #0
	adds r0, r4, #0
	muls r0, r4, r0
	adds r4, r0, #0
	adds r0, r5, r4
	cmp r0, #0xc7
	bgt _0804B1DC
	adds r0, r2, #0
	bl sub_800CBA4
	mov r0, r8
	adds r0, #0x40
	add r0, sb
	movs r1, #1
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x3c
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #3
	bne _0804B110
	ldr r0, _0804B1D8 @ =0x00000107
	bl m4aSongNumStart
	b _0804B110
	.align 2, 0
_0804B1CC: .4byte gUnknown_080D8888
_0804B1D0: .4byte gUnknown_08097AA4
_0804B1D4: .4byte gUnknown_030059E0
_0804B1D8: .4byte 0x00000107
_0804B1DC:
	adds r0, r2, #0
	adds r0, #0x90
	ldr r0, [r0]
	adds r0, #0xc
	str r0, [sp, #8]
	ldr r5, [sp, #4]
	add r5, sl
	mov r1, ip
	adds r4, r1, r7
	lsls r1, r6, #1
	adds r1, r1, r6
	lsls r1, r1, #5
	subs r1, r1, r6
	asrs r1, r1, #9
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #5
	subs r0, r0, r3
	asrs r0, r0, #9
	adds r6, r5, r1
	adds r7, r4, r0
	ldr r0, _0804B280 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0804B21E
	adds r0, r6, #0
	adds r1, r7, #0
	str r2, [sp, #0xc]
	bl sub_80122DC
	ldr r2, [sp, #0xc]
_0804B21E:
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0804B288
	ldr r4, [sp, #8]
	ldr r1, [r4, #0x30]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0804B288
	ldr r0, [r2, #8]
	subs r0, r0, r6
	asrs r5, r0, #8
	ldr r0, [r2, #0xc]
	subs r0, r0, r7
	asrs r4, r0, #8
	adds r0, r5, #0
	muls r0, r5, r0
	adds r5, r0, #0
	adds r1, r4, #0
	muls r1, r4, r1
	adds r4, r1, #0
	adds r1, r5, r4
	ldr r0, _0804B284 @ =0x00000177
	cmp r1, r0
	bgt _0804B288
	mov r0, r8
	mov r1, sb
	str r2, [sp, #0xc]
	bl sub_804C9B4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r2, [sp, #0xc]
	movs r4, #0x10
	ldrsh r0, [r2, r4]
	rsbs r0, r0, #0
	strh r0, [r2, #0x10]
	movs r1, #0x12
	ldrsh r0, [r2, r1]
	rsbs r0, r0, #0
	strh r0, [r2, #0x12]
	movs r4, #0x14
	ldrsh r0, [r2, r4]
	rsbs r0, r0, #0
	strh r0, [r2, #0x14]
	b _0804B2CC
	.align 2, 0
_0804B280: .4byte gUnknown_030054F0
_0804B284: .4byte 0x00000177
_0804B288:
	ldr r0, _0804B2E0 @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _0804B2CC
	ldr r1, [r2, #0x4c]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0804B2CC
	ldr r0, [r2]
	subs r6, r6, r0
	asrs r6, r6, #8
	ldr r0, [r2, #4]
	subs r7, r7, r0
	asrs r7, r7, #8
	adds r0, r6, #0
	muls r0, r6, r0
	adds r1, r7, #0
	muls r1, r7, r1
	adds r0, r0, r1
	ldr r1, _0804B2E4 @ =0x00000177
	cmp r0, r1
	bgt _0804B2CC
	mov r0, r8
	mov r1, sb
	bl sub_804C9B4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, _0804B2E8 @ =gUnknown_03005498
	ldr r1, [r0, #4]
	movs r0, #0
	strb r0, [r1, #0x15]
_0804B2CC:
	ldr r0, [sp]
_0804B2CE:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804B2E0: .4byte gUnknown_030056A4
_0804B2E4: .4byte 0x00000177
_0804B2E8: .4byte gUnknown_03005498

	thumb_func_start sub_804B2EC
sub_804B2EC: @ 0x0804B2EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	movs r0, #0
	str r0, [sp]
	adds r0, r7, #0
	adds r0, #0x3e
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804B314
	movs r0, #0
	b _0804B41E
_0804B314:
	ldr r1, _0804B3C8 @ =gUnknown_030059E0
	mov r8, r1
	mov r0, r8
	adds r0, #0x90
	ldr r0, [r0]
	adds r0, #0xc
	mov sl, r0
	mov r2, sb
	lsls r4, r2, #3
	adds r0, r7, #0
	adds r0, #0x18
	adds r0, r0, r4
	ldr r3, [r7]
	ldr r0, [r0]
	ldr r1, _0804B3CC @ =gUnknown_080D8888
	lsls r2, r2, #2
	adds r5, r2, r1
	adds r6, r3, r0
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r4
	ldr r3, [r7, #4]
	ldr r0, [r0]
	adds r1, #2
	adds r2, r2, r1
	adds r0, r3, r0
	ldrh r5, [r5]
	adds r4, r6, r5
	ldrh r2, [r2]
	adds r5, r0, r2
	ldr r0, _0804B3D0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0804B364
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80122DC
_0804B364:
	mov r1, r8
	ldr r0, [r1, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0804B3D8
	mov r2, sl
	ldr r1, [r2, #0x30]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0804B3D8
	mov r1, r8
	ldr r0, [r1, #8]
	subs r0, r0, r4
	asrs r6, r0, #8
	ldr r0, [r1, #0xc]
	subs r0, r0, r5
	asrs r0, r0, #8
	adds r2, r6, #0
	muls r2, r6, r2
	adds r6, r2, #0
	adds r1, r0, #0
	muls r1, r0, r1
	adds r0, r1, #0
	adds r1, r6, r0
	ldr r0, _0804B3D4 @ =0x00000177
	cmp r1, r0
	bgt _0804B3D8
	adds r0, r7, #0
	mov r1, sb
	bl sub_804C9B4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	mov r2, r8
	movs r5, #0x10
	ldrsh r0, [r2, r5]
	rsbs r0, r0, #0
	strh r0, [r2, #0x10]
	movs r1, #0x12
	ldrsh r0, [r2, r1]
	rsbs r0, r0, #0
	strh r0, [r2, #0x12]
	movs r5, #0x14
	ldrsh r0, [r2, r5]
	rsbs r0, r0, #0
	strh r0, [r2, #0x14]
	b _0804B41C
	.align 2, 0
_0804B3C8: .4byte gUnknown_030059E0
_0804B3CC: .4byte gUnknown_080D8888
_0804B3D0: .4byte gUnknown_030054F0
_0804B3D4: .4byte 0x00000177
_0804B3D8:
	ldr r0, _0804B430 @ =gUnknown_030056A4
	ldr r2, [r0]
	cmp r2, #0
	beq _0804B41C
	ldr r1, [r2, #0x4c]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0804B41C
	ldr r0, [r2]
	subs r4, r4, r0
	asrs r4, r4, #8
	ldr r0, [r2, #4]
	subs r5, r5, r0
	asrs r5, r5, #8
	adds r0, r4, #0
	muls r0, r4, r0
	adds r1, r5, #0
	muls r1, r5, r1
	adds r0, r0, r1
	ldr r1, _0804B434 @ =0x00000177
	cmp r0, r1
	bgt _0804B41C
	adds r0, r7, #0
	mov r1, sb
	bl sub_804C9B4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, _0804B438 @ =gUnknown_03005498
	ldr r1, [r0, #4]
	movs r0, #0
	strb r0, [r1, #0x15]
_0804B41C:
	ldr r0, [sp]
_0804B41E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804B430: .4byte gUnknown_030056A4
_0804B434: .4byte 0x00000177
_0804B438: .4byte gUnknown_03005498

	thumb_func_start sub_804B43C
sub_804B43C: @ 0x0804B43C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	lsls r2, r6, #3
	adds r0, #0x18
	adds r0, r0, r2
	movs r1, #0
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r2
	str r1, [r0]
	lsls r1, r6, #1
	adds r0, r7, #0
	adds r0, #0x30
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	bne _0804B498
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r7, r0
	cmp r6, #0
	beq _0804B484
	movs r0, #0
	movs r1, #0xb0
	lsls r1, r1, #2
	b _0804B488
_0804B484:
	movs r0, #0
	ldr r1, _0804B564 @ =0x000002BF
_0804B488:
	strh r1, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804B498:
	lsls r5, r6, #1
	adds r0, r7, #0
	adds r0, #0x30
	adds r0, r0, r5
	mov r8, r0
	ldrh r0, [r0]
	subs r0, #1
	movs r1, #0
	mov sb, r1
	mov r1, r8
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804B4CE
	adds r0, r7, #0
	adds r0, #0x3c
	adds r0, r0, r6
	movs r1, #1
	strb r1, [r0]
	movs r0, #0xb4
	mov r1, r8
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0x40
	adds r0, r0, r6
	mov r1, sb
	strb r1, [r0]
_0804B4CE:
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_804B0EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804B584
	lsls r4, r6, #3
	adds r2, r7, #0
	adds r2, #0x18
	adds r2, r2, r4
	ldr r0, _0804B568 @ =gUnknown_08097AA4
	mov ip, r0
	adds r3, r7, #0
	adds r3, #0x28
	adds r3, r3, r5
	ldrh r0, [r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r7, #0
	adds r2, #0x1c
	adds r2, r2, r4
	ldrh r0, [r3]
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	lsls r2, r6, #2
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804B56C @ =0x0000FE80
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x3c
	adds r0, r0, r6
	movs r1, #7
	strb r1, [r0]
	movs r0, #0x3c
	mov r1, r8
	strh r0, [r1]
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r7, r0
	cmp r6, #0
	beq _0804B570
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804B572
	.align 2, 0
_0804B564: .4byte 0x000002BF
_0804B568: .4byte gUnknown_08097AA4
_0804B56C: .4byte 0x0000FE80
_0804B570:
	ldr r0, _0804B590 @ =0x000002BF
_0804B572:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804B584:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804B590: .4byte 0x000002BF

	thumb_func_start sub_804B594
sub_804B594: @ 0x0804B594
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r3, r1, #3
	adds r1, r7, #0
	adds r1, #0x18
	adds r1, r1, r3
	movs r2, #0
	str r2, [r1]
	adds r0, #0x1c
	adds r0, r0, r3
	str r2, [r0]
	ldr r2, [r7]
	ldr r4, [r1]
	ldr r0, _0804B608 @ =gUnknown_080D8888
	mov r3, r8
	lsls r1, r3, #2
	adds r3, r1, r0
	adds r2, r2, r4
	ldrh r3, [r3]
	adds r5, r2, r3
	ldr r2, [r7, #4]
	adds r0, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r6, r2, r0
	ldr r1, _0804B60C @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	subs r0, r0, r6
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	subs r1, r1, r5
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	mov r0, r8
	lsls r1, r0, #1
	adds r0, r7, #0
	adds r0, #0x28
	adds r2, r0, r1
	ldrh r0, [r2]
	adds r1, r0, #0
	cmp r3, r1
	beq _0804B614
	cmp r3, r1
	bhs _0804B610
	subs r0, #1
	b _0804B612
	.align 2, 0
_0804B608: .4byte gUnknown_080D8888
_0804B60C: .4byte gUnknown_030059E0
_0804B610:
	adds r0, #1
_0804B612:
	strh r0, [r2]
_0804B614:
	mov r1, r8
	lsls r2, r1, #1
	adds r3, r7, #0
	adds r3, #0x30
	adds r1, r3, r2
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	adds r6, r2, #0
	mov sb, r3
	cmp r0, #0
	bne _0804B66A
	mov r3, r8
	lsls r0, r3, #4
	subs r0, r0, r3
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r7, r0
	cmp r3, #0
	beq _0804B644
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804B646
_0804B644:
	ldr r0, _0804B704 @ =0x000002BF
_0804B646:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x3c
	add r0, r8
	movs r1, #2
	strb r1, [r0]
	mov r0, sb
	adds r1, r0, r6
	movs r0, #0x1e
	strh r0, [r1]
_0804B66A:
	adds r0, r7, #0
	mov r1, r8
	bl sub_804B0EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804B724
	mov r1, r8
	lsls r4, r1, #3
	adds r2, r7, #0
	adds r2, #0x18
	adds r2, r2, r4
	ldr r5, _0804B708 @ =gUnknown_08097AA4
	adds r3, r7, #0
	adds r3, #0x28
	adds r3, r3, r6
	ldrh r0, [r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r7, #0
	adds r2, #0x1c
	adds r2, r2, r4
	ldrh r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	mov r0, r8
	lsls r2, r0, #2
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804B70C @ =0x0000FE80
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x3c
	add r0, r8
	movs r1, #7
	strb r1, [r0]
	mov r3, sb
	adds r1, r3, r6
	movs r0, #0x3c
	strh r0, [r1]
	mov r1, r8
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r7, r0
	cmp r1, #0
	beq _0804B710
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804B712
	.align 2, 0
_0804B704: .4byte 0x000002BF
_0804B708: .4byte gUnknown_08097AA4
_0804B70C: .4byte 0x0000FE80
_0804B710:
	ldr r0, _0804B730 @ =0x000002BF
_0804B712:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804B724:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804B730: .4byte 0x000002BF

	thumb_func_start sub_804B734
sub_804B734: @ 0x0804B734
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x20]
	lsls r2, r1, #3
	adds r0, #0x18
	adds r3, r0, r2
	movs r1, #0
	str r1, [r3]
	adds r0, #4
	adds r5, r0, r2
	str r1, [r5]
	ldr r0, [sp, #0x20]
	lsls r6, r0, #1
	movs r1, #0x30
	adds r1, r1, r7
	mov r8, r1
	adds r1, r1, r6
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0804B772
	b _0804B8AC
_0804B772:
	ldr r4, [r7]
	ldr r3, [r3]
	ldr r0, _0804B840 @ =gUnknown_080D8888
	ldr r2, [sp, #0x20]
	lsls r1, r2, #2
	adds r2, r1, r0
	adds r4, r4, r3
	ldrh r2, [r2]
	adds r4, r4, r2
	ldr r2, [r7, #4]
	ldr r3, [r5]
	adds r0, #2
	adds r1, r1, r0
	adds r2, r2, r3
	ldrh r1, [r1]
	adds r2, r2, r1
	movs r1, #0
	str r6, [sp, #0x2c]
	mov r3, r8
	str r3, [sp, #0x38]
	adds r0, r7, #0
	adds r0, #0x28
	adds r6, r7, #0
	adds r6, #0xc
	str r6, [sp, #0x28]
	adds r3, r7, #0
	adds r3, #0x3c
	str r3, [sp, #0x3c]
	asrs r4, r4, #8
	str r4, [sp, #0x30]
	asrs r2, r2, #8
	str r2, [sp, #0x34]
	ldr r6, [sp, #0x2c]
	adds r2, r0, r6
	ldr r0, _0804B844 @ =0x000003FF
	mov sl, r0
	mov r5, sp
	mov sb, r1
_0804B7BE:
	movs r3, #0
	mov r8, r3
	subs r4, r1, #1
	adds r6, r1, #1
	str r6, [sp, #0x24]
	adds r3, r4, #0
	movs r0, #1
	subs r1, r0, r1
	str r1, [sp, #0x48]
_0804B7D0:
	ldrh r0, [r2]
	ldr r1, _0804B848 @ =0xFFFFFF00
	adds r0, r0, r1
	mov r6, sl
	ands r0, r6
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r6, _0804B84C @ =gUnknown_08097AA4
	adds r0, r0, r6
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r3, r0
	asrs r0, r0, #0xb
	ldr r6, [sp, #0x30]
	subs r0, r6, r0
	str r0, [sp, #0x14]
	ldrh r0, [r2]
	ldr r1, _0804B848 @ =0xFFFFFF00
	adds r0, r0, r1
	mov r6, sl
	ands r0, r6
	lsls r0, r0, #1
	ldr r1, _0804B84C @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r6, #0
	ldrsh r0, [r0, r6]
	muls r0, r3, r0
	asrs r0, r0, #0xb
	ldr r1, [sp, #0x34]
	subs r0, r1, r0
	str r0, [sp, #0x18]
	mov r6, sb
	strh r6, [r5, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r1, #0
	ldrh r6, [r2]
	adds r0, r0, r6
	mov r1, sl
	ands r0, r1
	strh r0, [r5, #0xc]
	mov r6, r8
	lsls r0, r6, #7
	movs r6, #0x80
	lsls r6, r6, #2
	adds r1, r0, r6
	ldr r0, [sp, #0x48]
	cmp r0, #0
	blt _0804B850
	lsls r0, r0, #1
	ldr r6, [sp, #0x48]
	adds r0, r0, r6
	b _0804B854
	.align 2, 0
_0804B840: .4byte gUnknown_080D8888
_0804B844: .4byte 0x000003FF
_0804B848: .4byte 0xFFFFFF00
_0804B84C: .4byte gUnknown_08097AA4
_0804B850:
	lsls r0, r4, #1
	adds r0, r0, r4
_0804B854:
	lsls r0, r0, #5
	subs r0, r1, r0
	strh r0, [r5, #0xe]
	ldr r0, [r7, #0x44]
	str r0, [sp]
	ldr r0, _0804B950 @ =0x000002C3
	strh r0, [r5, #8]
	mov r0, sb
	strh r0, [r5, #0xa]
	mov r1, sb
	str r1, [sp, #4]
	mov r0, sp
	ldr r1, [sp, #0x28]
	str r2, [sp, #0x40]
	str r3, [sp, #0x44]
	bl sub_8039D04
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r2, [sp, #0x40]
	ldr r3, [sp, #0x44]
	cmp r0, #2
	bls _0804B7D0
	ldr r3, [sp, #0x24]
	lsls r0, r3, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #2
	bls _0804B7BE
	ldr r6, [sp, #0x3c]
	ldr r0, [sp, #0x20]
	adds r1, r6, r0
	movs r0, #3
	strb r0, [r1]
	ldr r2, [sp, #0x38]
	ldr r3, [sp, #0x2c]
	adds r1, r2, r3
	movs r0, #0xa
	strh r0, [r1]
	adds r0, #0xfc
	bl m4aSongNumStart
_0804B8AC:
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	bl sub_804B0EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804B970
	ldr r6, [sp, #0x20]
	lsls r4, r6, #3
	adds r2, r7, #0
	adds r2, #0x18
	adds r2, r2, r4
	ldr r5, _0804B954 @ =gUnknown_08097AA4
	lsls r6, r6, #1
	adds r3, r7, #0
	adds r3, #0x28
	adds r3, r3, r6
	ldrh r0, [r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r7, #0
	adds r2, #0x1c
	adds r2, r2, r4
	ldrh r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [sp, #0x20]
	lsls r2, r0, #2
	adds r0, r7, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804B958 @ =0x0000FE80
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	adds r0, r7, #0
	adds r0, #0x3c
	ldr r1, [sp, #0x20]
	adds r0, r0, r1
	movs r1, #7
	strb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x30
	adds r0, r0, r6
	movs r1, #0x3c
	strh r1, [r0]
	ldr r2, [sp, #0x20]
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r7, r0
	ldr r3, [sp, #0x20]
	cmp r3, #0
	beq _0804B95C
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804B95E
	.align 2, 0
_0804B950: .4byte 0x000002C3
_0804B954: .4byte gUnknown_08097AA4
_0804B958: .4byte 0x0000FE80
_0804B95C:
	ldr r0, _0804B980 @ =0x000002BF
_0804B95E:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804B970:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804B980: .4byte 0x000002BF

	thumb_func_start sub_804B984
sub_804B984: @ 0x0804B984
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	mov sl, r5
	lsls r2, r5, #3
	adds r0, #0x18
	adds r0, r0, r2
	mov sb, r0
	lsls r3, r5, #1
	adds r0, r4, #0
	adds r0, #0x28
	adds r0, r0, r3
	mov r8, r0
	ldrh r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r6, _0804BA90 @ =gUnknown_08097AA4
	adds r0, r0, r6
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #5
	mov r6, sb
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r0, r4, #0
	adds r0, #0x1c
	adds r6, r0, r2
	mov r1, r8
	ldrh r0, [r1]
	lsls r0, r0, #1
	ldr r2, _0804BA90 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #5
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	adds r0, r4, #0
	adds r0, #0x30
	adds r7, r0, r3
	ldrh r0, [r7]
	subs r0, #1
	strh r0, [r7]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804BA08
	adds r0, r4, #0
	adds r0, #0x3c
	adds r0, r0, r5
	movs r1, #6
	strb r1, [r0]
	movs r0, #0x1e
	strh r0, [r7]
_0804BA08:
	adds r0, r4, #0
	mov r1, sl
	bl sub_804B0EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804BAAC
	mov r2, r8
	ldrh r0, [r2]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r2, _0804BA90 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	mov r1, r8
	ldrh r0, [r1]
	lsls r0, r0, #1
	ldr r2, _0804BA90 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [r6]
	mov r6, sl
	lsls r2, r6, #2
	adds r0, r4, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804BA94 @ =0x0000FE80
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x3c
	add r0, sl
	movs r1, #7
	strb r1, [r0]
	movs r0, #0x3c
	strh r0, [r7]
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r4, r0
	cmp r6, #0
	beq _0804BA98
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804BA9A
	.align 2, 0
_0804BA90: .4byte gUnknown_08097AA4
_0804BA94: .4byte 0x0000FE80
_0804BA98:
	ldr r0, _0804BABC @ =0x000002BF
_0804BA9A:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804BAAC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804BABC: .4byte 0x000002BF

	thumb_func_start sub_804BAC0
sub_804BAC0: @ 0x0804BAC0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	adds r7, r5, #0
	lsls r0, r5, #1
	mov r8, r0
	adds r0, r6, #0
	adds r0, #0x30
	add r0, r8
	mov sb, r0
	ldrh r0, [r0]
	subs r0, #1
	mov r1, sb
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804BB84
	lsls r3, r5, #3
	adds r2, r6, #0
	adds r2, #0x18
	adds r2, r2, r3
	ldr r0, _0804BB5C @ =gUnknown_08097AA4
	mov ip, r0
	adds r0, r6, #0
	adds r0, #0x28
	mov r1, r8
	adds r4, r0, r1
	ldrh r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r6, #0
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r0, [r4]
	lsls r0, r0, #1
	add r0, ip
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r0, r6, #0
	adds r0, #0x40
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0
	beq _0804BB60
	adds r0, r6, #0
	adds r0, #0x2c
	add r0, r8
	ldrh r1, [r4]
	strh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x3c
	adds r0, r0, r5
	movs r1, #4
	strb r1, [r0]
	movs r0, #0x32
	b _0804BB6C
	.align 2, 0
_0804BB5C: .4byte gUnknown_08097AA4
_0804BB60:
	adds r0, r6, #0
	adds r0, #0x3c
	adds r0, r0, r5
	movs r1, #5
	strb r1, [r0]
	movs r0, #0xa0
_0804BB6C:
	mov r1, sb
	strh r0, [r1]
	lsls r0, r7, #4
	subs r0, r0, r7
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r6, r0
	cmp r7, #0
	beq _0804BC20
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804BC22
_0804BB84:
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_804B0EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804BC34
	lsls r0, r7, #3
	mov ip, r0
	adds r2, r6, #0
	adds r2, #0x18
	add r2, ip
	ldr r5, _0804BC18 @ =gUnknown_08097AA4
	adds r3, r6, #0
	adds r3, #0x28
	add r3, r8
	ldrh r0, [r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r2, r6, #0
	adds r2, #0x1c
	add r2, ip
	ldrh r0, [r3]
	lsls r0, r0, #1
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	asrs r1, r1, #6
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	lsls r2, r7, #2
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804BC1C @ =0x0000FE80
	strh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x3c
	adds r0, r0, r7
	movs r1, #7
	strb r1, [r0]
	movs r0, #0x3c
	mov r1, sb
	strh r0, [r1]
	lsls r0, r7, #4
	subs r0, r0, r7
	lsls r0, r0, #2
	adds r0, #0x90
	adds r2, r6, r0
	cmp r7, #0
	beq _0804BC20
	movs r0, #0xb0
	lsls r0, r0, #2
	b _0804BC22
	.align 2, 0
_0804BC18: .4byte gUnknown_08097AA4
_0804BC1C: .4byte 0x0000FE80
_0804BC20:
	ldr r0, _0804BC40 @ =0x000002BF
_0804BC22:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804BC34:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804BC40: .4byte 0x000002BF

	thumb_func_start sub_804BC44
sub_804BC44: @ 0x0804BC44
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	mov sb, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x20]
	lsls r2, r1, #3
	adds r0, #0x18
	adds r6, r0, r2
	ldr r0, _0804BDE0 @ =gUnknown_08097AA4
	mov ip, r0
	lsls r7, r1, #1
	mov r1, sb
	adds r1, #0x2c
	str r1, [sp, #0x24]
	adds r1, r1, r7
	mov sl, r1
	ldrh r0, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #1
	add r0, ip
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r1, r0, #5
	subs r1, r1, r0
	asrs r1, r1, #0xa
	ldr r0, [r6]
	subs r0, r0, r1
	str r0, [r6]
	mov r0, sb
	adds r0, #0x1c
	adds r5, r0, r2
	mov r1, sl
	ldrh r0, [r1]
	lsls r0, r0, #1
	add r0, ip
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r1, r0, #5
	subs r1, r1, r0
	asrs r1, r1, #0xa
	ldr r0, [r5]
	subs r0, r0, r1
	str r0, [r5]
	mov r3, sb
	adds r3, #0x28
	str r3, [sp, #0x28]
	adds r3, r3, r7
	mov r4, sb
	adds r4, #0x30
	str r4, [sp, #0x2c]
	adds r2, r4, r7
	ldrh r0, [r2]
	lsls r0, r0, #2
	ldrh r1, [r3]
	adds r0, r0, r1
	ldr r4, _0804BDE4 @ =0x000003FF
	adds r1, r4, #0
	ands r0, r1
	strh r0, [r3]
	ldrh r0, [r2]
	subs r0, #1
	strh r0, [r2]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0804BCD6
	b _0804BE56
_0804BCD6:
	mov r0, sb
	ldr r4, [r0]
	ldr r3, [r6]
	ldr r0, _0804BDE8 @ =gUnknown_080D8888
	ldr r2, [sp, #0x20]
	lsls r1, r2, #2
	adds r2, r1, r0
	adds r4, r4, r3
	ldrh r2, [r2]
	adds r4, r4, r2
	mov r2, sb
	ldr r3, [r2, #4]
	ldr r2, [r5]
	adds r0, #2
	adds r1, r1, r0
	adds r3, r3, r2
	ldrh r1, [r1]
	adds r3, r3, r1
	mov r5, sl
	ldrh r2, [r5]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	add r0, ip
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #6
	subs r4, r4, r0
	lsls r2, r2, #1
	add r2, ip
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #6
	subs r3, r3, r0
	movs r1, #0
	mov r8, r1
	str r7, [sp, #0x38]
	ldr r2, [sp, #0x24]
	str r2, [sp, #0x4c]
	ldr r5, [sp, #0x28]
	str r5, [sp, #0x48]
	ldr r7, [sp, #0x2c]
	str r7, [sp, #0x50]
	mov r0, sb
	adds r0, #0xc
	str r0, [sp, #0x34]
	mov r1, sb
	adds r1, #0x3c
	str r1, [sp, #0x54]
	asrs r4, r4, #8
	str r4, [sp, #0x40]
	asrs r3, r3, #8
	str r3, [sp, #0x44]
	mov r2, sl
	mov r4, sp
	movs r3, #0
	mov sl, r3
_0804BD52:
	movs r6, #0
	mov r5, r8
	subs r5, #1
	str r5, [sp, #0x60]
	mov r7, r8
	lsls r7, r7, #1
	str r7, [sp, #0x3c]
	mov r0, r8
	adds r0, #1
	str r0, [sp, #0x30]
	adds r3, r5, #0
	movs r1, #1
	mov r7, r8
	subs r5, r1, r7
_0804BD6E:
	ldrh r0, [r2]
	ldr r1, _0804BDEC @ =0xFFFFFF00
	adds r0, r0, r1
	ldr r7, _0804BDE4 @ =0x000003FF
	ands r0, r7
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r7, _0804BDE0 @ =gUnknown_08097AA4
	adds r0, r0, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r3, r0
	asrs r0, r0, #0xb
	ldr r7, [sp, #0x40]
	subs r0, r7, r0
	str r0, [sp, #0x14]
	ldrh r0, [r2]
	ldr r1, _0804BDEC @ =0xFFFFFF00
	adds r0, r0, r1
	ldr r7, _0804BDE4 @ =0x000003FF
	ands r0, r7
	lsls r0, r0, #1
	ldr r1, _0804BDE0 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r3, r0
	asrs r0, r0, #0xb
	ldr r1, [sp, #0x44]
	subs r0, r1, r0
	str r0, [sp, #0x18]
	mov r7, sl
	strh r7, [r4, #0x1c]
	movs r0, #0x90
	lsls r0, r0, #2
	adds r1, r0, #0
	ldrh r7, [r2]
	adds r1, r1, r7
	ldr r0, [sp, #0x3c]
	add r0, r8
	adds r0, r0, r6
	lsls r0, r0, #5
	subs r1, r1, r0
	ldr r0, _0804BDE4 @ =0x000003FF
	ands r1, r0
	strh r1, [r4, #0xc]
	lsls r0, r6, #7
	movs r7, #0x80
	lsls r7, r7, #2
	adds r1, r0, r7
	cmp r5, #0
	blt _0804BDF0
	lsls r0, r5, #1
	adds r0, r0, r5
	b _0804BDF6
	.align 2, 0
_0804BDE0: .4byte gUnknown_08097AA4
_0804BDE4: .4byte 0x000003FF
_0804BDE8: .4byte gUnknown_080D8888
_0804BDEC: .4byte 0xFFFFFF00
_0804BDF0:
	ldr r7, [sp, #0x60]
	lsls r0, r7, #1
	adds r0, r0, r7
_0804BDF6:
	lsls r0, r0, #5
	subs r0, r1, r0
	strh r0, [r4, #0xe]
	mov r1, sb
	ldr r0, [r1, #0x44]
	str r0, [sp]
	ldr r0, _0804BE68 @ =0x000002C3
	strh r0, [r4, #8]
	mov r7, sl
	strh r7, [r4, #0xa]
	mov r0, sl
	str r0, [sp, #4]
	mov r0, sp
	ldr r1, [sp, #0x34]
	str r2, [sp, #0x58]
	str r3, [sp, #0x5c]
	bl sub_8039D04
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r2, [sp, #0x58]
	ldr r3, [sp, #0x5c]
	cmp r6, #2
	bls _0804BD6E
	ldr r1, [sp, #0x30]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #2
	bls _0804BD52
	ldr r3, [sp, #0x48]
	ldr r4, [sp, #0x38]
	adds r2, r3, r4
	ldr r5, [sp, #0x4c]
	adds r0, r5, r4
	ldrh r0, [r0]
	movs r1, #0
	strh r0, [r2]
	ldr r7, [sp, #0x54]
	ldr r2, [sp, #0x20]
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, [sp, #0x50]
	adds r1, r3, r4
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r1]
_0804BE56:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804BE68: .4byte 0x000002C3

	thumb_func_start sub_804BE6C
sub_804BE6C: @ 0x0804BE6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #0x20]
	lsls r2, r1, #3
	adds r0, #0x18
	adds r3, r0, r2
	ldr r0, _0804BFCC @ =gUnknown_08097AA4
	mov sb, r0
	lsls r7, r1, #1
	mov r0, r8
	adds r0, #0x28
	adds r6, r0, r7
	ldrh r0, [r6]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r0, [r0, r5]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #9
	ldr r0, [r3]
	subs r0, r0, r1
	str r0, [r3]
	mov r0, r8
	adds r0, #0x1c
	adds r5, r0, r2
	ldrh r0, [r6]
	lsls r0, r0, #1
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #9
	ldr r0, [r5]
	subs r0, r0, r1
	str r0, [r5]
	movs r2, #0x30
	add r2, r8
	mov sl, r2
	adds r4, r2, r7
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0804BEE0
	b _0804C034
_0804BEE0:
	mov r0, r8
	ldr r4, [r0]
	ldr r3, [r3]
	ldr r0, _0804BFD0 @ =gUnknown_080D8888
	ldr r2, [sp, #0x20]
	lsls r1, r2, #2
	adds r2, r1, r0
	adds r4, r4, r3
	ldrh r2, [r2]
	adds r4, r4, r2
	mov r2, r8
	ldr r3, [r2, #4]
	ldr r2, [r5]
	adds r0, #2
	adds r1, r1, r0
	adds r3, r3, r2
	ldrh r1, [r1]
	adds r3, r3, r1
	ldrh r2, [r6]
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r2, r5
	lsls r0, r0, #1
	add r0, sb
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #6
	subs r4, r4, r0
	lsls r2, r2, #1
	add r2, sb
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #6
	subs r3, r3, r0
	movs r0, #0
	str r7, [sp, #0x30]
	mov r1, sl
	str r1, [sp, #0x3c]
	mov r2, r8
	adds r2, #0xc
	str r2, [sp, #0x2c]
	mov r5, r8
	adds r5, #0x3c
	str r5, [sp, #0x40]
	asrs r4, r4, #8
	str r4, [sp, #0x34]
	asrs r3, r3, #8
	str r3, [sp, #0x38]
	adds r7, r6, #0
	ldr r1, _0804BFD4 @ =0x000003FF
	mov sl, r1
	mov r4, sp
_0804BF50:
	movs r6, #0
	subs r2, r0, #1
	mov sb, r2
	adds r5, r0, #1
	str r5, [sp, #0x28]
	movs r1, #1
	subs r3, r1, r0
	lsls r5, r3, #5
	str r5, [sp, #0x24]
_0804BF62:
	ldrh r0, [r7]
	ldr r1, _0804BFD8 @ =0xFFFFFF00
	adds r0, r0, r1
	mov r5, sl
	ands r0, r5
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r5, _0804BFCC @ =gUnknown_08097AA4
	adds r0, r0, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #0xb
	ldr r5, [sp, #0x34]
	subs r0, r5, r0
	str r0, [sp, #0x14]
	ldrh r0, [r7]
	ldr r1, _0804BFD8 @ =0xFFFFFF00
	adds r0, r0, r1
	mov r5, sl
	ands r0, r5
	lsls r0, r0, #1
	ldr r1, _0804BFCC @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r5, #0
	ldrsh r0, [r0, r5]
	muls r0, r2, r0
	asrs r0, r0, #0xb
	ldr r1, [sp, #0x38]
	subs r0, r1, r0
	str r0, [sp, #0x18]
	movs r0, #0x12
	strh r0, [r4, #0x1c]
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r5, #0
	ldrh r1, [r7]
	adds r0, r0, r1
	mov r5, sl
	ands r0, r5
	strh r0, [r4, #0xc]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #5
	adds r1, r0, #0
	adds r1, #0x80
	cmp r3, #0
	blt _0804BFDC
	ldr r5, [sp, #0x24]
	subs r0, r1, r5
	b _0804BFE2
	.align 2, 0
_0804BFCC: .4byte gUnknown_08097AA4
_0804BFD0: .4byte gUnknown_080D8888
_0804BFD4: .4byte 0x000003FF
_0804BFD8: .4byte 0xFFFFFF00
_0804BFDC:
	mov r5, sb
	lsls r0, r5, #5
	subs r0, r1, r0
_0804BFE2:
	movs r5, #0
	strh r0, [r4, #0xe]
	mov r1, r8
	ldr r0, [r1, #0x44]
	str r0, [sp]
	ldr r0, _0804C030 @ =0x000002C3
	strh r0, [r4, #8]
	strh r5, [r4, #0xa]
	str r5, [sp, #4]
	mov r0, sp
	ldr r1, [sp, #0x2c]
	str r2, [sp, #0x44]
	str r3, [sp, #0x48]
	bl sub_8039D04
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r2, [sp, #0x44]
	ldr r3, [sp, #0x48]
	cmp r6, #2
	bls _0804BF62
	ldr r2, [sp, #0x28]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _0804BF50
	ldr r1, [sp, #0x40]
	ldr r2, [sp, #0x20]
	adds r0, r1, r2
	strb r5, [r0]
	ldr r5, [sp, #0x3c]
	ldr r0, [sp, #0x30]
	adds r1, r5, r0
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r1]
	b _0804C06C
	.align 2, 0
_0804C030: .4byte 0x000002C3
_0804C034:
	mov r0, r8
	ldr r1, [sp, #0x20]
	bl sub_804B2EC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804C06C
	ldr r1, [sp, #0x20]
	lsls r2, r1, #2
	mov r0, r8
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, _0804C07C @ =0x0000FE80
	strh r1, [r0]
	mov r0, r8
	adds r0, #0x36
	adds r0, r0, r2
	movs r1, #0xfd
	lsls r1, r1, #8
	strh r1, [r0]
	mov r0, r8
	adds r0, #0x3c
	ldr r2, [sp, #0x20]
	adds r0, r0, r2
	movs r1, #7
	strb r1, [r0]
	movs r0, #0x3c
	strh r0, [r4]
_0804C06C:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C07C: .4byte 0x0000FE80

	thumb_func_start sub_804C080
sub_804C080: @ 0x0804C080
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov sl, r0
	ldr r0, _0804C20C @ =gUnknown_03005590
	mov sb, r0
	ldr r7, [r0]
	movs r0, #7
	ands r7, r0
	cmp r7, #0
	bne _0804C116
	ldr r1, _0804C210 @ =gUnknown_030053B8
	mov r8, r1
	ldr r0, [r1]
	ldr r5, _0804C214 @ =0x00196225
	adds r2, r0, #0
	muls r2, r5, r2
	ldr r4, _0804C218 @ =0x3C6EF35F
	adds r2, r2, r4
	ldr r6, _0804C21C @ =gUnknown_03005960
	movs r3, #0xff
	adds r1, r2, #0
	ands r1, r3
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [sp, #0x14]
	muls r2, r5, r2
	adds r2, r2, r4
	adds r1, r2, #0
	ands r1, r3
	ldr r0, [r6, #4]
	adds r0, r0, r1
	str r0, [sp, #0x18]
	mov r1, sp
	movs r0, #0x12
	strh r0, [r1, #0x1c]
	mov r3, sp
	adds r1, r2, #0
	muls r1, r5, r1
	adds r1, r1, r4
	ldr r0, _0804C220 @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	mov r2, sp
	adds r0, r1, #0
	muls r0, r5, r0
	adds r0, r0, r4
	mov r3, r8
	str r0, [r3]
	ldr r1, _0804C224 @ =0x000001FF
	ands r0, r1
	adds r1, #1
	adds r0, r0, r1
	strh r0, [r2, #0xe]
	ldr r0, _0804C228 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _0804C22C @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r7, [r0, #0xa]
	str r7, [sp, #4]
	mov r1, sl
	adds r1, #0xc
	bl sub_8039D04
	movs r0, #0x90
	bl m4aSongNumStart
	ldr r0, _0804C230 @ =gMPlayInfo_SE3
	bl m4aMPlayImmInit
_0804C116:
	ldr r0, _0804C230 @ =gMPlayInfo_SE3
	ldr r1, _0804C234 @ =0x0000FFFF
	mov r3, sl
	ldrh r2, [r3, #0x14]
	bl m4aMPlayVolumeControl
	mov r0, sl
	ldr r2, [r0, #0x14]
	cmp r2, #0
	beq _0804C13C
	mov r1, sb
	ldr r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0804C13C
	subs r0, r2, #1
	mov r3, sl
	str r0, [r3, #0x14]
_0804C13C:
	ldr r0, _0804C20C @ =gUnknown_03005590
	ldr r0, [r0]
	adds r7, r0, #3
	movs r0, #7
	ands r7, r0
	cmp r7, #0
	bne _0804C1FC
	ldr r0, _0804C210 @ =gUnknown_030053B8
	mov sb, r0
	ldr r0, [r0]
	ldr r1, _0804C214 @ =0x00196225
	mov r8, r1
	mov r3, r8
	muls r3, r0, r3
	adds r0, r3, #0
	ldr r6, _0804C218 @ =0x3C6EF35F
	adds r0, r0, r6
	mov r1, sb
	str r0, [r1]
	lsls r0, r0, #0x18
	movs r4, #0xf0
	lsls r4, r4, #0x14
	ands r4, r0
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #6
	bl Div
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r4, r4, r1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	mov r3, sb
	ldr r0, [r3]
	mov r2, r8
	muls r2, r0, r2
	adds r2, r2, r6
	ldr r5, _0804C21C @ =gUnknown_03005960
	movs r3, #0xff
	adds r1, r2, #0
	ands r1, r3
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [sp, #0x14]
	mov r0, r8
	muls r0, r2, r0
	adds r2, r0, #0
	adds r2, r2, r6
	adds r1, r2, #0
	ands r1, r3
	ldr r0, [r5, #4]
	adds r0, r0, r1
	str r0, [sp, #0x18]
	mov r1, sp
	movs r0, #0x20
	strh r0, [r1, #0x1c]
	mov r3, sp
	mov r0, r8
	muls r0, r2, r0
	adds r0, r0, r6
	mov r1, sb
	str r0, [r1]
	ldr r1, _0804C220 @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	mov r1, sp
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1, #0xe]
	ldr r2, _0804C238 @ =gUnknown_080D79D0
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r0, r1, r2
	ldr r0, [r0]
	lsls r0, r0, #5
	ldr r3, _0804C23C @ =0x06010000
	adds r0, r0, r3
	str r0, [sp]
	mov r3, sp
	adds r0, r2, #4
	adds r0, r1, r0
	ldr r0, [r0]
	strh r0, [r3, #8]
	adds r2, #8
	adds r1, r1, r2
	ldr r0, [r1]
	strh r0, [r3, #0xa]
	str r7, [sp, #4]
	mov r1, sl
	adds r1, #0xc
	mov r0, sp
	bl sub_8039D04
_0804C1FC:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C20C: .4byte gUnknown_03005590
_0804C210: .4byte gUnknown_030053B8
_0804C214: .4byte 0x00196225
_0804C218: .4byte 0x3C6EF35F
_0804C21C: .4byte gUnknown_03005960
_0804C220: .4byte 0x000003FF
_0804C224: .4byte 0x000001FF
_0804C228: .4byte 0x06012980
_0804C22C: .4byte 0x0000026B
_0804C230: .4byte gMPlayInfo_SE3
_0804C234: .4byte 0x0000FFFF
_0804C238: .4byte gUnknown_080D79D0
_0804C23C: .4byte 0x06010000

	thumb_func_start sub_804C240
sub_804C240: @ 0x0804C240
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	mov ip, r2
	adds r0, #0x42
	adds r3, r0, r2
	ldrb r0, [r3]
	cmp r0, #0
	beq _0804C260
	b _0804C37C
_0804C260:
	lsls r7, r2, #3
	adds r0, r4, #0
	adds r0, #0x1c
	adds r6, r0, r7
	ldr r1, [r4, #4]
	ldr r0, [r6]
	adds r1, r1, r0
	ldr r0, _0804C290 @ =gUnknown_080D8888
	mov sb, r0
	lsls r5, r2, #2
	adds r0, #2
	adds r0, r5, r0
	ldrh r0, [r0]
	mov r8, r0
	add r1, r8
	asrs r1, r1, #8
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	ble _0804C294
	movs r0, #1
	strb r0, [r3]
	b _0804C37C
	.align 2, 0
_0804C290: .4byte gUnknown_080D8888
_0804C294:
	mov r1, ip
	lsls r0, r1, #1
	adds r2, r4, #0
	adds r2, #0x28
	adds r2, r2, r0
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r0, r3, #0
	ldrh r1, [r2]
	adds r0, r0, r1
	adds r3, #0xdf
	adds r1, r3, #0
	ands r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x36
	adds r3, r0, r5
	ldrh r0, [r3]
	adds r0, #0x20
	strh r0, [r3]
	adds r0, r4, #0
	adds r0, #0x18
	adds r2, r0, r7
	adds r0, #0x1c
	adds r0, r0, r5
	mov ip, r0
	movs r7, #0
	ldrsh r1, [r0, r7]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, [r6]
	adds r0, r0, r1
	str r0, [sp, #0x20]
	str r0, [r6]
	ldr r1, _0804C38C @ =gUnknown_03005590
	mov sl, r1
	ldr r6, [r1]
	movs r0, #3
	ands r6, r0
	cmp r6, #0
	bne _0804C37C
	ldr r1, [r4]
	ldr r0, [r2]
	mov r7, sb
	adds r2, r5, r7
	adds r1, r1, r0
	ldrh r2, [r2]
	adds r1, r1, r2
	ldr r0, [r4, #4]
	ldr r2, [sp, #0x20]
	adds r0, r0, r2
	add r0, r8
	asrs r1, r1, #8
	str r1, [sp, #0x14]
	asrs r0, r0, #8
	str r0, [sp, #0x18]
	mov r0, sp
	strh r6, [r0, #0x1c]
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	rsbs r0, r0, #0
	mov r3, ip
	ldrh r1, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x13
	rsbs r1, r1, #0
	bl sub_8004418
	mov r1, sp
	strh r0, [r1, #0xc]
	mov r3, sp
	ldr r2, _0804C390 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0804C394 @ =0x00196225
	muls r0, r1, r0
	ldr r5, _0804C398 @ =0x3C6EF35F
	adds r0, r0, r5
	str r0, [r2]
	mov r2, sp
	movs r1, #0x1f
	ands r0, r1
	ldrh r2, [r2, #0xc]
	adds r0, r0, r2
	subs r0, #0x10
	ldr r1, _0804C39C @ =0x000003FF
	ands r0, r1
	strh r0, [r3, #0xc]
	ldr r2, _0804C3A0 @ =gUnknown_08097AA4
	mov r7, sl
	ldr r0, [r7]
	lsls r0, r0, #4
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x16
	subs r1, #0xff
	adds r0, r0, r1
	strh r0, [r3, #0xe]
	ldr r0, _0804C3A4 @ =0x06012980
	str r0, [sp]
	mov r1, sp
	ldr r0, _0804C3A8 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r6, [r0, #0xa]
	str r6, [sp, #4]
	adds r1, r4, #0
	adds r1, #0xc
	bl sub_8039D04
_0804C37C:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C38C: .4byte gUnknown_03005590
_0804C390: .4byte gUnknown_030053B8
_0804C394: .4byte 0x00196225
_0804C398: .4byte 0x3C6EF35F
_0804C39C: .4byte 0x000003FF
_0804C3A0: .4byte gUnknown_08097AA4
_0804C3A4: .4byte 0x06012980
_0804C3A8: .4byte 0x0000026B

	thumb_func_start sub_804C3AC
sub_804C3AC: @ 0x0804C3AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r0
	ldr r5, _0804C42C @ =gUnknown_030053B8
	ldr r0, [r5]
	ldr r4, _0804C430 @ =0x00196225
	adds r1, r0, #0
	muls r1, r4, r1
	ldr r2, _0804C434 @ =0x3C6EF35F
	adds r1, r1, r2
	movs r3, #7
	adds r0, r1, #0
	ands r0, r3
	subs r0, #3
	lsls r0, r0, #8
	str r0, [sp]
	adds r0, r1, #0
	muls r0, r4, r0
	adds r0, r0, r2
	str r0, [r5]
	ands r0, r3
	subs r0, #3
	lsls r0, r0, #8
	str r0, [sp, #4]
	ldr r3, _0804C438 @ =gBgScrollRegs
	ldr r1, _0804C43C @ =gUnknown_03005960
	ldr r4, [r1]
	mov r0, sl
	ldr r2, [r0]
	ldr r5, [sp]
	adds r0, r2, r5
	asrs r0, r0, #8
	subs r0, r4, r0
	strh r0, [r3]
	ldr r1, [r1, #4]
	mov r5, sl
	ldr r0, [r5, #4]
	ldr r5, [sp, #4]
	adds r0, r0, r5
	asrs r0, r0, #8
	subs r1, r1, r0
	strh r1, [r3, #2]
	movs r0, #0xbe
	lsls r0, r0, #8
	adds r2, r2, r0
	asrs r2, r2, #8
	subs r6, r2, r4
	adds r1, r6, #0
	adds r1, #0x32
	movs r0, #0xa5
	lsls r0, r0, #1
	cmp r1, r0
	bls _0804C448
	ldr r2, _0804C440 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0804C444 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _0804C456
	.align 2, 0
_0804C42C: .4byte gUnknown_030053B8
_0804C430: .4byte 0x00196225
_0804C434: .4byte 0x3C6EF35F
_0804C438: .4byte gBgScrollRegs
_0804C43C: .4byte gUnknown_03005960
_0804C440: .4byte gDispCnt
_0804C444: .4byte 0x0000FEFF
_0804C448:
	ldr r0, _0804C5A0 @ =gDispCnt
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
_0804C456:
	mov r5, sl
	adds r5, #0x54
	movs r4, #0x84
	add r4, sl
	mov r8, r4
	mov r1, sl
	ldr r0, [r1]
	ldr r2, [sp]
	adds r0, r0, r2
	movs r3, #0xbe
	lsls r3, r3, #8
	adds r6, r0, r3
	ldr r0, [r1, #4]
	ldr r4, [sp, #4]
	adds r0, r0, r4
	movs r1, #0xa0
	lsls r1, r1, #6
	adds r7, r0, r1
	asrs r0, r6, #8
	ldr r2, _0804C5A4 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	asrs r0, r7, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, _0804C5A8 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0804C5AC @ =0x00003060
	orrs r0, r1
	str r0, [r5, #0x10]
	mov r2, sl
	ldrh r0, [r2, #0x10]
	mov r3, r8
	strh r0, [r3]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3, #2]
	strh r0, [r3, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r3, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r3, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	mov r1, r8
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	movs r4, #0
	mov sb, r4
	subs r5, #0x3c
	str r5, [sp, #0xc]
	mov r0, sl
	adds r0, #0x1c
	str r0, [sp, #0x10]
	mov r1, sl
	adds r1, #0x28
	str r1, [sp, #8]
_0804C4DE:
	mov r2, sb
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #2
	adds r0, #0x90
	mov r3, sl
	adds r5, r3, r0
	movs r4, #0x30
	adds r4, r4, r5
	mov r8, r4
	ldr r1, [r3]
	ldr r0, [sp]
	adds r1, r1, r0
	lsls r2, r2, #3
	ldr r3, [sp, #0xc]
	adds r0, r3, r2
	ldr r0, [r0]
	mov ip, r0
	mov r4, sb
	lsls r3, r4, #2
	ldr r4, _0804C5B0 @ =gUnknown_080D8888
	adds r0, r3, r4
	add r1, ip
	ldrh r0, [r0]
	adds r6, r1, r0
	mov r1, sl
	ldr r0, [r1, #4]
	ldr r4, [sp, #4]
	adds r0, r0, r4
	ldr r1, [sp, #0x10]
	adds r2, r1, r2
	ldr r1, [r2]
	ldr r2, _0804C5B4 @ =gUnknown_080D888A
	adds r3, r3, r2
	adds r0, r0, r1
	ldrh r3, [r3]
	adds r7, r0, r3
	asrs r1, r6, #8
	ldr r2, _0804C5A4 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	asrs r0, r7, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, _0804C5A8 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x83
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #0x10]
	mov r3, sb
	lsls r0, r3, #1
	ldr r4, [sp, #8]
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r5, #0x30]
	movs r0, #0x80
	lsls r0, r0, #1
	mov r1, r8
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r1, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	mov r1, r8
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #1
	bls _0804C4DE
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C5A0: .4byte gDispCnt
_0804C5A4: .4byte gUnknown_03005960
_0804C5A8: .4byte gUnknown_030054B8
_0804C5AC: .4byte 0x00003060
_0804C5B0: .4byte gUnknown_080D8888
_0804C5B4: .4byte gUnknown_080D888A

	thumb_func_start sub_804C5B8
sub_804C5B8: @ 0x0804C5B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	ldrb r0, [r0, #0xb]
	cmp r0, #0
	beq _0804C640
	cmp r0, #0x1f
	bhi _0804C608
	ldr r5, _0804C5FC @ =gUnknown_030053B8
	ldr r0, [r5]
	ldr r4, _0804C600 @ =0x00196225
	adds r1, r0, #0
	muls r1, r4, r1
	ldr r2, _0804C604 @ =0x3C6EF35F
	adds r1, r1, r2
	movs r3, #7
	adds r0, r1, #0
	ands r0, r3
	subs r0, #3
	lsls r0, r0, #8
	str r0, [sp, #8]
	adds r0, r1, #0
	muls r0, r4, r0
	adds r0, r0, r2
	str r0, [r5]
	ands r0, r3
	subs r0, #3
	lsls r0, r0, #8
	b _0804C644
	.align 2, 0
_0804C5FC: .4byte gUnknown_030053B8
_0804C600: .4byte 0x00196225
_0804C604: .4byte 0x3C6EF35F
_0804C608:
	ldr r5, _0804C634 @ =gUnknown_030053B8
	ldr r0, [r5]
	ldr r4, _0804C638 @ =0x00196225
	adds r1, r0, #0
	muls r1, r4, r1
	ldr r2, _0804C63C @ =0x3C6EF35F
	adds r1, r1, r2
	movs r3, #0xf
	adds r0, r1, #0
	ands r0, r3
	subs r0, #7
	lsls r0, r0, #8
	str r0, [sp, #8]
	adds r0, r1, #0
	muls r0, r4, r0
	adds r0, r0, r2
	str r0, [r5]
	ands r0, r3
	subs r0, #7
	lsls r0, r0, #8
	b _0804C644
	.align 2, 0
_0804C634: .4byte gUnknown_030053B8
_0804C638: .4byte 0x00196225
_0804C63C: .4byte 0x3C6EF35F
_0804C640:
	movs r0, #0
	str r0, [sp, #8]
_0804C644:
	str r0, [sp, #0xc]
	ldr r5, _0804C694 @ =gBgScrollRegs
	ldr r3, _0804C698 @ =gUnknown_03005960
	ldr r6, [r3]
	mov r1, r8
	ldr r2, [r1]
	ldr r7, [sp, #8]
	adds r0, r2, r7
	asrs r0, r0, #8
	subs r0, r6, r0
	strh r0, [r5]
	ldr r1, [r3, #4]
	mov r0, r8
	ldr r4, [r0, #4]
	ldr r7, [sp, #0xc]
	adds r0, r4, r7
	asrs r0, r0, #8
	subs r1, r1, r0
	strh r1, [r5, #2]
	movs r1, #0xbe
	lsls r1, r1, #8
	adds r0, r2, r1
	asrs r0, r0, #8
	subs r6, r0, r6
	str r6, [sp]
	adds r1, r6, #0
	adds r1, #0x32
	movs r0, #0xa5
	lsls r0, r0, #1
	mov sb, r3
	adds r7, r2, #0
	cmp r1, r0
	bls _0804C6A4
	ldr r2, _0804C69C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0804C6A0 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
	b _0804C6B2
	.align 2, 0
_0804C694: .4byte gBgScrollRegs
_0804C698: .4byte gUnknown_03005960
_0804C69C: .4byte gDispCnt
_0804C6A0: .4byte 0x0000FEFF
_0804C6A4:
	ldr r0, _0804C6CC @ =gDispCnt
	ldrh r1, [r0]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r3, #0
	orrs r1, r2
	strh r1, [r0]
_0804C6B2:
	mov r5, r8
	adds r5, #0x54
	mov r6, r8
	adds r6, #0x84
	mov r1, r8
	ldrb r0, [r1, #0xb]
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0x1f
	bhi _0804C6D0
	lsrs r3, r1, #0x1b
	b _0804C6DE
	.align 2, 0
_0804C6CC: .4byte gDispCnt
_0804C6D0:
	mov r2, r8
	ldrb r1, [r2, #0xb]
	movs r0, #0x40
	subs r0, r0, r1
	asrs r0, r0, #3
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_0804C6DE:
	ldr r1, [sp, #8]
	adds r0, r7, r1
	movs r2, #0xbe
	lsls r2, r2, #8
	adds r2, r0, r2
	str r2, [sp]
	ldr r7, [sp, #0xc]
	adds r0, r4, r7
	movs r1, #0xa0
	lsls r1, r1, #6
	adds r1, r0, r1
	str r1, [sp, #4]
	asrs r0, r2, #8
	mov r7, sb
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r1, [sp, #4]
	asrs r0, r1, #8
	ldr r1, [r7, #4]
	subs r0, r0, r1
	adds r0, r0, r3
	strh r0, [r5, #0x18]
	ldr r2, _0804C81C @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0804C820 @ =0x00003060
	orrs r0, r1
	str r0, [r5, #0x10]
	mov r2, r8
	ldrh r0, [r2, #0x10]
	strh r0, [r6]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	strh r0, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	movs r7, #0
	movs r3, #0x42
	add r3, r8
	mov sl, r3
	ldr r0, _0804C824 @ =gUnknown_080D8888
	mov sb, r0
_0804C754:
	mov r1, sl
	adds r0, r1, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804C802
	lsls r0, r7, #4
	subs r0, r0, r7
	lsls r0, r0, #2
	adds r0, #0x90
	mov r2, r8
	adds r5, r2, r0
	adds r6, r5, #0
	adds r6, #0x30
	ldr r1, [r2]
	ldr r3, [sp, #8]
	adds r1, r1, r3
	lsls r4, r7, #3
	mov r0, r8
	adds r0, #0x18
	adds r0, r0, r4
	ldr r0, [r0]
	mov ip, r0
	lsls r2, r7, #2
	mov r3, sb
	adds r0, r2, r3
	add r1, ip
	ldrh r0, [r0]
	adds r0, r1, r0
	str r0, [sp]
	mov r0, r8
	ldr r1, [r0, #4]
	ldr r3, [sp, #0xc]
	adds r1, r1, r3
	adds r0, #0x1c
	adds r0, r0, r4
	ldr r0, [r0]
	ldr r3, _0804C828 @ =gUnknown_080D888A
	adds r2, r2, r3
	adds r1, r1, r0
	ldrh r2, [r2]
	adds r2, r1, r2
	str r2, [sp, #4]
	ldr r0, [sp]
	asrs r1, r0, #8
	ldr r2, _0804C82C @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r1, [sp, #4]
	asrs r0, r1, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, _0804C81C @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x83
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r5, #0x10]
	lsls r1, r7, #1
	mov r0, r8
	adds r0, #0x28
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r5, #0x30]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	strh r0, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
_0804C802:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #1
	bls _0804C754
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C81C: .4byte gUnknown_030054B8
_0804C820: .4byte 0x00003060
_0804C824: .4byte gUnknown_080D8888
_0804C828: .4byte gUnknown_080D888A
_0804C82C: .4byte gUnknown_03005960

	thumb_func_start sub_804C830
sub_804C830: @ 0x0804C830
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r5, r0, #0
	ldrb r0, [r5, #0xb]
	cmp r0, #0
	bne _0804C8CC
	ldr r0, [r5]
	movs r1, #0xbe
	lsls r1, r1, #8
	adds r0, r0, r1
	asrs r7, r0, #8
	str r7, [sp, #4]
	ldr r0, [r5, #4]
	movs r2, #0xa0
	lsls r2, r2, #6
	adds r0, r0, r2
	asrs r4, r0, #8
	str r4, [sp, #8]
	adds r6, r5, #0
	adds r6, #0x54
	ldr r0, _0804C87C @ =gUnknown_030059E0
	mov r8, r0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_800C418
	cmp r0, #1
	bne _0804C880
	adds r0, r5, #0
	bl sub_804C8F4
	b _0804C8E4
	.align 2, 0
_0804C87C: .4byte gUnknown_030059E0
_0804C880:
	mov r1, r8
	str r1, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_800C320
	cmp r0, #1
	bne _0804C8AA
	adds r0, r5, #0
	bl sub_804C8F4
	mov r2, r8
	movs r1, #0x10
	ldrsh r0, [r2, r1]
	cmp r0, #0
	ble _0804C8CC
	rsbs r0, r0, #0
	strh r0, [r2, #0x10]
	b _0804C8CC
_0804C8AA:
	mov r2, r8
	str r2, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_800CA20
	cmp r0, #1
	bne _0804C8CC
	mov r1, r8
	movs r2, #0x10
	ldrsh r0, [r1, r2]
	cmp r0, #0
	ble _0804C8CC
	rsbs r0, r0, #0
	strh r0, [r1, #0x10]
_0804C8CC:
	ldr r0, _0804C8F0 @ =gUnknown_030054F0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0804C8E4
	ldr r1, [sp, #4]
	lsls r0, r1, #8
	ldr r2, [sp, #8]
	lsls r1, r2, #8
	bl sub_80122DC
_0804C8E4:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C8F0: .4byte gUnknown_030054F0

	thumb_func_start sub_804C8F4
sub_804C8F4: @ 0x0804C8F4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	movs r0, #0x54
	adds r0, r0, r7
	mov r8, r0
	ldrb r0, [r7, #8]
	subs r0, #1
	strb r0, [r7, #8]
	movs r1, #0xff
	ands r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0804C91C
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0804C922
_0804C91C:
	movs r0, #0xeb
	bl m4aSongNumStart
_0804C922:
	ldrb r2, [r7, #8]
	cmp r2, #3
	bne _0804C92E
	ldr r1, _0804C99C @ =gUnknown_030054A8
	movs r0, #0x13
	strb r0, [r1, #1]
_0804C92E:
	cmp r2, #0
	bne _0804C97C
	ldr r1, _0804C9A0 @ =gUnknown_03005450
	ldr r5, [r1]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _0804C9A4 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _0804C976
	ldr r0, _0804C9A8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804C976
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _0804C9AC @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r2, [r1]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _0804C974
	movs r0, #0xff
_0804C974:
	strb r0, [r1]
_0804C976:
	ldr r1, _0804C99C @ =gUnknown_030054A8
	movs r0, #0x30
	strb r0, [r1, #1]
_0804C97C:
	movs r0, #0x40
	strb r0, [r7, #0xb]
	ldr r0, _0804C9B0 @ =0x000002C1
	mov r1, r8
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804C99C: .4byte gUnknown_030054A8
_0804C9A0: .4byte gUnknown_03005450
_0804C9A4: .4byte 0x0000C350
_0804C9A8: .4byte gUnknown_030054CC
_0804C9AC: .4byte gUnknown_03005448
_0804C9B0: .4byte 0x000002C1

	thumb_func_start sub_804C9B4
sub_804C9B4: @ 0x0804C9B4
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r0, #9
	adds r1, r0, r4
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804C9EE
	subs r0, #1
	strb r0, [r1]
	movs r1, #0xff
	ands r0, r1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0804C9DE
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0804C9E4
_0804C9DE:
	movs r0, #0xeb
	bl m4aSongNumStart
_0804C9E4:
	adds r0, r5, #0
	adds r0, #0x3e
	adds r0, r0, r4
	movs r1, #0x40
	strb r1, [r0]
_0804C9EE:
	movs r1, #0
	adds r0, r5, #0
	adds r0, #9
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804C9FE
	movs r1, #1
_0804C9FE:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_804CA08
sub_804CA08: @ 0x0804CA08
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0xb]
	cmp r0, #0
	beq _0804CA4C
	subs r0, #1
	strb r0, [r2, #0xb]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804CA4C
	adds r3, r2, #0
	adds r3, #0x54
	ldrb r0, [r2, #8]
	cmp r0, #0
	beq _0804CA38
	movs r0, #0
	ldr r1, _0804CA34 @ =0x000002C1
	strh r1, [r3, #0xa]
	adds r1, r2, #0
	adds r1, #0x74
	b _0804CA42
	.align 2, 0
_0804CA34: .4byte 0x000002C1
_0804CA38:
	ldr r0, _0804CA6C @ =0x000002C1
	strh r0, [r3, #0xa]
	adds r1, r2, #0
	adds r1, #0x74
	movs r0, #3
_0804CA42:
	strb r0, [r1]
	adds r1, r3, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0804CA4C:
	adds r1, r2, #0
	adds r1, #0x3e
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804CA5A
	subs r0, #1
	strb r0, [r1]
_0804CA5A:
	adds r1, r2, #0
	adds r1, #0x3f
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804CA68
	subs r0, #1
	strb r0, [r1]
_0804CA68:
	pop {r0}
	bx r0
	.align 2, 0
_0804CA6C: .4byte 0x000002C1

	thumb_func_start sub_804CA70
sub_804CA70: @ 0x0804CA70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	ldr r0, _0804CABC @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	lsrs r6, r0, #1
	ldrb r0, [r3, #0xb]
	cmp r0, #0
	beq _0804CACC
	movs r2, #0
	movs r0, #0x3e
	adds r0, r0, r3
	mov ip, r0
	adds r7, r3, #0
	adds r7, #0x3f
	ldr r1, _0804CAC0 @ =gFlags
	mov r8, r1
	ldr r5, _0804CAC4 @ =gObjPalette
	ldr r4, _0804CAC8 @ =gUnknown_080D88B0
	lsls r3, r6, #5
_0804CA9E:
	adds r1, r2, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r2, #1
	adds r0, r0, r3
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CA9E
	b _0804CAFA
	.align 2, 0
_0804CABC: .4byte gUnknown_03005590
_0804CAC0: .4byte gFlags
_0804CAC4: .4byte gObjPalette
_0804CAC8: .4byte gUnknown_080D88B0
_0804CACC:
	movs r2, #0
	movs r0, #0x3e
	adds r0, r0, r3
	mov ip, r0
	adds r7, r3, #0
	adds r7, #0x3f
	ldr r1, _0804CB28 @ =gFlags
	mov r8, r1
	ldr r4, _0804CB2C @ =gObjPalette
	ldr r3, _0804CB30 @ =gUnknown_080D88B0
_0804CAE0:
	adds r1, r2, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CAE0
_0804CAFA:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804CB34
	movs r2, #0
	ldr r5, _0804CB2C @ =gObjPalette
	ldr r4, _0804CB30 @ =gUnknown_080D88B0
	lsls r3, r6, #5
_0804CB0A:
	adds r1, r2, #0
	adds r1, #0x90
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r2, #1
	adds r0, r0, r3
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CB0A
	b _0804CB54
	.align 2, 0
_0804CB28: .4byte gFlags
_0804CB2C: .4byte gObjPalette
_0804CB30: .4byte gUnknown_080D88B0
_0804CB34:
	movs r2, #0
	ldr r4, _0804CB80 @ =gObjPalette
	ldr r3, _0804CB84 @ =gUnknown_080D88B0
_0804CB3A:
	adds r1, r2, #0
	adds r1, #0x90
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CB3A
_0804CB54:
	ldrb r0, [r7]
	cmp r0, #0
	beq _0804CB88
	movs r2, #0
	ldr r5, _0804CB80 @ =gObjPalette
	ldr r4, _0804CB84 @ =gUnknown_080D88B0
	lsls r3, r6, #5
_0804CB62:
	adds r1, r2, #0
	adds r1, #0xc0
	lsls r1, r1, #1
	adds r1, r1, r5
	lsls r0, r2, #1
	adds r0, r0, r3
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CB62
	b _0804CBA8
	.align 2, 0
_0804CB80: .4byte gObjPalette
_0804CB84: .4byte gUnknown_080D88B0
_0804CB88:
	movs r2, #0
	ldr r4, _0804CBC0 @ =gObjPalette
	ldr r3, _0804CBC4 @ =gUnknown_080D88B0
_0804CB8E:
	adds r1, r2, #0
	adds r1, #0xc0
	lsls r1, r1, #1
	adds r1, r1, r4
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bls _0804CB8E
_0804CBA8:
	mov r1, r8
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	mov r1, r8
	str r0, [r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804CBC0: .4byte gObjPalette
_0804CBC4: .4byte gUnknown_080D88B0

	thumb_func_start sub_804CBC8
sub_804CBC8: @ 0x0804CBC8
	push {r4, r5, r6, r7, lr}
	ldr r7, _0804CC24 @ =gCurTask
	ldr r0, [r7]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, r5, #0
	bl sub_804C5B8
	ldr r6, _0804CC28 @ =gUnknown_030059E0
	ldr r0, [r6, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r6, #0x20]
	movs r1, #0x14
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _0804CC1C
	ldr r0, [r5, #0x14]
	subs r4, r0, #1
	str r4, [r5, #0x14]
	cmp r4, #0
	bne _0804CC1C
	movs r0, #0x96
	lsls r0, r0, #1
	str r0, [r5, #0x14]
	ldr r1, [r7]
	ldr r0, _0804CC2C @ =sub_804A9D8
	str r0, [r1, #8]
	movs r0, #0x82
	lsls r0, r0, #1
	bl m4aSongNumStart
	adds r0, r6, #0
	adds r0, #0x64
	strh r4, [r0]
	adds r1, r6, #0
	adds r1, #0x6d
	movs r0, #1
	strb r0, [r1]
_0804CC1C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804CC24: .4byte gCurTask
_0804CC28: .4byte gUnknown_030059E0
_0804CC2C: .4byte sub_804A9D8

	thumb_func_start sub_804CC30
sub_804CC30: @ 0x0804CC30
	push {r4, lr}
	ldr r4, _0804CC78 @ =gCurTask
	ldr r0, [r4]
	ldrh r0, [r0, #6]
	ldr r1, _0804CC7C @ =IWRAM_START + 0x4C
	adds r2, r0, r1
	movs r1, #0x80
	lsls r1, r1, #6
	strh r1, [r2]
	ldr r1, _0804CC80 @ =IWRAM_START + 0x48
	adds r0, r0, r1
	bl sub_802D4CC
	ldr r0, _0804CC84 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _0804CC88 @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0804CC8C @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
	movs r0, #0x90
	bl m4aSongNumStop
	ldr r0, _0804CC90 @ =gMPlayInfo_SE3
	ldr r1, _0804CC94 @ =0x0000FFFF
	movs r2, #0xff
	bl m4aMPlayVolumeControl
	ldr r0, [r4]
	bl TaskDestroy
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0804CC78: .4byte gCurTask
_0804CC7C: .4byte IWRAM_START + 0x4C
_0804CC80: .4byte IWRAM_START + 0x48
_0804CC84: .4byte gUnknown_03005490
_0804CC88: .4byte gUnknown_030053F0
_0804CC8C: .4byte gUnknown_030054F4
_0804CC90: .4byte gMPlayInfo_SE3
_0804CC94: .4byte 0x0000FFFF

	thumb_func_start sub_804CC98
sub_804CC98: @ 0x0804CC98
	push {lr}
	adds r2, r0, #0
	ldrb r0, [r2, #0xb]
	cmp r0, #0
	beq _0804CCC4
	ldr r1, _0804CCBC @ =gUnknown_08097AA4
	lsls r0, r0, #4
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	asrs r0, r0, #7
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r3, _0804CCC0 @ =0x000003FF
	adds r1, r3, #0
	ands r0, r1
	b _0804CCC8
	.align 2, 0
_0804CCBC: .4byte gUnknown_08097AA4
_0804CCC0: .4byte 0x000003FF
_0804CCC4:
	movs r0, #0x80
	lsls r0, r0, #2
_0804CCC8:
	strh r0, [r2, #0x10]
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804CCD0
sub_804CCD0: @ 0x0804CCD0
	push {r4, r5, lr}
	adds r4, r1, #0
	ldr r1, [r0]
	movs r5, #0xbe
	lsls r5, r5, #8
	adds r2, r1, r5
	ldr r0, [r0, #4]
	movs r1, #0xa0
	lsls r1, r1, #6
	adds r3, r0, r1
	ldr r5, _0804CD08 @ =gUnknown_030059E0
	ldr r1, [r5, #0xc]
	asrs r0, r1, #8
	cmp r0, r2
	bge _0804CD00
	subs r0, r3, r4
	cmp r1, r0
	blt _0804CD00
	adds r0, r4, r3
	cmp r1, r0
	bgt _0804CD00
	adds r0, r5, #0
	bl sub_800CBA4
_0804CD00:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0804CD08: .4byte gUnknown_030059E0

	thumb_func_start sub_804CD0C
sub_804CD0C: @ 0x0804CD0C
	push {r4, r5, lr}
	ldrh r4, [r0, #6]
	movs r5, #0xc0
	lsls r5, r5, #0x12
	adds r5, r4, r5
	ldr r0, [r5, #0x44]
	bl sub_8007CF0
	ldr r1, _0804CD44 @ =IWRAM_START + 0x94
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _0804CD48 @ =IWRAM_START + 0xD0
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	ldr r0, [r5, #0x58]
	bl sub_8007CF0
	ldr r1, _0804CD4C @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0804CD44: .4byte IWRAM_START + 0x94
_0804CD48: .4byte IWRAM_START + 0xD0
_0804CD4C: .4byte gUnknown_03005B4C

	thumb_func_start sub_804CD50
sub_804CD50: @ 0x0804CD50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0804CE7C @ =sub_804D6AC
	movs r1, #0x94
	lsls r1, r1, #4
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0804CE80 @ =sub_8050A7C
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldr r4, _0804CE84 @ =gUnknown_03005B4C
	str r0, [r4]
	bl sub_804CEC4
	ldr r0, [r4]
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r0, _0804CE88 @ =IWRAM_START + 0x1C
	adds r3, r2, r0
	ldr r7, _0804CE8C @ =IWRAM_START + 0x48
	adds r4, r2, r7
	movs r0, #0x8c
	lsls r0, r0, #2
	strh r0, [r1, #0x12]
	ldr r0, [r4, #0x30]
	ldr r1, _0804CE90 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x30]
	ldr r1, _0804CE94 @ =gUnknown_080D8D6C
	ldr r0, [r1, #0x30]
	str r0, [r4]
	ldr r0, [r1, #0x34]
	str r0, [r4, #0x34]
	ldrh r0, [r1, #0x38]
	strh r0, [r4, #0x2e]
	movs r0, #0xa5
	lsls r0, r0, #9
	str r0, [r3, #0x24]
	movs r0, #0xb4
	lsls r0, r0, #7
	str r0, [r3, #0x28]
	ldr r0, _0804CE98 @ =gUnknown_080D8DCC
	ldrh r0, [r0, #0x38]
	strh r0, [r3, #0x14]
	movs r3, #0
	ldr r0, _0804CE9C @ =IWRAM_START + 0x20
	adds r6, r2, r0
	ldr r1, _0804CEA0 @ =gUnknown_080D8C7C
	mov ip, r1
	subs r7, #0x20
	adds r5, r2, r7
	ldr r0, _0804CEA4 @ =gUnknown_080D8C94
	mov r8, r0
_0804CDCA:
	lsls r1, r3, #1
	adds r2, r6, r1
	mov r7, ip
	adds r0, r1, r7
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r5, r1
	add r1, r8
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _0804CDCA
	ldr r0, [r4, #0x30]
	ldr r1, _0804CE90 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x30]
	ldr r0, _0804CE94 @ =gUnknown_080D8D6C
	ldr r1, [r0, #0x3c]
	str r1, [r4]
	ldr r1, [r0, #0x40]
	str r1, [r4, #0x34]
	adds r0, #0x44
	ldrh r0, [r0]
	strh r0, [r4, #0x2e]
	strh r0, [r4, #0x2c]
	movs r3, #0
	adds r0, r4, #4
	mov ip, r0
	adds r1, r4, #0
	adds r1, #0xc
	str r1, [sp, #4]
	adds r6, r4, #0
	adds r6, #0x14
	ldr r7, _0804CEA8 @ =gUnknown_080D8AC4
	mov sl, r7
	adds r5, r4, #0
	adds r5, #0x1c
	ldr r0, _0804CEAC @ =gUnknown_080D8ADC
	mov sb, r0
	adds r4, #0x24
	ldr r1, _0804CEB0 @ =gUnknown_080D8AF4
	mov r8, r1
_0804CE24:
	lsls r1, r3, #1
	mov r7, ip
	adds r2, r7, r1
	ldr r7, _0804CEB4 @ =gUnknown_080D8A94
	adds r0, r1, r7
	ldrh r0, [r0]
	strh r0, [r2]
	ldr r0, [sp, #4]
	adds r2, r0, r1
	ldr r7, _0804CEB8 @ =gUnknown_080D8AAC
	adds r0, r1, r7
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r6, r1
	mov r7, sl
	adds r0, r1, r7
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r5, r1
	mov r7, sb
	adds r0, r1, r7
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r4, r1
	add r1, r8
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _0804CE24
	ldr r1, _0804CEBC @ =0x00001341
	adds r0, r1, #0
	ldr r7, _0804CEC0 @ =gDispCnt
	strh r0, [r7]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804CE7C: .4byte sub_804D6AC
_0804CE80: .4byte sub_8050A7C
_0804CE84: .4byte gUnknown_03005B4C
_0804CE88: .4byte IWRAM_START + 0x1C
_0804CE8C: .4byte IWRAM_START + 0x48
_0804CE90: .4byte 0x00000FFF
_0804CE94: .4byte gUnknown_080D8D6C
_0804CE98: .4byte gUnknown_080D8DCC
_0804CE9C: .4byte IWRAM_START + 0x20
_0804CEA0: .4byte gUnknown_080D8C7C
_0804CEA4: .4byte gUnknown_080D8C94
_0804CEA8: .4byte gUnknown_080D8AC4
_0804CEAC: .4byte gUnknown_080D8ADC
_0804CEB0: .4byte gUnknown_080D8AF4
_0804CEB4: .4byte gUnknown_080D8A94
_0804CEB8: .4byte gUnknown_080D8AAC
_0804CEBC: .4byte 0x00001341
_0804CEC0: .4byte gDispCnt

	thumb_func_start sub_804CEC4
sub_804CEC4: @ 0x0804CEC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc8
	ldr r2, _0804D2A8 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r2]
	ldr r4, _0804D2AC @ =gUnknown_03005B4C
	ldr r0, [r4]
	cmp r0, #0
	bne _0804CEF8
	ldr r0, _0804D2B0 @ =sub_804D7A0
	movs r1, #0x94
	lsls r1, r1, #4
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r3, _0804D2B4 @ =sub_8050A7C
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	str r0, [r4]
_0804CEF8:
	ldr r0, [r4]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r4, r0
	str r0, [sp, #4]
	ldr r0, _0804D2B8 @ =IWRAM_START + 0x1C
	adds r2, r4, r0
	ldr r1, _0804D2BC @ =IWRAM_START + 0x48
	adds r6, r4, r1
	ldr r5, _0804D2C0 @ =IWRAM_START + 0x98
	adds r5, r4, r5
	str r5, [sp, #8]
	ldr r7, _0804D2C4 @ =gUnknown_03000558
	adds r7, r7, r4
	mov r8, r7
	ldr r0, _0804D2C8 @ =gUnknown_03000594
	adds r7, r4, r0
	ldr r1, _0804D2CC @ =gUnknown_03000654
	adds r1, r4, r1
	str r1, [sp, #0xc]
	movs r3, #0
	movs r0, #0xc
	ldr r5, [sp, #4]
	strb r0, [r5, #0xc]
	strb r3, [r5, #0xd]
	movs r1, #0
	movs r0, #1
	mov sb, r0
	mov r0, sb
	strh r0, [r5, #0x10]
	movs r0, #0x50
	strh r0, [r5, #0x12]
	strb r1, [r5, #0xe]
	strb r1, [r5, #0xf]
	str r3, [r5, #0x14]
	str r3, [r5, #0x18]
	strh r3, [r5]
	strh r3, [r5, #4]
	mov r0, sb
	strh r0, [r5, #2]
	movs r0, #0x14
	strh r0, [r5, #6]
	movs r0, #0xbf
	strh r0, [r5, #8]
	strh r3, [r5, #0xa]
	ldr r0, _0804D2D0 @ =sub_8050DC8
	mov r5, r8
	str r0, [r5]
	movs r0, #0xc8
	strh r0, [r5, #6]
	strb r1, [r5, #4]
	ldr r0, [r2, #0x18]
	ldr r1, _0804D2D4 @ =0x00000FFF
	ands r0, r1
	str r0, [r2, #0x18]
	ldr r1, _0804D2D8 @ =gUnknown_080D8DCC
	ldr r0, [r1]
	str r0, [r2]
	ldr r0, [r1, #4]
	str r0, [r2, #0x1c]
	ldrh r1, [r1, #8]
	strh r1, [r2, #0x16]
	ldr r0, _0804D2DC @ =0x0004F300
	str r0, [r2, #0x24]
	movs r0, #0xe0
	lsls r0, r0, #7
	str r0, [r2, #0x28]
	strh r3, [r2, #0x20]
	strh r3, [r2, #0x22]
	strh r1, [r2, #0x14]
	str r3, [r2, #0x18]
	movs r0, #0
	mov ip, r0
	ldr r3, _0804D2E0 @ =gUnknown_080D8D6C
	ldr r2, _0804D2E4 @ =gUnknown_080D8C64
	ldr r1, _0804D2E8 @ =gUnknown_080D8C4C
	ldr r5, _0804D2EC @ =IWRAM_START + 0x20
	adds r4, r4, r5
_0804CF96:
	ldrh r0, [r1]
	strh r0, [r4]
	ldrh r0, [r2]
	strh r0, [r4, #8]
	adds r2, #2
	adds r1, #2
	adds r4, #2
	movs r0, #1
	add ip, r0
	mov r5, ip
	cmp r5, #3
	bls _0804CF96
	ldr r0, [r6, #0x30]
	ldr r1, _0804D2D4 @ =0x00000FFF
	ands r0, r1
	str r0, [r6, #0x30]
	ldr r0, [r3, #0xc]
	str r0, [r6]
	ldr r0, [r3, #0x10]
	str r0, [r6, #0x34]
	ldrh r0, [r3, #0x14]
	movs r1, #0
	strh r0, [r6, #0x2e]
	adds r2, r6, #0
	adds r2, #0x4c
	movs r0, #1
	strb r0, [r2]
	strh r1, [r6, #0x38]
	str r1, [r6, #0x44]
	str r1, [r6, #0x48]
	ldrh r0, [r3, #8]
	strh r0, [r6, #0x2c]
	str r1, [r6, #0x30]
	mov ip, r1
	adds r0, r6, #4
	mov sl, r0
	movs r1, #0xc
	adds r1, r1, r6
	mov sb, r1
	adds r5, r6, #0
	adds r5, #0x14
	adds r3, r6, #0
	adds r3, #0x1c
	adds r4, r6, #0
	adds r4, #0x24
	adds r2, r7, #4
	str r2, [sp, #0x1c]
	adds r6, r7, #0
	adds r6, #0xe
	str r6, [sp, #0x34]
	adds r0, r7, #0
	adds r0, #0x18
	str r0, [sp, #0x3c]
	adds r1, r7, #0
	adds r1, #0x1a
	str r1, [sp, #0x40]
	adds r2, #0x3c
	str r2, [sp, #0x60]
	adds r6, #0x36
	str r6, [sp, #0xc0]
	ldr r0, [sp, #0xc]
	adds r0, #0xe
	str r0, [sp, #0x38]
	ldr r1, [sp, #0xc]
	adds r1, #0x1e
	str r1, [sp, #0x44]
	ldr r2, [sp, #0xc]
	adds r2, #0x2e
	str r2, [sp, #0x54]
	ldr r6, [sp, #0xc]
	adds r6, #0x30
	str r6, [sp, #0x5c]
	ldr r0, [sp, #0xc]
	adds r0, #0x70
	str r0, [sp, #0x74]
	ldr r1, [sp, #0xc]
	adds r1, #0x74
	str r1, [sp, #0x78]
	ldr r6, _0804D2F0 @ =0x000007D4
	ldr r2, [sp, #4]
	adds r6, r2, r6
	str r6, [sp, #0x7c]
	ldr r0, _0804D2F4 @ =0x000007D5
	adds r0, r2, r0
	str r0, [sp, #0x80]
	ldr r1, _0804D2F8 @ =0x000007D6
	adds r1, r2, r1
	str r1, [sp, #0x88]
	ldr r6, _0804D2FC @ =0x000007D9
	adds r6, r2, r6
	str r6, [sp, #0x8c]
	mov r0, r8
	adds r0, #0xc
	str r0, [sp, #0x2c]
	mov r1, r8
	adds r1, #0x2c
	str r1, [sp, #0x48]
	mov r2, r8
	adds r2, #0x2d
	str r2, [sp, #0x4c]
	mov r6, r8
	adds r6, #0x2e
	str r6, [sp, #0x50]
	adds r0, #0x25
	str r0, [sp, #0x58]
	adds r1, r7, #0
	adds r1, #0x90
	str r1, [sp, #0x84]
	adds r2, r7, #0
	adds r2, #0xb0
	str r2, [sp, #0x90]
	adds r6, r7, #0
	adds r6, #0xb1
	str r6, [sp, #0x94]
	adds r0, r7, #0
	adds r0, #0xb2
	str r0, [sp, #0x98]
	adds r1, #0x25
	str r1, [sp, #0x9c]
	ldr r2, [sp, #0xc]
	adds r2, #0xf0
	str r2, [sp, #0xa0]
	movs r0, #0x88
	lsls r0, r0, #1
	ldr r6, [sp, #0xc]
	adds r0, r6, r0
	str r0, [sp, #0x20]
	ldr r1, _0804D300 @ =0x00000111
	adds r1, r6, r1
	str r1, [sp, #0x24]
	movs r2, #0x89
	lsls r2, r2, #1
	adds r2, r6, r2
	str r2, [sp, #0x28]
	ldr r0, _0804D304 @ =0x00000115
	adds r0, r6, r0
	str r0, [sp, #0x30]
	movs r1, #0xa4
	lsls r1, r1, #1
	adds r1, r6, r1
	str r1, [sp, #0x64]
	ldr r2, _0804D308 @ =0x00000149
	adds r2, r6, r2
	str r2, [sp, #0x68]
	movs r0, #0xa5
	lsls r0, r0, #1
	adds r0, r6, r0
	str r0, [sp, #0x6c]
	ldr r1, _0804D30C @ =0x0000014D
	adds r1, r6, r1
	str r1, [sp, #0x70]
_0804D0C4:
	mov r2, ip
	lsls r1, r2, #1
	mov r6, sl
	adds r2, r6, r1
	ldr r6, _0804D310 @ =gUnknown_080D8A1C
	adds r0, r1, r6
	ldrh r0, [r0]
	strh r0, [r2]
	mov r0, sb
	adds r2, r0, r1
	ldr r6, _0804D314 @ =gUnknown_080D8A34
	adds r0, r1, r6
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r5, r1
	ldr r6, _0804D318 @ =gUnknown_080D8A4C
	adds r0, r1, r6
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r3, r1
	ldr r6, _0804D31C @ =gUnknown_080D8A64
	adds r0, r1, r6
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, r4, r1
	ldr r0, _0804D320 @ =gUnknown_080D8A7C
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2]
	movs r1, #1
	add ip, r1
	mov r2, ip
	cmp r2, #3
	bls _0804D0C4
	ldr r5, _0804D324 @ =sub_804DFB0
	str r5, [r7]
	movs r6, #0
	mov sb, r6
	ldr r5, [sp, #0x1c]
	movs r2, #0
	ldr r4, [sp, #0x34]
	ldr r3, [sp, #0x3c]
_0804D118:
	mov r7, sb
	adds r0, r5, r7
	strb r2, [r0]
	adds r0, r4, r7
	strb r2, [r0]
	lsls r0, r7, #2
	strh r2, [r3]
	ldr r1, [sp, #0x40]
	adds r0, r1, r0
	strh r2, [r0]
	lsls r1, r7, #3
	ldr r6, [sp, #0x60]
	adds r0, r6, r1
	str r2, [r0]
	ldr r7, [sp, #0xc0]
	adds r1, r7, r1
	str r2, [r1]
	adds r3, #4
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #9
	bls _0804D118
	ldr r2, _0804D328 @ =sub_804FF9C
	ldr r5, [sp, #0xc]
	str r2, [r5]
	ldr r6, _0804D32C @ =sub_804F768
	str r6, [r5, #4]
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r5, #8]
	adds r0, #0xd4
	strh r0, [r5, #0xa]
	movs r7, #0
	mov sb, r7
	ldr r5, [sp, #0x38]
	movs r2, #0
	ldr r4, [sp, #0x44]
	ldr r3, [sp, #0x54]
_0804D166:
	mov r1, sb
	adds r0, r5, r1
	strb r2, [r0]
	adds r0, r4, r1
	strb r2, [r0]
	lsls r0, r1, #2
	strh r2, [r3]
	ldr r6, [sp, #0x5c]
	adds r0, r6, r0
	strh r2, [r0]
	lsls r1, r1, #3
	ldr r7, [sp, #0x74]
	adds r0, r7, r1
	str r2, [r0]
	ldr r0, [sp, #0x78]
	adds r1, r0, r1
	str r2, [r1]
	adds r3, #4
	movs r1, #1
	add sb, r1
	mov r6, sb
	cmp r6, #0xf
	bls _0804D166
	ldr r7, _0804D330 @ =sub_804E66C
	ldr r0, [sp, #8]
	str r7, [r0]
	movs r0, #0
	movs r1, #0x96
	lsls r1, r1, #1
	ldr r2, [sp, #8]
	strh r1, [r2, #4]
	adds r1, #0xd4
	strh r1, [r2, #6]
	str r0, [r2, #8]
	str r0, [r2, #0xc]
	movs r0, #0x20
	bl sub_8007C10
	str r0, [sp, #0x10]
	movs r5, #0
	mov sb, r5
	movs r4, #0
	ldr r6, [sp, #8]
	adds r6, #0x8c
	str r6, [sp, #0xa4]
	ldr r7, [sp, #8]
	adds r7, #0x88
	str r7, [sp, #0xa8]
	ldr r0, [sp, #8]
	adds r0, #0x74
	str r0, [sp, #0xac]
	ldr r1, [sp, #8]
	adds r1, #0x72
	str r1, [sp, #0xb0]
	ldr r2, [sp, #8]
	adds r2, #0x6c
	str r2, [sp, #0xb4]
	ldr r5, [sp, #8]
	adds r5, #0x68
	str r5, [sp, #0xb8]
	ldr r6, [sp, #8]
	adds r6, #0x51
	mov sl, r6
	ldr r7, [sp, #8]
	adds r7, #0x14
	mov r8, r7
	ldr r0, [sp, #8]
	adds r0, #0x10
	str r0, [sp, #0xbc]
_0804D1F0:
	ldr r7, [sp, #0xbc]
	adds r7, #0x20
	mov r1, r8
	strb r4, [r1]
	strh r4, [r1, #6]
	strh r4, [r1, #0xa]
	strh r4, [r1, #0xc]
	str r4, [r1, #0x10]
	str r4, [r1, #0x14]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _0804D334 @ =gUnknown_080D8918
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0xff
	mov r2, sl
	strb r0, [r2]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0x10
	strb r0, [r2, #1]
	movs r0, #6
	strb r0, [r2, #4]
	subs r0, #7
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	ldr r0, _0804D338 @ =sub_804DD9C
	mov r5, r8
	str r0, [r5, #0x54]
	movs r6, #0
	mov ip, r6
	ldr r1, [sp, #0xb8]
	adds r1, #0x50
	ldr r7, [sp, #0xb8]
	adds r7, #0x48
	str r7, [sp, #0xc4]
	ldr r6, [sp, #0xa4]
	ldr r5, [sp, #0xa8]
	ldr r3, [sp, #0xac]
	ldr r2, [sp, #0xb0]
_0804D25C:
	ldr r0, [sp, #0xb4]
	add r0, ip
	strb r4, [r0]
	strh r4, [r2]
	strh r4, [r3]
	str r4, [r5]
	str r4, [r6]
	strh r4, [r1, #0xe]
	strh r4, [r1, #0x10]
	ldr r0, [sp, #0x10]
	ldr r7, [sp, #0xc4]
	str r0, [r7, #4]
	ldr r0, _0804D33C @ =0x000002CA
	strh r0, [r1, #2]
	strb r4, [r1, #0x18]
	movs r0, #1
	rsbs r0, r0, #0
	mov r7, sp
	strb r0, [r7, #0x14]
	movs r0, #0xff
	strb r0, [r1, #0x19]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r1, #0x12]
	strh r4, [r1]
	strh r4, [r1, #0xc]
	strh r4, [r1, #0x14]
	movs r7, #0x10
	strb r7, [r1, #0x1a]
	movs r0, #6
	strb r0, [r1, #0x1d]
	subs r0, #7
	str r0, [r1, #0x20]
	movs r7, #0x80
	lsls r7, r7, #6
	str r7, [r1, #8]
	b _0804D340
	.align 2, 0
_0804D2A8: .4byte gUnknown_03005424
_0804D2AC: .4byte gUnknown_03005B4C
_0804D2B0: .4byte sub_804D7A0
_0804D2B4: .4byte sub_8050A7C
_0804D2B8: .4byte IWRAM_START + 0x1C
_0804D2BC: .4byte IWRAM_START + 0x48
_0804D2C0: .4byte IWRAM_START + 0x98
_0804D2C4: .4byte gUnknown_03000558
_0804D2C8: .4byte gUnknown_03000594
_0804D2CC: .4byte gUnknown_03000654
_0804D2D0: .4byte sub_8050DC8
_0804D2D4: .4byte 0x00000FFF
_0804D2D8: .4byte gUnknown_080D8DCC
_0804D2DC: .4byte 0x0004F300
_0804D2E0: .4byte gUnknown_080D8D6C
_0804D2E4: .4byte gUnknown_080D8C64
_0804D2E8: .4byte gUnknown_080D8C4C
_0804D2EC: .4byte IWRAM_START + 0x20
_0804D2F0: .4byte 0x000007D4
_0804D2F4: .4byte 0x000007D5
_0804D2F8: .4byte 0x000007D6
_0804D2FC: .4byte 0x000007D9
_0804D300: .4byte 0x00000111
_0804D304: .4byte 0x00000115
_0804D308: .4byte 0x00000149
_0804D30C: .4byte 0x0000014D
_0804D310: .4byte gUnknown_080D8A1C
_0804D314: .4byte gUnknown_080D8A34
_0804D318: .4byte gUnknown_080D8A4C
_0804D31C: .4byte gUnknown_080D8A64
_0804D320: .4byte gUnknown_080D8A7C
_0804D324: .4byte sub_804DFB0
_0804D328: .4byte sub_804FF9C
_0804D32C: .4byte sub_804F768
_0804D330: .4byte sub_804E66C
_0804D334: .4byte gUnknown_080D8918
_0804D338: .4byte sub_804DD9C
_0804D33C: .4byte 0x000002CA
_0804D340:
	adds r1, #0x30
	ldr r0, [sp, #0xc4]
	adds r0, #0x30
	str r0, [sp, #0xc4]
	adds r6, #8
	adds r5, #8
	adds r3, #4
	adds r2, #4
	movs r7, #1
	add ip, r7
	mov r0, ip
	cmp r0, #4
	bhi _0804D35C
	b _0804D25C
_0804D35C:
	ldr r1, [sp, #0xa4]
	movs r2, #0xc8
	lsls r2, r2, #1
	adds r1, r1, r2
	str r1, [sp, #0xa4]
	ldr r5, [sp, #0xa8]
	adds r5, r5, r2
	str r5, [sp, #0xa8]
	ldr r6, [sp, #0xac]
	adds r6, r6, r2
	str r6, [sp, #0xac]
	ldr r7, [sp, #0xb0]
	adds r7, r7, r2
	str r7, [sp, #0xb0]
	ldr r0, [sp, #0xb4]
	adds r0, r0, r2
	str r0, [sp, #0xb4]
	ldr r1, [sp, #0xb8]
	adds r1, r1, r2
	str r1, [sp, #0xb8]
	add sl, r2
	add r8, r2
	ldr r5, [sp, #0xbc]
	adds r5, r5, r2
	str r5, [sp, #0xbc]
	movs r6, #1
	add sb, r6
	mov r7, sb
	cmp r7, #2
	bhi _0804D39A
	b _0804D1F0
_0804D39A:
	ldr r0, [sp, #4]
	ldr r1, _0804D57C @ =0x000007B4
	adds r7, r0, r1
	movs r6, #0
	movs r5, #0
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	ldr r4, _0804D580 @ =gUnknown_080D88F0
	ldr r0, [r4, #0x20]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #0x24]
	strh r0, [r7, #0xa]
	adds r4, #0x26
	ldrb r0, [r4]
	ldr r2, [sp, #0x7c]
	strb r0, [r2]
	ldr r1, [sp, #0x80]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x14]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	movs r0, #0x10
	ldr r5, [sp, #0x88]
	strb r0, [r5]
	ldr r1, [sp, #0x8c]
	strb r6, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	movs r5, #0x80
	lsls r5, r5, #6
	str r5, [r7, #0x10]
	movs r6, #0
	mov sb, r6
	movs r7, #0
	mov r8, r7
	ldr r0, [sp, #4]
	movs r1, #0xff
	lsls r1, r1, #3
	adds r5, r0, r1
	movs r2, #0xfe
	lsls r2, r2, #3
	adds r7, r0, r2
_0804D402:
	strh r6, [r5, #0xe]
	strh r6, [r5, #0x10]
	ldr r0, _0804D580 @ =gUnknown_080D88F0
	mov r1, sb
	lsls r4, r1, #3
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r5, #2]
	ldrb r0, [r4, #6]
	strb r0, [r5, #0x18]
	movs r0, #1
	rsbs r0, r0, #0
	mov r2, sp
	strb r0, [r2, #0x18]
	movs r0, #0xff
	strb r0, [r5, #0x19]
	mov r0, sb
	adds r0, #0x14
	lsls r0, r0, #6
	strh r0, [r5, #0x12]
	strh r6, [r5]
	strh r6, [r5, #0xc]
	strh r6, [r5, #0x14]
	movs r1, #0x10
	strb r1, [r5, #0x1a]
	mov r2, r8
	strb r2, [r5, #0x1d]
	movs r0, #1
	rsbs r0, r0, #0
	mov sl, r0
	str r0, [r5, #0x20]
	movs r0, #0x84
	lsls r0, r0, #6
	str r0, [r5, #8]
	adds r5, #0x44
	adds r7, #0x44
	movs r1, #1
	add sb, r1
	mov r2, sb
	cmp r2, #3
	bls _0804D402
	movs r4, #0
	ldr r7, [sp, #0x2c]
	movs r5, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0804D584 @ =0x000002CE
	strh r0, [r7, #0xa]
	ldr r6, [sp, #0x48]
	strb r5, [r6]
	ldr r1, [sp, #0x4c]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x18]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0xa8
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0x10
	ldr r6, [sp, #0x50]
	strb r0, [r6]
	ldr r1, [sp, #0x58]
	strb r5, [r1]
	mov r2, sl
	str r2, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	ldr r7, [sp, #0x84]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0804D588 @ =0x00000467
	strh r0, [r7, #0xa]
	movs r0, #8
	ldr r6, [sp, #0x90]
	strb r0, [r6]
	ldr r1, [sp, #0x94]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x18]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0x10
	ldr r6, [sp, #0x98]
	strb r0, [r6]
	ldr r1, [sp, #0x9c]
	strb r5, [r1]
	mov r2, sl
	str r2, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #5
	str r6, [r7, #0x10]
	ldr r7, [sp, #0xa0]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #9
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0804D58C @ =0x000002CD
	strh r0, [r7, #0xa]
	ldr r0, [sp, #0x20]
	strb r5, [r0]
	ldr r1, [sp, #0x24]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x18]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0xe0
	lsls r0, r0, #1
	mov r8, r0
	mov r1, r8
	strh r1, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0x10
	ldr r2, [sp, #0x28]
	strb r0, [r2]
	ldr r1, [sp, #0x30]
	strb r5, [r1]
	mov r2, sl
	str r2, [r7, #0x28]
	str r6, [r7, #0x10]
	ldr r0, [sp, #0xc]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r7, r0, r1
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0804D590 @ =0x000002CF
	strh r0, [r7, #0xa]
	ldr r2, [sp, #0x64]
	strb r5, [r2]
	ldr r1, [sp, #0x68]
	ldrb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x18]
	orrs r0, r2
	strb r0, [r1]
	mov r0, r8
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r2, #0x10
	ldr r1, [sp, #0x6c]
	strb r2, [r1]
	ldr r0, [sp, #0x70]
	strb r5, [r0]
	mov r1, sl
	str r1, [r7, #0x28]
	str r6, [r7, #0x10]
	add sp, #0xc8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804D57C: .4byte 0x000007B4
_0804D580: .4byte gUnknown_080D88F0
_0804D584: .4byte 0x000002CE
_0804D588: .4byte 0x00000467
_0804D58C: .4byte 0x000002CD
_0804D590: .4byte 0x000002CF

	thumb_func_start sub_804D594
sub_804D594: @ 0x0804D594
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r0, _0804D694 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _0804D684
	ldrh r2, [r0, #6]
	movs r3, #0xc0
	lsls r3, r3, #0x12
	adds r3, r2, r3
	ldr r0, _0804D698 @ =IWRAM_START + 0x1C
	adds r1, r2, r0
	adds r0, #0x7c
	adds r0, r0, r2
	mov sb, r0
	ldr r0, [r1, #0x24]
	adds r0, r0, r7
	str r0, [r1, #0x24]
	ldr r0, [r1, #0x28]
	adds r0, r0, r6
	str r0, [r1, #0x28]
	ldr r0, [r3, #0x14]
	adds r0, r0, r7
	str r0, [r3, #0x14]
	ldr r0, [r3, #0x18]
	adds r0, r0, r6
	str r0, [r3, #0x18]
	movs r4, #0
	ldr r0, _0804D69C @ =gUnknown_030005D4
	adds r0, r2, r0
	str r0, [sp, #4]
	ldr r0, _0804D6A0 @ =gUnknown_030005D8
	adds r0, r0, r2
	mov sl, r0
	ldr r0, _0804D6A4 @ =gUnknown_030006C4
	adds r0, r2, r0
	str r0, [sp, #8]
	ldr r0, _0804D6A8 @ =gUnknown_030006C8
	adds r0, r2, r0
	str r0, [sp]
	asrs r0, r7, #8
	mov r8, r0
	asrs r0, r6, #8
	mov ip, r0
_0804D5F8:
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #3
	adds r1, r1, r4
	lsls r1, r1, #4
	adds r1, #0x10
	add r1, sb
	ldr r0, [r1, #0x14]
	adds r0, r0, r7
	str r0, [r1, #0x14]
	ldr r0, [r1, #0x18]
	adds r0, r0, r6
	str r0, [r1, #0x18]
	movs r5, #0
	lsls r2, r4, #3
	adds r0, r1, #0
	adds r0, #0x78
	adds r3, r0, r2
	adds r1, #0x7c
	adds r1, r1, r2
_0804D620:
	ldr r0, [r3]
	add r0, r8
	str r0, [r3]
	ldr r0, [r1]
	add r0, ip
	str r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _0804D620
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0804D5F8
	movs r4, #0
	ldr r5, [sp, #4]
	mov r3, sl
_0804D646:
	lsls r1, r4, #3
	adds r2, r5, r1
	ldr r0, [r2]
	adds r0, r0, r7
	str r0, [r2]
	adds r1, r3, r1
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _0804D646
	movs r4, #0
	ldr r5, [sp, #8]
	ldr r3, [sp]
_0804D668:
	lsls r1, r4, #3
	adds r2, r5, r1
	ldr r0, [r2]
	adds r0, r0, r7
	str r0, [r2]
	adds r1, r3, r1
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _0804D668
_0804D684:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804D694: .4byte gUnknown_03005B4C
_0804D698: .4byte IWRAM_START + 0x1C
_0804D69C: .4byte gUnknown_030005D4
_0804D6A0: .4byte gUnknown_030005D8
_0804D6A4: .4byte gUnknown_030006C4
_0804D6A8: .4byte gUnknown_030006C8

	thumb_func_start sub_804D6AC
sub_804D6AC: @ 0x0804D6AC
	push {r4, r5, r6, r7, lr}
	ldr r0, _0804D6F0 @ =gCurTask
	ldr r7, [r0]
	ldrh r0, [r7, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r4, r0, r1
	adds r1, #0x1c
	adds r5, r0, r1
	adds r1, #0x2c
	adds r6, r0, r1
	ldr r1, _0804D6F4 @ =gUnknown_03000558
	adds r3, r0, r1
	ldr r2, _0804D6F8 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0804D6FC @ =0x00009FFF
	ands r0, r1
	strh r0, [r2]
	ldrh r0, [r4, #0x12]
	subs r0, #1
	strh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804D704
	ldr r0, _0804D700 @ =gFlags
	ldr r1, [r0]
	movs r2, #5
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0]
	adds r0, r7, #0
	bl TaskDestroy
	b _0804D770
	.align 2, 0
_0804D6F0: .4byte gCurTask
_0804D6F4: .4byte gUnknown_03000558
_0804D6F8: .4byte gDispCnt
_0804D6FC: .4byte 0x00009FFF
_0804D700: .4byte gFlags
_0804D704:
	ldr r1, [r3]
	adds r0, r3, #0
	bl _call_via_r1
	ldr r1, [r5]
	adds r0, r5, #0
	bl _call_via_r1
	ldr r1, [r6]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r4, #0
	bl sub_80505B8
	ldr r1, _0804D778 @ =gWinRegs
	ldr r0, _0804D77C @ =0x00002735
	strh r0, [r1, #0xa]
	ldr r2, _0804D780 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	ldr r1, _0804D784 @ =gUnknown_03002878
	ldr r0, _0804D788 @ =0x04000016
	str r0, [r1]
	ldr r1, _0804D78C @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0804D790 @ =gUnknown_03001884
	ldr r3, [r0]
	movs r2, #0
	ldr r6, _0804D794 @ =gUnknown_08097AA4
	ldr r5, _0804D798 @ =gUnknown_03005590
	ldr r4, _0804D79C @ =0x000003FF
_0804D74A:
	ldr r1, [r5]
	adds r1, r2, r1
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ands r0, r4
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1c
	adds r0, #0x2c
	strh r0, [r3]
	adds r3, #2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x9e
	bls _0804D74A
_0804D770:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804D778: .4byte gWinRegs
_0804D77C: .4byte 0x00002735
_0804D780: .4byte gFlags
_0804D784: .4byte gUnknown_03002878
_0804D788: .4byte 0x04000016
_0804D78C: .4byte gUnknown_03002A80
_0804D790: .4byte gUnknown_03001884
_0804D794: .4byte gUnknown_08097AA4
_0804D798: .4byte gUnknown_03005590
_0804D79C: .4byte 0x000003FF

	thumb_func_start sub_804D7A0
sub_804D7A0: @ 0x0804D7A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0804D858 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r5, #0xc0
	lsls r5, r5, #0x12
	add r5, r8
	ldr r4, _0804D85C @ =IWRAM_START + 0x1C
	add r4, r8
	ldr r6, _0804D860 @ =IWRAM_START + 0x48
	add r6, r8
	ldr r0, _0804D864 @ =IWRAM_START + 0x98
	add r0, r8
	ldr r3, _0804D868 @ =gUnknown_03005424
	ldrh r1, [r3]
	movs r2, #0x20
	orrs r1, r2
	strh r1, [r3]
	ldr r3, _0804D86C @ =gDispCnt
	ldrh r2, [r3]
	ldr r1, _0804D870 @ =0x00009FFF
	ands r1, r2
	strh r1, [r3]
	ldr r1, [r4, #0x24]
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r1, r1, r2
	str r1, [r4, #0x24]
	ldrh r2, [r6, #0x3a]
	movs r7, #0
	strh r2, [r0, #6]
	ldr r1, [r6, #0x44]
	asrs r1, r1, #8
	adds r2, r2, r1
	movs r3, #0xd7
	lsls r3, r3, #2
	adds r2, r2, r3
	adds r3, #0xa3
	adds r1, r3, #0
	ands r2, r1
	strh r2, [r0, #6]
	movs r1, #0x20
	ldrsh r2, [r4, r1]
	lsls r2, r2, #8
	ldr r1, [r4, #0x24]
	adds r1, r1, r2
	str r1, [r0, #8]
	movs r3, #0x22
	ldrsh r2, [r4, r3]
	lsls r2, r2, #8
	ldr r1, [r4, #0x28]
	adds r1, r1, r2
	str r1, [r0, #0xc]
	ldr r1, [r0]
	bl _call_via_r1
	ldr r1, [r4]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r1, [r6]
	adds r0, r6, #0
	bl _call_via_r1
	adds r0, r5, #0
	bl sub_80501D4
	adds r0, r5, #0
	bl sub_8050958
	ldr r0, [r4, #0x24]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r4, #0x24]
	ldrh r0, [r5, #0x12]
	subs r1, r0, #1
	strh r1, [r5, #0x12]
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _0804D878
	mov r2, sb
	ldr r1, [r2]
	ldr r0, _0804D874 @ =sub_804D9DC
	str r0, [r1, #8]
	b _0804D8C0
	.align 2, 0
_0804D858: .4byte gCurTask
_0804D85C: .4byte IWRAM_START + 0x1C
_0804D860: .4byte IWRAM_START + 0x48
_0804D864: .4byte IWRAM_START + 0x98
_0804D868: .4byte gUnknown_03005424
_0804D86C: .4byte gDispCnt
_0804D870: .4byte 0x00009FFF
_0804D874: .4byte sub_804D9DC
_0804D878:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x4f
	bne _0804D8C0
	ldr r0, _0804D8CC @ =IWRAM_START + 0x900
	add r0, r8
	movs r1, #0xc0
	lsls r1, r1, #0x13
	str r1, [r0, #4]
	strh r7, [r0, #0xa]
	ldr r1, _0804D8D0 @ =0x0600E000
	str r1, [r0, #0xc]
	strh r7, [r0, #0x18]
	strh r7, [r0, #0x1a]
	movs r1, #0xbc
	lsls r1, r1, #1
	strh r1, [r0, #0x1c]
	strh r7, [r0, #0x1e]
	strh r7, [r0, #0x20]
	strh r7, [r0, #0x22]
	strh r7, [r0, #0x24]
	movs r1, #0x20
	strh r1, [r0, #0x26]
	movs r1, #0x14
	strh r1, [r0, #0x28]
	ldr r2, _0804D8D4 @ =IWRAM_START + 0x92A
	add r2, r8
	movs r1, #0
	strb r1, [r2]
	movs r1, #1
	strh r1, [r0, #0x2e]
	bl sub_8002A3C
	ldr r1, _0804D8D8 @ =gBgCntRegs
	ldr r0, _0804D8DC @ =0x00001C02
	strh r0, [r1, #2]
_0804D8C0:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804D8CC: .4byte IWRAM_START + 0x900
_0804D8D0: .4byte 0x0600E000
_0804D8D4: .4byte IWRAM_START + 0x92A
_0804D8D8: .4byte gBgCntRegs
_0804D8DC: .4byte 0x00001C02

	thumb_func_start sub_804D8E0
sub_804D8E0: @ 0x0804D8E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x1c
	adds r0, #0x48
	str r0, [sp]
	adds r7, r5, #0
	adds r7, #0x98
	movs r1, #0xab
	lsls r1, r1, #3
	adds r1, r5, r1
	str r1, [sp, #4]
	ldr r2, _0804D9C4 @ =0x00000654
	adds r2, r2, r5
	mov sb, r2
	bl sub_802C6E4
	movs r1, #0x80
	lsls r1, r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0804D91A
	bl sub_802BA8C
_0804D91A:
	movs r4, #0
	ldr r0, _0804D9C8 @ =gUnknown_080D8E14
	ldr r0, [r0, #8]
	mov r8, r0
	ldr r0, _0804D9CC @ =gUnknown_080D8918
	mov ip, r0
	movs r1, #0x86
	add r1, ip
	mov sl, r1
_0804D92C:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0x10
	adds r2, r7, r0
	adds r3, r2, #0
	adds r3, #0x20
	ldrb r1, [r2, #4]
	movs r0, #4
	orrs r0, r1
	strb r0, [r2, #4]
	ldr r0, [r2]
	cmp r0, r8
	beq _0804D970
	mov r0, ip
	adds r0, #0x84
	ldrh r0, [r0]
	strh r0, [r3, #0xa]
	mov r0, sl
	ldrb r1, [r0]
	adds r0, r3, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r2, #0
	adds r1, #0x41
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r3, #0x10]
	movs r0, #0x10
	strh r0, [r2, #8]
_0804D970:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0804D92C
	ldr r1, _0804D9D0 @ =sub_804E66C
	str r1, [r7]
	ldr r2, _0804D9D4 @ =sub_804FF9C
	mov r0, sb
	str r2, [r0]
	movs r1, #0
	movs r0, #0x96
	lsls r0, r0, #1
	mov r2, sb
	strh r0, [r2, #8]
	ldr r0, _0804D9D8 @ =sub_8050DC8
	ldr r2, [sp, #4]
	str r0, [r2]
	ldr r0, [sp]
	strh r1, [r0, #0x2c]
	strh r1, [r6, #0x14]
	movs r2, #0x20
	ldrsh r1, [r6, r2]
	lsls r1, r1, #8
	ldr r0, [r6, #0x24]
	adds r0, r0, r1
	str r0, [r5, #0x14]
	movs r0, #0x22
	ldrsh r1, [r6, r0]
	lsls r1, r1, #8
	ldr r0, [r6, #0x28]
	adds r0, r0, r1
	str r0, [r5, #0x18]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804D9C4: .4byte 0x00000654
_0804D9C8: .4byte gUnknown_080D8E14
_0804D9CC: .4byte gUnknown_080D8918
_0804D9D0: .4byte sub_804E66C
_0804D9D4: .4byte sub_804FF9C
_0804D9D8: .4byte sub_8050DC8

	thumb_func_start sub_804D9DC
sub_804D9DC: @ 0x0804D9DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r1, _0804DAA4 @ =gCurTask
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r6, r0, r1
	ldr r2, _0804DAA8 @ =IWRAM_START + 0x1C
	adds r4, r0, r2
	adds r1, #0x48
	adds r7, r0, r1
	adds r2, #0x7c
	adds r5, r0, r2
	ldr r1, _0804DAAC @ =gUnknown_03000558
	adds r1, r1, r0
	mov sb, r1
	ldr r2, _0804DAB0 @ =gUnknown_03000594
	adds r2, r2, r0
	mov sl, r2
	ldr r1, _0804DAB4 @ =gUnknown_03000654
	adds r1, r1, r0
	mov r8, r1
	ldr r2, _0804DAB8 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0804DABC @ =0x00009FFF
	ands r0, r1
	strh r0, [r2]
	ldr r0, [r4, #0x24]
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r0, r2
	str r0, [r4, #0x24]
	ldrh r1, [r7, #0x3a]
	strh r1, [r5, #6]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xd7
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, _0804DAC0 @ =0x000003FF
	adds r0, r2, #0
	ands r1, r0
	strh r1, [r5, #6]
	movs r0, #0x20
	ldrsh r1, [r4, r0]
	lsls r1, r1, #8
	ldr r0, [r4, #0x24]
	adds r0, r0, r1
	str r0, [r5, #8]
	movs r2, #0x22
	ldrsh r1, [r4, r2]
	lsls r1, r1, #8
	ldr r0, [r4, #0x28]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	bne _0804DAE0
	ldr r0, _0804DAC4 @ =gMPlayInfo_SE1
	bl MPlayStop
	ldr r0, _0804DAC8 @ =gMPlayInfo_SE2
	bl MPlayStop
	ldr r0, _0804DACC @ =gMPlayInfo_SE3
	bl MPlayStop
	ldr r2, _0804DAD0 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x23
	orrs r0, r1
	strh r0, [r2]
	bl sub_802B81C
	adds r0, r6, #0
	bl sub_804D8E0
	adds r0, r6, #0
	bl sub_80501D4
	adds r0, r6, #0
	bl sub_8050958
	ldr r0, _0804DAD4 @ =sub_8050DC4
	str r0, [r5]
	ldr r0, _0804DAD8 @ =sub_8050DF8
	mov r1, r8
	str r0, [r1]
	movs r0, #0x78
	strh r0, [r6, #0x12]
	ldr r2, _0804DAA4 @ =gCurTask
	ldr r1, [r2]
	ldr r0, _0804DADC @ =sub_804DB34
	str r0, [r1, #8]
	b _0804DB24
	.align 2, 0
_0804DAA4: .4byte gCurTask
_0804DAA8: .4byte IWRAM_START + 0x1C
_0804DAAC: .4byte gUnknown_03000558
_0804DAB0: .4byte gUnknown_03000594
_0804DAB4: .4byte gUnknown_03000654
_0804DAB8: .4byte gDispCnt
_0804DABC: .4byte 0x00009FFF
_0804DAC0: .4byte 0x000003FF
_0804DAC4: .4byte gMPlayInfo_SE1
_0804DAC8: .4byte gMPlayInfo_SE2
_0804DACC: .4byte gMPlayInfo_SE3
_0804DAD0: .4byte gUnknown_03005424
_0804DAD4: .4byte sub_8050DC4
_0804DAD8: .4byte sub_8050DF8
_0804DADC: .4byte sub_804DB34
_0804DAE0:
	ldr r1, [r5]
	adds r0, r5, #0
	bl _call_via_r1
	mov r0, sb
	ldr r1, [r0]
	bl _call_via_r1
	mov r2, sl
	ldr r1, [r2]
	mov r0, sl
	bl _call_via_r1
	mov r0, r8
	ldr r1, [r0]
	bl _call_via_r1
	ldr r1, [r4]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r1, [r7]
	adds r0, r7, #0
	bl _call_via_r1
	adds r0, r6, #0
	bl sub_804ECC4
	adds r0, r6, #0
	bl sub_80501D4
	adds r0, r6, #0
	bl sub_8050958
_0804DB24:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804DB34
sub_804DB34: @ 0x0804DB34
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0804DC08 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r5, r0
	ldr r1, _0804DC0C @ =IWRAM_START + 0x1C
	adds r4, r5, r1
	ldr r2, _0804DC10 @ =IWRAM_START + 0x98
	adds r0, r5, r2
	ldr r1, _0804DC14 @ =gUnknown_03000594
	adds r6, r5, r1
	ldr r2, _0804DC18 @ =gUnknown_03000654
	adds r2, r2, r5
	mov r8, r2
	ldr r3, _0804DC1C @ =gDispCnt
	ldrh r2, [r3]
	ldr r1, _0804DC20 @ =0x00009FFF
	ands r1, r2
	strh r1, [r3]
	ldr r1, [r4, #0x24]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r1, r2
	str r1, [r4, #0x24]
	ldr r1, [r4, #0x28]
	adds r1, #0x40
	str r1, [r4, #0x28]
	ldr r1, [r0]
	bl _call_via_r1
	ldr r1, [r6]
	adds r0, r6, #0
	bl _call_via_r1
	mov r0, r8
	ldr r1, [r0]
	bl _call_via_r1
	adds r0, r7, #0
	bl sub_80501D4
	adds r0, r7, #0
	bl sub_8050958
	adds r0, r7, #0
	bl sub_804DCF8
	ldr r1, _0804DC24 @ =gIntrTable + 4
	adds r5, r5, r1
	ldr r6, _0804DC28 @ =gUnknown_03005960
	ldr r0, [r6]
	movs r2, #0x86
	lsls r2, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #8
	ldr r4, [r6, #4]
	adds r4, #0x3c
	lsls r4, r4, #8
	ldr r1, [r7, #0x14]
	subs r0, r0, r1
	lsls r0, r0, #1
	movs r1, #0x64
	bl Div
	ldr r1, [r7, #0x14]
	adds r1, r1, r0
	str r1, [r7, #0x14]
	ldr r0, [r7, #0x18]
	subs r4, r4, r0
	lsls r4, r4, #1
	adds r0, r4, #0
	movs r1, #0x64
	bl Div
	ldr r1, [r7, #0x18]
	adds r1, r1, r0
	str r1, [r7, #0x18]
	ldr r0, [r7, #0x14]
	asrs r0, r0, #8
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r7, #0x18]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	ldrh r0, [r7, #0x12]
	cmp r0, #0
	beq _0804DC2C
	subs r0, #1
	strh r0, [r7, #0x12]
	b _0804DC4C
	.align 2, 0
_0804DC08: .4byte gCurTask
_0804DC0C: .4byte IWRAM_START + 0x1C
_0804DC10: .4byte IWRAM_START + 0x98
_0804DC14: .4byte gUnknown_03000594
_0804DC18: .4byte gUnknown_03000654
_0804DC1C: .4byte gDispCnt
_0804DC20: .4byte 0x00009FFF
_0804DC24: .4byte gIntrTable + 4
_0804DC28: .4byte gUnknown_03005960
_0804DC2C:
	adds r0, r7, #0
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0804DC4C
	movs r0, #2
	strh r0, [r7, #0x12]
	ldr r1, _0804DC58 @ =gBldRegs
	movs r0, #0x10
	strh r0, [r1, #4]
	mov r0, sb
	ldr r1, [r0]
	ldr r0, _0804DC5C @ =sub_804DC60
	str r0, [r1, #8]
_0804DC4C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804DC58: .4byte gBldRegs
_0804DC5C: .4byte sub_804DC60

	thumb_func_start sub_804DC60
sub_804DC60: @ 0x0804DC60
	push {lr}
	ldr r0, _0804DCC4 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldrh r0, [r1, #0x12]
	subs r0, #1
	strh r0, [r1, #0x12]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804DCC0
	ldr r1, _0804DCC8 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0804DCCC @ =gUnknown_03002AE4
	ldr r0, _0804DCD0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0804DCD4 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0804DCD8 @ =gUnknown_03004D5C
	ldr r0, _0804DCDC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r2, _0804DCE0 @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bl sub_802C9E4
	ldr r0, _0804DCE4 @ =gUnknown_03005490
	ldr r0, [r0]
	ldr r1, _0804DCE8 @ =gUnknown_030053F0
	ldrh r1, [r1]
	ldr r2, _0804DCEC @ =gUnknown_030054F4
	ldrb r2, [r2]
	bl sub_80304DC
	ldr r1, _0804DCF0 @ =gBldRegs
	ldr r0, _0804DCF4 @ =0x00003FBF
	strh r0, [r1]
_0804DCC0:
	pop {r0}
	bx r0
	.align 2, 0
_0804DCC4: .4byte gCurTask
_0804DCC8: .4byte 0x0000FFFF
_0804DCCC: .4byte gUnknown_03002AE4
_0804DCD0: .4byte gUnknown_0300287C
_0804DCD4: .4byte gUnknown_03005390
_0804DCD8: .4byte gUnknown_03004D5C
_0804DCDC: .4byte gUnknown_03002A84
_0804DCE0: .4byte gUnknown_03005424
_0804DCE4: .4byte gUnknown_03005490
_0804DCE8: .4byte gUnknown_030053F0
_0804DCEC: .4byte gUnknown_030054F4
_0804DCF0: .4byte gBldRegs
_0804DCF4: .4byte 0x00003FBF

	thumb_func_start sub_804DCF8
sub_804DCF8: @ 0x0804DCF8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r7, r0, #0
	ldr r4, _0804DD80 @ =gUnknown_03005590
	ldr r0, [r4]
	movs r1, #0xd
	bl DivRem
	cmp r0, #0
	bne _0804DD12
	movs r0, #0x90
	bl m4aSongNumStart
_0804DD12:
	ldr r6, [r4]
	movs r0, #3
	ands r6, r0
	cmp r6, #0
	bne _0804DD76
	ldr r5, _0804DD84 @ =gUnknown_030053B8
	ldr r0, [r5]
	ldr r3, _0804DD88 @ =0x00196225
	adds r1, r0, #0
	muls r1, r3, r1
	ldr r2, _0804DD8C @ =0x3C6EF35F
	adds r1, r1, r2
	movs r4, #0x7f
	adds r0, r1, #0
	ands r0, r4
	adds r0, #0x40
	str r0, [sp, #0x14]
	muls r1, r3, r1
	adds r1, r1, r2
	adds r0, r1, #0
	ands r0, r4
	adds r0, #0x10
	str r0, [sp, #0x18]
	mov r0, sp
	strh r6, [r0, #0x1c]
	mov r4, sp
	adds r0, r1, #0
	muls r0, r3, r0
	adds r0, r0, r2
	str r0, [r5]
	ldr r1, _0804DD90 @ =0x000003FF
	ands r0, r1
	strh r0, [r4, #0xc]
	mov r1, sp
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1, #0xe]
	ldr r0, _0804DD94 @ =0x06012980
	str r0, [sp]
	ldr r0, _0804DD98 @ =0x0000026B
	strh r0, [r1, #8]
	mov r0, sp
	strh r6, [r0, #0xa]
	movs r0, #1
	str r0, [sp, #4]
	adds r1, r7, #0
	adds r1, #0xe
	mov r0, sp
	bl sub_8039B54
_0804DD76:
	add sp, #0x20
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804DD80: .4byte gUnknown_03005590
_0804DD84: .4byte gUnknown_030053B8
_0804DD88: .4byte 0x00196225
_0804DD8C: .4byte 0x3C6EF35F
_0804DD90: .4byte 0x000003FF
_0804DD94: .4byte 0x06012980
_0804DD98: .4byte 0x0000026B

	thumb_func_start sub_804DD9C
sub_804DD9C: @ 0x0804DD9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	movs r0, #0
	mov sb, r0
	ldr r2, _0804DE58 @ =gUnknown_03005960
	mov sl, r2
_0804DDB0:
	adds r0, r7, #4
	mov r5, sb
	adds r1, r0, r5
	ldrb r0, [r1]
	cmp r0, #0
	beq _0804DE3A
	lsls r4, r5, #1
	add r4, sb
	lsls r4, r4, #4
	adds r4, #0x48
	adds r4, r7, r4
	subs r0, #1
	strb r0, [r1]
	lsls r2, r5, #3
	adds r6, r7, #0
	adds r6, #0x20
	adds r6, r6, r2
	ldr r1, [r6]
	movs r0, #0xa0
	lsls r0, r0, #3
	adds r1, r1, r0
	str r1, [r6]
	lsls r5, r5, #2
	mov r8, r5
	adds r3, r7, #0
	adds r3, #0xa
	add r3, r8
	movs r5, #0
	ldrsh r0, [r3, r5]
	adds r1, r1, r0
	str r1, [r6]
	adds r5, r7, #0
	adds r5, #0x24
	adds r5, r5, r2
	adds r2, r7, #0
	adds r2, #0xc
	add r2, r8
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	ldrh r1, [r3]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x14
	subs r1, r1, r0
	strh r1, [r3]
	ldrh r1, [r2]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x14
	subs r1, r1, r0
	strh r1, [r2]
	ldr r0, [r6]
	asrs r0, r0, #8
	mov r2, sl
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0804DE3A:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #4
	bls _0804DDB0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804DE58: .4byte gUnknown_03005960

	thumb_func_start sub_804DE5C
sub_804DE5C: @ 0x0804DE5C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	mov r8, r1
	mov ip, r2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r4, #0
	ldr r1, _0804DED4 @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r3, r2
	lsls r0, r0, #1
	adds r5, r0, r1
	lsls r3, r3, #1
	adds r6, r3, r1
_0804DE7E:
	mov r0, ip
	adds r0, #4
	adds r3, r0, r4
	ldrb r0, [r3]
	cmp r0, #0
	bne _0804DED8
	lsls r2, r4, #2
	mov r1, ip
	adds r1, #0xa
	adds r1, r1, r2
	ldrh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	rsbs r0, r0, #0
	strh r0, [r1]
	mov r1, ip
	adds r1, #0xc
	adds r1, r1, r2
	ldrh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	rsbs r0, r0, #0
	strh r0, [r1]
	lsls r1, r4, #3
	mov r0, ip
	adds r0, #0x20
	adds r0, r0, r1
	str r7, [r0]
	mov r0, ip
	adds r0, #0x24
	adds r0, r0, r1
	mov r1, r8
	str r1, [r0]
	movs r0, #0x10
	strb r0, [r3]
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	add r0, ip
	adds r0, #0x69
	movs r1, #0xff
	strb r1, [r0]
	b _0804DEE2
	.align 2, 0
_0804DED4: .4byte gUnknown_08097AA4
_0804DED8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _0804DE7E
_0804DEE2:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_804DEEC
sub_804DEEC: @ 0x0804DEEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	str r1, [sp]
	ldr r0, _0804DF7C @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804DF80 @ =gUnknown_03000594
	adds r1, r1, r0
	mov ip, r1
	movs r4, #0
	ldr r5, _0804DF84 @ =gUnknown_030053B8
	ldr r6, _0804DF88 @ =0x00196225
	movs r2, #0xff
	mov r8, r2
	ldr r7, _0804DF8C @ =0xFFFFFE00
	mov sb, r7
_0804DF16:
	mov r0, ip
	adds r0, #4
	adds r1, r0, r4
	ldrb r0, [r1]
	cmp r0, #0
	bne _0804DF94
	movs r0, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0xe
	adds r0, r0, r4
	movs r1, #0x3c
	strb r1, [r0]
	lsls r3, r4, #2
	mov r2, ip
	adds r2, #0x18
	adds r2, r2, r3
	ldr r0, [r5]
	adds r1, r0, #0
	muls r1, r6, r1
	ldr r0, _0804DF90 @ =0x3C6EF35F
	adds r1, r1, r0
	str r1, [r5]
	adds r0, r1, #0
	mov r7, r8
	ands r0, r7
	add r0, sb
	strh r0, [r2]
	mov r2, ip
	adds r2, #0x1a
	adds r2, r2, r3
	adds r0, r1, #0
	muls r0, r6, r0
	ldr r1, _0804DF90 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r5]
	ands r0, r7
	add r0, sb
	strh r0, [r2]
	lsls r1, r4, #3
	mov r0, ip
	adds r0, #0x40
	adds r0, r0, r1
	mov r2, sl
	str r2, [r0]
	mov r0, ip
	adds r0, #0x44
	adds r0, r0, r1
	ldr r7, [sp]
	str r7, [r0]
	b _0804DF9E
	.align 2, 0
_0804DF7C: .4byte gCurTask
_0804DF80: .4byte gUnknown_03000594
_0804DF84: .4byte gUnknown_030053B8
_0804DF88: .4byte 0x00196225
_0804DF8C: .4byte 0xFFFFFE00
_0804DF90: .4byte 0x3C6EF35F
_0804DF94:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bls _0804DF16
_0804DF9E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804DFB0
sub_804DFB0: @ 0x0804DFB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0x90
	movs r0, #0
	mov r8, r0
	mov sb, r0
	ldr r1, _0804E074 @ =gUnknown_03005960
	mov sl, r1
_0804DFCA:
	adds r0, r6, #4
	mov r3, r8
	adds r2, r0, r3
	ldrb r0, [r2]
	cmp r0, #0
	beq _0804E058
	adds r1, r6, #0
	adds r1, #0xe
	add r1, r8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0804DFEC
	strb r0, [r2]
_0804DFEC:
	mov r0, r8
	lsls r2, r0, #2
	adds r4, r6, #0
	adds r4, #0x1a
	adds r4, r4, r2
	ldrh r0, [r4]
	adds r0, #0x20
	strh r0, [r4]
	mov r1, r8
	lsls r5, r1, #3
	adds r3, r6, #0
	adds r3, #0x40
	adds r3, r3, r5
	ldr r1, [r3]
	movs r0, #0xa0
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x18
	adds r0, r0, r2
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r1, r1, r0
	str r1, [r3]
	adds r2, r6, #0
	adds r2, #0x44
	adds r2, r2, r5
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, [r3]
	asrs r0, r0, #8
	mov r3, sl
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	ldr r0, [r2]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	mov r0, sb
	cmp r0, #0
	bne _0804E052
	adds r0, r7, #0
	bl sub_8004558
	movs r1, #1
	mov sb, r1
_0804E052:
	adds r0, r7, #0
	bl sub_80051E8
_0804E058:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #9
	bls _0804DFCA
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E074: .4byte gUnknown_03005960

	thumb_func_start sub_804E078
sub_804E078: @ 0x0804E078
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _0804E0B8 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0x1c
	adds r6, r1, r0
	adds r0, r5, #0
	bl sub_8050030
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804E112
	ldrb r0, [r4, #0xc]
	cmp r0, #4
	bls _0804E0C4
	ldr r0, [r5, #0x30]
	ldr r1, _0804E0BC @ =0x00000FFF
	ands r0, r1
	str r0, [r5, #0x30]
	ldr r1, _0804E0C0 @ =gUnknown_080D8D6C
	ldr r0, [r1, #0x30]
	str r0, [r5]
	ldr r0, [r1, #0x34]
	str r0, [r5, #0x34]
	ldrh r0, [r1, #0x38]
	strh r0, [r5, #0x2e]
	b _0804E112
	.align 2, 0
_0804E0B8: .4byte gCurTask
_0804E0BC: .4byte 0x00000FFF
_0804E0C0: .4byte gUnknown_080D8D6C
_0804E0C4:
	ldr r0, _0804E134 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #3
	bl DivRem
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [r5, #0x30]
	ldr r2, _0804E138 @ =0x00000FFF
	ands r1, r2
	str r1, [r5, #0x30]
	ldr r3, _0804E13C @ =gUnknown_080D8D6C
	ldr r1, [r3, #0x18]
	str r1, [r5]
	ldr r1, [r3, #0x1c]
	str r1, [r5, #0x34]
	ldrh r1, [r3, #0x20]
	strh r1, [r5, #0x2e]
	ldr r1, [r6, #0x18]
	ands r1, r2
	str r1, [r6, #0x18]
	ldr r2, _0804E140 @ =gUnknown_080D8DCC
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r4, r1, r2
	ldr r0, [r4]
	str r0, [r6]
	adds r0, r2, #4
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r6, #0x1c]
	ldrh r0, [r4, #8]
	strh r0, [r6, #0x16]
	ldrh r0, [r3, #8]
	strh r0, [r5, #0x2c]
	ldrh r0, [r2, #8]
	strh r0, [r6, #0x14]
_0804E112:
	movs r0, #0
	str r0, [r5, #0x44]
	str r0, [r5, #0x48]
	ldrh r0, [r5, #0x38]
	cmp r0, #0
	beq _0804E14A
	movs r1, #0
	movs r2, #0xa
	bl sub_808558C
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0804E144
	ldrh r0, [r5, #0x38]
	subs r0, #1
	b _0804E148
	.align 2, 0
_0804E134: .4byte gUnknown_03005590
_0804E138: .4byte 0x00000FFF
_0804E13C: .4byte gUnknown_080D8D6C
_0804E140: .4byte gUnknown_080D8DCC
_0804E144:
	ldrh r0, [r5, #0x38]
	adds r0, #1
_0804E148:
	strh r0, [r5, #0x38]
_0804E14A:
	ldrh r1, [r5, #0x38]
	ldr r0, _0804E158 @ =0x000003FF
	ands r0, r1
	strh r0, [r5, #0x38]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804E158: .4byte 0x000003FF

	thumb_func_start sub_804E15C
sub_804E15C: @ 0x0804E15C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r0, #0
	ldr r0, _0804E1B8 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804E1BC @ =gUnknown_03000558
	adds r1, r0, r1
	str r1, [sp, #0x10]
	ldr r2, _0804E1C0 @ =IWRAM_START + 0x1C
	adds r4, r0, r2
	adds r0, r7, #0
	bl sub_8050030
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804E1DC
	ldr r0, [r7, #0x30]
	ldr r1, _0804E1C4 @ =0x00000FFF
	ands r0, r1
	str r0, [r7, #0x30]
	ldr r1, _0804E1C8 @ =gUnknown_080D8D6C
	ldr r0, [r1]
	str r0, [r7]
	ldr r0, [r1, #4]
	str r0, [r7, #0x34]
	ldrh r0, [r1, #8]
	movs r2, #0
	strh r0, [r7, #0x2e]
	ldr r3, _0804E1CC @ =gDispCnt
	ldrh r1, [r3]
	ldr r0, _0804E1D0 @ =0x0000DFFF
	ands r0, r1
	strh r0, [r3]
	ldr r0, _0804E1D4 @ =gWinRegs
	strh r2, [r0, #8]
	strh r2, [r0, #0xa]
	ldr r0, _0804E1D8 @ =gBldRegs
	strh r2, [r0]
	strh r2, [r0, #2]
	strh r2, [r0, #4]
	b _0804E4B2
	.align 2, 0
_0804E1B8: .4byte gCurTask
_0804E1BC: .4byte gUnknown_03000558
_0804E1C0: .4byte IWRAM_START + 0x1C
_0804E1C4: .4byte 0x00000FFF
_0804E1C8: .4byte gUnknown_080D8D6C
_0804E1CC: .4byte gDispCnt
_0804E1D0: .4byte 0x0000DFFF
_0804E1D4: .4byte gWinRegs
_0804E1D8: .4byte gBldRegs
_0804E1DC:
	ldr r0, [r7, #0x30]
	lsrs r0, r0, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	cmp r0, #2
	bhi _0804E1EC
	b _0804E4B2
_0804E1EC:
	movs r3, #0x20
	ldrsh r0, [r4, r3]
	lsls r0, r0, #8
	ldr r1, [r4, #0x24]
	adds r1, r1, r0
	mov sb, r1
	movs r6, #0x22
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r1, [r4, #0x28]
	adds r1, r1, r0
	mov r8, r1
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	ldrh r1, [r7, #0x3a]
	adds r5, r0, r1
	ldr r2, _0804E3F8 @ =0x000003FF
	adds r0, r2, #0
	ands r5, r0
	ldr r3, _0804E3FC @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r5, r2
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	ldr r4, _0804E400 @ =gUnknown_080D89A5
	ldrb r1, [r4]
	muls r0, r1, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r0, r5, #1
	adds r0, r0, r3
	movs r6, #0
	ldrsh r0, [r0, r6]
	muls r0, r1, r0
	asrs r0, r0, #6
	add r8, r0
	adds r5, #0x8c
	ldr r0, _0804E404 @ =0xFFFFFF00
	adds r1, r5, r0
	ldr r0, _0804E3F8 @ =0x000003FF
	ands r1, r0
	adds r2, r1, r2
	lsls r2, r2, #1
	adds r2, r2, r3
	movs r6, #0
	ldrsh r0, [r2, r6]
	asrs r0, r0, #2
	add sb, r0
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r2, #0
	ldrsh r0, [r1, r2]
	asrs r0, r0, #2
	add r8, r0
	movs r0, #0
	mov sl, r4
	adds r3, r7, #0
	adds r3, #0x3a
	str r3, [sp, #0x1c]
	adds r4, r7, #0
	adds r4, #0x42
	str r4, [sp, #0x20]
	mov r6, sp
	adds r6, #0xc
	str r6, [sp, #0x18]
	ldr r1, _0804E3FC @ =gUnknown_08097AA4
	mov ip, r1
_0804E278:
	adds r3, r0, #1
	lsls r0, r3, #1
	ldr r2, [sp, #0x1c]
	adds r0, r2, r0
	ldrh r0, [r0]
	adds r5, r5, r0
	ldr r4, _0804E3F8 @ =0x000003FF
	ands r5, r4
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r5, r6
	lsls r6, r0, #1
	mov r1, ip
	adds r0, r6, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r4, sl
	adds r0, r3, r4
	ldrb r2, [r0]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r4, r5, #1
	mov r1, ip
	adds r0, r4, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	muls r0, r2, r0
	asrs r0, r0, #6
	add r8, r0
	lsls r3, r3, #0x18
	lsrs r0, r3, #0x18
	cmp r0, #2
	bls _0804E278
	ldr r2, _0804E3FC @ =gUnknown_08097AA4
	adds r0, r6, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	mov r6, sl
	ldrb r1, [r6, #4]
	muls r0, r1, r0
	asrs r0, r0, #6
	add sb, r0
	adds r0, r4, r2
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r1, r0
	asrs r0, r0, #6
	add r8, r0
	ldr r3, [sp, #0x20]
	ldrh r0, [r3]
	adds r5, r5, r0
	ldr r4, _0804E3F8 @ =0x000003FF
	ands r5, r4
	ldr r6, [sp, #0x14]
	cmp r6, #5
	bhi _0804E2EE
	b _0804E43C
_0804E2EE:
	ldr r0, _0804E408 @ =gMPlayTable
	ldr r1, [r0, #0x18]
	ldr r0, _0804E40C @ =gSongTable
	ldr r2, _0804E410 @ =0x00000868
	adds r0, r0, r2
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	beq _0804E30A
	cmp r6, #6
	bne _0804E30A
	ldr r0, _0804E414 @ =0x0000010D
	bl m4aSongNumStart
_0804E30A:
	add r0, sp, #8
	ldr r1, [sp, #0x18]
	bl sub_802C668
	ldrh r0, [r7, #0x38]
	adds r6, r5, r0
	ldr r3, _0804E3F8 @ =0x000003FF
	adds r0, r3, #0
	ands r6, r0
	ldr r0, [sp, #0xc]
	mov r4, r8
	subs r0, r0, r4
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [sp, #8]
	mov r2, sb
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r5, #0
	adds r0, #0x10
	cmp r6, r0
	bge _0804E350
	subs r0, #0x20
	cmp r6, r0
	ble _0804E350
	bl sub_802BB54
	ldr r0, _0804E418 @ =sub_804F1EC
	ldr r3, [sp, #0x10]
	str r0, [r3]
_0804E350:
	ldr r2, _0804E41C @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0x80
	lsls r4, r4, #6
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _0804E420 @ =gWinRegs
	movs r0, #0xa0
	strh r0, [r1]
	movs r0, #0xf0
	strh r0, [r1, #4]
	movs r0, #0x3f
	strh r0, [r1, #8]
	movs r0, #0x15
	strh r0, [r1, #0xa]
	ldr r1, _0804E424 @ =gBldRegs
	ldr r0, _0804E428 @ =0x00003FBF
	strh r0, [r1]
	movs r5, #8
	strh r5, [r1, #2]
	strh r5, [r1, #4]
	ldr r2, _0804E42C @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0804E430 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _0804E434 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #8
	bl DivRem
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	cmp r4, #0
	bge _0804E39A
	rsbs r4, r4, #0
_0804E39A:
	ldr r3, _0804E3FC @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r6, r2
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, _0804E400 @ =gUnknown_080D89A5
	ldrb r2, [r0, #5]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r0, r6, #1
	adds r0, r0, r3
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add r8, r0
	lsls r0, r4, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x1a
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r4, sb
	asrs r3, r4, #8
	ldr r2, _0804E438 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	mov r4, r8
	asrs r0, r4, #8
	ldr r2, [r2, #4]
	subs r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	adds r0, r6, #0
	movs r2, #0x10
	bl sub_802E784
	b _0804E4B2
	.align 2, 0
_0804E3F8: .4byte 0x000003FF
_0804E3FC: .4byte gUnknown_08097AA4
_0804E400: .4byte gUnknown_080D89A5
_0804E404: .4byte 0xFFFFFF00
_0804E408: .4byte gMPlayTable
_0804E40C: .4byte gSongTable
_0804E410: .4byte 0x00000868
_0804E414: .4byte 0x0000010D
_0804E418: .4byte sub_804F1EC
_0804E41C: .4byte gDispCnt
_0804E420: .4byte gWinRegs
_0804E424: .4byte gBldRegs
_0804E428: .4byte 0x00003FBF
_0804E42C: .4byte gUnknown_030053B8
_0804E430: .4byte 0x00196225
_0804E434: .4byte 0x3C6EF35F
_0804E438: .4byte gUnknown_03005960
_0804E43C:
	movs r0, #8
	add r1, sp, #8
	ldr r2, [sp, #0x18]
	bl sub_802C704
	ldr r0, [sp, #0xc]
	mov r6, r8
	subs r0, r0, r6
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [sp, #8]
	mov r2, sb
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldrh r0, [r7, #0x38]
	adds r0, r5, r0
	ldr r3, _0804E490 @ =0x000003FF
	ands r0, r3
	adds r1, r6, #0
	movs r2, #0xa
	bl sub_808558C
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0804E498
	ldrh r1, [r7, #0x38]
	adds r2, r1, #0
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r2, r0
	bls _0804E494
	movs r0, #0xe0
	lsls r0, r0, #2
	cmp r2, r0
	bls _0804E4AA
	subs r0, r1, #4
	b _0804E4A8
	.align 2, 0
_0804E490: .4byte 0x000003FF
_0804E494:
	subs r0, r1, #4
	b _0804E4A8
_0804E498:
	ldrh r1, [r7, #0x38]
	adds r2, r1, #0
	ldr r0, _0804E4C4 @ =0x000001FF
	cmp r2, r0
	bhi _0804E4A6
	cmp r2, #0x7f
	bhi _0804E4AA
_0804E4A6:
	adds r0, r1, #4
_0804E4A8:
	strh r0, [r7, #0x38]
_0804E4AA:
	ldrh r1, [r7, #0x38]
	ldr r0, _0804E4C8 @ =0x000003FF
	ands r0, r1
	strh r0, [r7, #0x38]
_0804E4B2:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E4C4: .4byte 0x000001FF
_0804E4C8: .4byte 0x000003FF

	thumb_func_start sub_804E4CC
sub_804E4CC: @ 0x0804E4CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	bl sub_8050030
	ldr r0, [r4, #0x30]
	ldr r6, _0804E504 @ =0x00000FFF
	adds r1, r0, #0
	ands r1, r6
	adds r3, r1, #0
	adds r5, r3, #0
	lsls r0, r0, #4
	lsrs r0, r0, #0x10
	adds r2, r0, #0
	cmp r0, #4
	bne _0804E50C
	str r1, [r4, #0x30]
	ldr r1, _0804E508 @ =gUnknown_080D8D6C
	ldr r0, [r1]
	str r0, [r4]
	ldr r0, [r1, #4]
	str r0, [r4, #0x34]
	ldrh r0, [r1, #8]
	strh r0, [r4, #0x2e]
	b _0804E64A
	.align 2, 0
_0804E504: .4byte 0x00000FFF
_0804E508: .4byte gUnknown_080D8D6C
_0804E50C:
	cmp r0, #3
	bne _0804E5B0
	ldr r2, _0804E598 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _0804E59C @ =0x0000FDFF
	ands r0, r1
	strh r0, [r2]
	adds r6, r3, #0
	movs r5, #0
	adds r4, #0x4c
	mov r8, r4
	ldr r0, _0804E5A0 @ =gUnknown_080D8E20
	mov ip, r0
	movs r7, #0x1f
	movs r1, #0x92
	add r1, ip
	mov sl, r1
	ldr r2, _0804E5A4 @ =gObjPalette
	mov sb, r2
_0804E532:
	lsls r4, r5, #1
	adds r1, r4, r5
	mov r0, ip
	adds r0, #0x90
	adds r0, r1, r0
	ldrb r3, [r0]
	muls r3, r6, r3
	asrs r3, r3, #0xc
	ands r3, r7
	mov r0, ip
	adds r0, #0x91
	adds r0, r1, r0
	ldrb r2, [r0]
	muls r2, r6, r2
	asrs r2, r2, #0xc
	ands r2, r7
	add r1, sl
	ldrb r0, [r1]
	muls r0, r6, r0
	asrs r0, r0, #0xc
	ands r0, r7
	adds r1, r5, #0
	adds r1, #0x80
	lsls r1, r1, #1
	add r1, sb
	lsls r0, r0, #0xa
	lsls r2, r2, #5
	orrs r0, r2
	orrs r0, r3
	strh r0, [r1]
	ldr r3, _0804E5A8 @ =gBgPalette
	adds r4, r4, r3
	strh r0, [r4]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0804E532
	ldr r1, _0804E5AC @ =gFlags
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	movs r1, #1
	orrs r0, r1
	ldr r2, _0804E5AC @ =gFlags
	str r0, [r2]
	movs r0, #0
	mov r3, r8
	strb r0, [r3]
	b _0804E64A
	.align 2, 0
_0804E598: .4byte gDispCnt
_0804E59C: .4byte 0x0000FDFF
_0804E5A0: .4byte gUnknown_080D8E20
_0804E5A4: .4byte gObjPalette
_0804E5A8: .4byte gBgPalette
_0804E5AC: .4byte gFlags
_0804E5B0:
	cmp r2, #2
	bne _0804E64A
	movs r0, #0xe0
	lsls r0, r0, #4
	cmp r5, r0
	bls _0804E64A
	ldr r2, _0804E658 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	subs r0, r6, r5
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r2, #0
	ldr r0, _0804E65C @ =gUnknown_080D8E20
	mov r8, r0
	movs r4, #0x1f
	ldr r1, _0804E660 @ =gBgPalette
	mov sl, r1
_0804E5DC:
	movs r5, #0
	lsls r0, r2, #1
	lsls r1, r2, #4
	adds r3, r2, #1
	mov sb, r3
	adds r0, r0, r2
	lsls r0, r0, #4
	mov ip, r0
	adds r7, r1, #0
	adds r7, #0x70
_0804E5F0:
	lsls r1, r5, #1
	adds r1, r1, r5
	add r1, ip
	mov r2, r8
	adds r0, r1, r2
	ldrb r3, [r0]
	muls r3, r6, r3
	asrs r3, r3, #9
	ands r3, r4
	mov r0, r8
	adds r0, #1
	adds r0, r1, r0
	ldrb r2, [r0]
	muls r2, r6, r2
	asrs r2, r2, #9
	ands r2, r4
	ldr r0, _0804E664 @ =gUnknown_080D8E22
	adds r1, r1, r0
	ldrb r0, [r1]
	muls r0, r6, r0
	asrs r0, r0, #9
	ands r0, r4
	adds r1, r5, r7
	lsls r1, r1, #1
	add r1, sl
	lsls r0, r0, #0xa
	lsls r2, r2, #5
	orrs r0, r2
	orrs r0, r3
	strh r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0804E5F0
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #2
	bls _0804E5DC
	ldr r2, _0804E668 @ =gFlags
	ldr r0, [r2]
	movs r1, #1
	orrs r0, r1
	str r0, [r2]
_0804E64A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E658: .4byte gDispCnt
_0804E65C: .4byte gUnknown_080D8E20
_0804E660: .4byte gBgPalette
_0804E664: .4byte gUnknown_080D8E22
_0804E668: .4byte gFlags

	thumb_func_start sub_804E66C
sub_804E66C: @ 0x0804E66C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldrh r0, [r7, #4]
	subs r0, #1
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804E68C
	ldr r0, _0804E738 @ =sub_804E74C
	str r0, [r7]
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r7, #4]
_0804E68C:
	ldr r0, _0804E73C @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #4
	bl DivRem
	movs r1, #0
	mov sb, r1
	cmp r0, #0
	bne _0804E6A2
	movs r2, #1
	mov sb, r2
_0804E6A2:
	movs r5, #0
	ldr r0, _0804E740 @ =gUnknown_08097AA4
	mov r8, r0
_0804E6A8:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #3
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, #0x10
	adds r4, r7, r0
	adds r6, r4, #0
	adds r6, #0x58
	ldr r1, [r4, #0x58]
	adds r0, r6, #0
	bl _call_via_r1
	ldrb r1, [r4, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0804E71C
	mov r1, sb
	cmp r1, #0
	beq _0804E714
	ldr r1, [r4]
	ldr r0, _0804E744 @ =sub_804EC6C
	cmp r1, r0
	beq _0804E714
	ldrh r3, [r4, #0xc]
	adds r3, #0x20
	ldr r2, _0804E748 @ =0x000003FF
	adds r0, r2, #0
	ands r3, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r3, r1
	lsls r0, r0, #1
	add r0, r8
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #5
	ldr r0, [r4, #0x14]
	subs r0, r0, r1
	lsls r1, r3, #1
	add r1, r8
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #2
	adds r2, r2, r1
	asrs r2, r2, #5
	ldr r1, [r4, #0x18]
	subs r1, r1, r2
	adds r2, r6, #0
	bl sub_804DE5C
_0804E714:
	ldr r1, [r4]
	adds r0, r4, #0
	bl _call_via_r1
_0804E71C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0804E6A8
	adds r0, r7, #0
	bl sub_804E8E8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E738: .4byte sub_804E74C
_0804E73C: .4byte gUnknown_03005590
_0804E740: .4byte gUnknown_08097AA4
_0804E744: .4byte sub_804EC6C
_0804E748: .4byte 0x000003FF

	thumb_func_start sub_804E74C
sub_804E74C: @ 0x0804E74C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldrh r0, [r7, #4]
	subs r0, #1
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r2, r1, #0
	movs r4, #3
	cmp r1, #0
	bne _0804E778
	ldr r0, _0804E774 @ =sub_804E66C
	str r0, [r7]
	movs r0, #0x96
	lsls r0, r0, #2
	strh r0, [r7, #4]
	b _0804E792
	.align 2, 0
_0804E774: .4byte sub_804E66C
_0804E778:
	movs r0, #0x87
	lsls r0, r0, #1
	cmp r1, r0
	bne _0804E784
	movs r4, #0
	b _0804E792
_0804E784:
	cmp r1, #0xd2
	bne _0804E78C
	movs r4, #1
	b _0804E792
_0804E78C:
	cmp r2, #0x96
	bne _0804E792
	movs r4, #2
_0804E792:
	cmp r4, #2
	bhi _0804E836
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0x10
	adds r5, r7, r0
	ldr r0, _0804E8D4 @ =gUnknown_080D8E14
	ldr r0, [r0]
	str r0, [r5]
	movs r0, #3
	strb r0, [r5, #4]
	movs r4, #0
	movs r0, #0x96
	lsls r0, r0, #2
	strh r0, [r5, #8]
	ldrh r1, [r7, #6]
	ldr r0, _0804E8D8 @ =0x000003FF
	ands r0, r1
	strh r0, [r5, #0xa]
	ldr r1, _0804E8DC @ =gUnknown_08097AA4
	ldrh r0, [r7, #6]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	strh r0, [r5, #0xe]
	ldrh r0, [r7, #6]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	strh r0, [r5, #0x10]
	ldr r1, [r7, #8]
	str r1, [r5, #0x14]
	ldr r2, [r7, #0xc]
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	movs r3, #0xd
	muls r0, r3, r0
	adds r1, r1, r0
	str r1, [r5, #0x14]
	movs r1, #0x10
	ldrsh r0, [r5, r1]
	muls r0, r3, r0
	adds r2, r2, r0
	str r2, [r5, #0x18]
	movs r0, #0x80
	str r0, [r5, #0x1c]
	strb r4, [r5, #6]
	movs r0, #5
	strb r0, [r5, #5]
	adds r2, r5, #0
	adds r2, #0x20
	ldr r1, _0804E8E0 @ =gUnknown_080D8918
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x41
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	adds r1, #4
	movs r0, #6
	strb r0, [r1]
	movs r0, #0x85
	lsls r0, r0, #1
	bl m4aSongNumStart
_0804E836:
	ldr r0, _0804E8E4 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #4
	bl DivRem
	movs r2, #0
	mov sb, r2
	cmp r0, #0
	bne _0804E84C
	movs r3, #1
	mov sb, r3
_0804E84C:
	movs r4, #0
	ldr r0, _0804E8DC @ =gUnknown_08097AA4
	mov r8, r0
_0804E852:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0x10
	adds r5, r7, r0
	adds r6, r5, #0
	adds r6, #0x58
	ldr r1, [r5, #0x58]
	adds r0, r6, #0
	bl _call_via_r1
	ldrb r1, [r5, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0804E8B6
	mov r1, sb
	cmp r1, #0
	beq _0804E8AE
	ldrh r3, [r5, #0xa]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r3, r2
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #2
	adds r1, r1, r0
	asrs r1, r1, #5
	ldr r0, [r5, #0x14]
	subs r0, r0, r1
	lsls r1, r3, #1
	add r1, r8
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r2, r1, #2
	adds r2, r2, r1
	asrs r2, r2, #5
	ldr r1, [r5, #0x18]
	subs r1, r1, r2
	adds r2, r6, #0
	bl sub_804DE5C
_0804E8AE:
	ldr r1, [r5]
	adds r0, r5, #0
	bl _call_via_r1
_0804E8B6:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0804E852
	adds r0, r7, #0
	bl sub_804E8E8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E8D4: .4byte gUnknown_080D8E14
_0804E8D8: .4byte 0x000003FF
_0804E8DC: .4byte gUnknown_08097AA4
_0804E8E0: .4byte gUnknown_080D8918
_0804E8E4: .4byte gUnknown_03005590

	thumb_func_start sub_804E8E8
sub_804E8E8: @ 0x0804E8E8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	movs r5, #0
	ldr r6, _0804E968 @ =gUnknown_03005960
_0804E8F4:
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #3
	adds r0, r0, r5
	lsls r0, r0, #4
	adds r0, #0x10
	mov r1, r8
	adds r2, r1, r0
	ldrb r1, [r2, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0804E952
	adds r4, r2, #0
	adds r4, #0x20
	ldrh r0, [r2, #0xc]
	adds r0, #0x20
	ldr r1, _0804E96C @ =0x000003FF
	ands r0, r1
	lsrs r1, r0, #6
	ldr r3, _0804E970 @ =gUnknown_080D8918
	ldrh r0, [r4, #0xa]
	ldrh r7, [r3, #4]
	cmp r0, r7
	bne _0804E932
	lsls r0, r1, #3
	adds r0, r0, r3
	ldrb r1, [r0, #6]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
_0804E932:
	ldr r0, [r2, #0x14]
	asrs r0, r0, #8
	ldr r1, [r6]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r2, #0x18]
	asrs r0, r0, #8
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0804E952:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0804E8F4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E968: .4byte gUnknown_03005960
_0804E96C: .4byte 0x000003FF
_0804E970: .4byte gUnknown_080D8918

	thumb_func_start sub_804E974
sub_804E974: @ 0x0804E974
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x20
	movs r0, #0
	mov r8, r0
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	ldr r0, [sp]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r0, r1
	str r0, [sp]
	ldrh r0, [r5, #8]
	subs r1, r0, #1
	strh r1, [r5, #8]
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _0804E9AC
	movs r2, #1
	mov r8, r2
	b _0804E9BC
_0804E9AC:
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xa9
	bhi _0804E9BC
	ldrb r1, [r5, #4]
	movs r0, #0xfd
	ands r0, r1
	strb r0, [r5, #4]
_0804E9BC:
	ldr r0, [sp, #4]
	ldr r1, [r5, #0x18]
	subs r0, r0, r1
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [sp]
	ldr r2, [r5, #0x14]
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	strh r1, [r5, #0xc]
	ldrb r0, [r5, #5]
	cmp r0, #0
	beq _0804E9E6
	subs r0, #1
	strb r0, [r5, #5]
	b _0804EA00
_0804E9E6:
	ldrh r0, [r5, #0xa]
	movs r2, #0xa
	bl sub_808558C
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0804E9FA
	ldrh r0, [r5, #0xa]
	subs r0, #5
	b _0804E9FE
_0804E9FA:
	ldrh r0, [r5, #0xa]
	adds r0, #5
_0804E9FE:
	strh r0, [r5, #0xa]
_0804EA00:
	ldrh r1, [r5, #0xa]
	ldr r0, _0804EAD8 @ =0x000003FF
	ands r0, r1
	strh r0, [r5, #0xa]
	movs r1, #0xe
	ldrsh r0, [r5, r1]
	movs r1, #0x28
	bl Div
	ldrh r1, [r5, #0xe]
	subs r1, r1, r0
	strh r1, [r5, #0xe]
	movs r2, #0x10
	ldrsh r0, [r5, r2]
	movs r1, #0x28
	bl Div
	ldrh r1, [r5, #0x10]
	subs r1, r1, r0
	strh r1, [r5, #0x10]
	ldr r7, _0804EADC @ =gUnknown_08097AA4
	ldrh r0, [r5, #0xa]
	movs r1, #0x80
	lsls r1, r1, #1
	mov sb, r1
	add r0, sb
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r0, [r0, r2]
	ldr r4, _0804EAE0 @ =0x00000352
	adds r1, r4, #0
	bl Div
	ldrh r1, [r5, #0xe]
	adds r1, r1, r0
	strh r1, [r5, #0xe]
	ldrh r0, [r5, #0xa]
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r1, r4, #0
	bl Div
	ldrh r1, [r5, #0x10]
	adds r1, r1, r0
	strh r1, [r5, #0x10]
	ldr r0, [r5, #0x14]
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r0, r2
	movs r2, #0xe
	ldrsh r1, [r5, r2]
	adds r0, r0, r1
	str r0, [r5, #0x14]
	movs r0, #0x10
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x18]
	adds r0, r0, r1
	str r0, [r5, #0x18]
	bl sub_802C6E4
	movs r1, #0x82
	lsls r1, r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0804EB50
	ldr r1, [r5, #0x14]
	asrs r1, r1, #8
	ldr r2, [r5, #0x18]
	asrs r2, r2, #8
	adds r0, r6, #0
	bl sub_804EE84
	cmp r0, #1
	bne _0804EAE8
	ldr r0, _0804EAE4 @ =gUnknown_080D8E14
	ldr r0, [r0, #4]
	str r0, [r5]
	bl sub_802C770
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r2, sb
	adds r1, r0, r2
	lsls r1, r1, #1
	adds r1, r1, r7
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	strh r1, [r5, #0xe]
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r5, #0x10]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r6, #0x10]
	movs r0, #0
	mov r8, r0
	movs r0, #0x86
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _0804EB08
	.align 2, 0
_0804EAD8: .4byte 0x000003FF
_0804EADC: .4byte gUnknown_08097AA4
_0804EAE0: .4byte 0x00000352
_0804EAE4: .4byte gUnknown_080D8E14
_0804EAE8:
	ldr r1, [r5, #0x14]
	asrs r1, r1, #8
	ldr r2, [r5, #0x18]
	asrs r2, r2, #8
	adds r0, r6, #0
	movs r3, #1
	bl sub_804F010
	cmp r0, #1
	bne _0804EB08
	bl sub_802BA8C
	cmp r0, #1
	bne _0804EB08
	movs r1, #1
	mov r8, r1
_0804EB08:
	mov r2, r8
	cmp r2, #0
	beq _0804EB50
	ldrb r1, [r5, #4]
	movs r0, #4
	orrs r0, r1
	strb r0, [r5, #4]
	ldr r0, _0804EB60 @ =gUnknown_080D8E14
	ldr r0, [r0, #8]
	str r0, [r5]
	movs r2, #0
	movs r0, #0x10
	strh r0, [r5, #8]
	ldr r0, _0804EB64 @ =gUnknown_080D8918
	adds r1, r0, #0
	adds r1, #0x84
	ldrh r1, [r1]
	strh r1, [r6, #0xa]
	adds r0, #0x86
	ldrb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r6, #0x10]
	adds r0, r6, #0
	adds r0, #0x25
	strb r2, [r0]
	ldr r0, _0804EB68 @ =0x0000010B
	bl m4aSongNumStart
_0804EB50:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804EB60: .4byte gUnknown_080D8E14
_0804EB64: .4byte gUnknown_080D8918
_0804EB68: .4byte 0x0000010B

	thumb_func_start sub_804EB6C
sub_804EB6C: @ 0x0804EB6C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x20
	ldr r0, _0804EBBC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldrh r0, [r4, #8]
	subs r0, #1
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804EBC8
	ldr r0, _0804EBC0 @ =gUnknown_080D8918
	adds r1, r0, #0
	adds r1, #0x84
	ldrh r1, [r1]
	strh r1, [r5, #0xa]
	adds r0, #0x86
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x41
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #4
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0804EBC4 @ =gUnknown_080D8E14
	ldr r0, [r0, #8]
	str r0, [r4]
	movs r0, #0x10
	strh r0, [r4, #8]
	b _0804EC5E
	.align 2, 0
_0804EBBC: .4byte gCurTask
_0804EBC0: .4byte gUnknown_080D8918
_0804EBC4: .4byte gUnknown_080D8E14
_0804EBC8:
	ldrh r0, [r4, #0xa]
	adds r0, #0x8c
	ldr r1, _0804EC18 @ =0x000003FF
	ands r0, r1
	strh r0, [r4, #0xa]
	strh r0, [r4, #0xc]
	ldr r0, [r4, #0x14]
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r2, #0xe
	ldrsh r1, [r4, r2]
	adds r2, r0, r1
	str r2, [r4, #0x14]
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x18]
	adds r1, r0, r1
	str r1, [r4, #0x18]
	ldrb r0, [r6, #0xd]
	cmp r0, #0
	bne _0804EC5E
	ldrb r0, [r4, #6]
	cmp r0, #0
	bne _0804EC5E
	asrs r0, r2, #8
	asrs r1, r1, #8
	bl sub_804ED98
	cmp r0, #0
	beq _0804EC5E
	ldrb r1, [r6, #0xc]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0804EC1C
	movs r0, #0x8f
	bl m4aSongNumStart
	b _0804EC22
	.align 2, 0
_0804EC18: .4byte 0x000003FF
_0804EC1C:
	movs r0, #0xeb
	bl m4aSongNumStart
_0804EC22:
	ldr r1, _0804EC64 @ =gUnknown_080D8918
	adds r0, r1, #0
	adds r0, #0x84
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r5, #0xa]
	adds r1, #0x86
	ldrb r1, [r1]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x25
	strb r2, [r0]
	ldr r0, _0804EC68 @ =gUnknown_080D8E14
	ldr r0, [r0, #8]
	str r0, [r4]
	movs r0, #0x10
	strh r0, [r4, #8]
	movs r0, #0x30
	strb r0, [r6, #0xd]
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	beq _0804EC5E
	subs r0, #1
	strb r0, [r6, #0xc]
_0804EC5E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804EC64: .4byte gUnknown_080D8918
_0804EC68: .4byte gUnknown_080D8E14

	thumb_func_start sub_804EC6C
sub_804EC6C: @ 0x0804EC6C
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #8]
	subs r0, #1
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804EC82
	movs r0, #0
	strb r0, [r4, #4]
	b _0804ECBC
_0804EC82:
	movs r1, #0xe
	ldrsh r0, [r4, r1]
	movs r1, #0x28
	bl Div
	ldrh r1, [r4, #0xe]
	subs r1, r1, r0
	strh r1, [r4, #0xe]
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	movs r1, #0x28
	bl Div
	ldrh r1, [r4, #0x10]
	subs r1, r1, r0
	strh r1, [r4, #0x10]
	movs r1, #0xe
	ldrsh r0, [r4, r1]
	ldr r1, [r4, #0x14]
	adds r1, r1, r0
	movs r0, #0x10
	ldrsh r2, [r4, r0]
	ldr r0, [r4, #0x18]
	adds r0, r0, r2
	str r0, [r4, #0x18]
	movs r0, #0xa0
	lsls r0, r0, #3
	adds r1, r1, r0
	str r1, [r4, #0x14]
_0804ECBC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804ECC4
sub_804ECC4: @ 0x0804ECC4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	adds r1, r6, #0
	adds r1, #0x1c
	adds r6, #0x48
	movs r2, #0x20
	ldrsh r0, [r1, r2]
	lsls r0, r0, #8
	ldr r4, [r1, #0x24]
	adds r4, r4, r0
	movs r7, #0x22
	ldrsh r0, [r1, r7]
	lsls r0, r0, #8
	ldr r5, [r1, #0x28]
	adds r5, r5, r0
	ldr r1, [r6, #0x44]
	asrs r1, r1, #8
	ldrh r6, [r6, #0x3a]
	adds r1, r1, r6
	movs r0, #0xc0
	lsls r0, r0, #2
	mov sb, r0
	add r1, sb
	ldr r2, _0804ED8C @ =0x000003FF
	mov r8, r2
	mov r7, r8
	ands r1, r7
	ldr r6, _0804ED90 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r2, [r0, r7]
	lsls r0, r2, #2
	adds r0, r0, r2
	asrs r0, r0, #4
	adds r4, r4, r0
	lsls r0, r1, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r2, [r0, r7]
	lsls r0, r2, #2
	adds r0, r0, r2
	asrs r0, r0, #4
	adds r5, r5, r0
	add r1, sb
	mov r0, r8
	ands r1, r0
	adds r3, r1, r3
	lsls r3, r3, #1
	adds r3, r3, r6
	movs r7, #0
	ldrsh r2, [r3, r7]
	lsls r0, r2, #2
	adds r0, r0, r2
	asrs r0, r0, #5
	adds r4, r4, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r0, #0
	ldrsh r1, [r1, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	asrs r0, r0, #5
	adds r5, r5, r0
	ldr r0, [sp]
	subs r4, r4, r0
	ldr r0, [sp, #4]
	subs r5, r5, r0
	asrs r4, r4, #8
	asrs r5, r5, #8
	adds r2, r4, #0
	muls r2, r4, r2
	adds r4, r2, #0
	adds r7, r5, #0
	muls r7, r5, r7
	adds r5, r7, #0
	adds r4, r4, r5
	ldr r0, _0804ED94 @ =0x0000063F
	cmp r4, r0
	bgt _0804ED7E
	bl sub_802BA8C
_0804ED7E:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804ED8C: .4byte 0x000003FF
_0804ED90: .4byte gUnknown_08097AA4
_0804ED94: .4byte 0x0000063F

	thumb_func_start sub_804ED98
sub_804ED98: @ 0x0804ED98
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	movs r2, #0
	str r2, [sp]
	ldr r2, _0804EE6C @ =gCurTask
	ldr r2, [r2]
	ldrh r4, [r2, #6]
	ldr r5, _0804EE70 @ =IWRAM_START + 0x1C
	adds r3, r4, r5
	ldr r7, _0804EE74 @ =IWRAM_START + 0x48
	adds r4, r4, r7
	movs r5, #0x20
	ldrsh r2, [r3, r5]
	lsls r2, r2, #8
	ldr r6, [r3, #0x24]
	adds r6, r6, r2
	movs r7, #0x22
	ldrsh r2, [r3, r7]
	lsls r2, r2, #8
	ldr r3, [r3, #0x28]
	mov r8, r3
	add r8, r2
	ldr r3, [r4, #0x44]
	asrs r3, r3, #8
	ldrh r4, [r4, #0x3a]
	adds r3, r3, r4
	movs r2, #0xc0
	lsls r2, r2, #2
	mov ip, r2
	add r3, ip
	ldr r5, _0804EE78 @ =0x000003FF
	mov sl, r5
	mov r7, sl
	ands r3, r7
	ldr r2, _0804EE7C @ =gUnknown_08097AA4
	mov sb, r2
	movs r5, #0x80
	lsls r5, r5, #1
	adds r2, r3, r5
	lsls r2, r2, #1
	add r2, sb
	movs r7, #0
	ldrsh r4, [r2, r7]
	lsls r2, r4, #2
	adds r2, r2, r4
	asrs r2, r2, #4
	adds r6, r6, r2
	lsls r2, r3, #1
	add r2, sb
	movs r7, #0
	ldrsh r4, [r2, r7]
	lsls r2, r4, #2
	adds r2, r2, r4
	asrs r2, r2, #4
	add r8, r2
	add r3, ip
	mov r2, sl
	ands r3, r2
	adds r5, r3, r5
	lsls r5, r5, #1
	add r5, sb
	movs r7, #0
	ldrsh r4, [r5, r7]
	lsls r2, r4, #2
	adds r2, r2, r4
	asrs r2, r2, #5
	adds r6, r6, r2
	lsls r3, r3, #1
	add r3, sb
	movs r2, #0
	ldrsh r3, [r3, r2]
	lsls r2, r3, #2
	adds r2, r2, r3
	asrs r2, r2, #5
	add r8, r2
	asrs r6, r6, #8
	mov r5, r8
	asrs r5, r5, #8
	subs r6, r6, r0
	subs r5, r5, r1
	mov r8, r5
	adds r7, r6, #0
	muls r7, r6, r7
	adds r6, r7, #0
	mov r0, r8
	muls r0, r5, r0
	mov r8, r0
	add r6, r8
	ldr r0, _0804EE80 @ =0x0000063F
	cmp r6, r0
	bgt _0804EE5A
	movs r1, #1
	str r1, [sp]
_0804EE5A:
	ldr r0, [sp]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804EE6C: .4byte gCurTask
_0804EE70: .4byte IWRAM_START + 0x1C
_0804EE74: .4byte IWRAM_START + 0x48
_0804EE78: .4byte 0x000003FF
_0804EE7C: .4byte gUnknown_08097AA4
_0804EE80: .4byte 0x0000063F

	thumb_func_start sub_804EE84
sub_804EE84: @ 0x0804EE84
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	bl sub_802C750
	adds r6, r0, #0
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	bl sub_802C6E4
	movs r1, #0x82
	lsls r1, r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0804EF5C
	ldr r0, _0804EF58 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0804EF5C
	ldr r0, [r5, #0x30]
	subs r1, #0x81
	cmp r0, r1
	beq _0804EF5C
	ldr r0, [r6, #0x30]
	cmp r0, r1
	beq _0804EF5C
	adds r0, r5, #0
	adds r0, #0x34
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r2, r4, r3
	ldr r0, [sp]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0x34
	movs r4, #0
	ldrsb r4, [r1, r4]
	adds r1, r0, r4
	cmp r2, r1
	bgt _0804EEFC
	adds r0, r5, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	adds r0, r2, r0
	cmp r0, r1
	bge _0804EF0E
	cmp r2, r1
	blt _0804EF5C
_0804EEFC:
	adds r0, r6, #0
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r4
	adds r0, r1, r0
	cmp r0, r2
	blt _0804EF5C
_0804EF0E:
	adds r0, r5, #0
	adds r0, #0x35
	movs r4, #0
	ldrsb r4, [r0, r4]
	adds r2, r7, r4
	ldr r0, [sp, #4]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0x35
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r3, r0, r1
	cmp r2, r3
	bgt _0804EF42
	adds r0, r5, #0
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r4
	adds r0, r2, r0
	cmp r0, r3
	bge _0804EF54
	cmp r2, r3
	blt _0804EF5C
_0804EF42:
	adds r0, r6, #0
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r1
	adds r0, r3, r0
	cmp r0, r2
	blt _0804EF5C
_0804EF54:
	movs r0, #1
	b _0804EF5E
	.align 2, 0
_0804EF58: .4byte gUnknown_030059E0
_0804EF5C:
	movs r0, #0
_0804EF5E:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_804EF68
sub_804EF68: @ 0x0804EF68
	push {r4, r5, r6, lr}
	mov ip, r0
	adds r6, r2, #0
	adds r4, r3, #0
	ldr r0, [r0, #0x30]
	movs r3, #1
	rsbs r3, r3, #0
	cmp r0, r3
	beq _0804F008
	ldr r0, [r4, #0x28]
	cmp r0, r3
	beq _0804F008
	mov r0, ip
	adds r0, #0x34
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r1, r1, r2
	adds r0, r4, #0
	adds r0, #0x2c
	movs r5, #0
	ldrsb r5, [r0, r5]
	ldr r0, [sp, #0x10]
	adds r3, r0, r5
	cmp r1, r3
	bgt _0804EFB0
	mov r0, ip
	adds r0, #0x36
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r2
	adds r0, r1, r0
	cmp r0, r3
	bge _0804EFC2
	cmp r1, r3
	blt _0804F008
_0804EFB0:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r5
	adds r0, r3, r0
	cmp r0, r1
	blt _0804F008
_0804EFC2:
	mov r0, ip
	adds r0, #0x35
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r2, r6, r3
	adds r0, r4, #0
	adds r0, #0x2d
	movs r5, #0
	ldrsb r5, [r0, r5]
	ldr r0, [sp, #0x14]
	adds r1, r0, r5
	cmp r2, r1
	bgt _0804EFF2
	mov r0, ip
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	adds r0, r2, r0
	cmp r0, r1
	bge _0804F004
	cmp r2, r1
	blt _0804F008
_0804EFF2:
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r5
	adds r0, r1, r0
	cmp r0, r2
	blt _0804F008
_0804F004:
	movs r0, #1
	b _0804F00A
_0804F008:
	movs r0, #0
_0804F00A:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_804F010
sub_804F010: @ 0x0804F010
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r7, r0, #0
	adds r5, r1, #0
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r4, r3, #0x18
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	bl sub_802C750
	adds r6, r0, #0
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	bl sub_802C6E4
	ldr r0, _0804F0F4 @ =gUnknown_030059E0
	ldr r0, [r0, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0804F0F8
	lsls r0, r4, #3
	adds r1, r7, #0
	adds r1, #0x28
	adds r1, r1, r0
	ldr r1, [r1]
	movs r2, #1
	rsbs r2, r2, #0
	mov ip, r0
	cmp r1, r2
	beq _0804F0F8
	ldr r0, [r6, #0x28]
	cmp r0, r2
	beq _0804F0F8
	mov r0, ip
	adds r3, r7, r0
	adds r0, r3, #0
	adds r0, #0x2c
	movs r4, #0
	ldrsb r4, [r0, r4]
	adds r2, r5, r4
	ldr r0, [sp]
	asrs r0, r0, #8
	adds r1, r6, #0
	adds r1, #0x2c
	movs r5, #0
	ldrsb r5, [r1, r5]
	adds r1, r0, r5
	cmp r2, r1
	bgt _0804F096
	adds r0, r3, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r4
	adds r0, r2, r0
	cmp r0, r1
	bge _0804F0A8
	cmp r2, r1
	blt _0804F0F8
_0804F096:
	adds r0, r6, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r5
	adds r0, r1, r0
	cmp r0, r2
	blt _0804F0F8
_0804F0A8:
	mov r1, ip
	adds r3, r7, r1
	adds r0, r3, #0
	adds r0, #0x2d
	movs r4, #0
	ldrsb r4, [r0, r4]
	mov r0, r8
	adds r2, r0, r4
	ldr r0, [sp, #4]
	asrs r0, r0, #8
	movs r1, #0x2d
	ldrsb r5, [r1, r6]
	adds r1, r0, r5
	cmp r2, r1
	bgt _0804F0DC
	adds r0, r3, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r4
	adds r0, r2, r0
	cmp r0, r1
	bge _0804F0EE
	cmp r2, r1
	blt _0804F0F8
_0804F0DC:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r5
	adds r0, r1, r0
	cmp r0, r2
	blt _0804F0F8
_0804F0EE:
	movs r0, #1
	b _0804F0FA
	.align 2, 0
_0804F0F4: .4byte gUnknown_030059E0
_0804F0F8:
	movs r0, #0
_0804F0FA:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_804F108
sub_804F108: @ 0x0804F108
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r1, _0804F1D8 @ =gCurTask
	ldr r1, [r1]
	ldrh r1, [r1, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r1, r2
	ldr r4, _0804F1DC @ =IWRAM_START + 0x1C
	adds r3, r1, r4
	adds r4, #0x2c
	adds r6, r1, r4
	adds r7, r0, #0
	adds r7, #0xc
	ldrb r0, [r2, #0xc]
	cmp r0, #0
	beq _0804F1CA
	movs r1, #0x20
	ldrsh r0, [r3, r1]
	lsls r0, r0, #8
	ldr r4, [r3, #0x24]
	adds r4, r4, r0
	movs r2, #0x22
	ldrsh r0, [r3, r2]
	lsls r0, r0, #8
	ldr r5, [r3, #0x28]
	adds r5, r5, r0
	ldr r1, [r6, #0x44]
	asrs r1, r1, #8
	ldrh r6, [r6, #0x3a]
	adds r1, r1, r6
	movs r3, #0xc0
	lsls r3, r3, #2
	mov sb, r3
	add r1, sb
	ldr r0, _0804F1E0 @ =0x000003FF
	mov r8, r0
	mov r2, r8
	ands r1, r2
	ldr r6, _0804F1E4 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r2, r0, r6
	movs r0, #0
	ldrsh r2, [r2, r0]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	adds r4, r4, r0
	lsls r0, r1, #1
	adds r2, r0, r6
	movs r0, #0
	ldrsh r2, [r2, r0]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	adds r5, r5, r0
	add r1, sb
	mov r2, r8
	ands r1, r2
	adds r3, r1, r3
	lsls r3, r3, #1
	adds r3, r3, r6
	movs r2, #0
	ldrsh r0, [r3, r2]
	movs r2, #0x26
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r4, r4, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r5, r5, r0
	asrs r4, r4, #8
	ldr r1, _0804F1E8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r4, r4, r0
	subs r4, #6
	strh r4, [r7, #0x16]
	asrs r5, r5, #8
	ldr r0, [r1, #4]
	subs r5, r5, r0
	adds r5, #5
	strh r5, [r7, #0x18]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_0804F1CA:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F1D8: .4byte gCurTask
_0804F1DC: .4byte IWRAM_START + 0x1C
_0804F1E0: .4byte 0x000003FF
_0804F1E4: .4byte gUnknown_08097AA4
_0804F1E8: .4byte gUnknown_03005960

	thumb_func_start sub_804F1EC
sub_804F1EC: @ 0x0804F1EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov r8, r0
	ldr r0, _0804F348 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r0, r1
	ldr r2, _0804F34C @ =IWRAM_START + 0x1C
	adds r4, r0, r2
	ldr r3, _0804F350 @ =IWRAM_START + 0x48
	adds r5, r0, r3
	ldr r6, _0804F354 @ =IWRAM_START + 0x98
	adds r6, r0, r6
	str r6, [sp, #0x10]
	mov r0, r8
	adds r0, #0xc
	str r0, [sp, #0x14]
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	bne _0804F222
	b _0804F462
_0804F222:
	mov r1, r8
	ldrh r0, [r1, #6]
	subs r0, #1
	strh r0, [r1, #6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804F23C
	ldr r0, _0804F358 @ =sub_8050DC8
	str r0, [r1]
	movs r0, #0x87
	lsls r0, r0, #1
	bl m4aSongNumStop
_0804F23C:
	mov r2, r8
	ldr r0, [r2, #8]
	adds r7, r0, #2
	movs r0, #0xe8
	lsls r0, r0, #1
	cmp r7, r0
	ble _0804F24C
	adds r7, r0, #0
_0804F24C:
	mov r3, r8
	str r7, [r3, #8]
	movs r6, #0x20
	ldrsh r0, [r4, r6]
	lsls r0, r0, #8
	ldr r1, [r4, #0x24]
	adds r1, r1, r0
	mov sl, r1
	movs r1, #0x22
	ldrsh r0, [r4, r1]
	lsls r0, r0, #8
	ldr r1, [r4, #0x28]
	adds r1, r1, r0
	mov sb, r1
	ldr r1, [r5, #0x44]
	asrs r1, r1, #8
	ldrh r5, [r5, #0x3a]
	adds r1, r1, r5
	movs r2, #0xc0
	lsls r2, r2, #2
	mov ip, r2
	add r1, ip
	ldr r3, _0804F35C @ =0x000003FF
	adds r4, r3, #0
	ands r1, r4
	ldr r3, _0804F360 @ =gUnknown_08097AA4
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r1, r5
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r6, #0
	ldrsh r2, [r0, r6]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	add sl, r0
	lsls r0, r1, #1
	adds r0, r0, r3
	movs r6, #0
	ldrsh r2, [r0, r6]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	add sb, r0
	add r1, ip
	ands r1, r4
	adds r0, r1, r5
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r0, [r0, r2]
	movs r2, #0x26
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	add r1, sp, #0xc
	add r0, sp, #8
	bl sub_802C668
	ldr r0, [sp, #8]
	movs r1, #0xa0
	lsls r1, r1, #4
	add r1, sl
	movs r4, #2
	str r4, [sp]
	adds r2, r7, #0
	movs r3, #0xa
	bl sub_8085698
	str r0, [sp, #8]
	ldr r0, [sp, #0xc]
	adds r5, r7, r5
	str r4, [sp]
	mov r1, sb
	adds r2, r5, #0
	movs r3, #0xa
	bl sub_8085698
	adds r1, r0, #0
	str r1, [sp, #0xc]
	ldr r0, [sp, #8]
	bl sub_802C6B4
	mov r6, sl
	asrs r4, r6, #8
	mov r0, sb
	asrs r5, r0, #8
	ldr r0, [sp, #0x14]
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_804F010
	cmp r0, #1
	bne _0804F36C
	bl sub_802C798
	ldr r0, _0804F364 @ =sub_804F47C
	mov r1, r8
	str r0, [r1]
	movs r0, #0x78
	strh r0, [r1, #6]
	movs r0, #0xa
	strb r0, [r1, #4]
	ldr r0, _0804F368 @ =0x000002CB
	ldr r2, [sp, #0x14]
	strh r0, [r2, #0xa]
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	b _0804F462
	.align 2, 0
_0804F348: .4byte gCurTask
_0804F34C: .4byte IWRAM_START + 0x1C
_0804F350: .4byte IWRAM_START + 0x48
_0804F354: .4byte IWRAM_START + 0x98
_0804F358: .4byte sub_8050DC8
_0804F35C: .4byte 0x000003FF
_0804F360: .4byte gUnknown_08097AA4
_0804F364: .4byte sub_804F47C
_0804F368: .4byte 0x000002CB
_0804F36C:
	movs r0, #0x87
	lsls r0, r0, #1
	bl m4aSongNumStartOrContinue
	ldr r1, _0804F474 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	ldr r3, [sp, #0x14]
	strh r0, [r3, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r3, #0x18]
	ldr r0, [sp, #0x14]
	bl sub_8004558
	ldr r0, [sp, #0x14]
	bl sub_80051E8
	movs r6, #0
	movs r4, #2
	mov r8, r4
_0804F396:
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #3
	adds r0, r0, r6
	lsls r0, r0, #4
	adds r0, #0x10
	ldr r1, [sp, #0x10]
	adds r5, r1, r0
	ldrb r1, [r5, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0804F458
	ldr r0, [r5, #0x18]
	mov r2, sb
	subs r0, r0, r2
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [r5, #0x14]
	mov r3, sl
	subs r1, r1, r3
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	ldr r4, _0804F478 @ =0xFED30000
	adds r0, r0, r4
	movs r1, #0xd3
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0804F3DC
	ldrb r0, [r5, #6]
	cmp r0, #0
	beq _0804F430
_0804F3DC:
	ldr r4, [r5, #0x1c]
	adds r7, r4, #0
	adds r7, #0xa
	movs r0, #1
	strb r0, [r5, #6]
	str r7, [r5, #0x1c]
	ldr r0, [r5, #0x14]
	mov r1, r8
	str r1, [sp]
	movs r1, #0xb0
	lsls r1, r1, #5
	add r1, sl
	adds r2, r7, #0
	movs r3, #0xa
	bl sub_8085698
	str r0, [r5, #0x14]
	ldr r0, [r5, #0x18]
	adds r4, #0xaa
	mov r2, r8
	str r2, [sp]
	mov r1, sb
	adds r2, r4, #0
	movs r3, #0xa
	bl sub_8085698
	str r0, [r5, #0x18]
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	movs r4, #0x5a
	muls r0, r4, r0
	movs r1, #0x64
	bl Div
	strh r0, [r5, #0xe]
	movs r1, #0x10
	ldrsh r0, [r5, r1]
	muls r0, r4, r0
	movs r1, #0x64
	bl Div
	strh r0, [r5, #0x10]
_0804F430:
	adds r0, r5, #0
	adds r0, #0x20
	ldr r1, [r5, #0x14]
	asrs r1, r1, #8
	ldr r2, [r5, #0x18]
	asrs r2, r2, #8
	mov r4, sl
	asrs r3, r4, #8
	adds r3, #0x10
	str r3, [sp]
	mov r4, sb
	asrs r3, r4, #8
	str r3, [sp, #4]
	ldr r3, [sp, #0x14]
	bl sub_804EF68
	cmp r0, #1
	bne _0804F458
	movs r0, #0
	strb r0, [r5, #4]
_0804F458:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #2
	bls _0804F396
_0804F462:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F474: .4byte gUnknown_03005960
_0804F478: .4byte 0xFED30000

	thumb_func_start sub_804F47C
sub_804F47C: @ 0x0804F47C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	ldrh r0, [r7, #6]
	subs r0, #1
	strh r0, [r7, #6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804F496
	ldr r0, _0804F594 @ =sub_8050DC8
	str r0, [r7]
_0804F496:
	ldr r0, _0804F598 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r0, r1
	ldr r3, _0804F59C @ =IWRAM_START + 0x1C
	adds r2, r0, r3
	ldr r4, _0804F5A0 @ =IWRAM_START + 0x48
	adds r3, r0, r4
	movs r0, #0xc
	adds r0, r0, r7
	mov r8, r0
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0804F588
	movs r1, #0x20
	ldrsh r0, [r2, r1]
	lsls r0, r0, #8
	ldr r1, [r2, #0x24]
	adds r5, r1, r0
	movs r4, #0x22
	ldrsh r0, [r2, r4]
	lsls r0, r0, #8
	ldr r1, [r2, #0x28]
	adds r6, r1, r0
	ldr r1, [r3, #0x44]
	asrs r1, r1, #8
	ldrh r3, [r3, #0x3a]
	adds r1, r1, r3
	movs r0, #0xc0
	lsls r0, r0, #2
	mov sb, r0
	add r1, sb
	ldr r2, _0804F5A4 @ =0x000003FF
	mov ip, r2
	mov r3, ip
	ands r1, r3
	ldr r4, _0804F5A8 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r2, r0, r4
	movs r0, #0
	ldrsh r2, [r2, r0]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	adds r5, r5, r0
	lsls r0, r1, #1
	adds r2, r0, r4
	movs r0, #0
	ldrsh r2, [r2, r0]
	lsls r0, r2, #3
	adds r0, r0, r2
	asrs r0, r0, #6
	adds r6, r6, r0
	add r1, sb
	mov r2, ip
	ands r1, r2
	adds r3, r1, r3
	lsls r3, r3, #1
	adds r3, r3, r4
	movs r2, #0
	ldrsh r0, [r3, r2]
	movs r2, #0x26
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r5, r5, r0
	lsls r1, r1, #1
	adds r1, r1, r4
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	adds r6, r6, r0
	asrs r0, r5, #8
	ldr r2, _0804F5AC @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	mov r4, r8
	strh r0, [r4, #0x16]
	asrs r0, r6, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	mov r0, r8
	bl sub_8004558
	mov r0, r8
	bl sub_80051E8
	ldrh r0, [r7, #6]
	movs r1, #0xa
	bl DivRem
	cmp r0, #0
	bne _0804F588
	ldrh r0, [r7, #6]
	cmp r0, #0x64
	bhi _0804F588
	ldrb r0, [r7, #4]
	cmp r0, #0
	beq _0804F588
	subs r0, #1
	strb r0, [r7, #4]
	ldr r0, _0804F5B0 @ =0x0000010F
	bl m4aSongNumStart
	ldr r1, _0804F5B4 @ =gUnknown_030053F0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0804F588
	subs r0, #1
	strh r0, [r1]
	ldr r1, _0804F5B8 @ =0xFFFFF800
	adds r0, r5, r1
	adds r1, r6, #0
	bl sub_804DEEC
_0804F588:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F594: .4byte sub_8050DC8
_0804F598: .4byte gCurTask
_0804F59C: .4byte IWRAM_START + 0x1C
_0804F5A0: .4byte IWRAM_START + 0x48
_0804F5A4: .4byte 0x000003FF
_0804F5A8: .4byte gUnknown_08097AA4
_0804F5AC: .4byte gUnknown_03005960
_0804F5B0: .4byte 0x0000010F
_0804F5B4: .4byte gUnknown_030053F0
_0804F5B8: .4byte 0xFFFFF800

	thumb_func_start sub_804F5BC
sub_804F5BC: @ 0x0804F5BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	movs r0, #0x94
	lsls r0, r0, #1
	adds r7, r6, r0
	movs r1, #0
	mov r8, r1
	mov sl, r1
	ldr r2, _0804F6A8 @ =gUnknown_03005960
	mov sb, r2
_0804F5D8:
	adds r0, r6, #0
	adds r0, #0xe
	mov r3, r8
	adds r2, r0, r3
	ldrb r0, [r2]
	cmp r0, #0
	beq _0804F68A
	adds r1, r6, #0
	adds r1, #0x1e
	add r1, r8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0804F5FC
	strb r0, [r2]
_0804F5FC:
	mov r0, r8
	lsls r2, r0, #3
	adds r0, r6, #0
	adds r0, #0x70
	adds r4, r0, r2
	ldr r0, [r4]
	asrs r0, r0, #8
	mov r3, sb
	ldr r1, [r3]
	subs r0, r0, r1
	strh r0, [r7, #0x16]
	adds r0, r6, #0
	adds r0, #0x74
	adds r5, r0, r2
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, [r3, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	mov r0, sl
	cmp r0, #0
	bne _0804F632
	movs r1, #1
	mov sl, r1
	adds r0, r7, #0
	bl sub_8004558
_0804F632:
	adds r0, r7, #0
	bl sub_80051E8
	ldr r1, [r4]
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r1, r1, r2
	str r1, [r4]
	mov r3, r8
	lsls r2, r3, #2
	adds r0, r6, #0
	adds r0, #0x2e
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r1, r1, r0
	str r1, [r4]
	adds r0, r6, #0
	adds r0, #0x30
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	bl sub_802C6E4
	movs r1, #0x82
	lsls r1, r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0804F68A
	ldr r1, [r4]
	asrs r1, r1, #8
	ldr r2, [r5]
	asrs r2, r2, #8
	adds r0, r7, #0
	movs r3, #0
	bl sub_804F010
	cmp r0, #1
	bne _0804F68A
	bl sub_802BA8C
_0804F68A:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0xf
	bls _0804F5D8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F6A8: .4byte gUnknown_03005960

	thumb_func_start sub_804F6AC
sub_804F6AC: @ 0x0804F6AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	mov sb, r1
	ldr r0, _0804F740 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804F744 @ =gUnknown_03000654
	adds r1, r1, r0
	mov ip, r1
	lsls r3, r3, #0x16
	lsrs r5, r3, #0x16
	movs r3, #0
	lsls r2, r2, #0x10
	asrs r4, r2, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r5, r2
	lsls r0, r0, #1
	ldr r6, _0804F748 @ =gUnknown_08097AA4
	adds r0, r0, r6
	mov sl, r0
_0804F6DE:
	mov r0, ip
	adds r0, #0xe
	adds r1, r0, r3
	ldrb r0, [r1]
	cmp r0, #0
	bne _0804F750
	movs r0, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x1e
	adds r0, r0, r3
	movs r1, #0xff
	strb r1, [r0]
	lsls r2, r3, #2
	mov r1, ip
	adds r1, #0x2e
	adds r1, r1, r2
	mov r7, sl
	movs r6, #0
	ldrsh r0, [r7, r6]
	muls r0, r4, r0
	asrs r0, r0, #0xe
	strh r0, [r1]
	mov r1, ip
	adds r1, #0x30
	adds r1, r1, r2
	lsls r0, r5, #1
	ldr r7, _0804F748 @ =gUnknown_08097AA4
	adds r0, r0, r7
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r4, r0
	asrs r0, r0, #0xe
	strh r0, [r1]
	lsls r1, r3, #3
	mov r0, ip
	adds r0, #0x70
	adds r0, r0, r1
	mov r6, r8
	str r6, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r0, r1
	mov r7, sb
	str r7, [r0]
	ldr r0, _0804F74C @ =0x00000129
	bl m4aSongNumStart
	b _0804F75A
	.align 2, 0
_0804F740: .4byte gCurTask
_0804F744: .4byte gUnknown_03000654
_0804F748: .4byte gUnknown_08097AA4
_0804F74C: .4byte 0x00000129
_0804F750:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0xf
	bls _0804F6DE
_0804F75A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_804F768
sub_804F768: @ 0x0804F768
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	mov sb, r1
	ldr r0, _0804F7B0 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804F7B4 @ =gUnknown_03000654
	adds r1, r1, r0
	mov ip, r1
	movs r4, #0
	ldr r3, _0804F7B8 @ =gUnknown_03000662
	adds r5, r0, r3
	ldr r7, _0804F7BC @ =gUnknown_08097AA4
	lsls r2, r2, #0x10
	asrs r6, r2, #0x10
_0804F78C:
	adds r0, r5, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804F838
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _0804F7C0
	lsls r1, r4, #2
	adds r0, r1, r4
	lsls r0, r0, #1
	mov r2, ip
	ldrh r2, [r2, #0xc]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r2, r1, #0
	b _0804F7D0
	.align 2, 0
_0804F7B0: .4byte gCurTask
_0804F7B4: .4byte gUnknown_03000654
_0804F7B8: .4byte gUnknown_03000662
_0804F7BC: .4byte gUnknown_08097AA4
_0804F7C0:
	lsls r2, r4, #2
	adds r1, r2, r4
	lsls r1, r1, #1
	mov r3, ip
	ldrh r0, [r3, #0xc]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_0804F7D0:
	ldr r1, _0804F834 @ =0x000003FF
	adds r0, r1, #0
	ands r3, r0
	adds r1, r5, r4
	movs r0, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x1e
	adds r0, r0, r4
	movs r1, #0xff
	strb r1, [r0]
	mov r1, ip
	adds r1, #0x2e
	adds r1, r1, r2
	movs r5, #0x80
	lsls r5, r5, #1
	adds r0, r3, r5
	lsls r0, r0, #1
	adds r0, r0, r7
	movs r5, #0
	ldrsh r0, [r0, r5]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	strh r0, [r1]
	mov r1, ip
	adds r1, #0x30
	adds r1, r1, r2
	lsls r0, r3, #1
	adds r0, r0, r7
	movs r2, #0
	ldrsh r0, [r0, r2]
	muls r0, r6, r0
	asrs r0, r0, #0xe
	strh r0, [r1]
	lsls r1, r4, #3
	mov r0, ip
	adds r0, #0x70
	adds r0, r0, r1
	mov r3, r8
	str r3, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r0, r1
	mov r5, sb
	str r5, [r0]
	movs r0, #0xf3
	bl m4aSongNumStart
	b _0804F842
	.align 2, 0
_0804F834: .4byte 0x000003FF
_0804F838:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xf
	bls _0804F78C
_0804F842:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804F850
sub_804F850: @ 0x0804F850
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	ldr r0, _0804F8C4 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804F8C8 @ =gUnknown_03000654
	adds r4, r0, r1
	mov r1, sp
	movs r5, #0
	movs r3, #0
	movs r2, #0
	ldr r7, _0804F8CC @ =gUnknown_03000662
	adds r0, r0, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804F886
	strb r5, [r1]
	adds r1, #1
	movs r3, #1
_0804F886:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bhi _0804F8AA
	adds r0, r4, #0
	adds r0, #0xe
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804F886
	strb r2, [r1]
	adds r1, #1
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #8
	bne _0804F886
_0804F8AA:
	cmp r3, #8
	bne _0804F8B0
	movs r5, #1
_0804F8B0:
	cmp r5, #0
	beq _0804F9A2
	mov r0, sp
	ldrb r0, [r0, #7]
	cmp r0, #7
	bhi _0804F8D0
	adds r0, r6, #0
	adds r0, #0x3c
	b _0804F8D4
	.align 2, 0
_0804F8C4: .4byte gCurTask
_0804F8C8: .4byte gUnknown_03000654
_0804F8CC: .4byte gUnknown_03000662
_0804F8D0:
	adds r0, r6, #0
	subs r0, #0x3c
_0804F8D4:
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, _0804F9B4 @ =0x000003FF
	ands r6, r0
	movs r5, #0
	adds r0, r4, #0
	adds r0, #0xe
	str r0, [sp, #0x10]
	adds r1, r4, #0
	adds r1, #0x1e
	str r1, [sp, #0x14]
	adds r2, r4, #0
	adds r2, #0x2e
	str r2, [sp, #0x18]
	adds r7, r4, #0
	adds r7, #0x30
	str r7, [sp, #0x1c]
	movs r0, #0x70
	adds r0, r0, r4
	mov sl, r0
	adds r4, #0x74
	mov sb, r4
	movs r1, #0x80
	lsls r1, r1, #1
	mov ip, r1
	adds r0, r6, r1
	lsls r0, r0, #1
	ldr r2, _0804F9B8 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #6
	mov r8, r0
_0804F91A:
	mov r7, sp
	adds r0, r7, r5
	ldrb r2, [r0]
	ldr r0, [sp, #0x10]
	adds r1, r0, r2
	movs r0, #1
	strb r0, [r1]
	ldr r4, [sp, #0x14]
	adds r1, r4, r2
	movs r0, #0xff
	strb r0, [r1]
	lsls r3, r2, #2
	ldr r7, [sp, #0x18]
	adds r4, r7, r3
	mov r0, r8
	strh r0, [r4]
	ldr r1, [sp, #0x1c]
	adds r3, r1, r3
	lsls r0, r6, #1
	ldr r7, _0804F9B8 @ =gUnknown_08097AA4
	adds r0, r0, r7
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #6
	strh r0, [r3]
	lsls r0, r5, #7
	add r0, ip
	lsls r0, r0, #1
	ldr r1, _0804F9B8 @ =gUnknown_08097AA4
	adds r0, r0, r1
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #8
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	lsls r0, r5, #8
	ldr r4, _0804F9B8 @ =gUnknown_08097AA4
	adds r0, r0, r4
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #8
	ldrh r1, [r3]
	adds r0, r0, r1
	strh r0, [r3]
	lsls r2, r2, #3
	mov r4, sl
	adds r0, r4, r2
	ldr r7, [sp, #8]
	str r7, [r0]
	add r2, sb
	ldr r0, [sp, #0xc]
	str r0, [r2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _0804F91A
	movs r0, #0x81
	lsls r0, r0, #1
	bl m4aSongNumStart
_0804F9A2:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F9B4: .4byte 0x000003FF
_0804F9B8: .4byte gUnknown_08097AA4

	thumb_func_start sub_804F9BC
sub_804F9BC: @ 0x0804F9BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov sb, r0
	mov r8, r1
	ldr r0, _0804F9FC @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FA00 @ =gUnknown_03000654
	adds r1, r1, r0
	mov ip, r1
	movs r5, #0
	ldr r3, _0804FA04 @ =gUnknown_03000662
	adds r2, r0, r3
	ldr r6, _0804FA08 @ =gUnknown_08097AA4
_0804F9DC:
	adds r0, r2, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804FA8C
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _0804FA0C
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #1
	mov r7, ip
	ldrh r7, [r7, #0xc]
	adds r0, r0, r7
	b _0804FA18
	.align 2, 0
_0804F9FC: .4byte gCurTask
_0804FA00: .4byte gUnknown_03000654
_0804FA04: .4byte gUnknown_03000662
_0804FA08: .4byte gUnknown_08097AA4
_0804FA0C:
	lsls r1, r5, #1
	adds r1, r1, r5
	lsls r1, r1, #1
	mov r3, ip
	ldrh r0, [r3, #0xc]
	subs r0, r0, r1
_0804FA18:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r7, _0804FA84 @ =0x000003FF
	adds r0, r7, #0
	ands r4, r0
	adds r1, r2, r5
	movs r0, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x1e
	adds r0, r0, r5
	movs r1, #0xff
	strb r1, [r0]
	lsls r3, r5, #2
	mov r2, ip
	adds r2, #0x2e
	adds r2, r2, r3
	adds r1, #1
	adds r0, r4, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r1, #3
	adds r0, r0, r1
	asrs r0, r0, #7
	strh r0, [r2]
	mov r2, ip
	adds r2, #0x30
	adds r2, r2, r3
	lsls r0, r4, #1
	adds r0, r0, r6
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #3
	adds r0, r0, r1
	asrs r0, r0, #7
	strh r0, [r2]
	lsls r1, r5, #3
	mov r0, ip
	adds r0, #0x70
	adds r0, r0, r1
	mov r7, sb
	str r7, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r0, r1
	mov r1, r8
	str r1, [r0]
	ldr r0, _0804FA88 @ =0x00000115
	bl m4aSongNumStart
	b _0804FA96
	.align 2, 0
_0804FA84: .4byte 0x000003FF
_0804FA88: .4byte 0x00000115
_0804FA8C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0804F9DC
_0804FA96:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804FAA4
sub_804FAA4: @ 0x0804FAA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	ldr r0, _0804FB18 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FB1C @ =gUnknown_03000654
	adds r4, r0, r1
	lsls r3, r3, #0x16
	lsrs r3, r3, #0x16
	mov ip, r3
	mov r1, sp
	movs r5, #0
	movs r3, #0
	movs r2, #0
	ldr r6, _0804FB20 @ =gUnknown_03000662
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804FADC
	strb r5, [r1]
	adds r1, #1
	movs r3, #1
_0804FADC:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bhi _0804FB00
	adds r0, r4, #0
	adds r0, #0xe
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804FADC
	strb r2, [r1]
	adds r1, #1
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #8
	bne _0804FADC
_0804FB00:
	cmp r3, #8
	bne _0804FB06
	movs r5, #1
_0804FB06:
	cmp r5, #0
	beq _0804FBFC
	mov r0, sp
	ldrb r0, [r0, #7]
	cmp r0, #7
	bhi _0804FB24
	mov r0, ip
	adds r0, #0x46
	b _0804FB28
	.align 2, 0
_0804FB18: .4byte gCurTask
_0804FB1C: .4byte gUnknown_03000654
_0804FB20: .4byte gUnknown_03000662
_0804FB24:
	mov r0, ip
	subs r0, #0x46
_0804FB28:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	ldr r0, _0804FB88 @ =0x000003FF
	mov r1, ip
	ands r1, r0
	mov ip, r1
	movs r7, #0
	adds r2, r4, #0
	adds r2, #0xe
	str r2, [sp, #0x10]
	adds r3, r4, #0
	adds r3, #0x1e
	str r3, [sp, #0x14]
	adds r6, r4, #0
	adds r6, #0x2e
	str r6, [sp, #0x18]
	adds r1, r4, #0
	adds r1, #0x30
	str r1, [sp, #0x1c]
	movs r2, #0x70
	adds r2, r2, r4
	mov sl, r2
	adds r4, #0x74
	mov sb, r4
	ldr r3, _0804FB8C @ =gUnknown_08097AA4
	mov r8, r3
_0804FB5E:
	mov r6, sp
	adds r0, r6, r7
	ldrb r6, [r0]
	ldr r0, [sp, #0x10]
	adds r1, r0, r6
	movs r0, #1
	strb r0, [r1]
	ldr r2, [sp, #0x14]
	adds r1, r2, r6
	movs r0, #0xff
	strb r0, [r1]
	cmp r7, #3
	bhi _0804FB90
	lsls r0, r7, #4
	add r0, ip
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r5, r0, #4
	b _0804FBA4
	.align 2, 0
_0804FB88: .4byte 0x000003FF
_0804FB8C: .4byte gUnknown_08097AA4
_0804FB90:
	subs r0, r7, #4
	lsls r1, r0, #4
	mov r3, ip
	subs r1, r3, r1
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #0x14
	lsrs r5, r1, #0x10
_0804FBA4:
	ldr r0, _0804FC0C @ =0x000003FF
	ands r4, r0
	lsls r2, r6, #2
	ldr r1, [sp, #0x18]
	adds r3, r1, r2
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0xa0
	lsls r1, r1, #2
	subs r1, r1, r5
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r3]
	ldr r3, [sp, #0x1c]
	adds r2, r3, r2
	lsls r0, r4, #1
	add r0, r8
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2]
	lsls r1, r6, #3
	mov r6, sl
	adds r0, r6, r1
	ldr r2, [sp, #8]
	str r2, [r0]
	add r1, sb
	ldr r3, [sp, #0xc]
	str r3, [r1]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #7
	bls _0804FB5E
	movs r0, #0x81
	lsls r0, r0, #1
	bl m4aSongNumStart
_0804FBFC:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804FC0C: .4byte 0x000003FF

	thumb_func_start sub_804FC10
sub_804FC10: @ 0x0804FC10
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0x10]
	ldr r0, _0804FC88 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FC8C @ =gUnknown_03000654
	adds r1, r1, r0
	mov ip, r1
	movs r6, #0
_0804FC34:
	mov r1, sp
	movs r4, #0
	movs r3, #0
	movs r2, #0
	mov r5, ip
	ldrb r0, [r5, #0xe]
	cmp r0, #0
	bne _0804FC4A
	strb r4, [r1]
	adds r1, #1
	movs r3, #1
_0804FC4A:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xf
	bhi _0804FC6E
	mov r0, ip
	adds r0, #0xe
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0804FC4A
	strb r2, [r1]
	adds r1, #1
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #8
	bne _0804FC4A
_0804FC6E:
	cmp r3, #8
	bne _0804FC74
	movs r4, #1
_0804FC74:
	cmp r4, #0
	beq _0804FD40
	mov r0, sp
	ldrb r0, [r0, #7]
	cmp r0, #7
	bhi _0804FC90
	ldr r0, [sp, #0x10]
	adds r0, #0x28
	b _0804FC94
	.align 2, 0
_0804FC88: .4byte gCurTask
_0804FC8C: .4byte gUnknown_03000654
_0804FC90:
	ldr r0, [sp, #0x10]
	subs r0, #0x28
_0804FC94:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r0, _0804FD50 @ =0x000003FF
	ands r2, r0
	movs r5, #0
	mov r0, ip
	adds r0, #0xe
	str r0, [sp, #0x1c]
	mov r1, ip
	adds r1, #0x1e
	str r1, [sp, #0x20]
	mov r3, ip
	adds r3, #0x2e
	str r3, [sp, #0x14]
	movs r0, #0x30
	add r0, ip
	mov sl, r0
	movs r1, #0x70
	add r1, ip
	mov sb, r1
	movs r3, #0x74
	add r3, ip
	mov r8, r3
	adds r6, #1
	str r6, [sp, #0x18]
	ldr r1, _0804FD54 @ =gUnknown_08097AA4
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r7, [r0, r3]
	lsls r0, r2, #1
	adds r0, r0, r1
	movs r1, #0
	ldrsh r6, [r0, r1]
_0804FCDE:
	mov r3, sp
	adds r0, r3, r5
	ldrb r2, [r0]
	ldr r0, [sp, #0x1c]
	adds r1, r0, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, [sp, #0x20]
	adds r1, r3, r2
	movs r0, #0xff
	strb r0, [r1]
	lsls r0, r5, #6
	lsls r3, r2, #2
	ldr r1, [sp, #0x14]
	adds r4, r1, r3
	movs r1, #0x80
	lsls r1, r1, #3
	subs r1, r1, r0
	adds r0, r7, #0
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r4]
	add r3, sl
	adds r0, r6, #0
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r3]
	lsls r2, r2, #3
	mov r3, sb
	adds r0, r3, r2
	ldr r1, [sp, #8]
	str r1, [r0]
	add r2, r8
	ldr r3, [sp, #0xc]
	str r3, [r2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _0804FCDE
	ldr r5, [sp, #0x18]
	lsls r0, r5, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #1
	bhi _0804FD3A
	b _0804FC34
_0804FD3A:
	movs r0, #0x9c
	bl m4aSongNumStart
_0804FD40:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804FD50: .4byte 0x000003FF
_0804FD54: .4byte gUnknown_08097AA4

	thumb_func_start sub_804FD58
sub_804FD58: @ 0x0804FD58
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov sb, r0
	mov r8, r1
	ldr r0, _0804FDF4 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FDF8 @ =gUnknown_03000654
	adds r1, r1, r0
	mov ip, r1
	movs r5, #0
	ldr r6, _0804FDFC @ =gUnknown_08097AA4
_0804FD74:
	mov r0, ip
	adds r0, #0xe
	adds r1, r0, r5
	ldrb r0, [r1]
	cmp r0, #0
	bne _0804FE0C
	ldr r0, _0804FE00 @ =gUnknown_080D8EE0
	adds r0, r5, r0
	ldrb r2, [r0]
	lsls r2, r2, #5
	ldr r3, _0804FE04 @ =0x0000FFC0
	adds r2, r2, r3
	mov r7, ip
	ldrh r7, [r7, #0xc]
	adds r2, r2, r7
	lsls r2, r2, #0x16
	lsrs r2, r2, #0x16
	movs r0, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x1e
	adds r0, r0, r5
	movs r1, #0xff
	strb r1, [r0]
	lsls r4, r5, #2
	mov r3, ip
	adds r3, #0x2e
	adds r3, r3, r4
	adds r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r7, #0
	ldrsh r1, [r0, r7]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #6
	strh r0, [r3]
	mov r3, ip
	adds r3, #0x30
	adds r3, r3, r4
	lsls r2, r2, #1
	adds r2, r2, r6
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #6
	strh r0, [r3]
	lsls r1, r5, #3
	mov r0, ip
	adds r0, #0x70
	adds r0, r0, r1
	mov r2, sb
	str r2, [r0]
	mov r0, ip
	adds r0, #0x74
	adds r0, r0, r1
	mov r3, r8
	str r3, [r0]
	ldr r0, _0804FE08 @ =0x0000011F
	bl m4aSongNumStart
	b _0804FE16
	.align 2, 0
_0804FDF4: .4byte gCurTask
_0804FDF8: .4byte gUnknown_03000654
_0804FDFC: .4byte gUnknown_08097AA4
_0804FE00: .4byte gUnknown_080D8EE0
_0804FE04: .4byte 0x0000FFC0
_0804FE08: .4byte 0x0000011F
_0804FE0C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0804FD74
_0804FE16:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_804FE24
sub_804FE24: @ 0x0804FE24
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _0804FED4 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FED8 @ =IWRAM_START + 0x1C
	adds r6, r0, r1
	ldrh r0, [r5, #8]
	subs r0, #1
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804FE9A
	ldr r0, _0804FEDC @ =sub_804FEFC
	str r0, [r5]
	movs r0, #0x65
	strh r0, [r5, #8]
	ldr r2, _0804FEE0 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0804FEE4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _0804FEE8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #7
	bl DivRem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0804FEEC @ =gUnknown_080D89AC
	lsls r1, r0, #2
	adds r1, r1, r2
	ldr r1, [r1]
	str r1, [r5, #4]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, _0804FEF0 @ =gUnknown_080D89C8
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrh r0, [r1, #4]
	strh r0, [r4, #0xa]
	ldrb r2, [r1, #6]
	movs r3, #0xa4
	lsls r3, r3, #1
	adds r0, r5, r3
	strb r2, [r0]
	ldrb r0, [r1, #8]
	ldr r2, _0804FEF4 @ =0x0000014D
	adds r1, r5, r2
	strb r0, [r1]
	adds r3, #1
	adds r1, r5, r3
	movs r0, #0xff
	strb r0, [r1]
_0804FE9A:
	adds r4, r5, #0
	adds r4, #0xf0
	ldr r0, [r6, #0x24]
	asrs r0, r0, #8
	ldrh r1, [r6, #0x20]
	adds r0, r0, r1
	ldr r2, _0804FEF8 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r6, #0x28]
	asrs r0, r0, #8
	ldrh r6, [r6, #0x22]
	adds r0, r0, r6
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	adds r0, r5, #0
	bl sub_804F5BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0804FED4: .4byte gCurTask
_0804FED8: .4byte IWRAM_START + 0x1C
_0804FEDC: .4byte sub_804FEFC
_0804FEE0: .4byte gUnknown_030053B8
_0804FEE4: .4byte 0x00196225
_0804FEE8: .4byte 0x3C6EF35F
_0804FEEC: .4byte gUnknown_080D89AC
_0804FEF0: .4byte gUnknown_080D89C8
_0804FEF4: .4byte 0x0000014D
_0804FEF8: .4byte gUnknown_03005960

	thumb_func_start sub_804FEFC
sub_804FEFC: @ 0x0804FEFC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	ldr r0, _0804FF90 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0804FF94 @ =IWRAM_START + 0x1C
	adds r4, r0, r1
	ldrh r0, [r7, #8]
	subs r0, #1
	strh r0, [r7, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0804FF22
	ldr r0, _0804FF98 @ =sub_804FF9C
	str r0, [r7]
	movs r0, #0x8c
	lsls r0, r0, #1
	strh r0, [r7, #8]
_0804FF22:
	ldrh r0, [r7, #8]
	movs r1, #6
	bl DivRem
	cmp r0, #0
	bne _0804FF80
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	movs r1, #0x20
	ldrsh r0, [r4, r1]
	lsls r0, r0, #8
	ldr r6, [r4, #0x24]
	adds r6, r6, r0
	movs r1, #0x22
	ldrsh r0, [r4, r1]
	lsls r0, r0, #8
	ldr r5, [r4, #0x28]
	adds r5, r5, r0
	ldr r0, [sp, #4]
	subs r0, r0, r5
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [sp]
	subs r1, r1, r6
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r7, #0xa]
	ldrh r1, [r7, #8]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r2, r1, #0
	subs r2, r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r3, [r7, #0xa]
	ldr r4, [r7, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl _call_via_r4
_0804FF80:
	adds r0, r7, #0
	bl sub_804F5BC
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804FF90: .4byte gCurTask
_0804FF94: .4byte IWRAM_START + 0x1C
_0804FF98: .4byte sub_804FF9C

	thumb_func_start sub_804FF9C
sub_804FF9C: @ 0x0804FF9C
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _0805001C @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _08050020 @ =IWRAM_START + 0x1C
	adds r5, r0, r1
	ldrh r0, [r4, #8]
	subs r0, #1
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0805000C
	adds r1, r4, #0
	adds r1, #0xf0
	ldr r0, _08050024 @ =0x000002CD
	strh r0, [r1, #0xa]
	movs r0, #0x88
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08050028 @ =0x00000111
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	add r1, sp, #4
	mov r0, sp
	bl sub_802C668
	movs r1, #0x20
	ldrsh r0, [r5, r1]
	lsls r0, r0, #8
	ldr r2, [r5, #0x24]
	adds r2, r2, r0
	movs r1, #0x22
	ldrsh r0, [r5, r1]
	lsls r0, r0, #8
	ldr r1, [r5, #0x28]
	adds r1, r1, r0
	ldr r0, [sp, #4]
	subs r0, r0, r1
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [sp]
	subs r1, r1, r2
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r4, #0xc]
	ldr r0, _0805002C @ =sub_804FE24
	str r0, [r4]
	movs r0, #0x10
	strh r0, [r4, #8]
_0805000C:
	adds r0, r4, #0
	bl sub_804F5BC
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805001C: .4byte gCurTask
_08050020: .4byte IWRAM_START + 0x1C
_08050024: .4byte 0x000002CD
_08050028: .4byte 0x00000111
_0805002C: .4byte sub_804FE24

	thumb_func_start sub_8050030
sub_8050030: @ 0x08050030
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	ldr r0, [r6, #0x34]
	mov ip, r0
	adds r4, r6, #4
	movs r1, #0x3a
	adds r1, r1, r6
	mov r8, r1
	ldrh r3, [r6, #0x2e]
	mov sb, r3
	movs r0, #0
	mov sl, r0
	ldr r5, [r6, #0x30]
	lsrs r2, r5, #0xc
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _08050062
	movs r1, #1
	mov sl, r1
_08050062:
	movs r1, #7
	movs r0, #7
	ands r3, r0
	ldr r7, _080500FC @ =0x00000FFF
	ands r7, r5
	ands r2, r1
	ldrh r0, [r6, #0x2c]
	subs r0, r5, r0
	lsrs r0, r0, #0xc
	ands r0, r1
	cmp r2, r0
	beq _080500B0
	movs r5, #0
	adds r2, r4, #0
	lsls r1, r3, #1
_08050080:
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	mov r3, ip
	adds r3, #4
	mov ip, r3
	subs r3, #4
	ldm r3!, {r0}
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _08050080
	adds r4, r2, #0
_080500B0:
	movs r5, #0
	lsls r7, r7, #0x10
_080500B4:
	lsls r0, r5, #3
	adds r0, r4, r0
	lsrs r1, r7, #0x10
	bl sub_80859F4
	mov r1, r8
	strh r0, [r1]
	movs r3, #2
	add r8, r3
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #4
	bls _080500B4
	ldrh r0, [r6, #0x2c]
	mov r1, sb
	subs r0, r0, r1
	movs r1, #0xfa
	muls r0, r1, r0
	asrs r0, r0, #8
	add r0, sb
	strh r0, [r6, #0x2c]
	ldrh r1, [r6, #0x2c]
	ldr r0, [r6, #0x30]
	adds r0, r0, r1
	ldr r1, _08050100 @ =0x00007FFF
	ands r0, r1
	str r0, [r6, #0x30]
	mov r0, sl
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080500FC: .4byte 0x00000FFF
_08050100: .4byte 0x00007FFF

	thumb_func_start sub_8050104
sub_8050104: @ 0x08050104
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	ldr r0, [r6, #0x1c]
	mov ip, r0
	adds r4, r6, #4
	adds r7, r6, #0
	adds r7, #0x20
	ldrh r1, [r6, #0x16]
	mov sb, r1
	movs r3, #0
	mov sl, r3
	ldr r5, [r6, #0x18]
	lsrs r2, r5, #0xc
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _08050134
	movs r0, #1
	mov sl, r0
_08050134:
	movs r1, #7
	movs r0, #7
	ands r3, r0
	ldr r0, _080501CC @ =0x00000FFF
	mov r8, r0
	ands r0, r5
	mov r8, r0
	ands r2, r1
	ldrh r0, [r6, #0x14]
	subs r0, r5, r0
	lsrs r0, r0, #0xc
	ands r0, r1
	cmp r2, r0
	beq _08050186
	movs r5, #0
	adds r2, r4, #0
	lsls r1, r3, #1
_08050156:
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r4, #2]
	strh r0, [r4]
	adds r4, #2
	mov r3, ip
	adds r3, #4
	mov ip, r3
	subs r3, #4
	ldm r3!, {r0}
	adds r0, r1, r0
	ldrh r0, [r0]
	strh r0, [r4]
	adds r4, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _08050156
	adds r4, r2, #0
_08050186:
	movs r5, #0
_08050188:
	lsls r0, r5, #3
	adds r0, r4, r0
	mov r1, r8
	bl sub_8085968
	strh r0, [r7]
	adds r7, #2
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #1
	bls _08050188
	ldrh r0, [r6, #0x14]
	mov r1, sb
	subs r0, r0, r1
	movs r1, #0xfa
	muls r0, r1, r0
	asrs r0, r0, #8
	add r0, sb
	strh r0, [r6, #0x14]
	ldrh r1, [r6, #0x14]
	ldr r0, [r6, #0x18]
	adds r0, r0, r1
	ldr r1, _080501D0 @ =0x00007FFF
	ands r0, r1
	str r0, [r6, #0x18]
	mov r0, sl
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080501CC: .4byte 0x00000FFF
_080501D0: .4byte 0x00007FFF

	thumb_func_start sub_80501D4
sub_80501D4: @ 0x080501D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov r8, r0
	mov r6, r8
	adds r6, #0x1c
	adds r0, #0x48
	str r0, [sp, #0x10]
	adds r0, #0x4c
	ldrb r0, [r0]
	cmp r0, #0
	bne _08050298
	ldr r2, _08050248 @ =gUnknown_03005424
	ldrh r1, [r2]
	movs r0, #0x20
	orrs r1, r0
	strh r1, [r2]
	mov r3, r8
	ldrb r4, [r3, #0xf]
	cmp r4, #0
	bne _0805026C
	ldr r5, _0805024C @ =0x000007B4
	add r5, r8
	ldr r0, [r5, #4]
	bl sub_8007CF0
	movs r0, #0x2a
	bl sub_8007C10
	str r0, [r5, #4]
	movs r1, #0
	ldr r0, _08050250 @ =0x00000317
	strh r0, [r5, #0xa]
	ldr r0, _08050254 @ =0x000007D4
	add r0, r8
	strb r1, [r0]
	ldr r1, _08050258 @ =0x000007D5
	add r1, r8
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _0805025C @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08050260 @ =0x00007FFF
	ands r0, r1
	strh r0, [r2]
	ldr r0, _08050264 @ =gWinRegs
	strh r4, [r0, #0xa]
	ldr r0, _08050268 @ =gBldRegs
	strh r4, [r0]
	strh r4, [r0, #2]
	movs r0, #1
	mov r4, r8
	strb r0, [r4, #0xf]
	b _0805027A
	.align 2, 0
_08050248: .4byte gUnknown_03005424
_0805024C: .4byte 0x000007B4
_08050250: .4byte 0x00000317
_08050254: .4byte 0x000007D4
_08050258: .4byte 0x000007D5
_0805025C: .4byte gDispCnt
_08050260: .4byte 0x00007FFF
_08050264: .4byte gWinRegs
_08050268: .4byte gBldRegs
_0805026C:
	mov r7, r8
	ldrb r0, [r7, #0xc]
	cmp r0, #0
	beq _0805027A
	ldr r0, _0805028C @ =0x0000FFDF
	ands r1, r0
	strh r1, [r2]
_0805027A:
	mov r0, r8
	ldrh r1, [r0, #0x10]
	ldr r0, _08050290 @ =0x0000FFFE
	ands r0, r1
	mov r1, r8
	strh r0, [r1, #0x10]
	ldr r3, _08050294 @ =gUnknown_03005424
	b _080502A4
	.align 2, 0
_0805028C: .4byte 0x0000FFDF
_08050290: .4byte 0x0000FFFE
_08050294: .4byte gUnknown_03005424
_08050298:
	ldr r0, _080502BC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	strh r1, [r0]
	adds r3, r0, #0
_080502A4:
	mov r2, r8
	ldrh r1, [r2, #0x10]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080502C8
	ldr r2, _080502C0 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _080502C4 @ =0x0000FBFF
	ands r0, r1
	strh r0, [r2]
	b _080502D6
	.align 2, 0
_080502BC: .4byte gUnknown_03005424
_080502C0: .4byte gDispCnt
_080502C4: .4byte 0x0000FBFF
_080502C8:
	ldr r0, _0805057C @ =gDispCnt
	ldrh r1, [r0]
	movs r4, #0x80
	lsls r4, r4, #3
	adds r2, r4, #0
	orrs r1, r2
	strh r1, [r0]
_080502D6:
	ldrh r1, [r3]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _080502EA
	b _0805056C
_080502EA:
	movs r7, #0x20
	ldrsh r0, [r6, r7]
	lsls r0, r0, #8
	ldr r1, [r6, #0x24]
	adds r1, r1, r0
	mov sb, r1
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	lsls r0, r0, #8
	ldr r1, [r6, #0x28]
	adds r1, r1, r0
	mov sl, r1
	ldr r2, [sp, #0x10]
	ldr r0, [r2, #0x44]
	asrs r0, r0, #8
	ldrh r3, [r2, #0x3a]
	adds r7, r0, r3
	ldr r1, _08050580 @ =0x000003FF
	adds r0, r1, #0
	ands r7, r0
	ldr r3, _08050584 @ =gUnknown_08097AA4
	adds r0, r7, r4
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, _08050588 @ =gUnknown_080D89A5
	ldrb r2, [r0]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r0, r7, #1
	adds r0, r0, r3
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	mov r0, sb
	asrs r1, r0, #8
	ldr r2, _0805058C @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	str r1, [sp, #0x14]
	mov r3, sl
	asrs r1, r3, #8
	ldr r0, [r2, #4]
	subs r1, r1, r0
	str r1, [sp, #0x18]
	movs r0, #0x33
	str r0, [sp]
	ldr r1, [sp, #0x14]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	ldr r2, [sp, #0x18]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #8]
	ldr r0, _08050590 @ =gBgAffineRegs
	str r0, [sp, #0xc]
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r4, #0
	movs r3, #0x30
	bl sub_8003EE4
	ldr r0, _08050594 @ =0x000007C4
	add r0, r8
	str r5, [r0]
	movs r4, #0
	ldr r3, [sp, #0x10]
	adds r3, #0x4c
	ldr r0, [sp, #0x10]
	adds r0, #0x3a
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x10]
	adds r1, #0x42
	str r1, [sp, #0x24]
	movs r1, #0x80
	lsls r1, r1, #4
	add r1, r8
	movs r2, #0
_08050392:
	lsls r0, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r1, r0
	str r2, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08050392
	ldr r6, _08050584 @ =gUnknown_08097AA4
	ldr r0, _08050598 @ =gUnknown_03005590
	ldr r0, [r0]
	lsls r0, r0, #1
	ldr r1, _0805059C @ =0x000001FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r2, [r3]
	mov r0, r8
	bl sub_80508C4
	mov r2, r8
	ldrh r1, [r2, #0x10]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080503FA
	ldr r5, _080505A0 @ =0x000007B4
	add r5, r8
	mov r3, sp
	ldrh r3, [r3, #0x14]
	strh r3, [r5, #0x16]
	mov r4, sp
	ldrh r4, [r4, #0x18]
	strh r4, [r5, #0x18]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_080503FA:
	adds r0, r7, #0
	adds r0, #0x8c
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, _080505A4 @ =0xFFFFFF00
	adds r1, r7, r0
	ldr r0, _08050580 @ =0x000003FF
	ands r1, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r3, #0
	ldrsh r0, [r0, r3]
	asrs r0, r0, #2
	add sb, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	movs r4, #0
	ldrsh r0, [r1, r4]
	asrs r0, r0, #2
	add sl, r0
	movs r4, #0
_0805042A:
	lsls r0, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #2
	movs r1, #0xfe
	lsls r1, r1, #3
	adds r0, r0, r1
	mov r2, r8
	adds r5, r2, r0
	adds r6, r5, #0
	adds r6, #0x38
	adds r4, #1
	lsls r0, r4, #1
	ldr r3, [sp, #0x20]
	adds r0, r3, r0
	ldrh r0, [r0]
	adds r7, r7, r0
	ldr r0, _08050580 @ =0x000003FF
	ands r7, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	lsls r0, r0, #1
	ldr r2, _08050584 @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r2, _08050588 @ =gUnknown_080D89A5
	adds r0, r4, r2
	ldrb r2, [r0]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r3, r7, #1
	str r3, [sp, #0x1c]
	ldr r1, _08050584 @ =gUnknown_08097AA4
	adds r0, r3, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	mov r0, sb
	asrs r1, r0, #8
	ldr r2, _0805058C @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	mov r3, sl
	asrs r0, r3, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	ldr r0, _080505A8 @ =0x00002060
	orrs r2, r0
	ldr r1, _080505AC @ =gUnknown_030054B8
	ldrb r0, [r1]
	adds r1, r0, #1
	ldr r3, _080505AC @ =gUnknown_030054B8
	strb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	orrs r2, r0
	str r2, [r5, #0x10]
	strh r7, [r5, #0x38]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	adds r1, r0, #0
	strh r1, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #2
	bls _0805042A
	ldr r1, _08050584 @ =gUnknown_08097AA4
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r7, r4
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	ldr r3, _08050588 @ =gUnknown_080D89A5
	ldrb r2, [r3, #4]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	ldr r0, [sp, #0x1c]
	adds r1, r0, r1
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	ldr r5, _080505B0 @ =0x000008BC
	add r5, r8
	ldr r6, _080505B4 @ =0x000008F4
	add r6, r8
	ldr r0, [sp, #0x24]
	ldrh r3, [r0]
	adds r3, r3, r7
	ldr r1, [sp, #0x10]
	ldrh r1, [r1, #0x38]
	adds r3, r3, r1
	ldr r2, _08050580 @ =0x000003FF
	ands r3, r2
	mov r7, sb
	asrs r0, r7, #8
	ldr r2, _0805058C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	mov r7, sl
	asrs r0, r7, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	ldr r0, _080505A8 @ =0x00002060
	orrs r2, r0
	ldr r1, _080505AC @ =gUnknown_030054B8
	ldrb r0, [r1]
	adds r1, r0, #1
	ldr r7, _080505AC @ =gUnknown_030054B8
	strb r1, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	orrs r2, r0
	str r2, [r5, #0x10]
	strh r3, [r6]
	strh r4, [r6, #2]
	strh r4, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
_0805056C:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805057C: .4byte gDispCnt
_08050580: .4byte 0x000003FF
_08050584: .4byte gUnknown_08097AA4
_08050588: .4byte gUnknown_080D89A5
_0805058C: .4byte gUnknown_03005960
_08050590: .4byte gBgAffineRegs
_08050594: .4byte 0x000007C4
_08050598: .4byte gUnknown_03005590
_0805059C: .4byte 0x000001FF
_080505A0: .4byte 0x000007B4
_080505A4: .4byte 0xFFFFFF00
_080505A8: .4byte 0x00002060
_080505AC: .4byte gUnknown_030054B8
_080505B0: .4byte 0x000008BC
_080505B4: .4byte 0x000008F4

	thumb_func_start sub_80505B8
sub_80505B8: @ 0x080505B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	mov r8, r0
	mov r6, r8
	adds r6, #0x1c
	adds r0, #0x48
	str r0, [sp, #0x10]
	adds r0, #0x4c
	ldrb r4, [r0]
	cmp r4, #0
	bne _08050606
	movs r5, #0xf7
	lsls r5, r5, #3
	add r5, r8
	ldr r0, [r5]
	cmp r0, #0
	beq _080505FC
	bl sub_8007CF0
	str r4, [r5]
	ldr r2, _08050884 @ =gDispCnt
	ldrh r1, [r2]
	ldr r0, _08050888 @ =0x00007FFF
	ands r0, r1
	strh r0, [r2]
	ldr r0, _0805088C @ =gWinRegs
	strh r4, [r0, #0xa]
	ldr r0, _08050890 @ =gBldRegs
	strh r4, [r0]
	strh r4, [r0, #2]
_080505FC:
	mov r2, r8
	ldrh r1, [r2, #0x10]
	ldr r0, _08050894 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2, #0x10]
_08050606:
	movs r3, #0x20
	ldrsh r0, [r6, r3]
	lsls r0, r0, #8
	ldr r1, [r6, #0x24]
	adds r1, r1, r0
	mov sb, r1
	movs r4, #0x22
	ldrsh r0, [r6, r4]
	lsls r0, r0, #8
	ldr r1, [r6, #0x28]
	adds r1, r1, r0
	mov sl, r1
	ldr r7, [sp, #0x10]
	ldr r0, [r7, #0x44]
	asrs r0, r0, #8
	ldrh r1, [r7, #0x3a]
	adds r7, r0, r1
	ldr r2, _08050898 @ =0x000003FF
	adds r0, r2, #0
	ands r7, r0
	ldr r4, _0805089C @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r7, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _080508A0 @ =gUnknown_080D89A5
	ldrb r3, [r0]
	adds r0, r1, #0
	muls r0, r3, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r0, r7, #1
	adds r0, r0, r4
	movs r4, #0
	ldrsh r0, [r0, r4]
	muls r0, r3, r0
	asrs r0, r0, #6
	add sl, r0
	mov r0, sb
	asrs r1, r0, #8
	ldr r3, _080508A4 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	str r1, [sp, #0x14]
	mov r4, sl
	asrs r1, r4, #8
	ldr r0, [r3, #4]
	subs r6, r1, r0
	movs r0, #0x33
	str r0, [sp]
	ldr r1, [sp, #0x14]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #8]
	ldr r0, _080508A8 @ =gBgAffineRegs
	str r0, [sp, #0xc]
	adds r0, r7, #0
	adds r1, r2, #0
	movs r3, #0x30
	bl sub_8003EE4
	ldr r1, _080508AC @ =0x000007C4
	add r1, r8
	movs r0, #0
	str r0, [r1]
	movs r4, #0
	ldr r3, [sp, #0x10]
	adds r3, #0x4c
	ldr r2, [sp, #0x10]
	adds r2, #0x3a
	str r2, [sp, #0x1c]
	ldr r0, [sp, #0x10]
	adds r0, #0x42
	str r0, [sp, #0x20]
	movs r1, #0x80
	lsls r1, r1, #4
	add r1, r8
	movs r2, #0
_080506AE:
	lsls r0, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r1, r0
	str r2, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _080506AE
	ldrb r2, [r3]
	mov r0, r8
	movs r1, #0xff
	bl sub_80508C4
	mov r2, r8
	ldrh r1, [r2, #0x10]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080506FA
	ldr r5, _080508B0 @ =0x000007B4
	add r5, r8
	mov r3, sp
	ldrh r3, [r3, #0x14]
	strh r3, [r5, #0x16]
	strh r6, [r5, #0x18]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_080506FA:
	adds r0, r7, #0
	adds r0, #0x8c
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r2, _0805089C @ =gUnknown_08097AA4
	ldr r4, _080508B4 @ =0xFFFFFF00
	adds r1, r7, r4
	ldr r0, _08050898 @ =0x000003FF
	ands r1, r0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r1, r3
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	asrs r0, r0, #2
	add sb, r0
	lsls r1, r1, #1
	adds r1, r1, r2
	movs r4, #0
	ldrsh r0, [r1, r4]
	asrs r0, r0, #2
	add sl, r0
	movs r4, #0
_0805072C:
	lsls r0, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #2
	movs r1, #0xfe
	lsls r1, r1, #3
	adds r0, r0, r1
	mov r2, r8
	adds r5, r2, r0
	adds r6, r5, #0
	adds r6, #0x38
	adds r4, #1
	lsls r0, r4, #1
	ldr r3, [sp, #0x1c]
	adds r0, r3, r0
	ldrh r0, [r0]
	adds r7, r7, r0
	ldr r0, _08050898 @ =0x000003FF
	ands r7, r0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	lsls r0, r0, #1
	ldr r2, _0805089C @ =gUnknown_08097AA4
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r2, _080508A0 @ =gUnknown_080D89A5
	adds r0, r4, r2
	ldrb r2, [r0]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	lsls r3, r7, #1
	str r3, [sp, #0x18]
	ldr r1, _0805089C @ =gUnknown_08097AA4
	adds r0, r3, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	mov r0, sb
	asrs r1, r0, #8
	ldr r2, _080508A4 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	mov r3, sl
	asrs r0, r3, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	movs r0, #0x83
	lsls r0, r0, #5
	orrs r2, r0
	ldr r1, _080508B8 @ =gUnknown_030054B8
	ldrb r0, [r1]
	adds r1, r0, #1
	ldr r3, _080508B8 @ =gUnknown_030054B8
	strb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	orrs r2, r0
	str r2, [r5, #0x10]
	strh r7, [r5, #0x38]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #2]
	adds r1, r0, #0
	strh r1, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #2
	bls _0805072C
	ldr r1, _0805089C @ =gUnknown_08097AA4
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r7, r4
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	ldr r3, _080508A0 @ =gUnknown_080D89A5
	ldrb r2, [r3, #4]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sb, r0
	ldr r0, [sp, #0x18]
	adds r1, r0, r1
	movs r3, #0
	ldrsh r0, [r1, r3]
	muls r0, r2, r0
	asrs r0, r0, #6
	add sl, r0
	ldr r5, _080508BC @ =0x000008BC
	add r5, r8
	ldr r6, _080508C0 @ =0x000008F4
	add r6, r8
	ldr r0, [sp, #0x20]
	ldrh r3, [r0]
	adds r3, r3, r7
	ldr r1, [sp, #0x10]
	ldrh r1, [r1, #0x38]
	adds r3, r3, r1
	ldr r2, _08050898 @ =0x000003FF
	ands r3, r2
	mov r7, sb
	asrs r0, r7, #8
	ldr r2, _080508A4 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	mov r7, sl
	asrs r0, r7, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r2, [r5, #0x10]
	movs r0, #0x83
	lsls r0, r0, #5
	orrs r2, r0
	ldr r1, _080508B8 @ =gUnknown_030054B8
	ldrb r0, [r1]
	adds r1, r0, #1
	ldr r7, _080508B8 @ =gUnknown_030054B8
	strb r1, [r7]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	orrs r2, r0
	str r2, [r5, #0x10]
	strh r3, [r6]
	strh r4, [r6, #2]
	strh r4, [r6, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r6, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r6, #8]
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08050884: .4byte gDispCnt
_08050888: .4byte 0x00007FFF
_0805088C: .4byte gWinRegs
_08050890: .4byte gBldRegs
_08050894: .4byte 0x0000FFFE
_08050898: .4byte 0x000003FF
_0805089C: .4byte gUnknown_08097AA4
_080508A0: .4byte gUnknown_080D89A5
_080508A4: .4byte gUnknown_03005960
_080508A8: .4byte gBgAffineRegs
_080508AC: .4byte 0x000007C4
_080508B0: .4byte 0x000007B4
_080508B4: .4byte 0xFFFFFF00
_080508B8: .4byte gUnknown_030054B8
_080508BC: .4byte 0x000008BC
_080508C0: .4byte 0x000008F4

	thumb_func_start sub_80508C4
sub_80508C4: @ 0x080508C4
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r2, r2, #0x18
	cmp r2, #0
	beq _08050938
	ldr r2, _08050940 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #8
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08050944 @ =gWinRegs
	ldr r0, _08050948 @ =0x00003735
	strh r0, [r1, #0xa]
	ldr r3, _0805094C @ =gBldRegs
	ldr r0, _08050950 @ =0x00001346
	strh r0, [r3]
	lsls r1, r4, #1
	adds r1, r1, r4
	asrs r1, r1, #8
	adds r1, #0xa
	movs r2, #0xf
	ands r1, r2
	lsls r0, r4, #2
	adds r0, r0, r4
	asrs r0, r0, #8
	adds r0, #8
	ands r0, r2
	lsls r1, r1, #8
	orrs r1, r0
	strh r1, [r3, #2]
	strh r1, [r3, #4]
	ldr r0, _08050954 @ =0x000007B4
	adds r2, r5, r0
	ldr r0, [r2, #0x10]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r2, #0x10]
	movs r3, #0
	movs r4, #0xfe
	lsls r4, r4, #3
_0805091E:
	lsls r0, r3, #4
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r4
	adds r2, r5, r0
	ldr r0, [r2, #0x10]
	orrs r0, r1
	str r0, [r2, #0x10]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #3
	bls _0805091E
_08050938:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08050940: .4byte gDispCnt
_08050944: .4byte gWinRegs
_08050948: .4byte 0x00003735
_0805094C: .4byte gBldRegs
_08050950: .4byte 0x00001346
_08050954: .4byte 0x000007B4

	thumb_func_start sub_8050958
sub_8050958: @ 0x08050958
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r1, r0, #0
	ldrb r0, [r1, #0xd]
	cmp r0, #0
	beq _08050A5C
	subs r0, #1
	strb r0, [r1, #0xd]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080509B0
	movs r5, #0
	ldr r0, _080509A0 @ =gFlags
	mov sl, r0
	ldr r6, _080509A4 @ =gObjPalette
	ldr r4, _080509A8 @ =gUnknown_080D8F10
	ldr r3, _080509AC @ =gBgPalette
_08050980:
	adds r1, r5, #0
	adds r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r6
	lsls r2, r5, #1
	adds r0, r2, r4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r2, r2, r3
	strh r0, [r2]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _08050980
	b _08050A4C
	.align 2, 0
_080509A0: .4byte gFlags
_080509A4: .4byte gObjPalette
_080509A8: .4byte gUnknown_080D8F10
_080509AC: .4byte gBgPalette
_080509B0:
	ldr r0, _080509F8 @ =gUnknown_03005590
	ldr r0, [r0]
	lsrs r6, r0, #1
	movs r0, #0xf
	ands r6, r0
	ldrb r0, [r1, #0xc]
	cmp r0, #3
	bhi _08050A0C
	movs r5, #0
	ldr r1, _080509FC @ =gFlags
	mov sl, r1
	ldr r0, _08050A00 @ =gObjPalette
	mov ip, r0
	movs r7, #0xf
	ldr r4, _08050A04 @ =gUnknown_080D8EF0
	ldr r3, _08050A08 @ =gBgPalette
_080509D0:
	adds r1, r5, r6
	ands r1, r7
	adds r2, r1, #0
	adds r2, #0x80
	lsls r2, r2, #1
	add r2, ip
	lsls r0, r5, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsrs r0, r0, #5
	strh r0, [r2]
	lsls r1, r1, #1
	adds r1, r1, r3
	strh r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _080509D0
	b _08050A4C
	.align 2, 0
_080509F8: .4byte gUnknown_03005590
_080509FC: .4byte gFlags
_08050A00: .4byte gObjPalette
_08050A04: .4byte gUnknown_080D8EF0
_08050A08: .4byte gBgPalette
_08050A0C:
	movs r5, #0
	ldr r1, _08050A6C @ =gFlags
	mov sl, r1
	ldr r0, _08050A70 @ =gObjPalette
	mov sb, r0
	ldr r1, _08050A74 @ =gUnknown_080D8EF0
	mov r8, r1
	ldr r0, _08050A78 @ =gBgPalette
	mov ip, r0
	movs r7, #0xf
_08050A20:
	adds r3, r5, r6
	ands r3, r7
	adds r4, r3, #0
	adds r4, #0x80
	lsls r4, r4, #1
	add r4, sb
	lsls r0, r5, #1
	add r0, r8
	ldrh r1, [r0]
	lsls r2, r1, #5
	lsrs r0, r1, #5
	orrs r2, r0
	orrs r2, r1
	strh r2, [r4]
	lsls r3, r3, #1
	add r3, ip
	strh r2, [r3]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _08050A20
_08050A4C:
	mov r1, sl
	ldr r0, [r1]
	movs r1, #2
	orrs r0, r1
	movs r1, #1
	orrs r0, r1
	mov r1, sl
	str r0, [r1]
_08050A5C:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08050A6C: .4byte gFlags
_08050A70: .4byte gObjPalette
_08050A74: .4byte gUnknown_080D8EF0
_08050A78: .4byte gBgPalette

	thumb_func_start sub_8050A7C
sub_8050A7C: @ 0x08050A7C
	push {r4, r5, r6, r7, lr}
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r5, r0
	ldr r1, _08050B1C @ =gIntrTable+8
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08050A94
	bl sub_8007CF0
_08050A94:
	movs r4, #0
	ldr r0, _08050B20 @ =IWRAM_START + 0xCC
	adds r7, r5, r0
	ldr r1, _08050B24 @ =gIntrMainBuf + 4
	adds r5, r5, r1
_08050A9E:
	lsls r0, r4, #4
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r5, r0
	ldr r0, [r0]
	bl sub_8007CF0
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _08050A9E
	movs r4, #0
_08050AB8:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #3
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, r7, r0
	ldr r0, [r0]
	bl sub_8007CF0
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _08050AB8
	movs r1, #0xa6
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xad
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xc5
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xf0
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	movs r1, #0xe9
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _08050B28 @ =gUnknown_03005B4C
	movs r0, #0
	str r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08050B1C: .4byte gIntrTable + 8
_08050B20: .4byte IWRAM_START + 0xCC
_08050B24: .4byte gIntrMainBuf + 4
_08050B28: .4byte gUnknown_03005B4C

	thumb_func_start sub_8050B2C
sub_8050B2C: @ 0x08050B2C
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r0, _08050B40 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	bne _08050B44
	str r0, [r6]
	str r0, [r7]
	b _08050BA2
	.align 2, 0
_08050B40: .4byte gUnknown_03005B4C
_08050B44:
	ldrh r1, [r0, #6]
	ldr r0, _08050BA8 @ =IWRAM_START + 0x1C
	adds r1, r1, r0
	movs r2, #0x20
	ldrsh r0, [r1, r2]
	lsls r0, r0, #8
	ldr r3, [r1, #0x24]
	adds r3, r3, r0
	movs r5, #0x22
	ldrsh r0, [r1, r5]
	lsls r0, r0, #8
	ldr r2, [r1, #0x28]
	adds r2, r2, r0
	ldr r4, _08050BAC @ =gUnknown_08097AA4
	movs r1, #0x80
	lsls r1, r1, #4
	adds r0, r4, r1
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #3
	adds r0, r0, r1
	asrs r0, r0, #6
	adds r3, r3, r0
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r5, #0
	ldrsh r1, [r0, r5]
	lsls r0, r1, #3
	adds r0, r0, r1
	asrs r0, r0, #6
	adds r2, r2, r0
	movs r5, #0x26
	adds r0, r1, #0
	muls r0, r5, r0
	asrs r0, r0, #6
	adds r3, r3, r0
	movs r0, #0x80
	lsls r0, r0, #3
	adds r4, r4, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	muls r0, r5, r0
	asrs r0, r0, #6
	adds r2, r2, r0
	str r3, [r6]
	str r2, [r7]
_08050BA2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08050BA8: .4byte IWRAM_START + 0x1C
_08050BAC: .4byte gUnknown_08097AA4

	thumb_func_start sub_8050BB0
sub_8050BB0: @ 0x08050BB0
	push {lr}
	movs r2, #0
	ldr r0, _08050BD4 @ =gUnknown_03005B4C
	ldr r0, [r0]
	cmp r0, #0
	beq _08050BCC
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldrb r0, [r0, #0xc]
	cmp r0, #0
	bne _08050BCC
	movs r2, #1
_08050BCC:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_08050BD4: .4byte gUnknown_03005B4C

	thumb_func_start sub_8050BD8
sub_8050BD8: @ 0x08050BD8
	push {lr}
	bl sub_8050104
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8050BE4
sub_8050BE4: @ 0x08050BE4
	push {lr}
	bl sub_8050104
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8050BF0
sub_8050BF0: @ 0x08050BF0
	push {lr}
	bl sub_8050104
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8050BFC
sub_8050BFC: @ 0x08050BFC
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8050030
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08050C20
	ldr r0, [r4, #0x30]
	ldr r1, _08050C44 @ =0x00000FFF
	ands r0, r1
	str r0, [r4, #0x30]
	ldr r1, _08050C48 @ =gUnknown_080D8D6C
	ldr r0, [r1, #0x24]
	str r0, [r4]
	ldr r0, [r1, #0x28]
	str r0, [r4, #0x34]
	ldrh r0, [r1, #0x2c]
	strh r0, [r4, #0x2e]
_08050C20:
	ldr r1, [r4, #0x30]
	ldr r0, _08050C4C @ =0x00001FFF
	cmp r1, r0
	bls _08050C3C
	movs r0, #0x88
	lsls r0, r0, #1
	bl m4aSongNumStartOrContinue
	ldr r1, [r4, #0x48]
	subs r1, #0x57
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x44]
	adds r0, r0, r1
	str r0, [r4, #0x44]
_08050C3C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08050C44: .4byte 0x00000FFF
_08050C48: .4byte gUnknown_080D8D6C
_08050C4C: .4byte 0x00001FFF

	thumb_func_start sub_8050C50
sub_8050C50: @ 0x08050C50
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _08050CA8 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _08050CAC @ =IWRAM_START + 0x1C
	adds r5, r0, r1
	adds r0, r4, #0
	bl sub_8050030
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x44]
	adds r1, #0x57
	str r1, [r4, #0x48]
	cmp r1, #0
	bne _08050CA2
	ldr r2, _08050CB0 @ =0x00000FFF
	str r1, [r4, #0x30]
	ldr r1, _08050CB4 @ =gUnknown_080D8D6C
	ldr r0, [r1]
	str r0, [r4]
	ldr r0, [r1, #4]
	str r0, [r4, #0x34]
	ldrh r0, [r1, #8]
	strh r0, [r4, #0x2e]
	ldr r0, [r5, #0x18]
	ands r0, r2
	str r0, [r5, #0x18]
	ldr r1, _08050CB8 @ =gUnknown_080D8DCC
	ldr r0, [r1]
	str r0, [r5]
	ldr r0, [r1, #4]
	str r0, [r5, #0x1c]
	ldrh r0, [r1, #8]
	strh r0, [r5, #0x16]
	movs r0, #0x88
	lsls r0, r0, #1
	bl m4aSongNumStop
_08050CA2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08050CA8: .4byte gCurTask
_08050CAC: .4byte IWRAM_START + 0x1C
_08050CB0: .4byte 0x00000FFF
_08050CB4: .4byte gUnknown_080D8D6C
_08050CB8: .4byte gUnknown_080D8DCC

	thumb_func_start sub_8050CBC
sub_8050CBC: @ 0x08050CBC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, _08050CE8 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _08050CEC @ =IWRAM_START + 0x1C
	adds r5, r0, r1
	ldr r1, _08050CF0 @ =gUnknown_03000558
	adds r6, r0, r1
	adds r0, r4, #0
	bl sub_8050030
	ldr r1, [r4, #0x30]
	lsrs r0, r1, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08050CF4
	ldr r0, [r5, #0x24]
	subs r0, #0xc0
	str r0, [r5, #0x24]
	b _08050D12
	.align 2, 0
_08050CE8: .4byte gCurTask
_08050CEC: .4byte IWRAM_START + 0x1C
_08050CF0: .4byte gUnknown_03000558
_08050CF4:
	cmp r0, #3
	bne _08050D12
	ldr r0, _08050D18 @ =0x00000FFF
	ands r1, r0
	str r1, [r4, #0x30]
	ldr r0, _08050D1C @ =gUnknown_080D8D6C
	ldr r1, [r0, #0x48]
	str r1, [r4]
	ldr r1, [r0, #0x4c]
	str r1, [r4, #0x34]
	adds r0, #0x50
	ldrh r0, [r0]
	strh r0, [r4, #0x2e]
	ldr r0, _08050D20 @ =sub_804F108
	str r0, [r6]
_08050D12:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08050D18: .4byte 0x00000FFF
_08050D1C: .4byte gUnknown_080D8D6C
_08050D20: .4byte sub_804F108

	thumb_func_start sub_8050D24
sub_8050D24: @ 0x08050D24
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, _08050D80 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _08050D84 @ =IWRAM_START + 0x1C
	adds r5, r0, r1
	ldr r1, _08050D88 @ =gUnknown_03000558
	adds r6, r0, r1
	adds r0, r4, #0
	bl sub_8050030
	ldr r1, [r4, #0x30]
	lsrs r0, r1, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _08050D78
	ldr r2, _08050D8C @ =0x00000FFF
	ands r1, r2
	str r1, [r4, #0x30]
	ldr r0, _08050D90 @ =gUnknown_080D8D6C
	ldr r1, [r0, #0x54]
	str r1, [r4]
	ldr r1, [r0, #0x58]
	str r1, [r4, #0x34]
	adds r0, #0x5c
	ldrh r0, [r0]
	strh r0, [r4, #0x2e]
	ldr r0, [r5, #0x18]
	ands r0, r2
	str r0, [r5, #0x18]
	ldr r0, _08050D94 @ =gUnknown_080D8DCC
	ldr r1, [r0, #0x3c]
	str r1, [r5]
	ldr r1, [r0, #0x40]
	str r1, [r5, #0x1c]
	adds r0, #0x44
	ldrh r0, [r0]
	strh r0, [r5, #0x16]
	ldr r0, _08050D98 @ =sub_8050DC8
	str r0, [r6]
_08050D78:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08050D80: .4byte gCurTask
_08050D84: .4byte IWRAM_START + 0x1C
_08050D88: .4byte gUnknown_03000558
_08050D8C: .4byte 0x00000FFF
_08050D90: .4byte gUnknown_080D8D6C
_08050D94: .4byte gUnknown_080D8DCC
_08050D98: .4byte sub_8050DC8

	thumb_func_start sub_8050D9C
sub_8050D9C: @ 0x08050D9C
	push {lr}
	ldr r1, _08050DBC @ =gCurTask
	ldr r1, [r1]
	ldrh r2, [r1, #6]
	ldr r1, _08050DC0 @ =IWRAM_START + 0x1C
	adds r2, r2, r1
	ldr r1, [r2, #0x24]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r1, r3
	str r1, [r2, #0x24]
	bl sub_8050030
	pop {r0}
	bx r0
	.align 2, 0
_08050DBC: .4byte gCurTask
_08050DC0: .4byte IWRAM_START + 0x1C

	thumb_func_start sub_8050DC4
sub_8050DC4: @ 0x08050DC4
	bx lr
	.align 2, 0

	thumb_func_start sub_8050DC8
sub_8050DC8: @ 0x08050DC8
	adds r3, r0, #0
	movs r0, #0x3c
	str r0, [r3, #8]
	movs r1, #0
	movs r0, #0xb4
	strh r0, [r3, #6]
	adds r2, r3, #0
	adds r2, #0xc
	ldr r0, _08050DF4 @ =0x000002CE
	strh r0, [r2, #0xa]
	adds r0, r3, #0
	adds r0, #0x2c
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x2d
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r2, #0x10]
	bx lr
	.align 2, 0
_08050DF4: .4byte 0x000002CE

	thumb_func_start sub_8050DF8
sub_8050DF8: @ 0x08050DF8
	push {lr}
	bl sub_804F5BC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8050E04
sub_8050E04: @ 0x08050E04
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, _08050EC0 @ =sub_805102C
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r1, _08050EC4 @ =sub_80511EC
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r6, r4
	ldr r0, [r5, #0xc]
	str r0, [r4, #0x30]
	ldr r0, [r5, #0x10]
	str r0, [r4, #0x34]
	ldr r3, _08050EC8 @ =gUnknown_08097AA4
	ldrh r0, [r5, #6]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r2, #8
	ldrsh r0, [r5, r2]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	movs r1, #0
	mov r8, r1
	movs r2, #0
	strh r0, [r4, #0x38]
	ldrh r0, [r5, #6]
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r3, #8
	ldrsh r0, [r5, r3]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r4, #0x3a]
	ldrh r0, [r5]
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r4, #4]
	ldrh r0, [r5, #2]
	strh r0, [r4, #0xa]
	ldrb r1, [r5, #4]
	ldr r3, _08050ECC @ =IWRAM_START + 0x20
	adds r0, r6, r3
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r4, #0x1a]
	ldr r2, [sp, #4]
	strh r2, [r4, #8]
	strh r2, [r4, #0x16]
	strh r2, [r4, #0x18]
	strh r2, [r4, #0x14]
	strh r2, [r4, #0x1c]
	ldr r0, _08050ED0 @ =IWRAM_START + 0x21
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08050ED4 @ =IWRAM_START + 0x22
	adds r1, r6, r2
	movs r0, #0x10
	strb r0, [r1]
	adds r3, #5
	adds r6, r6, r3
	mov r0, r8
	strb r0, [r6]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r4, #0x10]
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08050EC0: .4byte sub_805102C
_08050EC4: .4byte sub_80511EC
_08050EC8: .4byte gUnknown_08097AA4
_08050ECC: .4byte IWRAM_START + 0x20
_08050ED0: .4byte IWRAM_START + 0x21
_08050ED4: .4byte IWRAM_START + 0x22

	thumb_func_start sub_8050ED8
sub_8050ED8: @ 0x08050ED8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	ldr r0, _0805100C @ =sub_80510B0
	movs r2, #0x80
	lsls r2, r2, #7
	ldr r1, _08051010 @ =sub_8051200
	str r1, [sp]
	movs r1, #0x68
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	mov r0, r8
	cmp r0, #4
	bls _08050F14
	movs r2, #4
	mov r8, r2
_08050F14:
	ldr r3, _08051014 @ =IWRAM_START + 0x60
	adds r0, r1, r3
	mov r2, r8
	strb r2, [r0]
	movs r6, #0
	subs r3, #0x40
	adds r3, r3, r1
	mov sl, r3
	ldr r0, _08051018 @ =IWRAM_START + 0x21
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r2, _0805101C @ =IWRAM_START + 0x22
	adds r2, r1, r2
	str r2, [sp, #8]
	ldr r3, _08051020 @ =IWRAM_START + 0x25
	adds r3, r1, r3
	str r3, [sp, #0xc]
	cmp r6, r8
	bhs _08050FBA
	lsls r0, r4, #0x18
	asrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _08051024 @ =gUnknown_08097AA4
	mov ip, r0
_08050F44:
	lsls r2, r6, #3
	adds r0, r5, #0
	adds r0, #0x30
	adds r0, r0, r2
	ldr r1, [r7, #0xc]
	str r1, [r0]
	adds r0, r5, #0
	adds r0, #0x34
	adds r0, r0, r2
	ldr r1, [r7, #0x10]
	str r1, [r0]
	lsls r4, r6, #2
	adds r3, r5, #0
	adds r3, #0x50
	adds r3, r3, r4
	mov r1, sb
	muls r1, r6, r1
	ldrh r2, [r7, #6]
	adds r1, r1, r2
	ldr r2, _08051028 @ =0x000003FF
	adds r0, r2, #0
	ands r1, r0
	strh r1, [r3]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, r2
	lsls r0, r0, #1
	add r0, ip
	movs r2, #0
	ldrsh r0, [r0, r2]
	str r0, [sp, #0x10]
	movs r2, #8
	ldrsh r0, [r7, r2]
	ldr r2, [sp, #0x10]
	muls r0, r2, r0
	asrs r0, r0, #0xe
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x52
	adds r2, r2, r4
	lsls r1, r1, #1
	add r1, ip
	movs r3, #0
	ldrsh r1, [r1, r3]
	movs r3, #8
	ldrsh r0, [r7, r3]
	muls r0, r1, r0
	asrs r0, r0, #0xe
	strh r0, [r2]
	adds r0, r5, #0
	adds r0, #0x61
	adds r0, r0, r6
	movs r1, #1
	strb r1, [r0]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, r8
	blo _08050F44
_08050FBA:
	ldrh r0, [r7]
	bl sub_8007C10
	str r0, [r5, #4]
	ldrh r0, [r7, #2]
	movs r2, #0
	movs r1, #0
	strh r0, [r5, #0xa]
	ldrb r0, [r7, #4]
	mov r3, sl
	strb r0, [r3]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r5, #0x1a]
	strh r1, [r5, #8]
	strh r1, [r5, #0x16]
	strh r1, [r5, #0x18]
	strh r1, [r5, #0x14]
	strh r1, [r5, #0x1c]
	movs r0, #0xff
	ldr r1, [sp, #4]
	strb r0, [r1]
	movs r0, #0x10
	ldr r3, [sp, #8]
	strb r0, [r3]
	ldr r0, [sp, #0xc]
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805100C: .4byte sub_80510B0
_08051010: .4byte sub_8051200
_08051014: .4byte IWRAM_START + 0x60
_08051018: .4byte IWRAM_START + 0x21
_0805101C: .4byte IWRAM_START + 0x22
_08051020: .4byte IWRAM_START + 0x25
_08051024: .4byte gUnknown_08097AA4
_08051028: .4byte 0x000003FF

	thumb_func_start sub_805102C
sub_805102C: @ 0x0805102C
	push {r4, r5, r6, r7, lr}
	ldr r3, _0805108C @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r5, r4, #0
	movs r0, #0x38
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0x30]
	adds r0, r0, r1
	str r0, [r4, #0x30]
	movs r1, #0x3a
	ldrsh r2, [r4, r1]
	ldr r1, [r4, #0x34]
	adds r1, r1, r2
	str r1, [r4, #0x34]
	asrs r7, r0, #8
	ldr r2, _08051090 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r0, r7, r0
	strh r0, [r4, #0x16]
	asrs r6, r1, #8
	ldr r1, [r2, #4]
	subs r2, r6, r1
	strh r2, [r4, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08051082
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08051082
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08051094
_08051082:
	ldr r0, [r3]
	bl TaskDestroy
	b _080510AA
	.align 2, 0
_0805108C: .4byte gCurTask
_08051090: .4byte gUnknown_03005960
_08051094:
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl sub_800C84C
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_080510AA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80510B0
sub_80510B0: @ 0x080510B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _080511C4 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	mov sb, r7
	adds r0, r7, #0
	bl sub_8004558
	movs r0, #0
	str r0, [sp]
	mov sl, r0
	ldr r1, _080511C8 @ =IWRAM_START + 0x60
	adds r0, r4, r1
	ldr r2, [sp]
	ldrb r0, [r0]
	cmp r2, r0
	bhs _080511A4
	ldr r3, _080511CC @ =IWRAM_START + 0x61
	adds r3, r4, r3
	str r3, [sp, #4]
_080510E8:
	ldr r0, [sp, #4]
	add r0, sl
	ldrb r0, [r0]
	cmp r0, #0
	beq _08051190
	ldr r0, [sp]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	mov r4, sl
	lsls r5, r4, #3
	movs r0, #0x30
	adds r0, r0, r7
	mov r8, r0
	adds r2, r0, r5
	lsls r4, r4, #2
	adds r0, r7, #0
	adds r0, #0x50
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	adds r6, r7, #0
	adds r6, #0x34
	adds r3, r6, r5
	adds r0, r7, #0
	adds r0, #0x52
	adds r0, r0, r4
	movs r4, #0
	ldrsh r1, [r0, r4]
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	ldr r2, [r2]
	asrs r2, r2, #8
	ldr r1, _080511D0 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r2, r2, r0
	mov r0, sb
	strh r2, [r0, #0x16]
	ldr r0, [r3]
	asrs r0, r0, #8
	ldr r1, [r1, #4]
	subs r1, r0, r1
	mov r3, sb
	strh r1, [r3, #0x18]
	adds r2, #0x80
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r3, r8
	movs r4, #0xf8
	lsls r4, r4, #1
	cmp r2, r4
	bhi _08051170
	mov r2, sb
	movs r4, #0x18
	ldrsh r0, [r2, r4]
	adds r0, #0x80
	cmp r0, #0
	blt _08051170
	lsls r1, r1, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08051178
_08051170:
	ldr r1, [sp, #4]
	add r1, sl
	movs r0, #0
	strb r0, [r1]
_08051178:
	adds r0, r3, r5
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r0, r6, r5
	ldr r2, [r0]
	asrs r2, r2, #8
	mov r0, sb
	bl sub_800C84C
	mov r0, sb
	bl sub_80051E8
_08051190:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r0, r7, #0
	adds r0, #0x60
	ldrb r0, [r0]
	cmp sl, r0
	blo _080510E8
_080511A4:
	ldr r0, [sp]
	cmp r0, #0
	bne _080511B2
	ldr r0, _080511C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080511D4 @ =sub_80511D8
	str r0, [r1, #8]
_080511B2:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080511C4: .4byte gCurTask
_080511C8: .4byte IWRAM_START + 0x60
_080511CC: .4byte IWRAM_START + 0x61
_080511D0: .4byte gUnknown_03005960
_080511D4: .4byte sub_80511D8

	thumb_func_start sub_80511D8
sub_80511D8: @ 0x080511D8
	push {lr}
	ldr r0, _080511E8 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	pop {r0}
	bx r0
	.align 2, 0
_080511E8: .4byte gCurTask

	thumb_func_start sub_80511EC
sub_80511EC: @ 0x080511EC
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8051200
sub_8051200: @ 0x08051200
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8051214
sub_8051214: @ 0x08051214
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	mov sb, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, sb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _08051314 @ =sub_805133C
	ldr r2, _08051318 @ =0x00004010
	ldr r1, _0805131C @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x4c
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	mov sl, r0
	movs r6, #0xc0
	lsls r6, r6, #0x12
	add r6, sl
	ldr r1, _08051320 @ =IWRAM_START + 0xC
	add r1, sl
	mov r8, r1
	strh r4, [r6, #4]
	strh r5, [r6, #6]
	str r7, [r6]
	ldrb r0, [r7]
	strb r0, [r6, #8]
	mov r3, sb
	strb r3, [r6, #9]
	movs r0, #3
	ldrsb r0, [r7, r0]
	rsbs r2, r0, #0
	orrs r2, r0
	ldrb r1, [r7]
	lsls r1, r1, #3
	lsls r4, r4, #8
	adds r1, r1, r4
	lsls r1, r1, #8
	str r1, [r6, #0x3c]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r6, #0x40]
	asrs r0, r0, #8
	asrs r1, r1, #8
	lsrs r2, r2, #0x1f
	movs r3, #0
	str r3, [sp]
	ldr r3, _08051324 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	ldr r1, [r6, #0x40]
	adds r1, r1, r0
	str r1, [r6, #0x40]
	movs r1, #0
	mov r0, r8
	strh r1, [r0, #0x16]
	strh r1, [r0, #0x18]
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	strb r0, [r7]
	movs r0, #0x19
	bl sub_8007C10
	mov r1, r8
	str r0, [r1, #4]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	movs r3, #0
	strh r3, [r1, #8]
	strh r3, [r1, #0x14]
	strh r3, [r1, #0x1c]
	ldr r1, _08051328 @ =IWRAM_START + 0x2E
	add r1, sl
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0805132C @ =IWRAM_START + 0x31
	add r0, sl
	movs r1, #0
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r3, r8
	str r0, [r3, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r3, #0x10]
	ldr r0, _08051330 @ =0xFFFFFA80
	str r0, [r6, #0x48]
	movs r0, #0
	str r0, [r6, #0x44]
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r3, #0xa]
	ldr r0, _08051334 @ =IWRAM_START + 0x2C
	add r0, sl
	strb r1, [r0]
	ldr r1, _08051338 @ =IWRAM_START + 0x2D
	add r1, sl
	movs r0, #0xff
	strb r0, [r1]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051314: .4byte sub_805133C
_08051318: .4byte 0x00004010
_0805131C: .4byte sub_80095E8
_08051320: .4byte IWRAM_START + 0xC
_08051324: .4byte sub_801EE64
_08051328: .4byte IWRAM_START + 0x2E
_0805132C: .4byte IWRAM_START + 0x31
_08051330: .4byte 0xFFFFFA80
_08051334: .4byte IWRAM_START + 0x2C
_08051338: .4byte IWRAM_START + 0x2D

	thumb_func_start sub_805133C
sub_805133C: @ 0x0805133C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r7, _08051388 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r6, r0
	adds r0, #0xc
	adds r4, r6, r0
	ldr r1, [r5]
	mov r8, r1
	ldr r0, [r5, #0x3c]
	asrs r0, r0, #8
	ldr r2, _0805138C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r1, [r5, #0x3c]
	asrs r1, r1, #8
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	adds r0, r4, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08051390
	ldr r0, [r7]
	bl TaskDestroy
	b _08051462
	.align 2, 0
_08051388: .4byte gCurTask
_0805138C: .4byte gUnknown_03005960
_08051390:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080513B4
	movs r2, #0x18
	ldrsh r0, [r4, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _080513B4
	movs r3, #0x18
	ldrsh r1, [r4, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080513C8
_080513B4:
	ldrb r0, [r5, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _080513C4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08051462
	.align 2, 0
_080513C4: .4byte gCurTask
_080513C8:
	ldr r0, _08051428 @ =gUnknown_030059E0
	ldr r3, [r5, #0x3c]
	ldr r2, _0805142C @ =0xFFFF8800
	adds r1, r3, r2
	ldr r2, [r0, #8]
	mov ip, r0
	cmp r2, r1
	ble _08051416
	movs r1, #0xf0
	lsls r1, r1, #7
	adds r0, r3, r1
	cmp r2, r0
	bge _08051416
	ldr r2, [r5, #0x40]
	ldr r3, _08051430 @ =0xFFFFCE00
	adds r0, r2, r3
	mov r3, ip
	ldr r1, [r3, #0xc]
	cmp r1, r0
	ble _08051416
	movs r3, #0xc8
	lsls r3, r3, #6
	adds r0, r2, r3
	cmp r1, r0
	bge _08051416
	ldr r1, [r7]
	ldr r0, _08051434 @ =sub_805146C
	str r0, [r1, #8]
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r4, #0xa]
	ldr r0, _08051438 @ =IWRAM_START + 0x2C
	adds r1, r6, r0
	movs r0, #2
	strb r0, [r1]
	ldr r2, _0805143C @ =IWRAM_START + 0x2D
	adds r1, r6, r2
	movs r0, #0xff
	strb r0, [r1]
_08051416:
	mov r3, ip
	ldr r1, [r3, #8]
	ldr r0, [r5, #0x3c]
	cmp r1, r0
	bge _08051444
	ldr r0, [r4, #0x10]
	ldr r1, _08051440 @ =0xFFFFFBFF
	ands r0, r1
	b _0805144C
	.align 2, 0
_08051428: .4byte gUnknown_030059E0
_0805142C: .4byte 0xFFFF8800
_08051430: .4byte 0xFFFFCE00
_08051434: .4byte sub_805146C
_08051438: .4byte IWRAM_START + 0x2C
_0805143C: .4byte IWRAM_START + 0x2D
_08051440: .4byte 0xFFFFFBFF
_08051444:
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
_0805144C:
	str r0, [r4, #0x10]
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x40]
	bl sub_80122DC
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_08051462:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805146C
sub_805146C: @ 0x0805146C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r7, _080514B8 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r6, r0
	adds r0, #0xc
	adds r5, r6, r0
	ldr r1, [r4]
	mov r8, r1
	ldr r0, [r4, #0x3c]
	asrs r0, r0, #8
	ldr r2, _080514BC @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #0x40]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r1, [r4, #0x3c]
	asrs r1, r1, #8
	ldr r2, [r4, #0x40]
	asrs r2, r2, #8
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080514C0
	ldr r0, [r7]
	bl TaskDestroy
	b _08051534
	.align 2, 0
_080514B8: .4byte gCurTask
_080514BC: .4byte gUnknown_03005960
_080514C0:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080514E4
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080514E4
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080514F8
_080514E4:
	ldrb r0, [r4, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _080514F4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08051534
	.align 2, 0
_080514F4: .4byte gCurTask
_080514F8:
	ldr r0, [r4, #0x3c]
	ldr r1, [r4, #0x40]
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r1, r0, #0
	cmp r1, #0
	bne _0805152E
	ldr r0, _08051540 @ =0xFFFFFA80
	str r0, [r4, #0x48]
	str r1, [r4, #0x44]
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r5, #0xa]
	ldr r0, _08051544 @ =IWRAM_START + 0x2C
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08051548 @ =IWRAM_START + 0x2D
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0805154C @ =sub_8051550
	str r0, [r1, #8]
_0805152E:
	adds r0, r5, #0
	bl sub_80051E8
_08051534:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051540: .4byte 0xFFFFFA80
_08051544: .4byte IWRAM_START + 0x2C
_08051548: .4byte IWRAM_START + 0x2D
_0805154C: .4byte sub_8051550

	thumb_func_start sub_8051550
sub_8051550: @ 0x08051550
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r7, _080515B0 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r6, r0
	adds r0, #0xc
	adds r5, r6, r0
	ldr r1, [r4]
	mov r8, r1
	ldr r1, [r4, #0x48]
	adds r1, #0x34
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x44]
	adds r0, r0, r1
	str r0, [r4, #0x44]
	ldr r0, [r4, #0x3c]
	asrs r0, r0, #8
	ldr r2, _080515B4 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x44]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r1, [r4, #0x3c]
	asrs r1, r1, #8
	ldr r2, [r4, #0x40]
	ldr r0, [r4, #0x44]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080515B8
	ldr r0, [r7]
	bl TaskDestroy
	b _0805162A
	.align 2, 0
_080515B0: .4byte gCurTask
_080515B4: .4byte gUnknown_03005960
_080515B8:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080515DC
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080515DC
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080515F0
_080515DC:
	ldrb r0, [r4, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _080515EC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805162A
	.align 2, 0
_080515EC: .4byte gCurTask
_080515F0:
	ldr r0, [r4, #0x44]
	cmp r0, #0
	blt _08051612
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r5, #0xa]
	ldr r0, _08051634 @ =IWRAM_START + 0x2C
	adds r1, r6, r0
	movs r0, #3
	strb r0, [r1]
	ldr r0, _08051638 @ =IWRAM_START + 0x2D
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, [r7]
	ldr r0, _0805163C @ =sub_8051640
	str r0, [r1, #8]
_08051612:
	ldr r0, [r4, #0x3c]
	ldr r1, [r4, #0x40]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0805162A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051634: .4byte IWRAM_START + 0x2C
_08051638: .4byte IWRAM_START + 0x2D
_0805163C: .4byte sub_8051640

	thumb_func_start sub_8051640
sub_8051640: @ 0x08051640
	push {r4, r5, r6, r7, lr}
	ldr r6, _08051688 @ =gCurTask
	ldr r0, [r6]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r4, r1, r0
	ldr r7, [r5]
	ldr r0, [r5, #0x3c]
	asrs r0, r0, #8
	ldr r2, _0805168C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	ldr r1, [r5, #0x3c]
	asrs r1, r1, #8
	ldr r2, [r5, #0x40]
	asrs r2, r2, #8
	adds r0, r4, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08051690
	ldr r0, [r6]
	bl TaskDestroy
	b _08051778
	.align 2, 0
_08051688: .4byte gCurTask
_0805168C: .4byte gUnknown_03005960
_08051690:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080516B4
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080516B4
	movs r3, #0x18
	ldrsh r1, [r4, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080516C8
_080516B4:
	ldrb r0, [r5, #8]
	strb r0, [r7]
	ldr r0, _080516C4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08051778
	.align 2, 0
_080516C4: .4byte gCurTask
_080516C8:
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x40]
	bl sub_80122DC
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _08051772
	ldr r2, _08051714 @ =gUnknown_030059E0
	ldr r1, [r5, #0x3c]
	ldr r6, _08051718 @ =0xFFFF8800
	adds r0, r1, r6
	ldr r3, [r2, #8]
	cmp r3, r0
	ble _08051754
	movs r6, #0xf0
	lsls r6, r6, #7
	adds r0, r1, r6
	cmp r3, r0
	bge _08051754
	ldr r5, [r5, #0x40]
	ldr r6, _0805171C @ =0xFFFFCE00
	adds r0, r5, r6
	ldr r2, [r2, #0xc]
	cmp r2, r0
	ble _08051754
	movs r6, #0xc8
	lsls r6, r6, #6
	adds r0, r5, r6
	cmp r2, r0
	bge _08051754
	cmp r3, r1
	bge _08051724
	ldr r0, [r4, #0x10]
	ldr r1, _08051720 @ =0xFFFFFBFF
	ands r0, r1
	b _0805172C
	.align 2, 0
_08051714: .4byte gUnknown_030059E0
_08051718: .4byte 0xFFFF8800
_0805171C: .4byte 0xFFFFCE00
_08051720: .4byte 0xFFFFFBFF
_08051724:
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
_0805172C:
	str r0, [r4, #0x10]
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r4, #0xa]
	adds r1, r4, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805174C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08051750 @ =sub_805146C
	b _08051770
	.align 2, 0
_0805174C: .4byte gCurTask
_08051750: .4byte sub_805146C
_08051754:
	movs r1, #0
	movs r0, #0xef
	lsls r0, r0, #1
	strh r0, [r4, #0xa]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08051780 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08051784 @ =sub_805133C
_08051770:
	str r0, [r1, #8]
_08051772:
	adds r0, r4, #0
	bl sub_80051E8
_08051778:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051780: .4byte gCurTask
_08051784: .4byte sub_805133C

	thumb_func_start sub_8051788
sub_8051788: @ 0x08051788
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r4, r3, #0x18
	ldr r0, _080517F4 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080517B6
	ldr r0, _080517F8 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	bne _080517B6
	b _0805190C
_080517B6:
	ldr r0, _080517FC @ =sub_8051928
	ldr r2, _08051800 @ =0x00004040
	ldr r1, _08051804 @ =sub_8051E20
	str r1, [sp]
	movs r1, #0x90
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sl, r0
	ldr r0, _08051808 @ =IWRAM_START + 0xC
	adds r7, r1, r0
	mov r2, sl
	strh r5, [r2, #4]
	mov r0, sb
	strh r0, [r2, #6]
	str r6, [r2]
	ldrb r0, [r6]
	strb r0, [r2, #8]
	strb r4, [r2, #9]
	movs r0, #4
	ldrsb r0, [r6, r0]
	cmp r0, #0
	beq _08051810
	ldr r2, _0805180C @ =IWRAM_START + 0x8C
	adds r1, r1, r2
	movs r0, #1
	b _08051816
	.align 2, 0
_080517F4: .4byte gUnknown_030054CC
_080517F8: .4byte gUnknown_030054EC
_080517FC: .4byte sub_8051928
_08051800: .4byte 0x00004040
_08051804: .4byte sub_8051E20
_08051808: .4byte IWRAM_START + 0xC
_0805180C: .4byte IWRAM_START + 0x8C
_08051810:
	ldr r0, _0805191C @ =IWRAM_START + 0x8C
	adds r1, r1, r0
	movs r0, #0
_08051816:
	strb r0, [r1]
	ldrb r1, [r6]
	lsls r1, r1, #3
	lsls r5, r5, #8
	mov r8, r5
	add r1, r8
	lsls r1, r1, #8
	mov r2, sl
	str r1, [r2, #0x74]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r2, sb
	lsls r5, r2, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	mov r2, sl
	str r0, [r2, #0x78]
	movs r4, #0
	str r4, [r2, #0x7c]
	asrs r0, r0, #8
	asrs r1, r1, #8
	adds r2, #0x8c
	ldrb r2, [r2]
	str r4, [sp]
	ldr r3, _08051920 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	mov r1, sl
	adds r1, #0x80
	lsls r0, r0, #8
	str r0, [r1]
	mov r0, sl
	adds r0, #0x84
	str r4, [r0]
	adds r0, #4
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	ldrb r0, [r6]
	lsls r0, r0, #3
	add r0, r8
	strh r0, [r7, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	movs r0, #9
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08051924 @ =0x000001E3
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	movs r2, #0
	strb r2, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	strb r2, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	mov r8, r2
	str r2, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	mov sb, r0
	str r0, [r7, #0x10]
	mov r7, sl
	adds r7, #0x44
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #6
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xf2
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0x64
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0x65
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x66
	movs r2, #0x10
	strb r2, [r0]
	adds r0, #3
	movs r1, #0
	strb r1, [r0]
	mov r2, r8
	str r2, [r7, #0x28]
	mov r0, sb
	str r0, [r7, #0x10]
_0805190C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805191C: .4byte IWRAM_START + 0x8C
_08051920: .4byte sub_801EE64
_08051924: .4byte 0x000001E3

	thumb_func_start sub_8051928
sub_8051928: @ 0x08051928
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r0, _0805195C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r1, [r4]
	mov sl, r1
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08051960
	ldr r0, [r4, #0x7c]
	adds r0, #0x80
	b _08051964
	.align 2, 0
_0805195C: .4byte gCurTask
_08051960:
	ldr r0, [r4, #0x7c]
	subs r0, #0x80
_08051964:
	str r0, [r4, #0x7c]
	movs r2, #0x80
	adds r2, r2, r4
	mov r8, r2
	ldr r0, [r4, #0x78]
	ldr r1, [r2]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x74]
	ldr r2, [r4, #0x7c]
	adds r1, r1, r2
	asrs r1, r1, #8
	movs r3, #0x8c
	adds r3, r3, r4
	mov sb, r3
	ldrb r2, [r3]
	movs r3, #0
	str r3, [sp]
	ldr r3, _08051A64 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _080519BC
	lsls r0, r0, #8
	mov r2, r8
	ldr r1, [r2]
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, [r4, #0x78]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x74]
	ldr r2, [r4, #0x7c]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, sb
	ldrb r2, [r3]
	ldr r3, _08051A68 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_080519BC:
	cmp r0, #0
	ble _080519CA
	lsls r1, r0, #8
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
_080519CA:
	ldr r1, [r4, #0x74]
	ldr r0, [r4, #0x7c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r6, r1, #0
	ldr r2, [r4, #0x78]
	mov r3, r8
	ldr r0, [r3]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r3, _08051A6C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r6, r0
	strh r0, [r5, #0x16]
	ldr r0, [r3, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	adds r0, r4, #0
	str r3, [sp, #8]
	bl sub_8051DC8
	lsls r0, r0, #0x18
	ldr r3, [sp, #8]
	cmp r0, #0
	bne _08051A5A
	ldr r0, [r4, #0x74]
	asrs r2, r0, #8
	ldr r1, [r3]
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r0, r0, r1
	mov r8, r0
	cmp r2, r8
	bgt _08051A30
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08051A30
	ldr r0, [r4, #0x78]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08051A30
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08051A74
_08051A30:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08051A54
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08051A54
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08051A74
_08051A54:
	ldrb r0, [r4, #8]
	mov r3, sl
	strb r0, [r3]
_08051A5A:
	ldr r0, _08051A70 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08051AD2
	.align 2, 0
_08051A64: .4byte sub_801EE64
_08051A68: .4byte sub_801EC3C
_08051A6C: .4byte gUnknown_03005960
_08051A70: .4byte gCurTask
_08051A74:
	ldr r0, [r4, #0x7c]
	asrs r2, r0, #8
	mov r0, sl
	movs r1, #3
	ldrsb r1, [r0, r1]
	lsls r0, r1, #3
	cmp r2, r0
	ble _08051A90
	mov r3, sl
	ldrb r0, [r3, #5]
	adds r0, r1, r0
	lsls r0, r0, #3
	cmp r2, r0
	blt _08051AAA
_08051A90:
	ldr r0, _08051AE4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08051AE8 @ =sub_8051AF0
	str r0, [r1, #8]
	ldr r0, _08051AEC @ =0x000001E3
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08051AAA:
	lsls r0, r6, #8
	lsls r1, r7, #8
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
	movs r0, #0x16
	ldrsh r1, [r5, r0]
	ldrh r2, [r5, #0x18]
	subs r2, #4
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r3, [r5, #0x10]
	adds r0, r4, #0
	bl sub_8051CB8
_08051AD2:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051AE4: .4byte gCurTask
_08051AE8: .4byte sub_8051AF0
_08051AEC: .4byte 0x000001E3

	thumb_func_start sub_8051AF0
sub_8051AF0: @ 0x08051AF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r1, _08051BB0 @ =gCurTask
	ldr r0, [r1]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r3, r0
	ldr r2, _08051BB4 @ =IWRAM_START + 0xC
	adds r4, r3, r2
	ldr r0, [r5]
	str r0, [sp, #4]
	ldr r1, _08051BB8 @ =IWRAM_START + 0x80
	adds r1, r1, r3
	mov r8, r1
	ldr r0, [r5, #0x78]
	ldr r1, [r1]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x74]
	ldr r2, [r5, #0x7c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _08051BBC @ =IWRAM_START + 0x8C
	adds r2, r2, r3
	mov sb, r2
	ldrb r2, [r2]
	ldr r3, _08051BC0 @ =sub_801EC3C
	mov sl, r3
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bge _08051B64
	lsls r0, r0, #8
	mov r2, r8
	ldr r1, [r2]
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, [r5, #0x78]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x74]
	ldr r2, [r5, #0x7c]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, sb
	ldrb r2, [r3]
	mov r3, sl
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08051B64:
	cmp r0, #0
	ble _08051B72
	lsls r1, r0, #8
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
_08051B72:
	ldr r1, [r5, #0x74]
	ldr r0, [r5, #0x7c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r6, r1, #0
	ldr r2, [r5, #0x78]
	mov r3, r8
	ldr r0, [r3]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r3, _08051BC4 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r6, r0
	strh r0, [r4, #0x16]
	ldr r0, [r3, #4]
	subs r0, r7, r0
	strh r0, [r4, #0x18]
	adds r0, r5, #0
	str r3, [sp, #8]
	bl sub_8051DC8
	lsls r0, r0, #0x18
	ldr r3, [sp, #8]
	cmp r0, #0
	beq _08051BC8
	ldr r1, _08051BB0 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08051C9A
	.align 2, 0
_08051BB0: .4byte gCurTask
_08051BB4: .4byte IWRAM_START + 0xC
_08051BB8: .4byte IWRAM_START + 0x80
_08051BBC: .4byte IWRAM_START + 0x8C
_08051BC0: .4byte sub_801EC3C
_08051BC4: .4byte gUnknown_03005960
_08051BC8:
	ldr r0, [r5, #0x74]
	asrs r2, r0, #8
	ldr r1, [r3]
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r0, r0, r1
	mov r8, r0
	cmp r2, r8
	bgt _08051BFA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08051BFA
	ldr r0, [r5, #0x78]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08051BFA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08051C34
_08051BFA:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08051C1E
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08051C1E
	movs r2, #0x18
	ldrsh r1, [r4, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08051C34
_08051C1E:
	ldrb r0, [r5, #8]
	ldr r3, [sp, #4]
	strb r0, [r3]
	ldr r0, _08051C30 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08051C9A
	.align 2, 0
_08051C30: .4byte gCurTask
_08051C34:
	lsls r0, r6, #8
	lsls r1, r7, #8
	bl sub_80122DC
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _08051C80
	ldr r1, [r4, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08051C60
	ldr r0, _08051C5C @ =0xFFFFFBFF
	ands r1, r0
	b _08051C62
	.align 2, 0
_08051C5C: .4byte 0xFFFFFBFF
_08051C60:
	orrs r1, r2
_08051C62:
	str r1, [r4, #0x10]
	movs r1, #0
	ldr r0, _08051CAC @ =0x000001E3
	strh r0, [r4, #0xa]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08051CB0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08051CB4 @ =sub_8051928
	str r0, [r1, #8]
_08051C80:
	adds r0, r4, #0
	bl sub_80051E8
	movs r0, #0x16
	ldrsh r1, [r4, r0]
	ldrh r2, [r4, #0x18]
	subs r2, #4
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldr r3, [r4, #0x10]
	adds r0, r5, #0
	bl sub_8051CB8
_08051C9A:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051CAC: .4byte 0x000001E3
_08051CB0: .4byte gCurTask
_08051CB4: .4byte sub_8051928

	thumb_func_start sub_8051CB8
sub_8051CB8: @ 0x08051CB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	adds r5, r7, #0
	adds r5, #0x44
	adds r0, r5, #0
	bl sub_8004558
	adds r1, r7, #0
	adds r1, #0x88
	ldrh r0, [r1]
	adds r0, #0x18
	ldr r3, _08051D08 @ =0x000003FF
	adds r2, r3, #0
	ands r0, r2
	strh r0, [r1]
	adds r1, #2
	ldrh r0, [r1]
	adds r0, #0x20
	ands r0, r2
	strh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r4, r1
	cmp r4, #0
	beq _08051D0C
	ldr r0, [r5, #0x10]
	orrs r0, r1
	b _08051D12
	.align 2, 0
_08051D08: .4byte 0x000003FF
_08051D0C:
	ldr r0, [r5, #0x10]
	ldr r1, _08051D8C @ =0xFFFFFBFF
	ands r0, r1
_08051D12:
	str r0, [r5, #0x10]
	movs r6, #0
	adds r0, r7, #0
	adds r0, #0x88
	str r0, [sp, #4]
	adds r7, #0x8a
	mov sl, r7
	mov r1, sb
	lsls r1, r1, #0x10
	mov sb, r1
	mov r3, r8
	lsls r3, r3, #0x10
	mov r8, r3
	mov r4, sp
	ldr r7, _08051D90 @ =0x000003FF
	adds r3, r7, #0
_08051D32:
	lsls r2, r6, #8
	ldr r0, [sp, #4]
	ldrh r0, [r0]
	adds r2, r2, r0
	ands r2, r3
	strh r2, [r4]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #7
	mov r1, sl
	ldrh r1, [r1]
	adds r0, r0, r1
	ands r0, r3
	strh r0, [r4, #2]
	ldrh r0, [r4]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	ldr r1, _08051D94 @ =gUnknown_08097AA4
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x1a
	mov r7, sb
	asrs r0, r7, #0x10
	adds r0, r0, r1
	strh r0, [r5, #0x16]
	ldrh r0, [r4, #2]
	lsls r0, r0, #1
	ldr r1, _08051D94 @ =gUnknown_08097AA4
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x1d
	mov r7, r8
	asrs r0, r7, #0x10
	adds r0, r0, r1
	strh r0, [r5, #0x18]
	ldr r0, _08051D98 @ =0x000001FF
	cmp r2, r0
	bls _08051D9C
	movs r0, #0x88
	lsls r0, r0, #3
	b _08051DA0
	.align 2, 0
_08051D8C: .4byte 0xFFFFFBFF
_08051D90: .4byte 0x000003FF
_08051D94: .4byte gUnknown_08097AA4
_08051D98: .4byte 0x000001FF
_08051D9C:
	movs r0, #0x98
	lsls r0, r0, #3
_08051DA0:
	strh r0, [r5, #0x1a]
	adds r0, r5, #0
	str r3, [sp, #8]
	bl sub_80051E8
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r3, [sp, #8]
	cmp r6, #3
	bls _08051D32
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8051DC8
sub_8051DC8: @ 0x08051DC8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r1, #0
	adds r7, r2, #0
	adds r5, r0, #0
	adds r5, #0xc
	movs r0, #0
	mov r8, r0
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08051DEE
	movs r0, #1
	mov r8, r0
	b _08051E0C
_08051DEE:
	ldr r4, _08051E1C @ =gUnknown_030059E0
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0
	bl sub_800CA20
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #1
	bl sub_800CA20
_08051E0C:
	mov r0, r8
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08051E1C: .4byte gUnknown_030059E0

	thumb_func_start sub_8051E20
sub_8051E20: @ 0x08051E20
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x48]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8051E3C
sub_8051E3C: @ 0x08051E3C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sb, r0
	adds r6, r1, #0
	mov r8, r2
	mov sl, r3
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r1, sl
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	ldr r0, _08051FD4 @ =sub_8052024
	ldr r2, _08051FD8 @ =0x00004050
	ldr r1, _08051FDC @ =sub_8052264
	str r1, [sp]
	movs r1, #0xb4
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r4, r1
	ldr r2, _08051FE0 @ =IWRAM_START + 0xC
	adds r7, r4, r2
	adds r2, #0xa4
	adds r0, r4, r2
	movs r5, #0
	str r5, [r0]
	subs r2, #4
	adds r0, r4, r2
	str r5, [r0]
	strh r6, [r1, #4]
	mov r0, r8
	strh r0, [r1, #6]
	mov r2, sb
	str r2, [r1]
	ldrb r0, [r2]
	strb r0, [r1, #8]
	mov r0, sl
	strb r0, [r1, #9]
	ldr r2, _08051FE4 @ =IWRAM_START + 0xA4
	adds r1, r4, r2
	mov r2, sb
	ldrb r0, [r2]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	lsls r0, r0, #8
	str r0, [r1]
	ldr r0, _08051FE8 @ =IWRAM_START + 0xA8
	adds r1, r4, r0
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	mov r2, r8
	lsls r2, r2, #8
	mov r8, r2
	add r0, r8
	lsls r0, r0, #8
	str r0, [r1]
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	adds r0, r0, r6
	strh r0, [r7, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	add r0, r8
	strh r0, [r7, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r1]
	movs r0, #8
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08051FEC @ =0x000001E5
	strh r0, [r7, #0xa]
	ldr r1, _08051FF0 @ =IWRAM_START + 0x2C
	adds r0, r4, r1
	movs r2, #0
	strb r2, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	ldr r0, _08051FF4 @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _08051FF8 @ =IWRAM_START + 0x2E
	adds r0, r4, r1
	movs r2, #0x10
	mov sb, r2
	mov r1, sb
	strb r1, [r0]
	ldr r2, _08051FFC @ =IWRAM_START + 0x31
	adds r0, r4, r2
	movs r1, #0
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	mov r8, r2
	str r2, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #6
	str r6, [r7, #0x10]
	ldr r0, _08052000 @ =IWRAM_START + 0x3C
	adds r7, r4, r0
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	movs r0, #1
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xf3
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	ldr r1, _08052004 @ =IWRAM_START + 0x5C
	adds r0, r4, r1
	movs r2, #0
	strb r2, [r0]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	ldr r0, _08052008 @ =IWRAM_START + 0x5D
	adds r1, r4, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _0805200C @ =IWRAM_START + 0x5E
	adds r0, r4, r1
	mov r2, sb
	strb r2, [r0]
	adds r1, #3
	adds r0, r4, r1
	movs r2, #0
	strb r2, [r0]
	mov r0, r8
	str r0, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r1, _08052010 @ =IWRAM_START + 0x6C
	adds r7, r4, r1
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08052014 @ =0x000001E7
	strh r0, [r7, #0xa]
	ldr r2, _08052018 @ =IWRAM_START + 0x8C
	adds r0, r4, r2
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	adds r2, #1
	adds r1, r4, r2
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r1, _0805201C @ =IWRAM_START + 0x8E
	adds r0, r4, r1
	mov r2, sb
	strb r2, [r0]
	ldr r0, _08052020 @ =IWRAM_START + 0x91
	adds r4, r4, r0
	movs r1, #0
	strb r1, [r4]
	mov r2, r8
	str r2, [r7, #0x28]
	str r6, [r7, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051FD4: .4byte sub_8052024
_08051FD8: .4byte 0x00004050
_08051FDC: .4byte sub_8052264
_08051FE0: .4byte IWRAM_START + 0xC
_08051FE4: .4byte IWRAM_START + 0xA4
_08051FE8: .4byte IWRAM_START + 0xA8
_08051FEC: .4byte 0x000001E5
_08051FF0: .4byte IWRAM_START + 0x2C
_08051FF4: .4byte IWRAM_START + 0x2D
_08051FF8: .4byte IWRAM_START + 0x2E
_08051FFC: .4byte IWRAM_START + 0x31
_08052000: .4byte IWRAM_START + 0x3C
_08052004: .4byte IWRAM_START + 0x5C
_08052008: .4byte IWRAM_START + 0x5D
_0805200C: .4byte IWRAM_START + 0x5E
_08052010: .4byte IWRAM_START + 0x6C
_08052014: .4byte 0x000001E7
_08052018: .4byte IWRAM_START + 0x8C
_0805201C: .4byte IWRAM_START + 0x8E
_08052020: .4byte IWRAM_START + 0x91

	thumb_func_start sub_8052024
sub_8052024: @ 0x08052024
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08052088 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov r8, r0
	ldr r1, _0805208C @ =IWRAM_START + 0xC
	adds r6, r2, r1
	ldr r0, [r0]
	mov sl, r0
	adds r1, #0x98
	adds r0, r2, r1
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r0, _08052090 @ =IWRAM_START + 0xA8
	adds r2, r2, r0
	ldr r2, [r2]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r7, _08052094 @ =gUnknown_03005960
	ldr r0, [r7]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r7, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	ldr r0, [r6, #0x10]
	ldr r3, _08052098 @ =0xFFFFFBFF
	ands r0, r3
	str r0, [r6, #0x10]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _0805209C
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _0805212E
	.align 2, 0
_08052088: .4byte gCurTask
_0805208C: .4byte IWRAM_START + 0xC
_08052090: .4byte IWRAM_START + 0xA8
_08052094: .4byte gUnknown_03005960
_08052098: .4byte 0xFFFFFBFF
_0805209C:
	ldr r1, [r7]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r4, r0
	bgt _080520C2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _080520C2
	ldr r1, [r7, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r5, r0
	bgt _080520C2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _080520FC
_080520C2:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080520E6
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080520E6
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080520FC
_080520E6:
	mov r1, r8
	ldrb r0, [r1, #8]
	mov r2, sl
	strb r0, [r2]
	ldr r0, _080520F8 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805212E
	.align 2, 0
_080520F8: .4byte gCurTask
_080520FC:
	mov r0, r8
	adds r0, #0xa4
	ldr r0, [r0]
	mov r1, r8
	adds r1, #0xa8
	ldr r1, [r1]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_80051E8
	mov r0, r8
	bl sub_805213C
_0805212E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805213C
sub_805213C: @ 0x0805213C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r4, r0, #0
	adds r0, #0x3c
	str r0, [sp, #0x14]
	movs r2, #0x6c
	adds r2, r2, r4
	mov sb, r2
	adds r3, r4, #0
	adds r3, #0xac
	ldr r2, _08052254 @ =gUnknown_08097AA4
	ldr r0, _08052258 @ =gUnknown_03005590
	ldr r0, [r0]
	lsls r0, r0, #2
	ldr r1, _0805225C @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x17
	ands r0, r1
	str r0, [r3]
	movs r5, #0
	mov r8, r2
	adds r6, r3, #0
	ldr r3, _08052260 @ =gUnknown_03005960
	adds r7, r4, #0
	adds r7, #0xa8
	str r7, [sp, #0xc]
	str r6, [sp, #8]
	movs r0, #0xa4
	adds r0, r0, r4
	mov sl, r0
_08052188:
	adds r0, r4, #0
	adds r0, #0xa4
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r6]
	lsls r0, r0, #1
	add r0, r8
	movs r2, #0
	ldrsh r0, [r0, r2]
	movs r2, #0xb
	subs r2, r2, r5
	asrs r0, r2
	adds r1, r1, r0
	ldr r0, [r3]
	subs r1, r1, r0
	ldr r7, [sp, #0x14]
	strh r1, [r7, #0x16]
	adds r0, r4, #0
	adds r0, #0xa8
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, [r6]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #1
	add r0, r8
	movs r7, #0
	ldrsh r0, [r0, r7]
	asrs r0, r2
	adds r1, r1, r0
	ldr r0, [r3, #4]
	subs r1, r1, r0
	ldr r0, [sp, #0x14]
	strh r1, [r0, #0x18]
	ldr r0, [sp, #0x14]
	str r3, [sp, #0x10]
	bl sub_80051E8
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r3, [sp, #0x10]
	cmp r5, #1
	bls _08052188
	mov r2, sl
	ldr r1, [r2]
	asrs r1, r1, #8
	ldr r4, _08052254 @ =gUnknown_08097AA4
	ldr r7, [sp, #8]
	ldr r3, [r7]
	lsls r0, r3, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x19
	adds r1, r1, r2
	asrs r0, r0, #0x1b
	subs r1, r1, r0
	str r1, [sp]
	ldr r0, [sp, #0xc]
	ldr r2, [r0]
	asrs r2, r2, #8
	movs r7, #0x80
	lsls r7, r7, #1
	adds r3, r3, r7
	lsls r3, r3, #1
	adds r3, r3, r4
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r3, r0, #0x19
	adds r2, r2, r3
	asrs r0, r0, #0x1b
	subs r2, r2, r0
	str r2, [sp, #4]
	ldr r3, _08052260 @ =gUnknown_03005960
	ldr r0, [r3]
	adds r4, r1, #0
	subs r0, r4, r0
	mov r7, sb
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	ldr r3, [sp, #4]
	subs r0, r3, r0
	strh r0, [r7, #0x18]
	mov r0, sb
	bl sub_800C84C
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08052254: .4byte gUnknown_08097AA4
_08052258: .4byte gUnknown_03005590
_0805225C: .4byte 0x000003FF
_08052260: .4byte gUnknown_03005960

	thumb_func_start sub_8052264
sub_8052264: @ 0x08052264
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #0x70]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8052288
sub_8052288: @ 0x08052288
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r5, r1, #0
	adds r6, r2, #0
	mov r8, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _080523C4 @ =sub_80524D0
	ldr r2, _080523C8 @ =0x00004060
	ldr r1, _080523CC @ =sub_8052F70
	str r1, [sp]
	movs r1, #0xc4
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r4
	mov sl, r0
	ldr r1, _080523D0 @ =IWRAM_START + 0xC
	adds r7, r4, r1
	ldr r2, _080523D4 @ =IWRAM_START + 0xB8
	adds r0, r4, r2
	movs r3, #0
	strh r3, [r0]
	adds r1, #0xae
	adds r0, r4, r1
	strh r3, [r0]
	adds r2, #6
	adds r0, r4, r2
	strh r3, [r0]
	subs r1, #0xa
	adds r0, r4, r1
	str r3, [r0]
	subs r2, #0xa
	adds r0, r4, r2
	str r3, [r0]
	ldr r0, _080523D8 @ =IWRAM_START + 0xC0
	adds r0, r4, r0
	str r0, [sp, #4]
	movs r1, #0
	strb r1, [r0]
	mov r2, sl
	strh r5, [r2, #4]
	strh r6, [r2, #6]
	mov r0, sb
	str r0, [r2]
	ldrb r0, [r0]
	strb r0, [r2, #8]
	mov r1, r8
	strb r1, [r2, #9]
	ldr r2, _080523DC @ =IWRAM_START + 0xA8
	adds r1, r4, r2
	mov r2, sb
	ldrb r0, [r2]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r1]
	ldr r0, _080523E0 @ =IWRAM_START + 0xAC
	adds r1, r4, r0
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	lsls r0, r0, #8
	str r0, [r1]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r7, #0x16]
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	adds r0, r0, r6
	strh r0, [r7, #0x18]
	movs r0, #6
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r2, _080523E4 @ =gUnknown_080D8F30
	mov r0, sb
	ldrb r1, [r0, #3]
	movs r5, #1
	adds r0, r5, #0
	ands r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	mov r0, sb
	ldrb r1, [r0, #3]
	adds r0, r5, #0
	ands r0, r1
	lsls r0, r0, #2
	adds r2, #2
	adds r0, r0, r2
	ldrh r1, [r0]
	ldr r2, _080523E8 @ =IWRAM_START + 0x2C
	adds r0, r4, r2
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	ldr r3, [sp, #8]
	strh r3, [r7, #8]
	strh r3, [r7, #0x14]
	strh r3, [r7, #0x1c]
	ldr r0, _080523EC @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r2, #2
	adds r1, r4, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080523F0 @ =IWRAM_START + 0x31
	adds r4, r4, r0
	movs r1, #0
	strb r1, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	mov r2, sb
	ldrb r1, [r2, #3]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080523FA
	movs r0, #4
	ldrsb r0, [r2, r0]
	cmp r0, #0
	beq _080523F4
	ldr r0, [sp, #4]
	strb r5, [r0]
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r7, #0x10]
	b _080523FA
	.align 2, 0
_080523C4: .4byte sub_80524D0
_080523C8: .4byte 0x00004060
_080523CC: .4byte sub_8052F70
_080523D0: .4byte IWRAM_START + 0xC
_080523D4: .4byte IWRAM_START + 0xB8
_080523D8: .4byte IWRAM_START + 0xC0
_080523DC: .4byte IWRAM_START + 0xA8
_080523E0: .4byte IWRAM_START + 0xAC
_080523E4: .4byte gUnknown_080D8F30
_080523E8: .4byte IWRAM_START + 0x2C
_080523EC: .4byte IWRAM_START + 0x2D
_080523F0: .4byte IWRAM_START + 0x31
_080523F4:
	movs r0, #2
	ldr r1, [sp, #4]
	strb r0, [r1]
_080523FA:
	adds r0, r7, #0
	bl sub_8004558
	mov r7, sl
	adds r7, #0x6c
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _080524C4 @ =0x000001E9
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0x8c
	strb r5, [r0]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0x8d
	movs r0, #0xff
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x8e
	movs r2, #0x10
	mov r8, r2
	mov r1, r8
	strb r1, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	subs r7, #0x30
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xf4
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	mov r1, sl
	adds r1, #0x5c
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, #1
	adds r0, r6, #0
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x5e
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	str r6, [r7, #0x28]
	ldr r2, _080524C8 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080524CC @ =0x00002060
	orrs r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	mov r2, sb
	strb r0, [r2]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080524C4: .4byte 0x000001E9
_080524C8: .4byte gUnknown_030054B8
_080524CC: .4byte 0x00002060

	thumb_func_start sub_80524D0
sub_80524D0: @ 0x080524D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r5, _0805252C @ =gCurTask
	ldr r0, [r5]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov sb, r0
	ldr r0, _08052530 @ =IWRAM_START + 0xC
	adds r0, r0, r2
	mov r8, r0
	mov r1, sb
	ldr r1, [r1]
	mov sl, r1
	ldr r3, _08052534 @ =IWRAM_START + 0xA8
	adds r0, r2, r3
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r6, r1, #0
	ldr r0, _08052538 @ =IWRAM_START + 0xAC
	adds r2, r2, r0
	ldr r2, [r2]
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r4, _0805253C @ =gUnknown_03005960
	ldr r0, [r4]
	subs r0, r6, r0
	mov r3, r8
	strh r0, [r3, #0x16]
	ldr r0, [r4, #4]
	subs r0, r7, r0
	strh r0, [r3, #0x18]
	mov r0, r8
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08052540
	ldr r0, [r5]
	bl TaskDestroy
	b _080526BA
	.align 2, 0
_0805252C: .4byte gCurTask
_08052530: .4byte IWRAM_START + 0xC
_08052534: .4byte IWRAM_START + 0xA8
_08052538: .4byte IWRAM_START + 0xAC
_0805253C: .4byte gUnknown_03005960
_08052540:
	ldr r1, [r4]
	movs r5, #0xb8
	lsls r5, r5, #1
	adds r0, r1, r5
	cmp r6, r0
	bgt _08052568
	adds r0, r1, #0
	subs r0, #0x80
	cmp r6, r0
	blt _08052568
	ldr r1, [r4, #4]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r7, r0
	bgt _08052568
	adds r0, r1, #0
	subs r0, #0x80
	cmp r7, r0
	bge _080525A4
_08052568:
	mov r3, r8
	ldrh r0, [r3, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805258E
	movs r5, #0x18
	ldrsh r0, [r3, r5]
	adds r0, #0x80
	cmp r0, #0
	blt _0805258E
	movs r0, #0x18
	ldrsh r1, [r3, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080525A4
_0805258E:
	mov r1, sb
	ldrb r0, [r1, #8]
	mov r2, sl
	strb r0, [r2]
	ldr r0, _080525A0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080526BA
	.align 2, 0
_080525A0: .4byte gCurTask
_080525A4:
	mov r5, sb
	adds r5, #0xa8
	ldr r0, [r5]
	mov r4, sb
	adds r4, #0xac
	ldr r1, [r4]
	bl sub_80122DC
	mov r1, sb
	adds r1, #0xb8
	ldrh r0, [r1]
	mov ip, r0
	mov sl, r5
	cmp r0, #0
	beq _080525C8
	subs r0, #1
	strh r0, [r1]
	b _0805267C
_080525C8:
	ldr r3, _0805261C @ =gUnknown_030059E0
	mov r5, sl
	ldr r2, [r5]
	ldr r1, _08052620 @ =0xFFFF8800
	adds r0, r2, r1
	ldr r1, [r3, #8]
	cmp r1, r0
	ble _0805267C
	movs r5, #0xf0
	lsls r5, r5, #7
	adds r0, r2, r5
	cmp r1, r0
	bge _0805267C
	ldr r2, [r4]
	ldr r1, _08052624 @ =0xFFFF9C00
	adds r0, r2, r1
	ldr r1, [r3, #0xc]
	cmp r1, r0
	ble _0805267C
	movs r5, #0xc8
	lsls r5, r5, #7
	adds r0, r2, r5
	cmp r1, r0
	bge _0805267C
	mov r0, sb
	adds r0, #0xbe
	mov r1, ip
	strh r1, [r0]
	adds r0, #2
	ldrb r1, [r0]
	cmp r1, #0
	bne _08052628
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r7
	adds r0, #0xa
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r3, #8]
	asrs r1, r1, #8
	subs r1, r1, r6
	b _08052656
	.align 2, 0
_0805261C: .4byte gUnknown_030059E0
_08052620: .4byte 0xFFFF8800
_08052624: .4byte 0xFFFF9C00
_08052628:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08052644
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r7
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r3, #8]
	asrs r1, r1, #8
	subs r1, r1, r6
	adds r1, #0xa
	b _08052656
_08052644:
	ldr r0, [r3, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r7
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r3, #8]
	asrs r1, r1, #8
	subs r1, r1, r6
	subs r1, #0xa
_08052656:
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	mov r1, sb
	adds r1, #0xba
	strh r0, [r1]
	mov r1, sb
	adds r1, #0xb0
	mov r2, sl
	ldr r0, [r2]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r4]
	str r0, [r1]
	ldr r0, _080526A0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080526A4 @ =sub_80526C8
	str r0, [r1, #8]
_0805267C:
	mov r0, r8
	bl sub_80051E8
	mov r0, r8
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #0
	bne _080526A8
	mov r3, r8
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r3, #0x10]
	mov r0, r8
	bl sub_80051E8
	b _080526BA
	.align 2, 0
_080526A0: .4byte gCurTask
_080526A4: .4byte sub_80526C8
_080526A8:
	mov r5, r8
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r5, #0x10]
	mov r0, r8
	bl sub_80051E8
_080526BA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80526C8
sub_80526C8: @ 0x080526C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r1, _08052784 @ =gCurTask
	ldr r0, [r1]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r4
	mov r8, r0
	ldr r2, _08052788 @ =IWRAM_START + 0xC
	adds r7, r4, r2
	ldr r0, _0805278C @ =IWRAM_START + 0x3C
	adds r0, r0, r4
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	adds r2, #0x9c
	adds r0, r4, r2
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r5, r1, #0
	adds r2, #4
	adds r0, r4, r2
	ldr r2, [r0]
	asrs r2, r2, #8
	str r2, [sp, #0x18]
	adds r6, r2, #0
	ldr r2, _08052790 @ =IWRAM_START + 0xB0
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	str r0, [sp, #0xc]
	str r0, [sp, #4]
	adds r2, #4
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	str r0, [sp, #0x10]
	str r0, [sp, #8]
	ldr r0, _08052794 @ =gUnknown_03005960
	mov sl, r0
	ldr r0, [r0]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	mov r2, sl
	ldr r0, [r2, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	mov r0, sp
	ldrh r2, [r0, #4]
	strh r2, [r0, #0x14]
	mov r0, sl
	ldr r0, [r0]
	mov ip, r0
	mov r0, sp
	ldrh r2, [r0, #0x14]
	mov r0, ip
	subs r2, r2, r0
	mov r0, sb
	strh r2, [r0, #0x16]
	mov r2, sl
	ldr r2, [r2, #4]
	mov ip, r2
	mov r2, sp
	ldrh r0, [r2, #0x14]
	mov r2, ip
	subs r0, r0, r2
	mov r2, sb
	strh r0, [r2, #0x18]
	ldr r0, _08052798 @ =IWRAM_START + 0xBE
	adds r4, r4, r0
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r2, #0
	ldrh r2, [r4]
	adds r0, r0, r2
	strh r0, [r4]
	adds r0, r7, #0
	ldr r2, [sp, #0x18]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _0805279C
	ldr r1, _08052784 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _0805289A
	.align 2, 0
_08052784: .4byte gCurTask
_08052788: .4byte IWRAM_START + 0xC
_0805278C: .4byte IWRAM_START + 0x3C
_08052790: .4byte IWRAM_START + 0xB0
_08052794: .4byte gUnknown_03005960
_08052798: .4byte IWRAM_START + 0xBE
_0805279C:
	mov r0, sb
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x10]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080527BC
	ldr r2, _080527B8 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _0805289A
	.align 2, 0
_080527B8: .4byte gCurTask
_080527BC:
	mov r0, sl
	ldr r1, [r0]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r5, r0
	bgt _080527E6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	blt _080527E6
	mov r0, sl
	ldr r1, [r0, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r6, r0
	bgt _080527E6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r6, r0
	bge _08052820
_080527E6:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805280A
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805280A
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08052820
_0805280A:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _0805281C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805289A
	.align 2, 0
_0805281C: .4byte gCurTask
_08052820:
	mov r0, r8
	adds r0, #0xa8
	ldr r0, [r0]
	mov r1, r8
	adds r1, #0xac
	ldr r1, [r1]
	bl sub_80122DC
	mov r2, r8
	adds r2, #0xbe
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, _08052878 @ =0x000043FF
	cmp r1, r0
	ble _08052854
	mov r1, r8
	adds r1, #0xb8
	movs r0, #0x20
	strh r0, [r1]
	movs r0, #0x88
	lsls r0, r0, #7
	strh r0, [r2]
	ldr r0, _0805287C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08052880 @ =sub_80528AC
	str r0, [r1, #8]
_08052854:
	adds r0, r7, #0
	bl sub_80051E8
	adds r0, r7, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #0
	bne _08052884
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
	b _08052894
	.align 2, 0
_08052878: .4byte 0x000043FF
_0805287C: .4byte gCurTask
_08052880: .4byte sub_80528AC
_08052884:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_08052894:
	mov r0, r8
	bl sub_8052CC8
_0805289A:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80528AC
sub_80528AC: @ 0x080528AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r1, _08052944 @ =gCurTask
	ldr r0, [r1]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r3
	mov sb, r0
	ldr r2, _08052948 @ =IWRAM_START + 0xC
	adds r2, r2, r3
	mov r8, r2
	ldr r6, _0805294C @ =IWRAM_START + 0x3C
	adds r6, r6, r3
	mov sl, r6
	ldr r0, [r0]
	str r0, [sp, #0x14]
	ldr r1, _08052950 @ =IWRAM_START + 0xA8
	adds r0, r3, r1
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, _08052954 @ =IWRAM_START + 0xAC
	adds r0, r3, r2
	ldr r2, [r0]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r6, _08052958 @ =IWRAM_START + 0xB0
	ldr r0, [r6, r3]
	mov ip, r0
	mov r6, ip
	asrs r6, r6, #8
	str r6, [sp, #0x18]
	str r6, [sp, #0x20]
	ldr r0, _0805295C @ =IWRAM_START + 0xB4
	adds r3, r3, r0
	ldr r0, [r3]
	asrs r0, r0, #8
	str r0, [sp, #0x1c]
	str r0, [sp, #0x24]
	ldr r3, _08052960 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	mov r6, r8
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	mov r0, sp
	ldrh r3, [r0, #0x20]
	ldr r6, _08052960 @ =gUnknown_03005960
	ldr r0, [r6]
	subs r0, r3, r0
	mov r6, sl
	strh r0, [r6, #0x16]
	ldr r6, _08052960 @ =gUnknown_03005960
	ldr r0, [r6, #4]
	subs r3, r3, r0
	mov r0, sl
	strh r3, [r0, #0x18]
	mov r0, r8
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08052964
	ldr r1, _08052944 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08052ADC
	.align 2, 0
_08052944: .4byte gCurTask
_08052948: .4byte IWRAM_START + 0xC
_0805294C: .4byte IWRAM_START + 0x3C
_08052950: .4byte IWRAM_START + 0xA8
_08052954: .4byte IWRAM_START + 0xAC
_08052958: .4byte IWRAM_START + 0xB0
_0805295C: .4byte IWRAM_START + 0xB4
_08052960: .4byte gUnknown_03005960
_08052964:
	mov r0, sl
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08052984
	ldr r2, _08052980 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _08052ADC
	.align 2, 0
_08052980: .4byte gCurTask
_08052984:
	ldr r3, _080529E8 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r6, #0xb8
	lsls r6, r6, #1
	adds r0, r1, r6
	cmp r4, r0
	bgt _080529AE
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _080529AE
	ldr r1, [r3, #4]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r5, r0
	bgt _080529AE
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _080529F0
_080529AE:
	mov r3, r8
	ldrh r0, [r3, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080529D4
	movs r6, #0x18
	ldrsh r0, [r3, r6]
	adds r0, #0x80
	cmp r0, #0
	blt _080529D4
	movs r0, #0x18
	ldrsh r1, [r3, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080529F0
_080529D4:
	mov r1, sb
	ldrb r0, [r1, #8]
	ldr r2, [sp, #0x14]
	strb r0, [r2]
	ldr r0, _080529EC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08052ADC
	.align 2, 0
_080529E8: .4byte gUnknown_03005960
_080529EC: .4byte gCurTask
_080529F0:
	mov r0, sb
	adds r0, #0xa8
	ldr r0, [r0]
	mov r1, sb
	adds r1, #0xac
	ldr r1, [r1]
	bl sub_80122DC
	mov r1, sb
	adds r1, #0xb8
	ldrh r0, [r1]
	cmp r0, #0
	beq _08052A90
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	bne _08052A98
	mov r0, sp
	movs r2, #1
	strh r2, [r0]
	mov r1, sp
	ldr r0, _08052A50 @ =0x000001EB
	strh r0, [r1, #2]
	movs r0, #0
	strb r0, [r1, #4]
	mov r0, sb
	adds r0, #0xbc
	ldrh r0, [r0]
	strh r0, [r1, #6]
	movs r0, #0xa0
	lsls r0, r0, #1
	strh r0, [r1, #8]
	mov r0, sb
	adds r0, #0xc0
	ldrb r1, [r0]
	cmp r1, #0
	bne _08052A58
	subs r0, #0x10
	ldr r0, [r0]
	str r0, [sp, #0xc]
	mov r0, sb
	adds r0, #0xb4
	ldr r0, [r0]
	ldr r3, _08052A54 @ =0xFFFFF600
	adds r0, r0, r3
	b _08052A80
	.align 2, 0
_08052A50: .4byte 0x000001EB
_08052A54: .4byte 0xFFFFF600
_08052A58:
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08052A6E
	mov r0, sb
	adds r0, #0xb0
	ldr r0, [r0]
	movs r6, #0xa0
	lsls r6, r6, #4
	adds r0, r0, r6
	b _08052A78
_08052A6E:
	mov r0, sb
	adds r0, #0xb0
	ldr r0, [r0]
	ldr r1, _08052A8C @ =0xFFFFF600
	adds r0, r0, r1
_08052A78:
	str r0, [sp, #0xc]
	mov r0, sb
	adds r0, #0xb4
	ldr r0, [r0]
_08052A80:
	str r0, [sp, #0x10]
	mov r0, sp
	bl sub_8050E04
	b _08052A98
	.align 2, 0
_08052A8C: .4byte 0xFFFFF600
_08052A90:
	ldr r0, _08052ABC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08052AC0 @ =sub_8052AEC
	str r0, [r1, #8]
_08052A98:
	mov r0, r8
	bl sub_80051E8
	mov r0, r8
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #0
	bne _08052AC4
	mov r2, r8
	ldr r0, [r2, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r2, #0x10]
	mov r0, r8
	bl sub_80051E8
	b _08052AD6
	.align 2, 0
_08052ABC: .4byte gCurTask
_08052AC0: .4byte sub_8052AEC
_08052AC4:
	mov r3, r8
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r3, #0x10]
	mov r0, r8
	bl sub_80051E8
_08052AD6:
	mov r0, sb
	bl sub_8052CC8
_08052ADC:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8052AEC
sub_8052AEC: @ 0x08052AEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r1, _08052BA8 @ =gCurTask
	ldr r0, [r1]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r4
	mov r8, r0
	ldr r2, _08052BAC @ =IWRAM_START + 0xC
	adds r7, r4, r2
	ldr r0, _08052BB0 @ =IWRAM_START + 0x3C
	adds r0, r0, r4
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	adds r2, #0x9c
	adds r0, r4, r2
	ldr r1, [r0]
	asrs r1, r1, #8
	adds r5, r1, #0
	adds r2, #4
	adds r0, r4, r2
	ldr r2, [r0]
	asrs r2, r2, #8
	str r2, [sp, #0x18]
	adds r6, r2, #0
	ldr r2, _08052BB4 @ =IWRAM_START + 0xB0
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	str r0, [sp, #0xc]
	str r0, [sp, #4]
	adds r2, #4
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	str r0, [sp, #0x10]
	str r0, [sp, #8]
	ldr r0, _08052BB8 @ =gUnknown_03005960
	mov sl, r0
	ldr r0, [r0]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	mov r2, sl
	ldr r0, [r2, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	mov r0, sp
	ldrh r2, [r0, #4]
	strh r2, [r0, #0x14]
	mov r0, sl
	ldr r0, [r0]
	mov ip, r0
	mov r0, sp
	ldrh r2, [r0, #0x14]
	mov r0, ip
	subs r2, r2, r0
	mov r0, sb
	strh r2, [r0, #0x16]
	mov r2, sl
	ldr r2, [r2, #4]
	mov ip, r2
	mov r2, sp
	ldrh r0, [r2, #0x14]
	mov r2, ip
	subs r0, r0, r2
	mov r2, sb
	strh r0, [r2, #0x18]
	ldr r0, _08052BBC @ =IWRAM_START + 0xBE
	adds r4, r4, r0
	ldr r2, _08052BC0 @ =0xFFFFFE00
	adds r0, r2, #0
	ldrh r2, [r4]
	adds r0, r0, r2
	strh r0, [r4]
	adds r0, r7, #0
	ldr r2, [sp, #0x18]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08052BC4
	ldr r1, _08052BA8 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08052CB6
	.align 2, 0
_08052BA8: .4byte gCurTask
_08052BAC: .4byte IWRAM_START + 0xC
_08052BB0: .4byte IWRAM_START + 0x3C
_08052BB4: .4byte IWRAM_START + 0xB0
_08052BB8: .4byte gUnknown_03005960
_08052BBC: .4byte IWRAM_START + 0xBE
_08052BC0: .4byte 0xFFFFFE00
_08052BC4:
	mov r0, sb
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x10]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08052BE4
	ldr r2, _08052BE0 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _08052CB6
	.align 2, 0
_08052BE0: .4byte gCurTask
_08052BE4:
	mov r0, sl
	ldr r1, [r0]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r5, r0
	bgt _08052C0E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	blt _08052C0E
	mov r0, sl
	ldr r1, [r0, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r6, r0
	bgt _08052C0E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r6, r0
	bge _08052C48
_08052C0E:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08052C32
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08052C32
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08052C48
_08052C32:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _08052C44 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08052CB6
	.align 2, 0
_08052C44: .4byte gCurTask
_08052C48:
	mov r0, r8
	adds r0, #0xa8
	ldr r0, [r0]
	mov r1, r8
	adds r1, #0xac
	ldr r1, [r1]
	bl sub_80122DC
	mov r1, r8
	adds r1, #0xbe
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bge _08052C76
	movs r0, #0
	strh r0, [r1]
	subs r1, #6
	movs r0, #0x78
	strh r0, [r1]
	ldr r0, _08052C98 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08052C9C @ =sub_80524D0
	str r0, [r1, #8]
_08052C76:
	adds r0, r7, #0
	bl sub_80051E8
	adds r0, r7, #0
	adds r0, #0x20
	ldrb r0, [r0]
	cmp r0, #0
	bne _08052CA0
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
	b _08052CB0
	.align 2, 0
_08052C98: .4byte gCurTask
_08052C9C: .4byte sub_80524D0
_08052CA0:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_08052CB0:
	mov r0, r8
	bl sub_8052CC8
_08052CB6:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8052CC8
sub_8052CC8: @ 0x08052CC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	movs r0, #0x3c
	adds r0, r0, r7
	mov r8, r0
	adds r4, r7, #0
	adds r4, #0x6c
	adds r1, r7, #0
	adds r1, #0x9c
	str r1, [sp]
	ldr r3, _08052D70 @ =gUnknown_08097AA4
	adds r0, r7, #0
	adds r0, #0xba
	ldrh r2, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r1, r0, r3
	movs r0, #0
	ldrsh r1, [r1, r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	asrs r0, r0, #5
	str r0, [sp, #4]
	lsls r2, r2, #1
	adds r2, r2, r3
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r0, r1, #3
	subs r0, r0, r1
	asrs r0, r0, #5
	str r0, [sp, #8]
	adds r0, r7, #0
	adds r0, #0xbe
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0xe0
	lsls r1, r1, #4
	bl Div
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	movs r0, #0
	cmp r0, sl
	bhs _08052DAE
_08052D30:
	adds r2, r0, #1
	ldr r3, [sp, #4]
	adds r1, r2, #0
	muls r1, r3, r1
	adds r0, r7, #0
	adds r0, #0xa8
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r5, r1, #8
	ldr r0, [sp, #8]
	adds r1, r2, #0
	muls r1, r0, r1
	adds r0, r7, #0
	adds r0, #0xac
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r6, r1, #8
	ldr r1, _08052D74 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r3, r5, r0
	strh r3, [r4, #0x16]
	adds r0, r7, #0
	adds r0, #0xc0
	ldrb r1, [r0]
	mov sb, r2
	cmp r1, #0
	bne _08052D78
	ldr r2, _08052D74 @ =gUnknown_03005960
	ldr r0, [r2, #4]
	subs r0, r6, r0
	subs r0, #0xa
	b _08052D92
	.align 2, 0
_08052D70: .4byte gUnknown_08097AA4
_08052D74: .4byte gUnknown_03005960
_08052D78:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08052D86
	adds r0, r3, #0
	adds r0, #0xa
	b _08052D8A
_08052D86:
	adds r0, r3, #0
	subs r0, #0xa
_08052D8A:
	strh r0, [r4, #0x16]
	ldr r3, _08052E54 @ =gUnknown_03005960
	ldr r0, [r3, #4]
	subs r0, r6, r0
_08052D92:
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_800C84C
	adds r0, r4, #0
	bl sub_80051E8
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, sl
	blo _08052D30
_08052DAE:
	adds r4, r7, #0
	adds r4, #0xb0
	ldr r3, _08052E58 @ =gUnknown_08097AA4
	movs r2, #0xba
	adds r2, r2, r7
	mov ip, r2
	ldrh r0, [r2]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0xbe
	adds r0, r0, r7
	mov sb, r0
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	muls r0, r1, r0
	asrs r0, r0, #6
	adds r1, r7, #0
	adds r1, #0xa8
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r4]
	adds r2, r7, #0
	adds r2, #0xb4
	mov r1, ip
	ldrh r0, [r1]
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r3, #0
	ldrsh r1, [r0, r3]
	mov r3, sb
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	muls r1, r0, r1
	asrs r1, r1, #6
	adds r0, r7, #0
	adds r0, #0xac
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, [r4]
	asrs r5, r0, #8
	asrs r6, r1, #8
	adds r3, r5, #0
	ldr r4, _08052E54 @ =gUnknown_03005960
	ldr r0, [r4]
	subs r1, r3, r0
	mov r0, r8
	strh r1, [r0, #0x16]
	adds r0, r7, #0
	adds r0, #0xc0
	ldrb r2, [r0]
	cmp r2, #0
	bne _08052E60
	adds r2, r6, #0
	ldr r0, [r4, #4]
	subs r0, r2, r0
	subs r0, #0xa
	mov r1, r8
	strh r0, [r1, #0x18]
	ldr r1, _08052E5C @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r2
	adds r0, #0xa
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	asrs r1, r1, #8
	subs r1, r1, r3
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	ldr r2, [sp]
	strh r0, [r2]
	b _08052EBE
	.align 2, 0
_08052E54: .4byte gUnknown_03005960
_08052E58: .4byte gUnknown_08097AA4
_08052E5C: .4byte gUnknown_030059E0
_08052E60:
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08052E8C
	adds r0, r1, #0
	adds r0, #0xa
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r1, _08052E88 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r6
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	asrs r1, r1, #8
	subs r1, r1, r3
	adds r1, #0xa
	b _08052EA8
	.align 2, 0
_08052E88: .4byte gUnknown_030059E0
_08052E8C:
	adds r0, r1, #0
	subs r0, #0xa
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r1, _08052F08 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	subs r0, r0, r6
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	asrs r1, r1, #8
	subs r1, r1, r3
	subs r1, #0xa
_08052EA8:
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	ldr r2, [sp]
	strh r0, [r2]
	ldr r0, _08052F0C @ =gUnknown_03005960
	ldr r0, [r0, #4]
	subs r0, r6, r0
	mov r3, r8
	strh r0, [r3, #0x18]
_08052EBE:
	mov r0, r8
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_800C84C
	movs r0, #0x80
	lsls r0, r0, #1
	ldr r1, [sp]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	mov r2, r8
	ldrh r0, [r2, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r2, #0x18]
	strh r0, [r1, #8]
	ldrh r1, [r1]
	adds r0, r7, #0
	adds r0, #0xbc
	strh r1, [r0]
	ldr r3, [sp]
	ldrh r2, [r3]
	ldr r1, _08052F10 @ =0xFFFFFF00
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #2
	cmp r0, r1
	bls _08052F14
	movs r0, #0xf4
	lsls r0, r0, #1
	mov r2, r8
	strh r0, [r2, #0xa]
	mov r1, r8
	adds r1, #0x20
	movs r0, #0
	b _08052F28
	.align 2, 0
_08052F08: .4byte gUnknown_030059E0
_08052F0C: .4byte gUnknown_03005960
_08052F10: .4byte 0xFFFFFF00
_08052F14:
	adds r0, r1, #0
	eors r0, r2
	ldr r3, [sp]
	strh r0, [r3]
	movs r0, #0xf4
	lsls r0, r0, #1
	mov r1, r8
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
_08052F28:
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08052F68 @ =gUnknown_030054B8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08052F6C @ =0x00002060
	orrs r0, r1
	mov r2, r8
	str r0, [r2, #0x10]
	mov r0, r8
	bl sub_8004558
	mov r0, r8
	ldr r1, [sp]
	bl sub_8004860
	mov r0, r8
	bl sub_80051E8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08052F68: .4byte gUnknown_030054B8
_08052F6C: .4byte 0x00002060

	thumb_func_start sub_8052F70
sub_8052F70: @ 0x08052F70
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #0x70]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8052F94
sub_8052F94: @ 0x08052F94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov r8, r3
	ldr r0, _080530AC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _08052FD0
	ldr r0, _080530B0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	bgt _08052FD0
	ldr r0, _080530B4 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	beq _0805309A
_08052FD0:
	ldr r0, _080530B8 @ =sub_80530E0
	ldr r2, _080530BC @ =0x00004030
	ldr r1, _080530C0 @ =sub_8053770
	str r1, [sp]
	movs r1, #0x6c
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r5, r1
	ldr r0, _080530C4 @ =IWRAM_START + 0xC
	adds r6, r5, r0
	movs r4, #0
	mov r2, sb
	strh r2, [r1, #4]
	mov r0, sl
	strh r0, [r1, #6]
	str r7, [r1]
	ldrb r0, [r7]
	strb r0, [r1, #8]
	mov r2, r8
	strb r2, [r1, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	mov r2, sb
	lsls r3, r2, #8
	adds r0, r0, r3
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov sb, r0
	mov r0, sl
	lsls r2, r0, #8
	add sb, r2
	mov r0, sb
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	str r4, [r1, #0x4c]
	str r4, [r1, #0x50]
	str r4, [r1, #0x54]
	str r4, [r1, #0x58]
	str r4, [r1, #0x60]
	ldr r0, _080530C8 @ =IWRAM_START + 0x64
	strh r4, [r0, r5]
	adds r0, #2
	strh r4, [r0, r5]
	str r4, [r1, #0x5c]
	ldr r1, _080530CC @ =IWRAM_START + 0x68
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldrb r0, [r7]
	lsls r0, r0, #3
	adds r0, r0, r3
	strh r0, [r6, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	adds r0, r0, r2
	strh r0, [r6, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r7]
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0xf1
	lsls r0, r0, #1
	strh r0, [r6, #0xa]
	ldr r1, _080530D0 @ =IWRAM_START + 0x2C
	adds r0, r5, r1
	movs r2, #0
	strb r2, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	ldr r0, _080530D4 @ =IWRAM_START + 0x2D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _080530D8 @ =IWRAM_START + 0x2E
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080530DC @ =IWRAM_START + 0x31
	adds r5, r5, r0
	movs r1, #0
	strb r1, [r5]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
_0805309A:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080530AC: .4byte gUnknown_030054CC
_080530B0: .4byte gUnknown_030055B4
_080530B4: .4byte gUnknown_030054EC
_080530B8: .4byte sub_80530E0
_080530BC: .4byte 0x00004030
_080530C0: .4byte sub_8053770
_080530C4: .4byte IWRAM_START + 0xC
_080530C8: .4byte IWRAM_START + 0x64
_080530CC: .4byte IWRAM_START + 0x68
_080530D0: .4byte IWRAM_START + 0x2C
_080530D4: .4byte IWRAM_START + 0x2D
_080530D8: .4byte IWRAM_START + 0x2E
_080530DC: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80530E0
sub_80530E0: @ 0x080530E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0805311C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov r8, r0
	ldr r0, _08053120 @ =IWRAM_START + 0xC
	adds r0, r0, r1
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	ldr r0, [r0, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08053124
	mov r2, r8
	ldr r0, [r2, #0x4c]
	adds r0, #0xc0
	str r0, [r2, #0x4c]
	b _0805312C
	.align 2, 0
_0805311C: .4byte gCurTask
_08053120: .4byte IWRAM_START + 0xC
_08053124:
	mov r3, r8
	ldr r0, [r3, #0x4c]
	subs r0, #0xc0
	str r0, [r3, #0x4c]
_0805312C:
	mov r0, r8
	ldr r1, [r0, #0x44]
	ldr r0, [r0, #0x4c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r6, r1, #0
	mov r3, r8
	ldr r2, [r3, #0x48]
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r4, _080531C8 @ =gUnknown_03005960
	ldr r0, [r4]
	subs r0, r6, r0
	mov r3, sb
	strh r0, [r3, #0x16]
	ldr r0, [r4, #4]
	subs r0, r7, r0
	strh r0, [r3, #0x18]
	mov r0, sb
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _080531BE
	mov r1, r8
	ldr r0, [r1, #0x44]
	asrs r2, r0, #8
	ldr r1, [r4]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805318E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805318E
	mov r1, r8
	ldr r0, [r1, #0x48]
	asrs r2, r0, #8
	ldr r1, [r4, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805318E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _080531D0
_0805318E:
	mov r1, sb
	ldrh r0, [r1, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080531B6
	mov r2, sb
	movs r3, #0x18
	ldrsh r0, [r2, r3]
	adds r0, #0x80
	cmp r0, #0
	blt _080531B6
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080531D0
_080531B6:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
_080531BE:
	ldr r0, _080531CC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805339C
	.align 2, 0
_080531C8: .4byte gUnknown_03005960
_080531CC: .4byte gCurTask
_080531D0:
	mov r0, r8
	adds r0, #0x68
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _080531E8
	subs r0, r1, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080531E8
	b _080532FC
_080531E8:
	mov r3, sb
	ldr r1, [r3, #0x10]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _08053264
	ldr r3, _08053258 @ =gUnknown_030059E0
	ldr r0, [r3, #8]
	asrs r2, r0, #8
	adds r0, r6, #0
	subs r0, #0x3c
	cmp r2, r0
	ble _08053264
	cmp r2, r6
	bge _08053264
	ldr r0, [r3, #0xc]
	asrs r2, r0, #8
	cmp r2, r7
	ble _08053264
	adds r0, r7, #0
	adds r0, #0x50
	cmp r2, r0
	bge _08053264
	ldr r0, _0805325C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08053260 @ =sub_80534F0
	str r0, [r1, #8]
	movs r0, #0xf1
	lsls r0, r0, #1
	mov r1, sb
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r3, #0xc]
	mov r2, r8
	str r0, [r2, #0x5c]
	lsls r5, r6, #8
	ldr r0, [r3, #8]
	subs r0, r0, r5
	movs r1, #0x20
	str r3, [sp, #4]
	bl Div
	mov r1, r8
	adds r1, #0x64
	strh r0, [r1]
	lsls r4, r7, #8
	ldr r3, [sp, #4]
	ldr r0, [r3, #0xc]
	b _080532E0
	.align 2, 0
_08053258: .4byte gUnknown_030059E0
_0805325C: .4byte gCurTask
_08053260: .4byte sub_80534F0
_08053264:
	ldrb r0, [r4]
	cmp r0, #0
	bne _080532FC
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080532FC
	ldr r3, _080532F0 @ =gUnknown_030059E0
	mov sl, r3
	ldr r0, [r3, #8]
	asrs r1, r0, #8
	cmp r1, r6
	ble _080532FC
	adds r0, r6, #0
	adds r0, #0x3c
	cmp r1, r0
	bge _080532FC
	ldr r0, [r3, #0xc]
	asrs r1, r0, #8
	cmp r1, r7
	ble _080532FC
	adds r0, r7, #0
	adds r0, #0x50
	cmp r1, r0
	bge _080532FC
	ldr r0, _080532F4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080532F8 @ =sub_80534F0
	str r0, [r1, #8]
	movs r0, #0xf1
	lsls r0, r0, #1
	mov r1, sb
	strh r0, [r1, #0xa]
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r3, #0xc]
	mov r2, r8
	str r0, [r2, #0x5c]
	lsls r5, r6, #8
	ldr r0, [r3, #8]
	subs r0, r5, r0
	movs r1, #0x20
	bl Div
	mov r4, r8
	adds r4, #0x64
	strh r0, [r4]
	mov r3, sl
	ldr r0, [r3, #8]
	subs r0, r0, r5
	movs r1, #0x20
	bl Div
	strh r0, [r4]
	lsls r4, r7, #8
	mov r1, sl
	ldr r0, [r1, #0xc]
_080532E0:
	subs r0, r0, r4
	movs r1, #0x20
	bl Div
	mov r1, r8
	adds r1, #0x66
	strh r0, [r1]
	b _08053388
	.align 2, 0
_080532F0: .4byte gUnknown_030059E0
_080532F4: .4byte gCurTask
_080532F8: .4byte sub_80534F0
_080532FC:
	mov r2, r8
	ldr r1, [r2, #0x4c]
	asrs r3, r1, #8
	ldr r2, [sp]
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r4, r1, #0
	adds r5, r0, #0
	cmp r3, r2
	bgt _0805334C
	mov r3, sb
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _0805334C
	ldr r0, _08053344 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08053348 @ =sub_80533B4
	str r0, [r1, #8]
	movs r0, #0xf1
	lsls r0, r0, #1
	strh r0, [r3, #0xa]
	mov r1, sb
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	lsls r5, r6, #8
	lsls r4, r7, #8
	b _08053388
	.align 2, 0
_08053344: .4byte gCurTask
_08053348: .4byte sub_80533B4
_0805334C:
	asrs r1, r4, #8
	ldr r2, [sp]
	ldrb r0, [r2, #5]
	adds r0, r5, r0
	lsls r0, r0, #3
	lsls r5, r6, #8
	lsls r4, r7, #8
	cmp r1, r0
	blt _08053388
	mov r3, sb
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08053388
	ldr r0, _080533AC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080533B0 @ =sub_80533B4
	str r0, [r1, #8]
	movs r0, #0xf1
	lsls r0, r0, #1
	strh r0, [r3, #0xa]
	mov r1, sb
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08053388:
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_80122DC
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
_0805339C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080533AC: .4byte gCurTask
_080533B0: .4byte sub_80533B4

	thumb_func_start sub_80533B4
sub_80533B4: @ 0x080533B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0805340C @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r3, _08053410 @ =IWRAM_START + 0xC
	adds r6, r1, r3
	ldr r0, [r7]
	mov sl, r0
	ldr r1, [r7, #0x44]
	ldr r0, [r7, #0x4c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x48]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08053414 @ =gUnknown_03005960
	mov r8, r3
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08053418
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _080534D8
	.align 2, 0
_0805340C: .4byte gCurTask
_08053410: .4byte IWRAM_START + 0xC
_08053414: .4byte gUnknown_03005960
_08053418:
	ldr r0, [r7, #0x44]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805344A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805344A
	ldr r0, [r7, #0x48]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805344A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08053484
_0805344A:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805346E
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805346E
	movs r3, #0x18
	ldrsh r1, [r6, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08053484
_0805346E:
	ldrb r0, [r7, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08053480 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080534D8
	.align 2, 0
_08053480: .4byte gCurTask
_08053484:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _080534D2
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080534B0
	ldr r0, _080534AC @ =0xFFFFFBFF
	ands r1, r0
	b _080534B2
	.align 2, 0
_080534AC: .4byte 0xFFFFFBFF
_080534B0:
	orrs r1, r2
_080534B2:
	str r1, [r6, #0x10]
	movs r1, #0
	movs r0, #0xf1
	lsls r0, r0, #1
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080534E8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080534EC @ =sub_80530E0
	str r0, [r1, #8]
_080534D2:
	adds r0, r6, #0
	bl sub_80051E8
_080534D8:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080534E8: .4byte gCurTask
_080534EC: .4byte sub_80530E0

	thumb_func_start sub_80534F0
sub_80534F0: @ 0x080534F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08053568 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r2, _0805356C @ =IWRAM_START + 0xC
	adds r7, r1, r2
	ldr r3, [r6]
	mov sl, r3
	adds r2, #0x58
	adds r0, r1, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	ldr r2, [r6, #0x54]
	adds r2, r2, r0
	str r2, [r6, #0x54]
	ldr r0, _08053570 @ =IWRAM_START + 0x66
	adds r1, r1, r0
	movs r3, #0
	ldrsh r0, [r1, r3]
	ldr r3, [r6, #0x58]
	adds r3, r3, r0
	str r3, [r6, #0x58]
	ldr r1, [r6, #0x44]
	ldr r0, [r6, #0x4c]
	adds r1, r1, r0
	adds r1, r1, r2
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r6, #0x48]
	adds r2, r2, r3
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r0, _08053574 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08053578
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08053608
	.align 2, 0
_08053568: .4byte gCurTask
_0805356C: .4byte IWRAM_START + 0xC
_08053570: .4byte IWRAM_START + 0x66
_08053574: .4byte gUnknown_03005960
_08053578:
	ldr r0, [r6, #0x44]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080535AA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080535AA
	ldr r0, [r6, #0x48]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _080535AA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _080535E4
_080535AA:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080535CE
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080535CE
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080535E4
_080535CE:
	ldrb r0, [r6, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _080535E0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08053608
	.align 2, 0
_080535E0: .4byte gCurTask
_080535E4:
	lsls r0, r4, #8
	lsls r4, r5, #8
	adds r1, r4, #0
	bl sub_80122DC
	ldr r0, [r6, #0x5c]
	cmp r4, r0
	ble _080535FC
	ldr r0, _08053618 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805361C @ =sub_8053620
	str r0, [r1, #8]
_080535FC:
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08053608:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053618: .4byte gCurTask
_0805361C: .4byte sub_8053620

	thumb_func_start sub_8053620
sub_8053620: @ 0x08053620
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08053698 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r2, _0805369C @ =IWRAM_START + 0xC
	adds r7, r1, r2
	ldr r3, [r4]
	mov sl, r3
	adds r2, #0x58
	adds r0, r1, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	ldr r2, [r4, #0x54]
	subs r2, r2, r0
	str r2, [r4, #0x54]
	ldr r0, _080536A0 @ =IWRAM_START + 0x66
	adds r1, r1, r0
	movs r3, #0
	ldrsh r0, [r1, r3]
	ldr r3, [r4, #0x58]
	subs r3, r3, r0
	str r3, [r4, #0x58]
	ldr r1, [r4, #0x44]
	ldr r0, [r4, #0x4c]
	adds r1, r1, r0
	adds r1, r1, r2
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r4, #0x48]
	adds r2, r2, r3
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r0, _080536A4 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080536A8
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _0805375A
	.align 2, 0
_08053698: .4byte gCurTask
_0805369C: .4byte IWRAM_START + 0xC
_080536A0: .4byte IWRAM_START + 0x66
_080536A4: .4byte gUnknown_03005960
_080536A8:
	ldr r0, [r4, #0x44]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080536DA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080536DA
	ldr r0, [r4, #0x48]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _080536DA
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08053714
_080536DA:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080536FE
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080536FE
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08053714
_080536FE:
	ldrb r0, [r4, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _08053710 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805375A
	.align 2, 0
_08053710: .4byte gCurTask
_08053714:
	lsls r0, r5, #8
	lsls r1, r6, #8
	bl sub_80122DC
	ldr r0, [r4, #0x58]
	cmp r0, #0
	bgt _0805374E
	movs r0, #0
	str r0, [r4, #0x54]
	str r0, [r4, #0x58]
	movs r1, #0
	movs r0, #0xf1
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x68
	movs r0, #0x3c
	strb r0, [r1]
	ldr r0, _08053768 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805376C @ =sub_80530E0
	str r0, [r1, #8]
_0805374E:
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_0805375A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053768: .4byte gCurTask
_0805376C: .4byte sub_80530E0

	thumb_func_start sub_8053770
sub_8053770: @ 0x08053770
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8053784
sub_8053784: @ 0x08053784
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r6, r1, #0
	mov r8, r2
	mov sb, r3
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r1, sb
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, _08053878 @ =sub_80538A0
	ldr r2, _0805387C @ =0x00004020
	ldr r1, _08053880 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x40
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r4, r0
	ldr r3, _08053884 @ =IWRAM_START + 0xC
	adds r5, r4, r3
	movs r2, #0
	movs r7, #0
	strh r6, [r0, #4]
	mov r1, r8
	strh r1, [r0, #6]
	mov r3, sl
	str r3, [r0]
	ldrb r1, [r3]
	strb r1, [r0, #8]
	mov r1, sb
	strb r1, [r0, #9]
	ldr r3, _08053888 @ =IWRAM_START + 0x3C
	adds r1, r4, r3
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0805388C @ =IWRAM_START + 0x3D
	adds r0, r4, r1
	strb r2, [r0]
	adds r3, #2
	adds r0, r4, r3
	strb r2, [r0]
	adds r1, #2
	adds r0, r4, r1
	strb r2, [r0]
	mov r3, sl
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	strh r0, [r5, #0x16]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	mov r1, r8
	lsls r1, r1, #8
	mov r8, r1
	add r0, r8
	strh r0, [r5, #0x18]
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	mov r1, sl
	strb r0, [r1]
	movs r0, #0x14
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	strh r7, [r5, #8]
	ldr r0, _08053890 @ =0x000001DF
	strh r0, [r5, #0xa]
	ldr r3, _08053894 @ =IWRAM_START + 0x2C
	adds r0, r4, r3
	ldr r2, [sp, #4]
	strb r2, [r0]
	strh r7, [r5, #0x14]
	strh r7, [r5, #0x1c]
	ldr r0, _08053898 @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r3, #2
	adds r1, r4, r3
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0805389C @ =IWRAM_START + 0x31
	adds r4, r4, r0
	strb r2, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053878: .4byte sub_80538A0
_0805387C: .4byte 0x00004020
_08053880: .4byte sub_80095E8
_08053884: .4byte IWRAM_START + 0xC
_08053888: .4byte IWRAM_START + 0x3C
_0805388C: .4byte IWRAM_START + 0x3D
_08053890: .4byte 0x000001DF
_08053894: .4byte IWRAM_START + 0x2C
_08053898: .4byte IWRAM_START + 0x2D
_0805389C: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80538A0
sub_80538A0: @ 0x080538A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _08053954 @ =gCurTask
	mov sl, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r5
	mov r8, r0
	ldr r1, _08053958 @ =IWRAM_START + 0xC
	adds r6, r5, r1
	ldr r3, [r0]
	mov sb, r3
	ldrb r2, [r0, #8]
	lsls r2, r2, #3
	ldrh r0, [r0, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldrb r1, [r3, #1]
	lsls r1, r1, #3
	mov r4, r8
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r7, _0805395C @ =IWRAM_START + 0x3D
	adds r4, r5, r7
	ldr r0, _08053960 @ =IWRAM_START + 0x3C
	adds r0, r5, r0
	str r0, [sp]
	ldrb r0, [r0]
	ldrb r3, [r4]
	adds r0, r0, r3
	strb r0, [r4]
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _08053964 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r7, r2, #0x10
	mov ip, r7
	asrs r2, r2, #0x10
	subs r2, r2, r0
	strh r2, [r6, #0x16]
	ldr r0, [r3, #4]
	lsrs r3, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	strh r1, [r6, #0x18]
	movs r2, #0
	ldrsb r2, [r4, r2]
	mov r0, sb
	movs r1, #4
	ldrsb r1, [r0, r1]
	lsls r0, r1, #3
	cmp r2, r0
	bgt _08053978
	ldr r4, _08053968 @ =IWRAM_START + 0x3E
	adds r1, r5, r4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	movs r2, #1
	ldr r7, [sp]
	strb r2, [r7]
	ldrb r1, [r1]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _0805398A
	ldr r0, _0805396C @ =IWRAM_START + 0x3F
	adds r1, r5, r0
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08053970 @ =IWRAM_START + 0x2C
	adds r0, r5, r1
	strb r2, [r0]
	mov r4, sl
	ldr r1, [r4]
	ldr r0, _08053974 @ =sub_8053A38
	str r0, [r1, #8]
	b _0805398A
	.align 2, 0
_08053954: .4byte gCurTask
_08053958: .4byte IWRAM_START + 0xC
_0805395C: .4byte IWRAM_START + 0x3D
_08053960: .4byte IWRAM_START + 0x3C
_08053964: .4byte gUnknown_03005960
_08053968: .4byte IWRAM_START + 0x3E
_0805396C: .4byte IWRAM_START + 0x3F
_08053970: .4byte IWRAM_START + 0x2C
_08053974: .4byte sub_8053A38
_08053978:
	mov r7, sb
	ldrb r0, [r7, #6]
	adds r0, r1, r0
	lsls r0, r0, #3
	cmp r2, r0
	blt _0805398A
	movs r0, #0xff
	ldr r1, [sp]
	strb r0, [r1]
_0805398A:
	mov r4, ip
	lsls r5, r4, #0x10
	asrs r7, r5, #0x10
	lsls r4, r3, #0x10
	asrs r2, r4, #0x10
	adds r0, r6, #0
	adds r1, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _080539DA
	ldrh r3, [r6, #0x16]
	adds r0, r3, #0
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080539D2
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	mov r1, r8
	adds r1, #0x3d
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r1, r0, r1
	adds r0, r1, #0
	adds r0, #0x80
	cmp r0, #0
	blt _080539D2
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080539E8
_080539D2:
	mov r3, r8
	ldrb r0, [r3, #8]
	mov r4, sb
	strb r0, [r4]
_080539DA:
	ldr r0, _080539E4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08053A28
	.align 2, 0
_080539E4: .4byte gCurTask
_080539E8:
	ldr r0, _080539FC @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	asrs r0, r0, #8
	cmp r0, r7
	bge _08053A04
	ldr r0, [r6, #0x10]
	ldr r1, _08053A00 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	b _08053A14
	.align 2, 0
_080539FC: .4byte gUnknown_030059E0
_08053A00: .4byte 0xFFFFFBFF
_08053A04:
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r0, r3, #0
	adds r0, #8
	strh r0, [r6, #0x16]
_08053A14:
	asrs r0, r5, #8
	asrs r1, r4, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08053A28:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8053A38
sub_8053A38: @ 0x08053A38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _08053AB4 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r3, r0
	ldr r1, _08053AB8 @ =IWRAM_START + 0xC
	adds r7, r3, r1
	ldr r2, [r4]
	mov r8, r2
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldrb r2, [r2, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r5, _08053ABC @ =IWRAM_START + 0x3D
	adds r6, r3, r5
	movs r0, #0
	ldrsb r0, [r6, r0]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldr r3, _08053AC0 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r5, r1, #0x10
	str r5, [sp]
	asrs r5, r1, #0x10
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	lsrs r1, r2, #0x10
	mov sl, r1
	asrs r2, r2, #0x10
	subs r0, r2, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	adds r1, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08053AC4
	mov r2, sb
	ldr r0, [r2]
	bl TaskDestroy
	b _08053BA2
	.align 2, 0
_08053AB4: .4byte gCurTask
_08053AB8: .4byte IWRAM_START + 0xC
_08053ABC: .4byte IWRAM_START + 0x3D
_08053AC0: .4byte gUnknown_03005960
_08053AC4:
	ldrh r2, [r7, #0x16]
	adds r0, r2, #0
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08053AEE
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	movs r1, #0
	ldrsb r1, [r6, r1]
	subs r3, r0, r1
	adds r0, r3, #0
	adds r0, #0x80
	cmp r0, #0
	blt _08053AEE
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r3, r0
	ble _08053B04
_08053AEE:
	ldrb r0, [r4, #8]
	mov r2, r8
	strb r0, [r2]
	ldr r0, _08053B00 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08053BA2
	.align 2, 0
_08053B00: .4byte gCurTask
_08053B04:
	ldr r0, _08053B18 @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	asrs r0, r0, #8
	cmp r0, r5
	bge _08053B20
	ldr r0, [r7, #0x10]
	ldr r1, _08053B1C @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r7, #0x10]
	b _08053B30
	.align 2, 0
_08053B18: .4byte gUnknown_030059E0
_08053B1C: .4byte 0xFFFFFBFF
_08053B20:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r7, #0x10]
	adds r0, r2, #0
	adds r0, #8
	strh r0, [r7, #0x16]
_08053B30:
	adds r4, #0x3f
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldr r5, [sp]
	lsls r0, r5, #0x10
	asrs r5, r0, #0x10
	lsls r0, r5, #8
	mov r2, sl
	lsls r1, r2, #0x10
	asrs r6, r1, #0x10
	lsls r1, r6, #8
	bl sub_80122DC
	ldrb r0, [r4]
	cmp r0, #0x12
	bne _08053B82
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08053B70
	subs r0, r5, #4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r6, #2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8053BBC
	b _08053B82
_08053B70:
	adds r0, r5, #0
	adds r0, #9
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r6, #2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8053BBC
_08053B82:
	adds r0, r7, #0
	bl sub_8004558
	adds r2, r0, #0
	cmp r2, #0
	bne _08053B9C
	ldr r0, _08053BB4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08053BB8 @ =sub_80538A0
	str r0, [r1, #8]
	adds r0, r7, #0
	adds r0, #0x20
	strb r2, [r0]
_08053B9C:
	adds r0, r7, #0
	bl sub_80051E8
_08053BA2:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053BB4: .4byte gCurTask
_08053BB8: .4byte sub_80538A0

	thumb_func_start sub_8053BBC
sub_8053BBC: @ 0x08053BBC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	ldr r0, _08053C2C @ =sub_8053CC0
	ldr r2, _08053C30 @ =0x00004028
	ldr r1, _08053C34 @ =sub_8054054
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	movs r1, #0
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r6, #0x32]
	strh r1, [r6, #0x30]
	strh r1, [r6, #0x36]
	strh r7, [r6, #0x38]
	ldr r0, _08053C38 @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	asrs r1, r0, #8
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _08053C40
	subs r1, r0, r1
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xc8
	lsls r1, r1, #2
	bl Div
	rsbs r0, r0, #0
	strh r0, [r6, #0x34]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x3c
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08053C62
	ldr r0, _08053C3C @ =0x0000FFC4
	b _08053C60
	.align 2, 0
_08053C2C: .4byte sub_8053CC0
_08053C30: .4byte 0x00004028
_08053C34: .4byte sub_8054054
_08053C38: .4byte gUnknown_030059E0
_08053C3C: .4byte 0x0000FFC4
_08053C40:
	subs r1, r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xc8
	lsls r1, r1, #2
	bl Div
	strh r0, [r6, #0x34]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3c
	ble _08053C62
	movs r0, #0x3c
_08053C60:
	strh r0, [r6, #0x34]
_08053C62:
	movs r5, #0
	movs r4, #0
	strh r7, [r6, #0x16]
	mov r0, r8
	strh r0, [r6, #0x18]
	movs r0, #4
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	movs r0, #0xf0
	lsls r0, r0, #1
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r5, [r0]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x25
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8053CC0
sub_8053CC0: @ 0x08053CC0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r6, _08053D3C @ =gCurTask
	ldr r0, [r6]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldrh r0, [r4, #0x32]
	adds r0, #0x28
	movs r5, #0
	strh r0, [r4, #0x32]
	ldrh r0, [r4, #0x34]
	ldrh r1, [r4, #0x36]
	adds r0, r0, r1
	strh r0, [r4, #0x36]
	movs r2, #0x36
	ldrsh r0, [r4, r2]
	movs r1, #0x28
	bl Div
	ldrh r1, [r4, #0x38]
	adds r1, r1, r0
	strh r1, [r4, #0x16]
	ldrh r1, [r4, #0x32]
	lsls r1, r1, #0x10
	asrs r0, r1, #0x18
	ldrh r2, [r4, #0x18]
	adds r0, r0, r2
	strh r0, [r4, #0x18]
	cmp r1, #0
	ble _08053D4E
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	movs r2, #0x16
	ldrsh r1, [r4, r2]
	str r5, [sp]
	ldr r2, _08053D40 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801F07C
	adds r1, r0, #0
	cmp r1, #0
	bge _08053D4E
	ldrh r0, [r4, #0x18]
	adds r0, r0, r1
	strh r0, [r4, #0x18]
	ldrh r1, [r4, #0x30]
	cmp r1, #0
	bne _08053D44
	ldrh r0, [r4, #0x32]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	rsbs r0, r0, #0
	strh r0, [r4, #0x32]
	adds r0, r1, #1
	strh r0, [r4, #0x30]
	b _08053D4E
	.align 2, 0
_08053D3C: .4byte gCurTask
_08053D40: .4byte sub_801EE64
_08053D44:
	ldr r1, [r6]
	ldr r0, _08053D90 @ =sub_8053DCC
	str r0, [r1, #8]
	strh r5, [r4, #0x30]
	strh r5, [r4, #0x32]
_08053D4E:
	ldrh r7, [r4, #0x16]
	movs r0, #0x16
	ldrsh r6, [r4, r0]
	ldrh r1, [r4, #0x18]
	mov r8, r1
	movs r2, #0x18
	ldrsh r5, [r4, r2]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_800C84C
	cmp r0, #0
	beq _08053D98
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0
	adds r0, #0xde
	strh r0, [r4, #0xa]
	adds r0, r4, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_8053E64
	ldr r0, _08053D94 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08053DBC
	.align 2, 0
_08053D90: .4byte sub_8053DCC
_08053D94: .4byte gCurTask
_08053D98:
	ldr r2, _08053DC8 @ =gUnknown_03005960
	ldr r1, [r2]
	ldrh r0, [r4, #0x16]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r1, [r2, #4]
	ldrh r0, [r4, #0x18]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	strh r7, [r4, #0x16]
	mov r0, r8
	strh r0, [r4, #0x18]
_08053DBC:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053DC8: .4byte gUnknown_03005960

	thumb_func_start sub_8053DCC
sub_8053DCC: @ 0x08053DCC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r7, _08053E04 @ =gCurTask
	ldr r0, [r7]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r2, r1, r0
	adds r4, r2, #0
	ldrh r3, [r2, #0x16]
	mov sb, r3
	ldrh r5, [r2, #0x18]
	mov r8, r5
	ldrh r0, [r2, #0x30]
	adds r1, r0, #1
	strh r1, [r2, #0x30]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x5f
	bls _08053E08
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	b _08053E22
	.align 2, 0
_08053E04: .4byte gCurTask
_08053E08:
	lsls r0, r3, #0x10
	asrs r6, r0, #0x10
	lsls r0, r5, #0x10
	asrs r5, r0, #0x10
	adds r0, r2, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_800C84C
	cmp r0, #0
	beq _08053E2E
	adds r0, r6, #0
	adds r1, r5, #0
_08053E22:
	bl sub_8053E64
	ldr r0, [r7]
	bl TaskDestroy
	b _08053E54
_08053E2E:
	ldr r2, _08053E60 @ =gUnknown_03005960
	ldr r1, [r2]
	ldrh r0, [r4, #0x16]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r1, [r2, #4]
	ldrh r0, [r4, #0x18]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	mov r0, sb
	strh r0, [r4, #0x16]
	mov r0, r8
	strh r0, [r4, #0x18]
_08053E54:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053E60: .4byte gUnknown_03005960

	thumb_func_start sub_8053E64
sub_8053E64: @ 0x08053E64
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _08053EAC @ =sub_8053F24
	movs r2, #0x80
	lsls r2, r2, #6
	ldr r1, _08053EB0 @ =sub_8054054
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	movs r1, #0
	movs r0, #0xfe
	lsls r0, r0, #8
	strh r0, [r6, #0x32]
	strh r1, [r6, #0x30]
	ldr r0, _08053EB4 @ =gUnknown_030059E0
	ldr r1, [r0, #8]
	asrs r1, r1, #8
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _08053EBC
	ldr r0, _08053EB8 @ =0x0000FFFF
	b _08053EBE
	.align 2, 0
_08053EAC: .4byte sub_8053F24
_08053EB0: .4byte sub_8054054
_08053EB4: .4byte gUnknown_030059E0
_08053EB8: .4byte 0x0000FFFF
_08053EBC:
	movs r0, #1
_08053EBE:
	strh r0, [r6, #0x34]
	movs r0, #0
	mov r8, r0
	movs r4, #0
	strh r7, [r6, #0x16]
	strh r5, [r6, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r6, #4]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	ldr r0, _08053F20 @ =0x000001E1
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	mov r1, r8
	strb r1, [r0]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x25
	mov r1, r8
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8004558
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08053F20: .4byte 0x000001E1

	thumb_func_start sub_8053F24
sub_8053F24: @ 0x08053F24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08054020 @ =gUnknown_03005AFC
	mov ip, r0
	ldr r0, _08054024 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldrh r1, [r4, #0x16]
	mov r8, r1
	ldrh r2, [r4, #0x18]
	mov sb, r2
	ldr r0, [r4, #0x28]
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _08053FFA
	mov r2, ip
	ldr r0, [r2, #0x28]
	cmp r0, r1
	beq _08053FFA
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	ldr r2, _08054028 @ =IWRAM_START + 0x2C
	adds r1, r5, r2
	movs r6, #0
	ldrsb r6, [r1, r6]
	adds r3, r0, r6
	ldr r2, _0805402C @ =gUnknown_030059E0
	ldr r0, [r2, #8]
	asrs r0, r0, #8
	mov r1, ip
	adds r1, #0x2c
	movs r7, #0
	ldrsb r7, [r1, r7]
	adds r1, r0, r7
	mov sl, r2
	cmp r3, r1
	bgt _08053F94
	ldr r2, _08054030 @ =IWRAM_START + 0x2E
	adds r0, r5, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	adds r0, r3, r0
	cmp r0, r1
	bge _08053FA6
	cmp r3, r1
	blt _08053FFA
_08053F94:
	mov r0, ip
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r7
	adds r0, r1, r0
	cmp r0, r3
	blt _08053FFA
_08053FA6:
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r1, r4, #0
	adds r1, #0x2d
	movs r5, #0
	ldrsb r5, [r1, r5]
	adds r2, r0, r5
	mov r1, sl
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	mov r1, ip
	adds r1, #0x2d
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r3, r0, r1
	cmp r2, r3
	bgt _08053FE2
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r5
	adds r0, r2, r0
	cmp r0, r3
	bge _08053FF4
	cmp r2, r3
	blt _08053FFA
_08053FE2:
	mov r0, ip
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r1
	adds r0, r3, r0
	cmp r0, r2
	blt _08053FFA
_08053FF4:
	mov r0, sl
	bl sub_800CBA4
_08053FFA:
	ldr r2, _08054034 @ =gUnknown_03005960
	ldr r1, [r2]
	ldrh r0, [r4, #0x16]
	subs r0, r0, r1
	strh r0, [r4, #0x16]
	ldr r1, [r2, #4]
	ldrh r0, [r4, #0x18]
	subs r0, r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _08054038
	ldr r0, _08054024 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08054046
	.align 2, 0
_08054020: .4byte gUnknown_03005AFC
_08054024: .4byte gCurTask
_08054028: .4byte IWRAM_START + 0x2C
_0805402C: .4byte gUnknown_030059E0
_08054030: .4byte IWRAM_START + 0x2E
_08054034: .4byte gUnknown_03005960
_08054038:
	adds r0, r4, #0
	bl sub_80051E8
	mov r2, r8
	strh r2, [r4, #0x16]
	mov r0, sb
	strh r0, [r4, #0x18]
_08054046:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8054054
sub_8054054: @ 0x08054054
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #4]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8054068
sub_8054068: @ 0x08054068
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080540D0 @ =sub_8054224
	ldr r2, _080540D4 @ =0x000040B0
	ldr r1, _080540D8 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x5c
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r3, r0
	adds r0, #0xc
	adds r6, r3, r0
	movs r1, #0
	mov r2, r8
	strh r2, [r5, #4]
	mov r0, sl
	strh r0, [r5, #6]
	str r7, [r5]
	ldrb r0, [r7]
	strb r0, [r5, #8]
	strb r4, [r5, #9]
	ldrb r0, [r7, #5]
	ldrb r2, [r7, #6]
	cmp r0, r2
	bls _08054110
	movs r2, #4
	ldrsb r2, [r7, r2]
	cmp r2, #1
	bne _080540E0
	ldr r1, _080540DC @ =IWRAM_START + 0x54
	adds r0, r3, r1
	strb r2, [r0]
	b _080540F8
	.align 2, 0
_080540D0: .4byte sub_8054224
_080540D4: .4byte 0x000040B0
_080540D8: .4byte sub_80095E8
_080540DC: .4byte IWRAM_START + 0x54
_080540E0:
	cmp r2, #0
	bne _080540F0
	ldr r2, _080540EC @ =IWRAM_START + 0x54
	adds r0, r3, r2
	strb r1, [r0]
	b _080540F8
	.align 2, 0
_080540EC: .4byte IWRAM_START + 0x54
_080540F0:
	ldr r0, _08054108 @ =IWRAM_START + 0x54
	adds r1, r3, r0
	movs r0, #2
	strb r0, [r1]
_080540F8:
	adds r2, r5, #0
	adds r2, #0x56
	movs r0, #0
	ldr r1, _0805410C @ =0x0000FF80
	strh r1, [r2]
	adds r1, r5, #0
	adds r1, #0x58
	b _08054126
	.align 2, 0
_08054108: .4byte IWRAM_START + 0x54
_0805410C: .4byte 0x0000FF80
_08054110:
	ldr r2, _0805417C @ =IWRAM_START + 0x54
	adds r1, r3, r2
	movs r0, #3
	strb r0, [r1]
	ldr r0, _08054180 @ =IWRAM_START + 0x56
	adds r1, r3, r0
	movs r0, #0
	strh r0, [r1]
	adds r2, #4
	adds r1, r3, r2
	ldr r0, _08054184 @ =0x0000FF80
_08054126:
	strh r0, [r1]
	ldrb r0, [r7]
	lsls r0, r0, #3
	mov r1, r8
	lsls r3, r1, #8
	adds r0, r0, r3
	lsls r0, r0, #8
	mov sb, r0
	str r0, [r5, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r1, sl
	lsls r2, r1, #8
	adds r0, r0, r2
	lsls r0, r0, #8
	mov ip, r0
	str r0, [r5, #0x48]
	movs r4, #0
	str r4, [r5, #0x4c]
	adds r0, r5, #0
	adds r0, #0x54
	ldrb r1, [r0]
	mov sl, r3
	str r2, [sp, #8]
	mov r8, r0
	cmp r1, #1
	bhi _0805418C
	mov r2, ip
	asrs r0, r2, #8
	mov r3, sb
	asrs r1, r3, #8
	mov r3, r8
	ldrb r2, [r3]
	str r4, [sp]
	ldr r3, _08054188 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	str r0, [r5, #0x50]
	b _0805418E
	.align 2, 0
_0805417C: .4byte IWRAM_START + 0x54
_08054180: .4byte IWRAM_START + 0x56
_08054184: .4byte 0x0000FF80
_08054188: .4byte sub_801EE64
_0805418C:
	str r4, [r5, #0x50]
_0805418E:
	ldrb r0, [r7]
	lsls r0, r0, #3
	add r0, sl
	movs r5, #0
	movs r4, #0
	strh r0, [r6, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	ldr r1, [sp, #8]
	adds r0, r0, r1
	strh r0, [r6, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r7]
	movs r0, #0x1e
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r3, _08054220 @ =gUnknown_080D8F38
	mov r0, r8
	ldrb r2, [r0]
	movs r1, #2
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	mov r2, r8
	ldrb r0, [r2]
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #2
	adds r3, #2
	adds r1, r1, r3
	ldrh r1, [r1]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x25
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054220: .4byte gUnknown_080D8F38

	thumb_func_start sub_8054224
sub_8054224: @ 0x08054224
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	ldr r0, _0805425C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r2, [r4]
	mov r8, r2
	ldr r3, _08054260 @ =IWRAM_START + 0x54
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #2
	bhi _08054268
	ldr r5, _08054264 @ =IWRAM_START + 0x56
	adds r0, r1, r5
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r4, #0x4c]
	adds r0, r0, r1
	str r0, [r4, #0x4c]
	b _08054276
	.align 2, 0
_0805425C: .4byte gCurTask
_08054260: .4byte IWRAM_START + 0x54
_08054264: .4byte IWRAM_START + 0x56
_08054268:
	ldr r3, _080542D8 @ =IWRAM_START + 0x58
	adds r0, r1, r3
	movs r5, #0
	ldrsh r1, [r0, r5]
	ldr r0, [r4, #0x50]
	adds r0, r0, r1
	str r0, [r4, #0x50]
_08054276:
	adds r0, r4, #0
	adds r0, #0x54
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #1
	bhi _080542E4
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	ldr r2, [r4, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r7]
	movs r3, #0
	str r3, [sp]
	ldr r3, _080542DC @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _080542C8
	lsls r0, r0, #8
	ldr r1, [r4, #0x50]
	adds r1, r1, r0
	str r1, [r4, #0x50]
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	ldr r2, [r4, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r7]
	ldr r3, _080542E0 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_080542C8:
	cmp r0, #0
	ble _08054330
	lsls r1, r0, #8
	ldr r0, [r4, #0x50]
	adds r0, r0, r1
	str r0, [r4, #0x50]
	b _08054330
	.align 2, 0
_080542D8: .4byte IWRAM_START + 0x58
_080542DC: .4byte sub_801EE64
_080542E0: .4byte sub_801EC3C
_080542E4:
	cmp r1, #2
	bne _08054314
	ldr r2, _08054308 @ =gUnknown_08097AA4
	ldr r0, _0805430C @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08054310 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	asrs r0, r0, #4
	str r0, [r4, #0x50]
	b _08054330
	.align 2, 0
_08054308: .4byte gUnknown_08097AA4
_0805430C: .4byte gUnknown_03005590
_08054310: .4byte 0x000003FF
_08054314:
	ldr r2, _080543E4 @ =gUnknown_08097AA4
	ldr r0, _080543E8 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080543EC @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r0, [r0, r2]
	asrs r0, r0, #4
	str r0, [r4, #0x4c]
_08054330:
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	adds r0, r0, r1
	asrs r3, r0, #8
	str r3, [sp, #8]
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r2, r0, #8
	str r2, [sp, #0xc]
	ldr r1, _080543F0 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r5, r3, #0
	subs r0, r5, r0
	strh r0, [r6, #0x16]
	ldr r0, [r1, #4]
	ldr r1, [sp, #0xc]
	subs r0, r1, r0
	strh r0, [r6, #0x18]
	ldr r5, _080543F4 @ =gUnknown_030059E0
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0
	ble _0805440C
	ldr r0, [r5, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0805440C
	adds r0, r6, #0
	adds r1, r3, #0
	adds r3, r5, #0
	bl sub_800DF38
	movs r1, #0x80
	lsls r1, r1, #0xc
	cmp r0, r1
	bne _0805441C
	adds r1, r5, #0
	adds r1, #0x6d
	movs r0, #0xe
	strb r0, [r1]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r5, #0x20]
	ldr r1, _080543F8 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r5, #0x20]
	ldr r0, _080543FC @ =0x0000FC80
	strh r0, [r5, #0x12]
	ldr r0, _08054400 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054404 @ =sub_8054904
	str r0, [r1, #8]
	ldr r2, _08054408 @ =gUnknown_080D8F38
	ldrb r0, [r7]
	movs r1, #4
	cmp r0, #1
	bls _080543AA
	movs r1, #0xc
_080543AA:
	adds r0, r1, r2
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	ldrb r0, [r7]
	movs r1, #4
	cmp r0, #1
	bls _080543BA
	movs r1, #0xc
_080543BA:
	adds r0, r2, #2
	adds r0, r1, r0
	ldrh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	movs r0, #0x99
	bl m4aSongNumStart
	b _08054610
	.align 2, 0
_080543E4: .4byte gUnknown_08097AA4
_080543E8: .4byte gUnknown_03005590
_080543EC: .4byte 0x000003FF
_080543F0: .4byte gUnknown_03005960
_080543F4: .4byte gUnknown_030059E0
_080543F8: .4byte 0xFFFFFEFF
_080543FC: .4byte 0x0000FC80
_08054400: .4byte gCurTask
_08054404: .4byte sub_8054904
_08054408: .4byte gUnknown_080D8F38
_0805440C:
	adds r0, r6, #0
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08054478
_0805441C:
	ldr r0, [r4, #0x44]
	asrs r2, r0, #8
	ldr r3, _08054484 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r5, #0xb8
	lsls r5, r5, #1
	adds r0, r1, r5
	cmp r2, r0
	bgt _0805444E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805444E
	ldr r0, [r4, #0x48]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805444E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805448C
_0805444E:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08054472
	movs r5, #0x18
	ldrsh r0, [r6, r5]
	adds r0, #0x80
	cmp r0, #0
	blt _08054472
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805448C
_08054472:
	ldrb r0, [r4, #8]
	mov r1, r8
	strb r0, [r1]
_08054478:
	ldr r0, _08054488 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08054610
	.align 2, 0
_08054484: .4byte gUnknown_03005960
_08054488: .4byte gCurTask
_0805448C:
	ldrb r0, [r7]
	cmp r0, #2
	bhi _08054570
	ldr r1, [r4, #0x4c]
	asrs r3, r1, #8
	mov r2, r8
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r5, r0, #0
	cmp r3, r2
	bgt _08054504
	adds r2, r4, #0
	adds r2, #0x56
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _08054504
	ldr r0, _080544F8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080544FC @ =sub_805462C
	str r0, [r1, #8]
	ldr r3, _08054500 @ =gUnknown_080D8F38
	ldrb r0, [r7]
	movs r1, #0x10
	cmp r0, #2
	bne _080544C4
	movs r1, #0x14
_080544C4:
	adds r0, r1, r3
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	ldrb r0, [r7]
	movs r1, #0x10
	cmp r0, #2
	bne _080544D4
	movs r1, #0x14
_080544D4:
	adds r0, r3, #2
	adds r0, r1, r0
	ldrh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r5, #0
	ldrsh r0, [r2, r5]
	rsbs r0, r0, #0
	strh r0, [r2]
	ldr r0, [sp, #8]
	lsls r2, r0, #8
	b _080545FA
	.align 2, 0
_080544F8: .4byte gCurTask
_080544FC: .4byte sub_805462C
_08054500: .4byte gUnknown_080D8F38
_08054504:
	asrs r1, r1, #8
	mov r2, r8
	ldrb r0, [r2, #5]
	adds r0, r5, r0
	lsls r0, r0, #3
	ldr r3, [sp, #8]
	lsls r2, r3, #8
	cmp r1, r0
	blt _080545FA
	adds r3, r4, #0
	adds r3, #0x56
	movs r5, #0
	ldrsh r0, [r3, r5]
	cmp r0, #0
	ble _080545FA
	ldr r0, _08054564 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054568 @ =sub_805462C
	str r0, [r1, #8]
	ldr r4, _0805456C @ =gUnknown_080D8F38
	ldrb r0, [r7]
	movs r1, #0x10
	cmp r0, #2
	bne _08054536
	movs r1, #0x14
_08054536:
	adds r0, r1, r4
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	ldrb r0, [r7]
	movs r1, #0x10
	cmp r0, #2
	bne _08054546
	movs r1, #0x14
_08054546:
	adds r0, r4, #2
	adds r0, r1, r0
	ldrh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	movs r1, #0
	ldrsh r0, [r3, r1]
	rsbs r0, r0, #0
	strh r0, [r3]
	b _080545FA
	.align 2, 0
_08054564: .4byte gCurTask
_08054568: .4byte sub_805462C
_0805456C: .4byte gUnknown_080D8F38
_08054570:
	ldr r1, [r4, #0x50]
	asrs r3, r1, #8
	mov r2, r8
	movs r0, #4
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r5, r0, #0
	cmp r3, r2
	bgt _08054594
	adds r2, r4, #0
	adds r2, #0x58
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _08054594
	rsbs r0, r0, #0
	strh r0, [r2]
	b _080545B2
_08054594:
	asrs r1, r1, #8
	mov r2, r8
	ldrb r0, [r2, #6]
	adds r0, r5, r0
	lsls r0, r0, #3
	cmp r1, r0
	blt _080545B2
	adds r1, r4, #0
	adds r1, #0x58
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	ble _080545B2
	rsbs r0, r0, #0
	strh r0, [r1]
_080545B2:
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080545D0
	ldr r0, _080545CC @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	ldr r1, [sp, #8]
	lsls r2, r1, #8
	cmp r0, r2
	blt _080545DC
	b _080545FA
	.align 2, 0
_080545CC: .4byte gUnknown_030059E0
_080545D0:
	ldr r0, _0805461C @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	ldr r3, [sp, #8]
	lsls r2, r3, #8
	cmp r0, r2
	ble _080545FA
_080545DC:
	ldr r0, _08054620 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054624 @ =sub_805462C
	str r0, [r1, #8]
	ldr r1, _08054628 @ =gUnknown_080D8F38
	ldrh r0, [r1, #0x14]
	strh r0, [r6, #0xa]
	ldrh r1, [r1, #0x16]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_080545FA:
	ldr r5, [sp, #0xc]
	lsls r1, r5, #8
	adds r0, r2, #0
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08054610:
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805461C: .4byte gUnknown_030059E0
_08054620: .4byte gCurTask
_08054624: .4byte sub_805462C
_08054628: .4byte gUnknown_080D8F38

	thumb_func_start sub_805462C
sub_805462C: @ 0x0805462C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r0, _080546A0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r7, [r5]
	ldr r2, _080546A4 @ =IWRAM_START + 0x54
	adds r4, r1, r2
	ldrb r0, [r4]
	cmp r0, #1
	bhi _080546B0
	ldr r0, [r5, #0x48]
	ldr r1, [r5, #0x50]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x44]
	ldr r2, [r5, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r4]
	movs r3, #0
	str r3, [sp]
	ldr r3, _080546A8 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _08054692
	lsls r0, r0, #8
	ldr r1, [r5, #0x50]
	adds r1, r1, r0
	str r1, [r5, #0x50]
	ldr r0, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x44]
	ldr r2, [r5, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r4]
	ldr r3, _080546AC @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08054692:
	cmp r0, #0
	ble _080546FC
	lsls r1, r0, #8
	ldr r0, [r5, #0x50]
	adds r0, r0, r1
	str r0, [r5, #0x50]
	b _080546FC
	.align 2, 0
_080546A0: .4byte gCurTask
_080546A4: .4byte IWRAM_START + 0x54
_080546A8: .4byte sub_801EE64
_080546AC: .4byte sub_801EC3C
_080546B0:
	cmp r0, #2
	bne _080546E0
	ldr r2, _080546D4 @ =gUnknown_08097AA4
	ldr r0, _080546D8 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080546DC @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	asrs r0, r0, #4
	str r0, [r5, #0x50]
	b _080546FC
	.align 2, 0
_080546D4: .4byte gUnknown_08097AA4
_080546D8: .4byte gUnknown_03005590
_080546DC: .4byte 0x000003FF
_080546E0:
	ldr r2, _08054778 @ =gUnknown_08097AA4
	ldr r0, _0805477C @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08054780 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r4, #0
	ldrsh r0, [r0, r4]
	asrs r0, r0, #4
	str r0, [r5, #0x4c]
_080546FC:
	ldr r0, [r5, #0x44]
	ldr r1, [r5, #0x4c]
	adds r0, r0, r1
	asrs r3, r0, #8
	str r3, [sp, #8]
	ldr r0, [r5, #0x48]
	ldr r1, [r5, #0x50]
	adds r0, r0, r1
	asrs r2, r0, #8
	str r2, [sp, #0xc]
	ldr r1, _08054784 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r4, r3, #0
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r1, #4]
	ldr r1, [sp, #0xc]
	subs r0, r1, r0
	strh r0, [r6, #0x18]
	ldr r4, _08054788 @ =gUnknown_030059E0
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #0
	ble _080547F8
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080547F8
	adds r0, r6, #0
	adds r1, r3, #0
	adds r3, r4, #0
	bl sub_800DF38
	movs r1, #0x80
	lsls r1, r1, #0xc
	cmp r0, r1
	bne _08054808
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #0xe
	strb r0, [r1]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r4, #0x20]
	ldr r1, _0805478C @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r4, #0x20]
	ldr r0, _08054790 @ =0x0000FC80
	strh r0, [r4, #0x12]
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08054798
	ldr r0, _08054794 @ =0xFFFFFBFF
	ands r1, r0
	b _0805479A
	.align 2, 0
_08054778: .4byte gUnknown_08097AA4
_0805477C: .4byte gUnknown_03005590
_08054780: .4byte 0x000003FF
_08054784: .4byte gUnknown_03005960
_08054788: .4byte gUnknown_030059E0
_0805478C: .4byte 0xFFFFFEFF
_08054790: .4byte 0x0000FC80
_08054794: .4byte 0xFFFFFBFF
_08054798:
	orrs r1, r2
_0805479A:
	str r1, [r6, #0x10]
	ldr r0, _080547EC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080547F0 @ =sub_8054904
	str r0, [r1, #8]
	ldr r3, _080547F4 @ =gUnknown_080D8F38
	adds r1, r5, #0
	adds r1, #0x54
	ldrb r0, [r1]
	movs r2, #4
	cmp r0, #1
	bls _080547B4
	movs r2, #0xc
_080547B4:
	adds r0, r2, r3
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	ldrb r0, [r1]
	movs r1, #4
	cmp r0, #1
	bls _080547C4
	movs r1, #0xc
_080547C4:
	adds r0, r3, #2
	adds r0, r1, r0
	ldrh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	movs r0, #0x99
	bl m4aSongNumStart
	b _080548EE
	.align 2, 0
_080547EC: .4byte gCurTask
_080547F0: .4byte sub_8054904
_080547F4: .4byte gUnknown_080D8F38
_080547F8:
	adds r0, r6, #0
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08054862
_08054808:
	ldr r0, [r5, #0x44]
	asrs r2, r0, #8
	ldr r3, _0805486C @ =gUnknown_03005960
	ldr r1, [r3]
	movs r4, #0xb8
	lsls r4, r4, #1
	adds r0, r1, r4
	cmp r2, r0
	bgt _0805483A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805483A
	ldr r0, [r5, #0x48]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805483A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08054874
_0805483A:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805485E
	movs r4, #0x18
	ldrsh r0, [r6, r4]
	adds r0, #0x80
	cmp r0, #0
	blt _0805485E
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08054874
_0805485E:
	ldrb r0, [r5, #8]
	strb r0, [r7]
_08054862:
	ldr r0, _08054870 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080548EE
	.align 2, 0
_0805486C: .4byte gUnknown_03005960
_08054870: .4byte gCurTask
_08054874:
	ldr r1, [sp, #8]
	lsls r0, r1, #8
	ldr r2, [sp, #0xc]
	lsls r1, r2, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _080548E8
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080548A4
	ldr r0, _080548A0 @ =0xFFFFFBFF
	ands r1, r0
	b _080548A6
	.align 2, 0
_080548A0: .4byte 0xFFFFFBFF
_080548A4:
	orrs r1, r2
_080548A6:
	str r1, [r6, #0x10]
	ldr r3, _080548F8 @ =gUnknown_080D8F38
	adds r4, r5, #0
	adds r4, #0x54
	ldrb r2, [r4]
	movs r1, #2
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	ldrb r0, [r4]
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #2
	adds r3, #2
	adds r1, r1, r3
	ldrh r1, [r1]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080548FC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054900 @ =sub_8054224
	str r0, [r1, #8]
_080548E8:
	adds r0, r6, #0
	bl sub_80051E8
_080548EE:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080548F8: .4byte gUnknown_080D8F38
_080548FC: .4byte gCurTask
_08054900: .4byte sub_8054224

	thumb_func_start sub_8054904
sub_8054904: @ 0x08054904
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	ldr r0, _08054984 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r0, r0, r1
	mov r8, r0
	ldr r2, [r4]
	mov sb, r2
	ldr r3, _08054988 @ =IWRAM_START + 0x54
	adds r7, r1, r3
	ldrb r0, [r7]
	cmp r0, #1
	bhi _08054994
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	ldr r2, [r4, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r7]
	movs r3, #0
	str r3, [sp]
	ldr r3, _0805498C @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _08054974
	lsls r0, r0, #8
	ldr r1, [r4, #0x50]
	adds r1, r1, r0
	str r1, [r4, #0x50]
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	ldr r2, [r4, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r7]
	ldr r3, _08054990 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08054974:
	cmp r0, #0
	ble _080549E0
	lsls r1, r0, #8
	ldr r0, [r4, #0x50]
	adds r0, r0, r1
	str r0, [r4, #0x50]
	b _080549E0
	.align 2, 0
_08054984: .4byte gCurTask
_08054988: .4byte IWRAM_START + 0x54
_0805498C: .4byte sub_801EE64
_08054990: .4byte sub_801EC3C
_08054994:
	cmp r0, #2
	bne _080549C4
	ldr r2, _080549B8 @ =gUnknown_08097AA4
	ldr r0, _080549BC @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080549C0 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r7, #0
	ldrsh r0, [r0, r7]
	asrs r0, r0, #4
	str r0, [r4, #0x50]
	b _080549E0
	.align 2, 0
_080549B8: .4byte gUnknown_08097AA4
_080549BC: .4byte gUnknown_03005590
_080549C0: .4byte 0x000003FF
_080549C4:
	ldr r2, _08054A68 @ =gUnknown_08097AA4
	ldr r0, _08054A6C @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08054A70 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	asrs r0, r0, #4
	str r0, [r4, #0x4c]
_080549E0:
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	adds r0, r0, r1
	asrs r5, r0, #8
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r6, r0, #8
	ldr r3, _08054A74 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r5, r0
	mov r2, r8
	strh r0, [r2, #0x16]
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r2, #0x18]
	ldr r0, [r4, #0x44]
	asrs r2, r0, #8
	ldr r1, [r3]
	movs r7, #0xb8
	lsls r7, r7, #1
	adds r0, r1, r7
	cmp r2, r0
	bgt _08054A30
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08054A30
	ldr r0, [r4, #0x48]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08054A30
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08054A7C
_08054A30:
	mov r7, r8
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08054A56
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08054A56
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08054A7C
_08054A56:
	ldrb r0, [r4, #8]
	mov r3, sb
	strb r0, [r3]
	ldr r0, _08054A78 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08054AD4
	.align 2, 0
_08054A68: .4byte gUnknown_08097AA4
_08054A6C: .4byte gUnknown_03005590
_08054A70: .4byte 0x000003FF
_08054A74: .4byte gUnknown_03005960
_08054A78: .4byte gCurTask
_08054A7C:
	lsls r0, r5, #8
	lsls r1, r6, #8
	bl sub_80122DC
	mov r0, r8
	bl sub_8004558
	cmp r0, #0
	bne _08054ACE
	ldr r3, _08054AE4 @ =gUnknown_080D8F38
	adds r4, #0x54
	ldrb r2, [r4]
	movs r1, #2
	adds r0, r1, #0
	ands r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r0, r0, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	mov r7, r8
	strh r0, [r7, #0xa]
	ldrb r0, [r4]
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r1, r1, #2
	adds r3, #2
	adds r1, r1, r3
	ldrh r1, [r1]
	mov r0, r8
	adds r0, #0x20
	strb r1, [r0]
	mov r1, r8
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08054AE8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054AEC @ =sub_8054224
	str r0, [r1, #8]
_08054ACE:
	mov r0, r8
	bl sub_80051E8
_08054AD4:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054AE4: .4byte gUnknown_080D8F38
_08054AE8: .4byte gCurTask
_08054AEC: .4byte sub_8054224

	thumb_func_start sub_8054AF0
sub_8054AF0: @ 0x08054AF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov sb, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, sb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _08054BD4 @ =sub_8054BF4
	movs r2, #0x81
	lsls r2, r2, #7
	ldr r1, _08054BD8 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x50
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r2, _08054BDC @ =IWRAM_START + 0xC
	adds r6, r3, r2
	ldr r0, _08054BE0 @ =IWRAM_START + 0x4C
	adds r2, r3, r0
	movs r0, #0
	mov sl, r0
	movs r0, #0x78
	strb r0, [r2]
	movs r7, #0
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	mov r2, r8
	str r2, [r1]
	ldrb r0, [r2]
	strb r0, [r1, #8]
	mov r0, sb
	strb r0, [r1, #9]
	ldrb r0, [r2]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	ldrb r0, [r2]
	lsls r0, r0, #3
	adds r0, r0, r4
	strh r0, [r6, #0x16]
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r6, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r2]
	movs r0, #0x14
	str r3, [sp, #4]
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _08054BE4 @ =0x000001ED
	strh r0, [r6, #0xa]
	ldr r3, [sp, #4]
	ldr r2, _08054BE8 @ =IWRAM_START + 0x2C
	adds r0, r3, r2
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	mov r0, sl
	strh r0, [r6, #8]
	strh r0, [r6, #0x14]
	strh r0, [r6, #0x1c]
	adds r2, #1
	adds r1, r3, r2
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08054BEC @ =IWRAM_START + 0x2E
	adds r1, r3, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _08054BF0 @ =IWRAM_START + 0x31
	adds r3, r3, r1
	strb r7, [r3]
	subs r0, #0x11
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054BD4: .4byte sub_8054BF4
_08054BD8: .4byte sub_80095E8
_08054BDC: .4byte IWRAM_START + 0xC
_08054BE0: .4byte IWRAM_START + 0x4C
_08054BE4: .4byte 0x000001ED
_08054BE8: .4byte IWRAM_START + 0x2C
_08054BEC: .4byte IWRAM_START + 0x2E
_08054BF0: .4byte IWRAM_START + 0x31

	thumb_func_start sub_8054BF4
sub_8054BF4: @ 0x08054BF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08054C48 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov r8, r0
	ldr r1, _08054C4C @ =IWRAM_START + 0xC
	adds r6, r7, r1
	ldr r2, [r0]
	mov sl, r2
	ldr r1, [r0, #0x44]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r0, #0x48]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08054C50 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08054C54
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08054D06
	.align 2, 0
_08054C48: .4byte gCurTask
_08054C4C: .4byte IWRAM_START + 0xC
_08054C50: .4byte gUnknown_03005960
_08054C54:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08054C78
	movs r2, #0x18
	ldrsh r0, [r6, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _08054C78
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08054C90
_08054C78:
	mov r1, r8
	ldrb r0, [r1, #8]
	mov r2, sl
	strb r0, [r2]
	ldr r0, _08054C8C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08054D06
	.align 2, 0
_08054C8C: .4byte gCurTask
_08054C90:
	ldr r0, _08054CBC @ =IWRAM_START + 0x4C
	adds r3, r7, r0
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08054CF0
	ldr r2, _08054CC0 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _08054CC4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08054CC8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08054CCC
	movs r0, #0x7c
	b _08054CCE
	.align 2, 0
_08054CBC: .4byte IWRAM_START + 0x4C
_08054CC0: .4byte gUnknown_030053B8
_08054CC4: .4byte 0x00196225
_08054CC8: .4byte 0x3C6EF35F
_08054CCC:
	movs r0, #0xb4
_08054CCE:
	strb r0, [r3]
	ldr r0, _08054D14 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08054D18 @ =sub_8054D20
	str r0, [r1, #8]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	ldr r0, _08054D1C @ =0x000001ED
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08054CF0:
	mov r2, r8
	ldr r0, [r2, #0x44]
	ldr r1, [r2, #0x48]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08054D06:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054D14: .4byte gCurTask
_08054D18: .4byte sub_8054D20
_08054D1C: .4byte 0x000001ED

	thumb_func_start sub_8054D20
sub_8054D20: @ 0x08054D20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08054D98 @ =gCurTask
	mov sl, r0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	mov r1, r8
	adds r7, r1, r0
	ldr r6, _08054D9C @ =IWRAM_START + 0xC
	add r6, r8
	ldr r0, [r7]
	mov sb, r0
	ldr r1, [r7, #0x44]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x48]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08054DA0 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	bl sub_800C84C
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08054D88
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08054D88
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08054DA4
_08054D88:
	ldrb r0, [r7, #8]
	mov r1, sb
	strb r0, [r1]
	ldr r0, _08054D98 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08054DEA
	.align 2, 0
_08054D98: .4byte gCurTask
_08054D9C: .4byte IWRAM_START + 0xC
_08054DA0: .4byte gUnknown_03005960
_08054DA4:
	ldr r1, _08054DF8 @ =IWRAM_START + 0x4C
	add r1, r8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08054DDE
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _08054DFC @ =0x000001ED
	strh r0, [r6, #0xa]
	ldr r1, _08054E00 @ =IWRAM_START + 0x2C
	add r1, r8
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08054E04 @ =IWRAM_START + 0x2D
	add r1, r8
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x30]
	mov r0, sl
	ldr r1, [r0]
	ldr r0, _08054E08 @ =sub_8054BF4
	str r0, [r1, #8]
_08054DDE:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08054DEA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054DF8: .4byte IWRAM_START + 0x4C
_08054DFC: .4byte 0x000001ED
_08054E00: .4byte IWRAM_START + 0x2C
_08054E04: .4byte IWRAM_START + 0x2D
_08054E08: .4byte sub_8054BF4

	thumb_func_start sub_8054E0C
sub_8054E0C: @ 0x08054E0C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08054E60 @ =sub_8054F00
	ldr r2, _08054E64 @ =0x00004090
	ldr r1, _08054E68 @ =sub_80554AC
	str r1, [sp]
	movs r1, #0x50
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	strh r5, [r3, #4]
	mov r0, r8
	strh r0, [r3, #6]
	str r7, [r3]
	ldrb r0, [r7]
	strb r0, [r3, #8]
	strb r4, [r3, #9]
	movs r0, #4
	ldrsb r0, [r7, r0]
	cmp r0, #0
	beq _08054E70
	ldr r4, _08054E6C @ =IWRAM_START + 0x4D
	adds r1, r1, r4
	movs r0, #1
	b _08054E76
	.align 2, 0
_08054E60: .4byte sub_8054F00
_08054E64: .4byte 0x00004090
_08054E68: .4byte sub_80554AC
_08054E6C: .4byte IWRAM_START + 0x4D
_08054E70:
	ldr r0, _08054EF8 @ =IWRAM_START + 0x4D
	adds r1, r1, r0
	movs r0, #0
_08054E76:
	strb r0, [r1]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r1, r5, #8
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r3, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r4, r8
	lsls r2, r4, #8
	adds r0, r0, r2
	lsls r0, r0, #8
	str r0, [r3, #0x48]
	ldrb r0, [r7]
	lsls r0, r0, #3
	adds r0, r0, r1
	movs r5, #0
	movs r4, #0
	strh r0, [r6, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	adds r0, r0, r2
	strh r0, [r6, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _08054EFC @ =0x000001F1
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r5, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x25
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08054EF8: .4byte IWRAM_START + 0x4D
_08054EFC: .4byte 0x000001F1

	thumb_func_start sub_8054F00
sub_8054F00: @ 0x08054F00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r1, _08054FB4 @ =gCurTask
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	mov sb, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	add r0, sb
	mov sl, r0
	ldr r7, _08054FB8 @ =IWRAM_START + 0xC
	add r7, sb
	ldr r2, [r0]
	str r2, [sp, #8]
	ldr r1, [r0, #0x44]
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r0, #0x48]
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r3, _08054FBC @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r5, r0
	movs r4, #0
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	ldr r0, _08054FC0 @ =gUnknown_030059E0
	mov r8, r0
	str r0, [sp]
	str r4, [sp, #4]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C204
	adds r4, r0, #0
	cmp r4, #1
	bne _08054F7C
	movs r0, #0x99
	bl m4aSongNumStart
	movs r0, #0xf7
	lsls r0, r0, #8
	mov r1, r8
	strh r0, [r1, #0x12]
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	mov r0, r8
	adds r0, #0x6c
	strb r4, [r0]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	movs r0, #0x99
	bl m4aSongNumStart
_08054F7C:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08054FA0
	movs r2, #0x18
	ldrsh r0, [r7, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _08054FA0
	movs r0, #0x18
	ldrsh r1, [r7, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08054FC4
_08054FA0:
	mov r1, sl
	ldrb r0, [r1, #8]
	ldr r2, [sp, #8]
	strb r0, [r2]
	ldr r0, _08054FB4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055068
	.align 2, 0
_08054FB4: .4byte gCurTask
_08054FB8: .4byte IWRAM_START + 0xC
_08054FBC: .4byte gUnknown_03005960
_08054FC0: .4byte gUnknown_030059E0
_08054FC4:
	ldr r1, _08054FF8 @ =IWRAM_START + 0x4C
	add r1, sb
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08055010
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _08054FFC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08055000 @ =sub_8055084
	str r0, [r1, #8]
	ldr r0, _08055004 @ =0x000001F1
	strh r0, [r7, #0xa]
	ldr r1, _08055008 @ =IWRAM_START + 0x2C
	add r1, sb
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0805500C @ =IWRAM_START + 0x2D
	add r1, sb
	ldrb r0, [r1]
	orrs r0, r2
	b _08055050
	.align 2, 0
_08054FF8: .4byte IWRAM_START + 0x4C
_08054FFC: .4byte gCurTask
_08055000: .4byte sub_8055084
_08055004: .4byte 0x000001F1
_08055008: .4byte IWRAM_START + 0x2C
_0805500C: .4byte IWRAM_START + 0x2D
_08055010:
	mov r1, r8
	ldr r0, [r1, #8]
	asrs r2, r0, #8
	cmp r2, r5
	bge _08055026
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08055038
_08055026:
	cmp r2, r5
	ble _08055052
	ldr r0, [r7, #0x10]
	mvns r0, r0
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08055052
_08055038:
	ldr r0, _08055078 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805507C @ =sub_8055378
	str r0, [r1, #8]
	ldr r0, _08055080 @ =0x000001F1
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
_08055050:
	strb r0, [r1]
_08055052:
	mov r2, sl
	ldr r0, [r2, #0x44]
	ldr r1, [r2, #0x48]
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08055068:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055078: .4byte gCurTask
_0805507C: .4byte sub_8055378
_08055080: .4byte 0x000001F1

	thumb_func_start sub_8055084
sub_8055084: @ 0x08055084
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r0, _080550F0 @ =gCurTask
	mov sl, r0
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r1, #0xc0
	lsls r1, r1, #0x12
	add r1, r8
	mov sb, r1
	ldr r5, _080550F4 @ =IWRAM_START + 0xC
	add r5, r8
	ldr r2, [r1]
	str r2, [sp, #0x1c]
	ldr r0, [r1, #0x44]
	asrs r7, r0, #8
	str r7, [sp, #0x20]
	ldr r0, [r1, #0x48]
	asrs r6, r0, #8
	str r6, [sp, #0x24]
	ldr r1, _080550F8 @ =gUnknown_03005960
	ldr r0, [r1]
	adds r2, r7, #0
	subs r0, r2, r0
	strh r0, [r5, #0x16]
	ldr r0, [r1, #4]
	ldr r1, [sp, #0x24]
	subs r0, r1, r0
	strh r0, [r5, #0x18]
	ldr r4, _080550FC @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0805511C
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #1
	bl sub_800C4FC
	cmp r0, #1
	bne _08055100
	mov r2, sl
	ldr r0, [r2]
	bl TaskDestroy
	b _08055364
	.align 2, 0
_080550F0: .4byte gCurTask
_080550F4: .4byte IWRAM_START + 0xC
_080550F8: .4byte gUnknown_03005960
_080550FC: .4byte gUnknown_030059E0
_08055100:
	str r4, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C204
	adds r2, r0, #0
	cmp r2, #1
	beq _0805511A
	b _0805525C
_0805511A:
	b _08055134
_0805511C:
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	adds r0, r5, #0
	adds r1, r7, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C204
	adds r2, r0, #0
	cmp r2, #1
	bne _08055156
_08055134:
	movs r0, #0xf7
	lsls r0, r0, #8
	strh r0, [r4, #0x12]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x6c
	strb r2, [r0]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	movs r0, #0x99
	bl m4aSongNumStart
	b _0805525C
_08055156:
	adds r4, r7, #0
	str r6, [sp, #0x28]
	ldr r0, _0805524C @ =gUnknown_030056A4
	ldr r0, [r0]
	cmp r0, #0
	bne _08055164
	b _0805525C
_08055164:
	mov ip, r0
	mov r2, sl
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r7, r0, r1
	mov r2, ip
	ldr r1, [r2, #0x4c]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0805525C
	ldr r0, _08055250 @ =IWRAM_START + 0x38
	add r0, r8
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r2, r4, r3
	mov r1, ip
	ldr r0, [r1]
	asrs r0, r0, #8
	adds r1, #0x50
	movs r6, #0
	ldrsb r6, [r1, r6]
	adds r1, r0, r6
	cmp r2, r1
	bgt _080551B0
	ldr r0, _08055254 @ =IWRAM_START + 0x3A
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	adds r0, r2, r0
	cmp r0, r1
	bge _080551C2
	cmp r2, r1
	blt _0805525C
_080551B0:
	mov r0, ip
	adds r0, #0x52
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	adds r0, r1, r0
	cmp r0, r2
	blt _0805525C
_080551C2:
	adds r0, r5, #0
	adds r0, #0x2d
	movs r6, #0
	ldrsb r6, [r0, r6]
	ldr r2, [sp, #0x28]
	adds r3, r2, r6
	mov r1, ip
	ldr r0, [r1, #4]
	asrs r0, r0, #8
	adds r1, #0x51
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r2, r0, r1
	cmp r3, r2
	bgt _080551F8
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r6
	adds r0, r3, r0
	cmp r0, r2
	bge _0805520A
	cmp r3, r2
	blt _0805525C
_080551F8:
	mov r0, ip
	adds r0, #0x53
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r1
	adds r0, r2, r0
	cmp r0, r3
	blt _0805525C
_0805520A:
	ldr r0, _08055258 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _08055226
	bl sub_8019224
	movs r1, #3
	strb r1, [r0]
	ldrh r1, [r7, #4]
	strb r1, [r0, #1]
	ldrh r1, [r7, #6]
	strb r1, [r0, #2]
	ldrb r1, [r7, #9]
	strb r1, [r0, #3]
_08055226:
	lsls r5, r4, #0x10
	asrs r5, r5, #0x10
	ldr r2, [sp, #0x28]
	lsls r4, r2, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_800B9B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_802DB14
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8009530
	b _08055288
	.align 2, 0
_0805524C: .4byte gUnknown_030056A4
_08055250: .4byte IWRAM_START + 0x38
_08055254: .4byte IWRAM_START + 0x3A
_08055258: .4byte gUnknown_030054CC
_0805525C:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08055280
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08055280
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055298
_08055280:
	mov r1, sb
	ldrb r0, [r1, #8]
	ldr r2, [sp, #0x1c]
	strb r0, [r2]
_08055288:
	ldr r0, _08055294 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055364
	.align 2, 0
_08055294: .4byte gCurTask
_08055298:
	mov r1, sb
	ldr r0, [r1, #0x44]
	ldr r1, [r1, #0x48]
	bl sub_80122DC
	mov r2, sb
	adds r2, #0x4c
	ldrb r0, [r2]
	subs r1, r0, #1
	strb r1, [r2]
	movs r3, #0xff
	lsls r0, r1, #0x18
	cmp r0, #0
	bne _080552E4
	movs r0, #0x78
	strb r0, [r2]
	movs r1, #0
	ldr r0, _080552D8 @ =0x000001F1
	strh r0, [r5, #0xa]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
	ldr r0, _080552DC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080552E0 @ =sub_8054F00
	str r0, [r1, #8]
	b _08055358
	.align 2, 0
_080552D8: .4byte 0x000001F1
_080552DC: .4byte gCurTask
_080552E0: .4byte sub_8054F00
_080552E4:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _08055340
	add r1, sp, #8
	movs r2, #0
	movs r0, #4
	strh r0, [r1]
	movs r0, #0xf9
	lsls r0, r0, #1
	strh r0, [r1, #2]
	adds r0, r1, #0
	strb r2, [r0, #4]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08055318
	ldr r0, [sp, #0x20]
	adds r0, #6
	lsls r0, r0, #8
	str r0, [sp, #0x14]
	add r1, sp, #8
	movs r0, #0
	b _08055326
_08055318:
	ldr r0, [sp, #0x20]
	subs r0, #5
	lsls r0, r0, #8
	str r0, [sp, #0x14]
	add r1, sp, #8
	movs r0, #0x80
	lsls r0, r0, #2
_08055326:
	strh r0, [r1, #6]
	ldr r0, [sp, #0x24]
	subs r0, #6
	lsls r0, r0, #8
	str r0, [sp, #0x18]
	add r1, sp, #8
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r1, #8]
	adds r0, r1, #0
	bl sub_8050E04
	b _08055358
_08055340:
	cmp r0, #6
	bne _08055358
	ldr r0, _08055374 @ =0x000001F1
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
_08055358:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08055364:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055374: .4byte 0x000001F1

	thumb_func_start sub_8055378
sub_8055378: @ 0x08055378
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	ldr r0, _08055424 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov r8, r0
	ldr r0, _08055428 @ =IWRAM_START + 0xC
	adds r7, r1, r0
	mov r1, r8
	ldr r1, [r1]
	mov sb, r1
	mov r2, r8
	ldr r1, [r2, #0x44]
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r2, #0x48]
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r3, _0805542C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r5, r0
	movs r4, #0
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	ldr r5, _08055430 @ =gUnknown_030059E0
	str r5, [sp]
	str r4, [sp, #4]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C204
	adds r2, r0, #0
	cmp r2, #1
	bne _080553EC
	movs r0, #0xf7
	lsls r0, r0, #8
	strh r0, [r5, #0x12]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x6c
	strb r2, [r0]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	movs r0, #0x99
	bl m4aSongNumStart
_080553EC:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08055410
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08055410
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055434
_08055410:
	mov r1, r8
	ldrb r0, [r1, #8]
	mov r2, sb
	strb r0, [r2]
	ldr r0, _08055424 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805549E
	.align 2, 0
_08055424: .4byte gCurTask
_08055428: .4byte IWRAM_START + 0xC
_0805542C: .4byte gUnknown_03005960
_08055430: .4byte gUnknown_030059E0
_08055434:
	mov r1, r8
	ldr r0, [r1, #0x44]
	ldr r1, [r1, #0x48]
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	cmp r0, #0
	bne _08055498
	adds r0, r7, #0
	bl sub_80051E8
	ldr r1, [r7, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08055468
	ldr r0, _08055464 @ =0xFFFFFBFF
	ands r1, r0
	b _0805546A
	.align 2, 0
_08055464: .4byte 0xFFFFFBFF
_08055468:
	orrs r1, r2
_0805546A:
	str r1, [r7, #0x10]
	movs r1, #0
	ldr r0, _0805548C @ =0x000001F1
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08055490 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08055494 @ =sub_8054F00
	str r0, [r1, #8]
	b _0805549E
	.align 2, 0
_0805548C: .4byte 0x000001F1
_08055490: .4byte gCurTask
_08055494: .4byte sub_8054F00
_08055498:
	adds r0, r7, #0
	bl sub_80051E8
_0805549E:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80554AC
sub_80554AC: @ 0x080554AC
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_80554C0
sub_80554C0: @ 0x080554C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	ldr r0, _0805552C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080554EE
	ldr r0, _08055530 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	bne _080554EE
	b _080555F2
_080554EE:
	ldr r0, _08055534 @ =sub_805560C
	movs r2, #0x81
	lsls r2, r2, #7
	ldr r1, _08055538 @ =sub_80557DC
	str r1, [sp]
	movs r1, #0x58
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r0, r0, r1
	mov sb, r0
	strh r6, [r7, #4]
	mov r2, r8
	strh r2, [r7, #6]
	str r4, [r7]
	ldrb r0, [r4]
	strb r0, [r7, #8]
	strb r5, [r7, #9]
	movs r0, #4
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _08055540
	ldr r3, _0805553C @ =IWRAM_START + 0x54
	adds r1, r1, r3
	movs r0, #1
	b _08055546
	.align 2, 0
_0805552C: .4byte gUnknown_030054CC
_08055530: .4byte gUnknown_030054EC
_08055534: .4byte sub_805560C
_08055538: .4byte sub_80557DC
_0805553C: .4byte IWRAM_START + 0x54
_08055540:
	ldr r0, _08055604 @ =IWRAM_START + 0x54
	adds r1, r1, r0
	movs r0, #0
_08055546:
	strb r0, [r1]
	adds r1, r7, #0
	adds r1, #0x56
	movs r2, #0
	mov sl, r2
	movs r0, #0xff
	lsls r0, r0, #8
	strh r0, [r1]
	ldrb r1, [r4]
	lsls r1, r1, #3
	lsls r6, r6, #8
	adds r1, r1, r6
	lsls r1, r1, #8
	str r1, [r7, #0x44]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	mov r3, r8
	lsls r5, r3, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r7, #0x48]
	str r2, [r7, #0x4c]
	asrs r0, r0, #8
	asrs r1, r1, #8
	adds r2, r7, #0
	adds r2, #0x54
	ldrb r2, [r2]
	mov r3, sl
	str r3, [sp]
	ldr r3, _08055608 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	str r0, [r7, #0x50]
	ldrb r0, [r4]
	lsls r0, r0, #3
	adds r0, r0, r6
	mov r1, sb
	strh r0, [r1, #0x16]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r1, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r4]
	movs r0, #0x1e
	bl sub_8007C10
	mov r3, sb
	str r0, [r3, #4]
	movs r0, #0xf7
	lsls r0, r0, #1
	strh r0, [r3, #0xa]
	mov r0, sb
	adds r0, #0x20
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r3, #0x1a]
	mov r2, sl
	strh r2, [r3, #8]
	strh r2, [r3, #0x14]
	strh r2, [r3, #0x1c]
	mov r1, sb
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	mov r0, sb
	adds r0, #0x25
	movs r3, #0
	strb r3, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r1, sb
	str r0, [r1, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r1, #0x10]
_080555F2:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055604: .4byte IWRAM_START + 0x54
_08055608: .4byte sub_801EE64

	thumb_func_start sub_805560C
sub_805560C: @ 0x0805560C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	ldr r0, _080556E4 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r3, r0
	ldr r1, _080556E8 @ =IWRAM_START + 0xC
	adds r7, r3, r1
	ldr r2, [r4]
	mov r8, r2
	ldr r5, _080556EC @ =IWRAM_START + 0x56
	adds r0, r3, r5
	movs r1, #0
	ldrsh r0, [r0, r1]
	ldr r2, [r4, #0x4c]
	adds r2, r2, r0
	str r2, [r4, #0x4c]
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _080556F0 @ =IWRAM_START + 0x54
	adds r5, r3, r2
	ldrb r2, [r5]
	movs r3, #0
	str r3, [sp]
	ldr r3, _080556F4 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _08055682
	lsls r0, r0, #8
	ldr r1, [r4, #0x50]
	adds r1, r1, r0
	str r1, [r4, #0x50]
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x44]
	ldr r2, [r4, #0x4c]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r5]
	ldr r3, _080556F8 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08055682:
	cmp r0, #0
	ble _0805568E
	lsls r1, r0, #8
	ldr r0, [r4, #0x50]
	adds r0, r0, r1
	str r0, [r4, #0x50]
_0805568E:
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	adds r0, r0, r1
	asrs r6, r0, #8
	str r6, [sp, #8]
	ldr r0, [r4, #0x48]
	ldr r1, [r4, #0x50]
	adds r0, r0, r1
	asrs r5, r0, #8
	str r5, [sp, #0xc]
	ldr r1, _080556FC @ =gUnknown_03005960
	ldr r0, [r1]
	adds r3, r6, #0
	subs r0, r3, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	ldr r1, [sp, #0xc]
	subs r0, r1, r0
	strh r0, [r7, #0x18]
	ldr r0, _08055700 @ =gUnknown_030059E0
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #1
	bl sub_800CA20
	cmp r0, #1
	beq _08055704
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #1
	bne _08055704
	mov r2, sb
	ldr r0, [r2]
	bl TaskDestroy
	b _080557CE
	.align 2, 0
_080556E4: .4byte gCurTask
_080556E8: .4byte IWRAM_START + 0xC
_080556EC: .4byte IWRAM_START + 0x56
_080556F0: .4byte IWRAM_START + 0x54
_080556F4: .4byte sub_801EE64
_080556F8: .4byte sub_801EC3C
_080556FC: .4byte gUnknown_03005960
_08055700: .4byte gUnknown_030059E0
_08055704:
	ldr r0, [r4, #0x44]
	asrs r2, r0, #8
	ldr r3, _0805576C @ =gUnknown_03005960
	ldr r1, [r3]
	movs r5, #0xb8
	lsls r5, r5, #1
	adds r0, r1, r5
	cmp r2, r0
	bgt _08055736
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08055736
	ldr r0, [r4, #0x48]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08055736
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08055774
_08055736:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805575A
	movs r5, #0x18
	ldrsh r0, [r7, r5]
	adds r0, #0x80
	cmp r0, #0
	blt _0805575A
	movs r0, #0x18
	ldrsh r1, [r7, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055774
_0805575A:
	ldrb r0, [r4, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _08055770 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080557CE
	.align 2, 0
_0805576C: .4byte gUnknown_03005960
_08055770: .4byte gCurTask
_08055774:
	ldr r1, [r4, #0x4c]
	asrs r3, r1, #8
	mov r2, r8
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r5, r0, #0
	cmp r3, r2
	bgt _08055798
	adds r2, r4, #0
	adds r2, #0x56
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _08055798
	rsbs r0, r0, #0
	strh r0, [r2]
	b _080557B6
_08055798:
	asrs r1, r1, #8
	mov r2, r8
	ldrb r0, [r2, #5]
	adds r0, r5, r0
	lsls r0, r0, #3
	cmp r1, r0
	blt _080557B6
	adds r3, r4, #0
	adds r3, #0x56
	movs r5, #0
	ldrsh r0, [r3, r5]
	cmp r0, #0
	ble _080557B6
	rsbs r0, r0, #0
	strh r0, [r3]
_080557B6:
	ldr r2, [sp, #8]
	lsls r0, r2, #8
	ldr r3, [sp, #0xc]
	lsls r1, r3, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_080557CE:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80557DC
sub_80557DC: @ 0x080557DC
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_80557F0
sub_80557F0: @ 0x080557F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0805584C @ =sub_8055950
	ldr r2, _08055850 @ =0x00004090
	ldr r1, _08055854 @ =sub_8055EC0
	str r1, [sp]
	movs r1, #0x8c
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sl, r0
	ldr r0, _08055858 @ =IWRAM_START + 0xC
	adds r7, r1, r0
	mov r2, sl
	strh r5, [r2, #4]
	mov r0, r8
	strh r0, [r2, #6]
	str r6, [r2]
	ldrb r0, [r6]
	strb r0, [r2, #8]
	strb r4, [r2, #9]
	movs r0, #4
	ldrsb r0, [r6, r0]
	cmp r0, #0
	beq _08055860
	ldr r2, _0805585C @ =IWRAM_START + 0x85
	adds r1, r1, r2
	movs r0, #1
	b _08055866
	.align 2, 0
_0805584C: .4byte sub_8055950
_08055850: .4byte 0x00004090
_08055854: .4byte sub_8055EC0
_08055858: .4byte IWRAM_START + 0xC
_0805585C: .4byte IWRAM_START + 0x85
_08055860:
	ldr r4, _08055948 @ =IWRAM_START + 0x85
	adds r1, r1, r4
	movs r0, #0
_08055866:
	strb r0, [r1]
	ldrb r0, [r6]
	lsls r0, r0, #3
	lsls r3, r5, #8
	adds r0, r0, r3
	lsls r0, r0, #8
	mov r1, sl
	str r0, [r1, #0x7c]
	adds r1, #0x80
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r4, r8
	lsls r2, r4, #8
	adds r0, r0, r2
	lsls r0, r0, #8
	str r0, [r1]
	adds r1, #4
	movs r4, #0
	movs r0, #1
	strb r0, [r1]
	ldrb r0, [r6]
	lsls r0, r0, #3
	adds r0, r0, r3
	movs r5, #0
	strh r0, [r7, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	adds r0, r0, r2
	strh r0, [r7, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0805594C @ =0x000001EF
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r5, [r0]
	movs r2, #0x90
	lsls r2, r2, #3
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r1, #0x10
	mov sb, r1
	mov r2, sb
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
	str r0, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #6
	str r6, [r7, #0x10]
	mov r7, sl
	adds r7, #0x44
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xf8
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	mov r1, sl
	adds r1, #0x64
	movs r0, #2
	strb r0, [r1]
	movs r1, #0x90
	lsls r1, r1, #3
	strh r1, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0x65
	subs r0, #3
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x66
	mov r2, sb
	strb r2, [r0]
	adds r0, #3
	strb r5, [r0]
	mov r4, r8
	str r4, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055948: .4byte IWRAM_START + 0x85
_0805594C: .4byte 0x000001EF

	thumb_func_start sub_8055950
sub_8055950: @ 0x08055950
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r1, _080559B8 @ =gCurTask
	ldr r0, [r1]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r5
	mov r8, r0
	ldr r2, _080559BC @ =IWRAM_START + 0xC
	adds r4, r5, r2
	ldr r0, _080559C0 @ =IWRAM_START + 0x44
	adds r0, r0, r5
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	mov r2, r8
	ldr r0, [r2, #0x7c]
	asrs r0, r0, #8
	mov sl, r0
	mov r6, sl
	ldr r0, _080559C4 @ =IWRAM_START + 0x80
	adds r0, r5, r0
	str r0, [sp, #4]
	ldr r2, [r0]
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r1, _080559C8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r6, r0
	strh r0, [r4, #0x16]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	mov r1, sl
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080559CC
	ldr r1, _080559B8 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08055A86
	.align 2, 0
_080559B8: .4byte gCurTask
_080559BC: .4byte IWRAM_START + 0xC
_080559C0: .4byte IWRAM_START + 0x44
_080559C4: .4byte IWRAM_START + 0x80
_080559C8: .4byte gUnknown_03005960
_080559CC:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080559F0
	movs r2, #0x18
	ldrsh r0, [r4, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _080559F0
	movs r0, #0x18
	ldrsh r1, [r4, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055A08
_080559F0:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _08055A04 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055A86
	.align 2, 0
_08055A04: .4byte gCurTask
_08055A08:
	ldr r0, _08055A98 @ =IWRAM_START + 0x84
	adds r2, r5, r0
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	movs r3, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08055A50
	ldr r0, _08055A9C @ =IWRAM_START + 0x88
	adds r1, r5, r0
	movs r0, #0xfb
	lsls r0, r0, #8
	strh r0, [r1]
	ldr r0, _08055AA0 @ =IWRAM_START + 0x86
	adds r1, r5, r0
	movs r0, #0xf8
	lsls r0, r0, #8
	strh r0, [r1]
	movs r0, #0x1e
	strb r0, [r2]
	ldr r2, _08055AA4 @ =gCurTask
	ldr r1, [r2]
	ldr r0, _08055AA8 @ =sub_8055AB8
	str r0, [r1, #8]
	ldr r0, _08055AAC @ =0x000001EF
	strh r0, [r4, #0xa]
	ldr r0, _08055AB0 @ =IWRAM_START + 0x2C
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	ldr r2, _08055AB4 @ =IWRAM_START + 0x2D
	adds r1, r5, r2
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
_08055A50:
	mov r1, r8
	ldr r0, [r1, #0x7c]
	ldr r2, [sp, #4]
	ldr r1, [r2]
	bl sub_80122DC
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldrh r0, [r4, #0x16]
	mov r1, sb
	strh r0, [r1, #0x16]
	ldrh r0, [r4, #0x18]
	subs r0, #0x20
	strh r0, [r1, #0x18]
	adds r2, r7, #0
	subs r2, #0x20
	mov r0, sb
	mov r1, sl
	bl sub_800C84C
	mov r0, sb
	bl sub_80051E8
_08055A86:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055A98: .4byte IWRAM_START + 0x84
_08055A9C: .4byte IWRAM_START + 0x88
_08055AA0: .4byte IWRAM_START + 0x86
_08055AA4: .4byte gCurTask
_08055AA8: .4byte sub_8055AB8
_08055AAC: .4byte 0x000001EF
_08055AB0: .4byte IWRAM_START + 0x2C
_08055AB4: .4byte IWRAM_START + 0x2D

	thumb_func_start sub_8055AB8
sub_8055AB8: @ 0x08055AB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r1, _08055B20 @ =gCurTask
	ldr r0, [r1]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov r8, r0
	ldr r2, _08055B24 @ =IWRAM_START + 0xC
	adds r4, r7, r2
	ldr r0, _08055B28 @ =IWRAM_START + 0x44
	adds r0, r0, r7
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	mov r2, r8
	ldr r0, [r2, #0x7c]
	asrs r0, r0, #8
	mov sl, r0
	mov r5, sl
	ldr r0, _08055B2C @ =IWRAM_START + 0x80
	adds r0, r7, r0
	str r0, [sp, #4]
	ldr r2, [r0]
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r1, _08055B30 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r5, r0
	strh r0, [r4, #0x16]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	mov r1, sl
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08055B34
	ldr r1, _08055B20 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08055BFC
	.align 2, 0
_08055B20: .4byte gCurTask
_08055B24: .4byte IWRAM_START + 0xC
_08055B28: .4byte IWRAM_START + 0x44
_08055B2C: .4byte IWRAM_START + 0x80
_08055B30: .4byte gUnknown_03005960
_08055B34:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08055B58
	movs r2, #0x18
	ldrsh r0, [r4, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _08055B58
	movs r0, #0x18
	ldrsh r1, [r4, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055B70
_08055B58:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _08055B6C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055BFC
	.align 2, 0
_08055B6C: .4byte gCurTask
_08055B70:
	mov r1, r8
	ldr r0, [r1, #0x7c]
	ldr r2, [sp, #4]
	ldr r1, [r2]
	bl sub_80122DC
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _08055BD8
	adds r0, r4, #0
	bl sub_80051E8
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
	ldr r0, _08055BC0 @ =IWRAM_START + 0x84
	adds r1, r7, r0
	movs r0, #0x32
	strb r0, [r1]
	ldr r0, _08055BC4 @ =0x000001EF
	strh r0, [r4, #0xa]
	ldr r2, _08055BC8 @ =IWRAM_START + 0x2C
	adds r1, r7, r2
	movs r0, #2
	strb r0, [r1]
	ldr r0, _08055BCC @ =IWRAM_START + 0x2D
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08055BD0 @ =gCurTask
	ldr r1, [r2]
	ldr r0, _08055BD4 @ =sub_8055C0C
	str r0, [r1, #8]
	b _08055BFC
	.align 2, 0
_08055BC0: .4byte IWRAM_START + 0x84
_08055BC4: .4byte 0x000001EF
_08055BC8: .4byte IWRAM_START + 0x2C
_08055BCC: .4byte IWRAM_START + 0x2D
_08055BD0: .4byte gCurTask
_08055BD4: .4byte sub_8055C0C
_08055BD8:
	adds r0, r4, #0
	bl sub_80051E8
	ldrh r0, [r4, #0x16]
	mov r1, sb
	strh r0, [r1, #0x16]
	ldrh r0, [r4, #0x18]
	subs r0, #0x20
	strh r0, [r1, #0x18]
	adds r2, r6, #0
	subs r2, #0x20
	mov r0, sb
	mov r1, sl
	bl sub_800C84C
	mov r0, sb
	bl sub_80051E8
_08055BFC:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8055C0C
sub_8055C0C: @ 0x08055C0C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r1, _08055C98 @ =gCurTask
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	add r0, r8
	str r0, [sp, #4]
	ldr r7, _08055C9C @ =IWRAM_START + 0xC
	add r7, r8
	ldr r2, _08055CA0 @ =IWRAM_START + 0x44
	add r2, r8
	mov sl, r2
	ldr r0, [r0]
	str r0, [sp]
	ldr r1, [sp, #4]
	ldr r0, [r1, #0x7c]
	asrs r0, r0, #8
	mov sb, r0
	mov r4, sb
	ldr r2, _08055CA4 @ =IWRAM_START + 0x80
	add r2, r8
	str r2, [sp, #8]
	ldr r2, [r2]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r1, _08055CA8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	ldr r0, _08055CAC @ =IWRAM_START + 0x88
	add r0, r8
	ldrh r1, [r0]
	adds r1, #0x31
	strh r1, [r0]
	ldr r6, _08055CB0 @ =IWRAM_START + 0x86
	add r6, r8
	ldrh r0, [r6]
	adds r0, r0, r1
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	ldrh r1, [r7, #0x18]
	adds r0, r0, r1
	subs r0, #0x20
	mov r1, sl
	strh r0, [r1, #0x18]
	ldrh r0, [r7, #0x16]
	strh r0, [r1, #0x16]
	adds r0, r7, #0
	mov r1, sb
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08055CB4
	ldr r2, _08055C98 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _08055D54
	.align 2, 0
_08055C98: .4byte gCurTask
_08055C9C: .4byte IWRAM_START + 0xC
_08055CA0: .4byte IWRAM_START + 0x44
_08055CA4: .4byte IWRAM_START + 0x80
_08055CA8: .4byte gUnknown_03005960
_08055CAC: .4byte IWRAM_START + 0x88
_08055CB0: .4byte IWRAM_START + 0x86
_08055CB4:
	ldrh r2, [r6]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x18
	adds r2, r2, r5
	subs r2, #0x20
	mov r0, sl
	mov r1, sb
	bl sub_800C84C
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08055CEA
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08055CEA
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055D00
_08055CEA:
	ldr r1, [sp, #4]
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _08055CFC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055D54
	.align 2, 0
_08055CFC: .4byte gCurTask
_08055D00:
	ldr r1, [sp, #4]
	ldr r0, [r1, #0x7c]
	ldr r2, [sp, #8]
	ldr r1, [r2]
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	mov r0, sl
	bl sub_8004558
	mov r0, sl
	bl sub_80051E8
	ldr r1, _08055D64 @ =IWRAM_START + 0x84
	add r1, r8
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08055D54
	ldr r0, _08055D68 @ =0x000001EF
	strh r0, [r7, #0xa]
	ldr r1, _08055D6C @ =IWRAM_START + 0x2C
	add r1, r8
	movs r0, #3
	strb r0, [r1]
	ldr r1, _08055D70 @ =IWRAM_START + 0x2D
	add r1, r8
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08055D74 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08055D78 @ =sub_8055D7C
	str r0, [r1, #8]
_08055D54:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08055D64: .4byte IWRAM_START + 0x84
_08055D68: .4byte 0x000001EF
_08055D6C: .4byte IWRAM_START + 0x2C
_08055D70: .4byte IWRAM_START + 0x2D
_08055D74: .4byte gCurTask
_08055D78: .4byte sub_8055D7C

	thumb_func_start sub_8055D7C
sub_8055D7C: @ 0x08055D7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _08055DE0 @ =gCurTask
	ldr r0, [r1]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov r8, r0
	ldr r2, _08055DE4 @ =IWRAM_START + 0xC
	adds r6, r7, r2
	ldr r0, _08055DE8 @ =IWRAM_START + 0x44
	adds r0, r0, r7
	mov sb, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	mov r2, r8
	ldr r1, [r2, #0x7c]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r0, _08055DEC @ =IWRAM_START + 0x80
	adds r0, r0, r7
	mov sl, r0
	ldr r2, [r0]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08055DF0 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08055DF4
	ldr r1, _08055DE0 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08055EB0
	.align 2, 0
_08055DE0: .4byte gCurTask
_08055DE4: .4byte IWRAM_START + 0xC
_08055DE8: .4byte IWRAM_START + 0x44
_08055DEC: .4byte IWRAM_START + 0x80
_08055DF0: .4byte gUnknown_03005960
_08055DF4:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08055E18
	movs r2, #0x18
	ldrsh r0, [r6, r2]
	adds r0, #0x80
	cmp r0, #0
	blt _08055E18
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08055E30
_08055E18:
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _08055E2C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08055EB0
	.align 2, 0
_08055E2C: .4byte gCurTask
_08055E30:
	mov r1, r8
	ldr r0, [r1, #0x7c]
	mov r2, sl
	ldr r1, [r2]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _08055E8C
	adds r0, r6, #0
	bl sub_80051E8
	ldr r0, _08055E74 @ =IWRAM_START + 0x84
	adds r1, r7, r0
	movs r0, #0x1e
	strb r0, [r1]
	ldr r0, _08055E78 @ =0x000001EF
	strh r0, [r6, #0xa]
	ldr r2, _08055E7C @ =IWRAM_START + 0x2C
	adds r1, r7, r2
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08055E80 @ =IWRAM_START + 0x2D
	adds r1, r7, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08055E84 @ =gCurTask
	ldr r1, [r2]
	ldr r0, _08055E88 @ =sub_8055950
	str r0, [r1, #8]
	b _08055E92
	.align 2, 0
_08055E74: .4byte IWRAM_START + 0x84
_08055E78: .4byte 0x000001EF
_08055E7C: .4byte IWRAM_START + 0x2C
_08055E80: .4byte IWRAM_START + 0x2D
_08055E84: .4byte gCurTask
_08055E88: .4byte sub_8055950
_08055E8C:
	adds r0, r6, #0
	bl sub_80051E8
_08055E92:
	ldrh r0, [r6, #0x16]
	mov r1, sb
	strh r0, [r1, #0x16]
	ldrh r0, [r6, #0x18]
	subs r0, #0x20
	strh r0, [r1, #0x18]
	adds r2, r5, #0
	subs r2, #0x20
	mov r0, sb
	adds r1, r4, #0
	bl sub_800C84C
	mov r0, sb
	bl sub_80051E8
_08055EB0:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8055EC0
sub_8055EC0: @ 0x08055EC0
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x48]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8055EDC
sub_8055EDC: @ 0x08055EDC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08055F38 @ =sub_8056014
	ldr r2, _08055F3C @ =0x00004040
	ldr r1, _08055F40 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x54
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r0, r0, r1
	mov r8, r0
	strh r5, [r7, #4]
	mov r2, sl
	strh r2, [r7, #6]
	str r6, [r7]
	ldrb r0, [r6]
	strb r0, [r7, #8]
	strb r4, [r7, #9]
	movs r0, #4
	ldrsb r0, [r6, r0]
	cmp r0, #0
	beq _08055F48
	ldr r0, _08055F44 @ =IWRAM_START + 0x50
	adds r1, r1, r0
	movs r0, #1
	b _08055F4E
	.align 2, 0
_08055F38: .4byte sub_8056014
_08055F3C: .4byte 0x00004040
_08055F40: .4byte sub_80095E8
_08055F44: .4byte IWRAM_START + 0x50
_08055F48:
	ldr r2, _08056004 @ =IWRAM_START + 0x50
	adds r1, r1, r2
	movs r0, #0
_08055F4E:
	strb r0, [r1]
	ldrb r1, [r6]
	lsls r1, r1, #3
	lsls r5, r5, #8
	mov sb, r5
	add r1, sb
	lsls r1, r1, #8
	str r1, [r7, #0x3c]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r2, sl
	lsls r5, r2, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r7, #0x40]
	movs r4, #0
	str r4, [r7, #0x44]
	asrs r0, r0, #8
	asrs r1, r1, #8
	adds r2, r7, #0
	adds r2, #0x50
	ldrb r2, [r2]
	str r4, [sp]
	ldr r3, _08056008 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	str r0, [r7, #0x48]
	ldr r0, _0805600C @ =0xFFFFFE80
	str r0, [r7, #0x4c]
	adds r1, r7, #0
	adds r1, #0x51
	movs r0, #0x78
	strb r0, [r1]
	ldrb r0, [r6]
	lsls r0, r0, #3
	add r0, sb
	movs r7, #0
	mov r1, r8
	strh r0, [r1, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r1, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r6]
	movs r0, #0x10
	bl sub_8007C10
	mov r1, r8
	str r0, [r1, #4]
	ldr r0, _08056010 @ =0x000001F7
	strh r0, [r1, #0xa]
	mov r0, r8
	adds r0, #0x20
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #8]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x1c]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x25
	strb r7, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r2, r8
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08056004: .4byte IWRAM_START + 0x50
_08056008: .4byte sub_801EE64
_0805600C: .4byte 0xFFFFFE80
_08056010: .4byte 0x000001F7

	thumb_func_start sub_8056014
sub_8056014: @ 0x08056014
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r1, _080560C8 @ =gCurTask
	ldr r0, [r1]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r3, r0
	ldr r2, _080560CC @ =IWRAM_START + 0xC
	adds r5, r3, r2
	ldr r0, [r4]
	mov sb, r0
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _080560D0 @ =IWRAM_START + 0x50
	adds r2, r2, r3
	mov r8, r2
	ldrb r2, [r2]
	ldr r3, _080560D4 @ =sub_801EC3C
	mov sl, r3
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
	cmp r0, #0
	bge _08056080
	lsls r0, r0, #8
	ldr r1, [r4, #0x48]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, r8
	ldrb r2, [r3]
	mov r3, sl
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08056080:
	cmp r0, #0
	ble _0805608C
	lsls r1, r0, #8
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x48]
_0805608C:
	ldr r1, [r4, #0x3c]
	ldr r0, [r4, #0x44]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r6, r1, #0
	ldr r2, [r4, #0x40]
	ldr r0, [r4, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r0, _080560D8 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r6, r0
	strh r0, [r5, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080560DC
	ldr r1, _080560C8 @ =gCurTask
	ldr r0, [r1]
	bl TaskDestroy
	b _08056214
	.align 2, 0
_080560C8: .4byte gCurTask
_080560CC: .4byte IWRAM_START + 0xC
_080560D0: .4byte IWRAM_START + 0x50
_080560D4: .4byte sub_801EC3C
_080560D8: .4byte gUnknown_03005960
_080560DC:
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805610E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805610E
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805610E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08056148
_0805610E:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08056132
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08056132
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056148
_08056132:
	ldrb r0, [r4, #8]
	mov r3, sb
	strb r0, [r3]
	ldr r0, _08056144 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056214
	.align 2, 0
_08056144: .4byte gCurTask
_08056148:
	adds r1, r7, #0
	subs r1, #0x32
	lsls r1, r1, #8
	ldr r0, _080561A8 @ =gUnknown_030059E0
	ldr r2, [r0, #0xc]
	adds r3, r0, #0
	lsls r0, r6, #8
	mov r8, r0
	cmp r1, r2
	bge _08056200
	adds r0, r7, #0
	adds r0, #0x32
	lsls r0, r0, #8
	cmp r0, r2
	ble _08056200
	ldr r1, [r3, #8]
	cmp r8, r1
	ble _080561BC
	adds r0, r6, #0
	subs r0, #0x78
	lsls r0, r0, #8
	cmp r0, r1
	bge _080561BC
	ldr r1, [r4, #0x44]
	asrs r1, r1, #8
	mov r2, sb
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	cmp r1, r0
	ble _08056200
	ldr r0, _080561AC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080561B0 @ =sub_8056230
	str r0, [r1, #8]
	ldr r0, _080561B4 @ =0x000001F7
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r5, #0x10]
	ldr r1, _080561B8 @ =0xFFFFFBFF
	ands r0, r1
	b _080561FE
	.align 2, 0
_080561A8: .4byte gUnknown_030059E0
_080561AC: .4byte gCurTask
_080561B0: .4byte sub_8056230
_080561B4: .4byte 0x000001F7
_080561B8: .4byte 0xFFFFFBFF
_080561BC:
	adds r0, r6, #0
	adds r0, #0x78
	lsls r0, r0, #8
	ldr r1, [r3, #8]
	cmp r0, r1
	ble _08056200
	ldr r1, [r4, #0x44]
	asrs r1, r1, #8
	mov r3, sb
	movs r0, #3
	ldrsb r0, [r3, r0]
	ldrb r2, [r3, #5]
	adds r0, r0, r2
	lsls r0, r0, #3
	cmp r1, r0
	bge _08056200
	ldr r0, _08056224 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08056228 @ =sub_8056230
	str r0, [r1, #8]
	ldr r0, _0805622C @ =0x000001F7
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
_080561FE:
	str r0, [r5, #0x10]
_08056200:
	lsls r1, r7, #8
	mov r0, r8
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08056214:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08056224: .4byte gCurTask
_08056228: .4byte sub_8056230
_0805622C: .4byte 0x000001F7

	thumb_func_start sub_8056230
sub_8056230: @ 0x08056230
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _08056264 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r1, [r4]
	str r1, [sp, #0xc]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08056268
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	subs r0, r0, r1
	b _0805626E
	.align 2, 0
_08056264: .4byte gCurTask
_08056268:
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	adds r0, r0, r1
_0805626E:
	str r0, [r4, #0x44]
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	movs r2, #0x50
	adds r2, r2, r4
	mov r8, r2
	ldrb r2, [r2]
	add r3, sp, #8
	str r3, [sp]
	ldr r3, _08056420 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _080562BE
	lsls r0, r0, #8
	ldr r1, [r4, #0x48]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, r8
	ldrb r2, [r3]
	ldr r3, _08056424 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_080562BE:
	cmp r0, #0
	ble _080562CA
	lsls r1, r0, #8
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x48]
_080562CA:
	ldr r0, [r4, #0x3c]
	ldr r1, [r4, #0x44]
	adds r0, r0, r1
	asrs r6, r0, #8
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r7, r0, #8
	ldr r1, _08056428 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r6, r0
	strh r0, [r5, #0x16]
	ldr r0, [r1, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	ldr r0, _0805642C @ =gUnknown_030059E0
	mov sl, r0
	adds r0, #0x90
	ldr r0, [r0]
	mov ip, r0
	movs r1, #0xc
	add r1, ip
	mov sb, r1
	ldr r1, [r1, #0x28]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _080563B8
	adds r0, r5, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r8, r0
	adds r3, r0, r6
	mov r2, sl
	ldr r0, [r2, #8]
	asrs r0, r0, #8
	mov r1, ip
	adds r1, #0x38
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	str r1, [sp, #0x10]
	adds r2, r0, r1
	cmp r3, r2
	bgt _08056340
	adds r0, r5, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, r8
	subs r0, r0, r1
	adds r0, r3, r0
	cmp r0, r2
	bge _08056354
	cmp r3, r2
	blt _080563B8
_08056340:
	mov r0, ip
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, [sp, #0x10]
	subs r0, r0, r1
	adds r0, r2, r0
	cmp r0, r3
	blt _080563B8
_08056354:
	adds r0, r5, #0
	adds r0, #0x2d
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r2, r3, r7
	mov r1, sl
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	mov ip, r0
	mov r1, sb
	adds r1, #0x2d
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	mov r8, r1
	mov r1, ip
	add r1, r8
	cmp r2, r1
	bgt _08056390
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	adds r0, r2, r0
	cmp r0, r1
	bge _080563A4
	cmp r2, r1
	blt _080563B8
_08056390:
	mov r0, sb
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r3, r8
	subs r0, r0, r3
	adds r0, r1, r0
	cmp r0, r2
	blt _080563B8
_080563A4:
	mov r0, sl
	adds r0, #0x37
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080563B8
	mov r0, sl
	bl sub_800CBA4
_080563B8:
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	ldr r3, _08056428 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r0, r0, r1
	mov r8, r0
	cmp r2, r8
	bgt _080563EC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080563EC
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080563EC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08056434
_080563EC:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08056410
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08056410
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056434
_08056410:
	ldrb r0, [r4, #8]
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	ldr r0, _08056430 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805649E
	.align 2, 0
_08056420: .4byte sub_801EE64
_08056424: .4byte sub_801EC3C
_08056428: .4byte gUnknown_03005960
_0805642C: .4byte gUnknown_030059E0
_08056430: .4byte gCurTask
_08056434:
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08056456
	ldr r1, [r4, #0x44]
	asrs r1, r1, #8
	ldr r2, [sp, #0xc]
	movs r0, #3
	ldrsb r0, [r2, r0]
	ldrb r3, [r2, #5]
	adds r0, r0, r3
	lsls r0, r0, #3
	cmp r1, r0
	bgt _08056466
	b _0805648A
_08056456:
	ldr r1, [r4, #0x44]
	asrs r1, r1, #8
	ldr r2, [sp, #0xc]
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	cmp r1, r0
	bge _0805648A
_08056466:
	ldr r0, _080564B0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080564B4 @ =sub_80564BC
	str r0, [r1, #8]
	movs r1, #0
	ldr r0, _080564B8 @ =0x000001F7
	strh r0, [r5, #0xa]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x51
	movs r0, #0x78
	strb r0, [r1]
_0805648A:
	lsls r0, r6, #8
	lsls r1, r7, #8
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0805649E:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080564B0: .4byte gCurTask
_080564B4: .4byte sub_80564BC
_080564B8: .4byte 0x000001F7

	thumb_func_start sub_80564BC
sub_80564BC: @ 0x080564BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	ldr r0, _080564F0 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r7, r1, r0
	ldr r1, [r4]
	mov sb, r1
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080564F4
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	subs r0, r0, r1
	b _080564FA
	.align 2, 0
_080564F0: .4byte gCurTask
_080564F4:
	ldr r0, [r4, #0x44]
	ldr r1, [r4, #0x4c]
	adds r0, r0, r1
_080564FA:
	str r0, [r4, #0x44]
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	movs r2, #0x50
	adds r2, r2, r4
	mov r8, r2
	ldrb r2, [r2]
	add r3, sp, #8
	str r3, [sp]
	ldr r3, _08056608 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _0805654A
	lsls r0, r0, #8
	ldr r1, [r4, #0x48]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, r8
	ldrb r2, [r3]
	ldr r3, _0805660C @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_0805654A:
	cmp r0, #0
	ble _08056556
	lsls r1, r0, #8
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x48]
_08056556:
	ldr r1, [r4, #0x4c]
	movs r0, #0x5a
	muls r0, r1, r0
	movs r1, #0x64
	bl Div
	str r0, [r4, #0x4c]
	adds r0, #0x1f
	cmp r0, #0x3e
	bhi _0805656E
	movs r0, #0
	str r0, [r4, #0x4c]
_0805656E:
	ldr r1, [r4, #0x3c]
	ldr r0, [r4, #0x44]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r4, #0x40]
	ldr r0, [r4, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r0, _08056610 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _080565FC
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080565D2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080565D2
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _080565D2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08056618
_080565D2:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080565F6
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080565F6
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056618
_080565F6:
	ldrb r0, [r4, #8]
	mov r3, sb
	strb r0, [r3]
_080565FC:
	ldr r0, _08056614 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056664
	.align 2, 0
_08056608: .4byte sub_801EE64
_0805660C: .4byte sub_801EC3C
_08056610: .4byte gUnknown_03005960
_08056614: .4byte gCurTask
_08056618:
	lsls r0, r5, #8
	lsls r1, r6, #8
	bl sub_80122DC
	adds r1, r4, #0
	adds r1, #0x51
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08056658
	ldr r0, _08056674 @ =0xFFFFFE80
	str r0, [r4, #0x4c]
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _08056678 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805667C @ =sub_8056014
	str r0, [r1, #8]
	movs r1, #0
	ldr r0, _08056680 @ =0x000001F7
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
_08056658:
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08056664:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08056674: .4byte 0xFFFFFE80
_08056678: .4byte gCurTask
_0805667C: .4byte sub_8056014
_08056680: .4byte 0x000001F7

	thumb_func_start sub_8056684
sub_8056684: @ 0x08056684
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sb, r3
	ldr r0, _080567B8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080566B2
	ldr r0, _080567BC @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080567A8
_080566B2:
	ldr r0, _080567C0 @ =sub_8056964
	ldr r2, _080567C4 @ =0x00004040
	ldr r1, _080567C8 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x58
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r2, #0xc0
	lsls r2, r2, #0x12
	adds r2, r4, r2
	ldr r0, _080567CC @ =IWRAM_START + 0xC
	adds r5, r4, r0
	movs r1, #0
	mov sl, r1
	strh r6, [r2, #4]
	mov r0, r8
	strh r0, [r2, #6]
	str r7, [r2]
	ldrb r0, [r7]
	strb r0, [r2, #8]
	mov r1, sb
	strb r1, [r2, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r6, r6, #8
	mov sb, r6
	add r0, sb
	lsls r0, r0, #8
	str r0, [r2, #0x3c]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r6, r8
	lsls r6, r6, #8
	mov r8, r6
	add r0, r8
	lsls r0, r0, #8
	str r0, [r2, #0x40]
	movs r0, #0
	str r0, [r2, #0x44]
	str r0, [r2, #0x48]
	ldr r3, _080567D0 @ =gUnknown_030053B8
	ldr r1, [r3]
	ldr r0, _080567D4 @ =0x00196225
	muls r0, r1, r0
	ldr r1, _080567D8 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r3]
	ldr r1, _080567DC @ =0x000003FF
	ands r1, r0
	ldr r3, _080567E0 @ =gUnknown_08097AA4
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r1, r6
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	str r0, [r2, #0x4c]
	lsls r1, r1, #1
	adds r1, r1, r3
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	str r0, [r2, #0x50]
	ldr r0, _080567E4 @ =IWRAM_START + 0x54
	adds r1, r4, r0
	movs r0, #0x64
	strb r0, [r1]
	ldr r6, _080567E8 @ =IWRAM_START + 0x55
	adds r1, r4, r6
	movs r0, #5
	strb r0, [r1]
	ldrb r0, [r7]
	lsls r0, r0, #3
	add r0, sb
	strh r0, [r5, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	add r0, r8
	strh r0, [r5, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #0xc
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0xfc
	lsls r0, r0, #1
	strh r0, [r5, #0xa]
	subs r6, #0x29
	adds r0, r4, r6
	mov r1, sl
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	movs r6, #0
	strh r6, [r5, #8]
	strh r6, [r5, #0x14]
	strh r6, [r5, #0x1c]
	ldr r0, _080567EC @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r6, _080567F0 @ =IWRAM_START + 0x2E
	adds r1, r4, r6
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080567F4 @ =IWRAM_START + 0x31
	adds r4, r4, r0
	mov r1, sl
	strb r1, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
_080567A8:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080567B8: .4byte gUnknown_030054CC
_080567BC: .4byte gUnknown_030054EC
_080567C0: .4byte sub_8056964
_080567C4: .4byte 0x00004040
_080567C8: .4byte sub_80095E8
_080567CC: .4byte IWRAM_START + 0xC
_080567D0: .4byte gUnknown_030053B8
_080567D4: .4byte 0x00196225
_080567D8: .4byte 0x3C6EF35F
_080567DC: .4byte 0x000003FF
_080567E0: .4byte gUnknown_08097AA4
_080567E4: .4byte IWRAM_START + 0x54
_080567E8: .4byte IWRAM_START + 0x55
_080567EC: .4byte IWRAM_START + 0x2D
_080567F0: .4byte IWRAM_START + 0x2E
_080567F4: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80567F8
sub_80567F8: @ 0x080567F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08056854 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r2, _08056858 @ =IWRAM_START + 0xC
	adds r7, r1, r2
	ldr r3, [r6]
	mov sl, r3
	ldr r1, [r6, #0x3c]
	ldr r0, [r6, #0x44]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r6, #0x40]
	ldr r0, [r6, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r0, _0805685C @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08056860
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08056938
	.align 2, 0
_08056854: .4byte gCurTask
_08056858: .4byte IWRAM_START + 0xC
_0805685C: .4byte gUnknown_03005960
_08056860:
	ldr r0, [r6, #0x3c]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08056892
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08056892
	ldr r0, [r6, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08056892
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _080568CC
_08056892:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080568B6
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080568B6
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080568CC
_080568B6:
	ldrb r0, [r6, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _080568C8 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056938
	.align 2, 0
_080568C8: .4byte gCurTask
_080568CC:
	adds r3, r6, #0
	adds r3, #0x54
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08056924
	ldr r2, _08056948 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _0805694C @ =0x00196225
	muls r0, r1, r0
	ldr r1, _08056950 @ =0x3C6EF35F
	adds r0, r0, r1
	str r0, [r2]
	ldr r1, _08056954 @ =0x000003FF
	ands r1, r0
	ldr r2, _08056958 @ =gUnknown_08097AA4
	mov sb, r2
	movs r0, #0x80
	lsls r0, r0, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	mov r8, r0
	add r8, sb
	mov r2, r8
	ldrh r2, [r2]
	mov r8, r2
	mov r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	str r0, [r6, #0x4c]
	lsls r1, r1, #1
	add r1, sb
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x15
	str r0, [r6, #0x50]
	movs r0, #0x64
	strb r0, [r3]
	ldr r0, _0805695C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08056960 @ =sub_8056964
	str r0, [r1, #8]
_08056924:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08056938:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08056948: .4byte gUnknown_030053B8
_0805694C: .4byte 0x00196225
_08056950: .4byte 0x3C6EF35F
_08056954: .4byte 0x000003FF
_08056958: .4byte gUnknown_08097AA4
_0805695C: .4byte gCurTask
_08056960: .4byte sub_8056964

	thumb_func_start sub_8056964
sub_8056964: @ 0x08056964
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080569BC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r7, r1, r0
	ldr r1, [r4]
	mov sb, r1
	ldr r2, [r4, #0x44]
	ldr r0, [r4, #0x4c]
	adds r2, r2, r0
	str r2, [r4, #0x44]
	ldr r1, [r4, #0x48]
	ldr r0, [r4, #0x50]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x3c]
	adds r0, r0, r2
	asrs r5, r0, #8
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r6, r0, #8
	ldr r1, _080569C0 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	ldr r0, [r1, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	ldr r0, _080569C4 @ =gUnknown_030059E0
	lsls r2, r5, #8
	ldr r1, [r0, #8]
	adds r3, r0, #0
	cmp r1, r2
	bge _080569C8
	ldr r0, [r4, #0x4c]
	subs r0, #0x10
	b _080569CC
	.align 2, 0
_080569BC: .4byte gCurTask
_080569C0: .4byte gUnknown_03005960
_080569C4: .4byte gUnknown_030059E0
_080569C8:
	ldr r0, [r4, #0x4c]
	adds r0, #0xb
_080569CC:
	str r0, [r4, #0x4c]
	ldr r0, [r3, #0xc]
	lsls r3, r6, #8
	mov r8, r3
	cmp r0, r8
	bge _080569DE
	ldr r0, [r4, #0x50]
	subs r0, #0x10
	b _080569E2
_080569DE:
	ldr r0, [r4, #0x50]
	adds r0, #0xb
_080569E2:
	str r0, [r4, #0x50]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08056A52
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	ldr r3, _08056A5C @ =gUnknown_03005960
	ldr r1, [r3]
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r0, r0, r1
	mov ip, r0
	cmp r2, ip
	bgt _08056A28
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08056A28
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08056A28
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08056A64
_08056A28:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08056A4C
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08056A4C
	movs r3, #0x18
	ldrsh r1, [r7, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056A64
_08056A4C:
	ldrb r0, [r4, #8]
	mov r1, sb
	strb r0, [r1]
_08056A52:
	ldr r0, _08056A60 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056AE6
	.align 2, 0
_08056A5C: .4byte gUnknown_03005960
_08056A60: .4byte gCurTask
_08056A64:
	adds r1, r4, #0
	adds r1, #0x54
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	adds r3, r1, #0
	cmp r0, #0
	bne _08056AA4
	adds r1, #1
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _08056A98
	ldr r0, _08056A90 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08056A94 @ =sub_8056AF4
	b _08056A9E
	.align 2, 0
_08056A90: .4byte gCurTask
_08056A94: .4byte sub_8056AF4
_08056A98:
	ldr r0, _08056AC0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08056AC4 @ =sub_80567F8
_08056A9E:
	str r0, [r1, #8]
	movs r0, #0x1e
	strb r0, [r3]
_08056AA4:
	lsls r4, r5, #8
	adds r0, r4, #0
	mov r1, r8
	bl sub_80122DC
	ldr r0, _08056AC8 @ =gUnknown_030059E0
	ldr r0, [r0, #8]
	cmp r0, r4
	bge _08056AD0
	ldr r0, [r7, #0x10]
	ldr r1, _08056ACC @ =0xFFFFFBFF
	ands r0, r1
	b _08056AD8
	.align 2, 0
_08056AC0: .4byte gCurTask
_08056AC4: .4byte sub_80567F8
_08056AC8: .4byte gUnknown_030059E0
_08056ACC: .4byte 0xFFFFFBFF
_08056AD0:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
_08056AD8:
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08056AE6:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8056AF4
sub_8056AF4: @ 0x08056AF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08056B5C @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r3, _08056B60 @ =IWRAM_START + 0xC
	adds r7, r1, r3
	ldr r0, [r6]
	mov sl, r0
	ldr r2, [r6, #0x44]
	ldr r0, [r6, #0x4c]
	adds r2, r2, r0
	str r2, [r6, #0x44]
	ldr r3, [r6, #0x48]
	ldr r0, [r6, #0x50]
	adds r3, r3, r0
	str r3, [r6, #0x48]
	ldr r1, [r6, #0x3c]
	adds r1, r1, r2
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r6, #0x40]
	adds r2, r2, r3
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08056B64 @ =gUnknown_03005960
	mov r8, r3
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08056B68
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08056BE8
	.align 2, 0
_08056B5C: .4byte gCurTask
_08056B60: .4byte IWRAM_START + 0xC
_08056B64: .4byte gUnknown_03005960
_08056B68:
	ldr r0, [r6, #0x3c]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08056B9A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08056B9A
	ldr r0, [r6, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08056B9A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08056BD4
_08056B9A:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08056BBE
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08056BBE
	movs r3, #0x18
	ldrsh r1, [r7, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056BD4
_08056BBE:
	ldrb r0, [r6, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08056BD0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056BE8
	.align 2, 0
_08056BD0: .4byte gCurTask
_08056BD4:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
_08056BE8:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8056BF8
sub_8056BF8: @ 0x08056BF8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	adds r4, r1, #0
	mov r8, r2
	mov sb, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r1, sb
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r0, _08056CE0 @ =sub_8056D08
	ldr r2, _08056CE4 @ =0x00004040
	ldr r1, _08056CE8 @ =sub_8056EEC
	str r1, [sp]
	movs r1, #0x5c
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r5, r0
	ldr r2, _08056CEC @ =IWRAM_START + 0xC
	adds r6, r5, r2
	movs r7, #0
	strh r4, [r0, #4]
	mov r1, r8
	strh r1, [r0, #6]
	mov r2, sl
	str r2, [r0]
	ldrb r1, [r2]
	strb r1, [r0, #8]
	mov r1, sb
	strb r1, [r0, #9]
	str r7, [r0, #0x48]
	bl sub_8056EDC
	ldr r2, _08056CF0 @ =IWRAM_START + 0x4C
	adds r1, r5, r2
	movs r0, #4
	strh r0, [r1]
	mov r0, sl
	ldrb r1, [r0, #6]
	subs r2, #8
	adds r0, r5, r2
	strh r1, [r0]
	mov r1, sl
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r6, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	mov r2, r8
	lsls r2, r2, #8
	mov r8, r2
	add r0, r8
	strh r0, [r6, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	mov r2, sl
	strb r0, [r2]
	movs r0, #0x24
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _08056CF4 @ =0x000001F3
	strh r0, [r6, #0xa]
	ldr r1, _08056CF8 @ =IWRAM_START + 0x2C
	adds r0, r5, r1
	movs r2, #0
	strb r2, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r7, [r6, #8]
	strh r7, [r6, #0x14]
	strh r7, [r6, #0x1c]
	ldr r0, _08056CFC @ =IWRAM_START + 0x2D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08056D00 @ =IWRAM_START + 0x2E
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08056D04 @ =IWRAM_START + 0x31
	adds r5, r5, r0
	movs r1, #0
	strb r1, [r5]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08056CE0: .4byte sub_8056D08
_08056CE4: .4byte 0x00004040
_08056CE8: .4byte sub_8056EEC
_08056CEC: .4byte IWRAM_START + 0xC
_08056CF0: .4byte IWRAM_START + 0x4C
_08056CF4: .4byte 0x000001F3
_08056CF8: .4byte IWRAM_START + 0x2C
_08056CFC: .4byte IWRAM_START + 0x2D
_08056D00: .4byte IWRAM_START + 0x2E
_08056D04: .4byte IWRAM_START + 0x31

	thumb_func_start sub_8056D08
sub_8056D08: @ 0x08056D08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08056DB4 @ =gUnknown_030059E0
	mov r8, r0
	ldr r0, _08056DB8 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r4, r0
	ldr r1, _08056DBC @ =IWRAM_START + 0xC
	adds r6, r4, r1
	ldr r2, [r5]
	mov sl, r2
	ldr r3, _08056DC0 @ =gUnknown_030054CC
	mov sb, r3
	ldrb r0, [r3]
	cmp r0, #2
	bls _08056D3A
	adds r0, r5, #0
	bl sub_8056EDC
_08056D3A:
	ldr r1, _08056DC4 @ =IWRAM_START + 0x4C
	adds r0, r4, r1
	movs r3, #0
	ldrsh r2, [r0, r3]
	ldr r0, _08056DC8 @ =gUnknown_03005590
	ldr r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	ldr r3, _08056DCC @ =IWRAM_START + 0x44
	adds r1, r4, r3
	lsrs r0, r0, #1
	ldrh r1, [r1]
	adds r0, r0, r1
	movs r1, #0xff
	ands r0, r1
	muls r0, r2, r0
	ldr r2, _08056DD0 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	orrs r0, r1
	ldr r2, [r5, #0x48]
	ldr r1, _08056DD4 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	asrs r0, r0, #3
	str r0, [r5, #0x48]
	subs r0, r0, r2
	mov ip, r0
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r7, r1, r0
	mov r0, sl
	ldrb r1, [r0, #1]
	lsls r1, r1, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r4, r1, r0
	ldr r1, _08056DD8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r7, r0
	strh r0, [r6, #0x16]
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #2
	bls _08056DDC
	ldr r1, [r1, #4]
	subs r1, r4, r1
	ldr r0, [r5, #0x58]
	asrs r0, r0, #8
	adds r1, r1, r0
	strh r1, [r6, #0x18]
	b _08056DE6
	.align 2, 0
_08056DB4: .4byte gUnknown_030059E0
_08056DB8: .4byte gCurTask
_08056DBC: .4byte IWRAM_START + 0xC
_08056DC0: .4byte gUnknown_030054CC
_08056DC4: .4byte IWRAM_START + 0x4C
_08056DC8: .4byte gUnknown_03005590
_08056DCC: .4byte IWRAM_START + 0x44
_08056DD0: .4byte 0x000001FF
_08056DD4: .4byte gUnknown_08097AA4
_08056DD8: .4byte gUnknown_03005960
_08056DDC:
	ldr r0, [r1, #4]
	subs r0, r4, r0
	asrs r1, r2, #8
	adds r0, r0, r1
	strh r0, [r6, #0x18]
_08056DE6:
	mov r0, r8
	ldr r1, [r0, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08056E06
	mov r2, r8
	ldr r0, [r2, #0x3c]
	cmp r0, r6
	bne _08056E06
	ldr r0, [r2, #0xc]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	add r0, ip
	str r0, [r2, #0xc]
_08056E06:
	movs r0, #0x80
	lsls r0, r0, #0xf
	ands r0, r1
	cmp r0, #0
	bne _08056E38
	ldr r2, [r5, #0x48]
	asrs r2, r2, #8
	adds r2, r4, r2
	adds r0, r6, #0
	adds r1, r7, #0
	mov r3, r8
	bl sub_800CCB8
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	beq _08056E38
	lsls r1, r1, #0x18
	asrs r1, r1, #0x10
	mov r2, r8
	ldr r0, [r2, #0xc]
	adds r0, r0, r1
	str r0, [r2, #0xc]
_08056E38:
	ldr r2, [r5, #0x48]
	asrs r2, r2, #8
	adds r2, r4, r2
	adds r0, r6, #0
	adds r1, r7, #0
	movs r3, #1
	bl sub_800C4FC
	cmp r0, #1
	beq _08056EA2
	ldr r1, _08056EAC @ =gUnknown_03005960
	ldr r0, [r1]
	subs r7, r7, r0
	ldr r0, [r1, #4]
	subs r4, r4, r0
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08056E7E
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	cmp r0, #0
	blt _08056E7E
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0xd0
	lsls r0, r0, #1
	cmp r1, r0
	ble _08056EB4
_08056E7E:
	adds r1, r7, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08056E9C
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r4, r3
	cmp r0, #0
	blt _08056E9C
	movs r0, #0xd0
	lsls r0, r0, #1
	cmp r4, r0
	ble _08056EB4
_08056E9C:
	ldrb r0, [r5, #8]
	mov r1, sl
	strb r0, [r1]
_08056EA2:
	ldr r0, _08056EB0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08056ECC
	.align 2, 0
_08056EAC: .4byte gUnknown_03005960
_08056EB0: .4byte gCurTask
_08056EB4:
	lsls r0, r7, #8
	lsls r1, r4, #8
	ldr r2, [r5, #0x48]
	adds r1, r1, r2
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08056ECC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8056EDC
sub_8056EDC: @ 0x08056EDC
	ldr r1, [r0, #0x54]
	str r1, [r0, #0x58]
	ldr r1, [r0, #0x50]
	str r1, [r0, #0x54]
	ldr r1, [r0, #0x48]
	str r1, [r0, #0x50]
	bx lr
	.align 2, 0

	thumb_func_start sub_8056EEC
sub_8056EEC: @ 0x08056EEC
	push {r4, lr}
	ldrh r0, [r0, #6]
	ldr r1, _08056F20 @ =IWRAM_START + 0xC
	adds r4, r0, r1
	ldr r0, [r4, #4]
	bl sub_8007CF0
	ldr r2, _08056F24 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08056F18
	ldr r0, [r2, #0x3c]
	cmp r0, r4
	bne _08056F18
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	str r1, [r2, #0x20]
	movs r0, #0
	str r0, [r2, #0x3c]
_08056F18:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08056F20: .4byte IWRAM_START + 0xC
_08056F24: .4byte gUnknown_030059E0

	thumb_func_start sub_8056F28
sub_8056F28: @ 0x08056F28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r8, r0
	adds r4, r1, #0
	adds r6, r2, #0
	mov sb, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, sb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _08057004 @ =sub_8057024
	ldr r2, _08057008 @ =0x00004040
	ldr r1, _0805700C @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x4c
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r3, _08057010 @ =IWRAM_START + 0xC
	adds r5, r2, r3
	movs r7, #0
	movs r0, #0
	mov sl, r0
	strh r4, [r1, #4]
	strh r6, [r1, #6]
	mov r3, r8
	str r3, [r1]
	ldrb r0, [r3]
	strb r0, [r1, #8]
	mov r0, sb
	strb r0, [r1, #9]
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	ldrb r0, [r3]
	lsls r0, r0, #3
	adds r0, r0, r4
	strh r0, [r5, #0x16]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	adds r0, r0, r6
	strh r0, [r5, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r3]
	movs r0, #0x18
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _08057014 @ =0x00000202
	strh r0, [r5, #0xa]
	ldr r2, [sp, #4]
	ldr r3, _08057018 @ =IWRAM_START + 0x2C
	adds r0, r2, r3
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	mov r0, sl
	strh r0, [r5, #8]
	strh r0, [r5, #0x14]
	strh r0, [r5, #0x1c]
	adds r3, #1
	adds r1, r2, r3
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805701C @ =IWRAM_START + 0x2E
	adds r1, r2, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _08057020 @ =IWRAM_START + 0x31
	adds r2, r2, r1
	strb r7, [r2]
	subs r0, #0x11
	str r0, [r5, #0x28]
	str r0, [r5, #0x30]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057004: .4byte sub_8057024
_08057008: .4byte 0x00004040
_0805700C: .4byte sub_80095E8
_08057010: .4byte IWRAM_START + 0xC
_08057014: .4byte 0x00000202
_08057018: .4byte IWRAM_START + 0x2C
_0805701C: .4byte IWRAM_START + 0x2E
_08057020: .4byte IWRAM_START + 0x31

	thumb_func_start sub_8057024
sub_8057024: @ 0x08057024
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _08057174 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	add r0, r8
	str r0, [sp, #4]
	ldr r6, _08057178 @ =IWRAM_START + 0xC
	add r6, r8
	ldr r0, [r0]
	str r0, [sp]
	ldr r1, [sp, #4]
	ldr r0, [r1, #0x44]
	asrs r4, r0, #8
	ldr r0, [r1, #0x48]
	asrs r5, r0, #8
	ldr r1, _0805717C @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	ldr r2, _08057180 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	ldr r1, _08057184 @ =0x00400080
	ands r0, r1
	cmp r0, #0
	bne _0805713E
	mov sl, r2
	mov r0, sl
	adds r0, #0x90
	ldr r0, [r0]
	mov ip, r0
	movs r0, #0xc
	add r0, ip
	mov sb, r0
	ldr r0, [r0, #0x28]
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _0805712E
	ldr r0, [r6, #0x30]
	cmp r0, r1
	beq _0805712E
	ldr r0, _08057188 @ =IWRAM_START + 0x40
	add r0, r8
	movs r7, #0
	ldrsb r7, [r0, r7]
	adds r3, r7, r4
	mov r1, sl
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	mov r1, ip
	adds r1, #0x38
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r2, r0, r1
	cmp r3, r2
	bgt _080570C2
	ldr r0, _0805718C @ =IWRAM_START + 0x42
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r7
	adds r0, r3, r0
	cmp r0, r2
	bge _080570D4
	cmp r3, r2
	blt _0805712E
_080570C2:
	mov r0, ip
	adds r0, #0x3a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r1
	adds r0, r2, r0
	cmp r0, r3
	blt _0805712E
_080570D4:
	adds r0, r6, #0
	adds r0, #0x35
	movs r3, #0
	ldrsb r3, [r0, r3]
	adds r2, r3, r5
	mov r1, sl
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	mov r1, sb
	adds r1, #0x2d
	movs r7, #0
	ldrsb r7, [r1, r7]
	adds r1, r0, r7
	cmp r2, r1
	bgt _08057108
	adds r0, r6, #0
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r3
	adds r0, r2, r0
	cmp r0, r1
	bge _0805711A
	cmp r2, r1
	blt _0805712E
_08057108:
	mov r0, sb
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, r0, r7
	adds r0, r1, r0
	cmp r0, r2
	blt _0805712E
_0805711A:
	mov r0, sl
	adds r0, #0x37
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0805712E
	mov r0, sl
	bl sub_800CBA4
_0805712E:
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _0805716A
_0805713E:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08057162
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08057162
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08057190
_08057162:
	ldr r1, [sp, #4]
	ldrb r0, [r1, #8]
	ldr r1, [sp]
	strb r0, [r1]
_0805716A:
	ldr r0, _08057174 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080571A4
	.align 2, 0
_08057174: .4byte gCurTask
_08057178: .4byte IWRAM_START + 0xC
_0805717C: .4byte gUnknown_03005960
_08057180: .4byte gUnknown_030059E0
_08057184: .4byte 0x00400080
_08057188: .4byte IWRAM_START + 0x40
_0805718C: .4byte IWRAM_START + 0x42
_08057190:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_080571A4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80571B4
sub_80571B4: @ 0x080571B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r4, r3, #0x18
	ldr r0, _08057220 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080571E4
	ldr r0, _08057224 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	bne _080571E4
	b _0805732E
_080571E4:
	ldr r0, _08057228 @ =sub_8057348
	ldr r2, _0805722C @ =0x00004040
	ldr r1, _08057230 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x54
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	mov r2, r8
	strh r2, [r5, #4]
	mov r3, sb
	strh r3, [r5, #6]
	str r7, [r5]
	ldrb r0, [r7]
	strb r0, [r5, #8]
	strb r4, [r5, #9]
	movs r0, #4
	ldrsb r0, [r7, r0]
	cmp r0, #0
	beq _08057238
	ldr r0, _08057234 @ =IWRAM_START + 0x50
	adds r1, r1, r0
	movs r0, #1
	b _0805723E
	.align 2, 0
_08057220: .4byte gUnknown_030054CC
_08057224: .4byte gUnknown_030054EC
_08057228: .4byte sub_8057348
_0805722C: .4byte 0x00004040
_08057230: .4byte sub_80095E8
_08057234: .4byte IWRAM_START + 0x50
_08057238:
	ldr r2, _08057278 @ =IWRAM_START + 0x50
	adds r1, r1, r2
	movs r0, #0
_0805723E:
	strb r0, [r1]
	ldrb r0, [r7]
	lsls r0, r0, #3
	mov r3, r8
	lsls r2, r3, #8
	adds r0, r0, r2
	lsls r0, r0, #8
	str r0, [r5, #0x3c]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r3, sb
	lsls r1, r3, #8
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r5, #0x40]
	movs r0, #0
	str r0, [r5, #0x44]
	ldrb r3, [r7, #6]
	mov sb, r2
	mov sl, r1
	cmp r3, #0
	beq _0805727C
	adds r1, r5, #0
	adds r1, #0x51
	movs r0, #1
	strb r0, [r1]
	mov r8, r1
	b _08057284
	.align 2, 0
_08057278: .4byte IWRAM_START + 0x50
_0805727C:
	adds r0, r5, #0
	adds r0, #0x51
	strb r3, [r0]
	mov r8, r0
_08057284:
	mov r0, r8
	ldrb r3, [r0]
	cmp r3, #0
	beq _0805729E
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	asrs r1, r1, #8
	adds r2, r5, #0
	adds r2, #0x50
	ldrb r2, [r2]
	movs r3, #0
	b _080572AC
_0805729E:
	ldr r0, [r5, #0x40]
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	asrs r1, r1, #8
	adds r2, r5, #0
	adds r2, #0x50
	ldrb r2, [r2]
_080572AC:
	str r3, [sp]
	ldr r3, _08057340 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	str r0, [r5, #0x48]
	movs r4, #0
	str r4, [r5, #0x4c]
	adds r0, r5, #0
	adds r0, #0x52
	strb r4, [r0]
	ldrb r0, [r7]
	lsls r0, r0, #3
	add r0, sb
	movs r5, #0
	strh r0, [r6, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	add r0, sl
	strh r0, [r6, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #0xf
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _08057344 @ =0x00000201
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r5, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	strh r4, [r6, #8]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x1c]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x25
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r6, #0x10]
	mov r2, r8
	ldrb r0, [r2]
	cmp r0, #0
	beq _0805732E
	movs r0, #0x80
	lsls r0, r0, #4
	orrs r0, r1
	str r0, [r6, #0x10]
_0805732E:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057340: .4byte sub_801EE64
_08057344: .4byte 0x00000201

	thumb_func_start sub_8057348
sub_8057348: @ 0x08057348
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0805738C @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r2, r0
	adds r0, #0xc
	adds r0, r0, r2
	mov r8, r0
	ldr r1, [r5]
	mov sl, r1
	ldr r0, [r0, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0805739A
	ldr r3, _08057390 @ =IWRAM_START + 0x52
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08057394
	ldr r0, [r5, #0x44]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	b _080573B8
	.align 2, 0
_0805738C: .4byte gCurTask
_08057390: .4byte IWRAM_START + 0x52
_08057394:
	ldr r0, [r5, #0x44]
	adds r0, #0x80
	b _080573B8
_0805739A:
	ldr r3, _080573AC @ =IWRAM_START + 0x52
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080573B4
	ldr r0, [r5, #0x44]
	ldr r1, _080573B0 @ =0xFFFFFE00
	adds r0, r0, r1
	b _080573B8
	.align 2, 0
_080573AC: .4byte IWRAM_START + 0x52
_080573B0: .4byte 0xFFFFFE00
_080573B4:
	ldr r0, [r5, #0x44]
	subs r0, #0x80
_080573B8:
	str r0, [r5, #0x44]
	adds r0, r5, #0
	adds r0, #0x51
	ldrb r3, [r0]
	cmp r3, #0
	beq _08057444
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	movs r2, #0x50
	adds r2, r2, r5
	mov sb, r2
	ldrb r2, [r2]
	movs r3, #8
	rsbs r3, r3, #0
	movs r4, #0
	str r4, [sp]
	ldr r4, _0805743C @ =sub_801EE64
	str r4, [sp, #4]
	bl sub_801F07C
	cmp r0, #0
	bge _08057414
	lsls r0, r0, #8
	ldr r1, [r5, #0x48]
	subs r1, r1, r0
	str r1, [r5, #0x48]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, sb
	ldrb r2, [r3]
	ldr r3, _08057440 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08057414:
	cmp r0, #0
	ble _08057420
	lsls r1, r0, #8
	ldr r0, [r5, #0x48]
	subs r0, r0, r1
	str r0, [r5, #0x48]
_08057420:
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x44]
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #8
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r7, r0, #0
	adds r7, #8
	b _080574A8
	.align 2, 0
_0805743C: .4byte sub_801EE64
_08057440: .4byte sub_801EC3C
_08057444:
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	adds r4, r5, #0
	adds r4, #0x50
	ldrb r2, [r4]
	str r3, [sp]
	ldr r3, _08057530 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _0805748C
	lsls r0, r0, #8
	ldr r1, [r5, #0x48]
	adds r1, r1, r0
	str r1, [r5, #0x48]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldrb r2, [r4]
	ldr r3, _08057534 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_0805748C:
	cmp r0, #0
	ble _08057498
	lsls r1, r0, #8
	ldr r0, [r5, #0x48]
	adds r0, r0, r1
	str r0, [r5, #0x48]
_08057498:
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x44]
	adds r0, r0, r1
	asrs r6, r0, #8
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r7, r0, #8
_080574A8:
	ldr r4, _08057538 @ =gUnknown_03005960
	ldr r0, [r4]
	subs r0, r6, r0
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r0, [r4, #4]
	subs r0, r7, r0
	strh r0, [r1, #0x18]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08057524
	ldr r0, [r5, #0x3c]
	asrs r2, r0, #8
	ldr r1, [r4]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080574F6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080574F6
	ldr r0, [r5, #0x40]
	asrs r2, r0, #8
	ldr r1, [r4, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _080574F6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08057540
_080574F6:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805751E
	mov r2, r8
	movs r3, #0x18
	ldrsh r0, [r2, r3]
	adds r0, #0x80
	cmp r0, #0
	blt _0805751E
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08057540
_0805751E:
	ldrb r0, [r5, #8]
	mov r1, sl
	strb r0, [r1]
_08057524:
	ldr r0, _0805753C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080575F6
	.align 2, 0
_08057530: .4byte sub_801EE64
_08057534: .4byte sub_801EC3C
_08057538: .4byte gUnknown_03005960
_0805753C: .4byte gCurTask
_08057540:
	mov r2, r8
	ldr r0, [r2, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0805756C
	ldr r0, _08057568 @ =gUnknown_030059E0
	ldr r1, [r0, #8]
	lsls r3, r6, #8
	mov ip, r3
	cmp r1, ip
	ble _0805758A
	adds r0, r6, #0
	adds r0, #0x64
	lsls r0, r0, #8
	cmp r1, r0
	bge _0805758A
	b _08057582
	.align 2, 0
_08057568: .4byte gUnknown_030059E0
_0805756C:
	ldr r0, _08057608 @ =gUnknown_030059E0
	ldr r1, [r0, #8]
	lsls r0, r6, #8
	mov ip, r0
	cmp r1, ip
	bge _0805758A
	adds r0, r6, #0
	subs r0, #0x64
	lsls r0, r0, #8
	cmp r1, r0
	ble _0805758A
_08057582:
	adds r1, r5, #0
	adds r1, #0x52
	movs r0, #1
	strb r0, [r1]
_0805758A:
	ldr r1, [r5, #0x44]
	asrs r3, r1, #8
	mov r2, sl
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r4, r1, #0
	adds r5, r0, #0
	cmp r3, r2
	bgt _080575AC
	mov r3, r8
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080575C8
_080575AC:
	asrs r1, r4, #8
	mov r2, sl
	ldrb r0, [r2, #5]
	adds r0, r5, r0
	lsls r0, r0, #3
	cmp r1, r0
	blt _080575E2
	mov r3, r8
	ldr r0, [r3, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080575E2
_080575C8:
	ldr r0, _0805760C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08057610 @ =sub_8057618
	str r0, [r1, #8]
	ldr r0, _08057614 @ =0x00000201
	strh r0, [r3, #0xa]
	mov r1, r8
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_080575E2:
	lsls r1, r7, #8
	mov r0, ip
	bl sub_80122DC
	mov r0, r8
	bl sub_8004558
	mov r0, r8
	bl sub_80051E8
_080575F6:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057608: .4byte gUnknown_030059E0
_0805760C: .4byte gCurTask
_08057610: .4byte sub_8057618
_08057614: .4byte 0x00000201

	thumb_func_start sub_8057618
sub_8057618: @ 0x08057618
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _080576BC @ =gCurTask
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r3, r0
	adds r0, #0xc
	adds r0, r0, r3
	mov r8, r0
	ldr r1, [r5]
	mov sl, r1
	ldr r2, _080576C0 @ =IWRAM_START + 0x51
	adds r0, r3, r2
	ldrb r4, [r0]
	cmp r4, #0
	beq _080576D0
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _080576C4 @ =IWRAM_START + 0x50
	adds r2, r2, r3
	mov sb, r2
	ldrb r2, [r2]
	movs r3, #8
	rsbs r3, r3, #0
	movs r4, #0
	str r4, [sp]
	ldr r4, _080576C8 @ =sub_801EE64
	str r4, [sp, #4]
	bl sub_801F07C
	cmp r0, #0
	bge _08057694
	lsls r0, r0, #8
	ldr r1, [r5, #0x48]
	subs r1, r1, r0
	str r1, [r5, #0x48]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, sb
	ldrb r2, [r3]
	ldr r3, _080576CC @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08057694:
	cmp r0, #0
	ble _080576A0
	lsls r1, r0, #8
	ldr r0, [r5, #0x48]
	subs r0, r0, r1
	str r0, [r5, #0x48]
_080576A0:
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x44]
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r6, r0, #0
	adds r6, #8
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	adds r7, r0, #0
	adds r7, #8
	b _08057738
	.align 2, 0
_080576BC: .4byte gCurTask
_080576C0: .4byte IWRAM_START + 0x51
_080576C4: .4byte IWRAM_START + 0x50
_080576C8: .4byte sub_801EE64
_080576CC: .4byte sub_801EC3C
_080576D0:
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _080577C0 @ =IWRAM_START + 0x50
	adds r2, r2, r3
	mov sb, r2
	ldrb r2, [r2]
	str r4, [sp]
	ldr r3, _080577C4 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _0805771C
	lsls r0, r0, #8
	ldr r1, [r5, #0x48]
	adds r1, r1, r0
	str r1, [r5, #0x48]
	ldr r0, [r5, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r5, #0x3c]
	ldr r2, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, sb
	ldrb r2, [r3]
	ldr r3, _080577C8 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_0805771C:
	cmp r0, #0
	ble _08057728
	lsls r1, r0, #8
	ldr r0, [r5, #0x48]
	adds r0, r0, r1
	str r0, [r5, #0x48]
_08057728:
	ldr r0, [r5, #0x3c]
	ldr r1, [r5, #0x44]
	adds r0, r0, r1
	asrs r6, r0, #8
	ldr r0, [r5, #0x40]
	ldr r1, [r5, #0x48]
	adds r0, r0, r1
	asrs r7, r0, #8
_08057738:
	ldr r4, _080577CC @ =gUnknown_03005960
	ldr r0, [r4]
	subs r0, r6, r0
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r0, [r4, #4]
	subs r0, r7, r0
	strh r0, [r1, #0x18]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _080577B4
	ldr r0, [r5, #0x3c]
	asrs r2, r0, #8
	ldr r1, [r4]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057786
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08057786
	ldr r0, [r5, #0x40]
	asrs r2, r0, #8
	ldr r1, [r4, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057786
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _080577D4
_08057786:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080577AE
	mov r2, r8
	movs r3, #0x18
	ldrsh r0, [r2, r3]
	adds r0, #0x80
	cmp r0, #0
	blt _080577AE
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080577D4
_080577AE:
	ldrb r0, [r5, #8]
	mov r1, sl
	strb r0, [r1]
_080577B4:
	ldr r0, _080577D0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08057836
	.align 2, 0
_080577C0: .4byte IWRAM_START + 0x50
_080577C4: .4byte sub_801EE64
_080577C8: .4byte sub_801EC3C
_080577CC: .4byte gUnknown_03005960
_080577D0: .4byte gCurTask
_080577D4:
	lsls r0, r6, #8
	lsls r1, r7, #8
	bl sub_80122DC
	mov r0, r8
	bl sub_8004558
	adds r1, r0, #0
	cmp r1, #0
	bne _08057830
	adds r0, r5, #0
	adds r0, #0x52
	strb r1, [r0]
	mov r2, r8
	ldr r1, [r2, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _0805780C
	ldr r0, _08057808 @ =0xFFFFFBFF
	ands r1, r0
	mov r3, r8
	str r1, [r3, #0x10]
	b _08057812
	.align 2, 0
_08057808: .4byte 0xFFFFFBFF
_0805780C:
	orrs r1, r2
	mov r0, r8
	str r1, [r0, #0x10]
_08057812:
	movs r1, #0
	ldr r0, _08057848 @ =0x00000201
	mov r2, r8
	strh r0, [r2, #0xa]
	mov r0, r8
	adds r0, #0x20
	strb r1, [r0]
	mov r1, r8
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805784C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08057850 @ =sub_8057348
	str r0, [r1, #8]
_08057830:
	mov r0, r8
	bl sub_80051E8
_08057836:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057848: .4byte 0x00000201
_0805784C: .4byte gCurTask
_08057850: .4byte sub_8057348

	thumb_func_start sub_8057854
sub_8057854: @ 0x08057854
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r6, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080578B0 @ =sub_8057980
	ldr r2, _080578B4 @ =0x00004040
	ldr r1, _080578B8 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x54
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r0, r0, r1
	mov r8, r0
	strh r5, [r7, #4]
	mov r2, sl
	strh r2, [r7, #6]
	str r6, [r7]
	ldrb r0, [r6]
	strb r0, [r7, #8]
	strb r4, [r7, #9]
	movs r0, #4
	ldrsb r0, [r6, r0]
	cmp r0, #0
	beq _080578C0
	ldr r0, _080578BC @ =IWRAM_START + 0x50
	adds r1, r1, r0
	movs r0, #1
	b _080578C6
	.align 2, 0
_080578B0: .4byte sub_8057980
_080578B4: .4byte 0x00004040
_080578B8: .4byte sub_80095E8
_080578BC: .4byte IWRAM_START + 0x50
_080578C0:
	ldr r2, _08057978 @ =IWRAM_START + 0x50
	adds r1, r1, r2
	movs r0, #0
_080578C6:
	strb r0, [r1]
	ldrb r1, [r6]
	lsls r1, r1, #3
	lsls r5, r5, #8
	mov sb, r5
	add r1, sb
	lsls r1, r1, #8
	str r1, [r7, #0x3c]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r2, sl
	lsls r5, r2, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r7, #0x40]
	movs r4, #0
	str r4, [r7, #0x44]
	asrs r0, r0, #8
	asrs r1, r1, #8
	adds r2, r7, #0
	adds r2, #0x50
	ldrb r2, [r2]
	str r4, [sp]
	ldr r3, _0805797C @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	lsls r0, r0, #8
	str r0, [r7, #0x48]
	str r4, [r7, #0x4c]
	adds r0, r7, #0
	adds r0, #0x51
	strb r4, [r0]
	ldrb r0, [r6]
	lsls r0, r0, #3
	add r0, sb
	movs r7, #0
	mov r1, r8
	strh r0, [r1, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r1, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r6]
	movs r0, #0xc
	bl sub_8007C10
	mov r1, r8
	str r0, [r1, #4]
	movs r0, #0xfa
	lsls r0, r0, #1
	strh r0, [r1, #0xa]
	mov r0, r8
	adds r0, #0x20
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #8]
	strh r4, [r1, #0x14]
	strh r4, [r1, #0x1c]
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x25
	strb r7, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r2, r8
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057978: .4byte IWRAM_START + 0x50
_0805797C: .4byte sub_801EE64

	thumb_func_start sub_8057980
sub_8057980: @ 0x08057980
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	ldr r0, _080579C0 @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	adds r0, #0xc
	adds r5, r2, r0
	ldr r1, [r4]
	mov sb, r1
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _080579CE
	ldr r3, _080579C4 @ =IWRAM_START + 0x51
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080579C8
	ldr r0, [r4, #0x44]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	b _080579EC
	.align 2, 0
_080579C0: .4byte gCurTask
_080579C4: .4byte IWRAM_START + 0x51
_080579C8:
	ldr r0, [r4, #0x44]
	adds r0, #0x80
	b _080579EC
_080579CE:
	ldr r3, _080579E0 @ =IWRAM_START + 0x51
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _080579E8
	ldr r0, [r4, #0x44]
	ldr r1, _080579E4 @ =0xFFFFFE00
	adds r0, r0, r1
	b _080579EC
	.align 2, 0
_080579E0: .4byte IWRAM_START + 0x51
_080579E4: .4byte 0xFFFFFE00
_080579E8:
	ldr r0, [r4, #0x44]
	subs r0, #0x80
_080579EC:
	str r0, [r4, #0x44]
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	movs r2, #0x50
	adds r2, r2, r4
	mov r8, r2
	ldrb r2, [r2]
	movs r3, #0
	str r3, [sp]
	ldr r3, _08057AE0 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _08057A3C
	lsls r0, r0, #8
	ldr r1, [r4, #0x48]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, r8
	ldrb r2, [r3]
	ldr r3, _08057AE4 @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08057A3C:
	cmp r0, #0
	ble _08057A48
	lsls r1, r0, #8
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x48]
_08057A48:
	ldr r1, [r4, #0x3c]
	ldr r0, [r4, #0x44]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r6, r1, #0
	ldr r2, [r4, #0x40]
	ldr r0, [r4, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r7, r2, #0
	ldr r0, _08057AE8 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r6, r0
	strh r0, [r5, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r7, r0
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08057AD6
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057AAC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08057AAC
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057AAC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08057AF0
_08057AAC:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08057AD0
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08057AD0
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08057AF0
_08057AD0:
	ldrb r0, [r4, #8]
	mov r3, sb
	strb r0, [r3]
_08057AD6:
	ldr r0, _08057AEC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08057BBA
	.align 2, 0
_08057AE0: .4byte sub_801EE64
_08057AE4: .4byte sub_801EC3C
_08057AE8: .4byte gUnknown_03005960
_08057AEC: .4byte gCurTask
_08057AF0:
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08057B18
	ldr r0, _08057B14 @ =gUnknown_030059E0
	ldr r1, [r0, #8]
	lsls r0, r6, #8
	mov r8, r0
	cmp r1, r8
	ble _08057B50
	adds r0, r6, #0
	adds r0, #0x64
	lsls r0, r0, #8
	cmp r1, r0
	bge _08057B50
	b _08057B2E
	.align 2, 0
_08057B14: .4byte gUnknown_030059E0
_08057B18:
	ldr r0, _08057BC8 @ =gUnknown_030059E0
	ldr r1, [r0, #8]
	lsls r2, r6, #8
	mov r8, r2
	cmp r1, r8
	bge _08057B50
	adds r0, r6, #0
	subs r0, #0x64
	lsls r0, r0, #8
	cmp r1, r0
	ble _08057B50
_08057B2E:
	adds r2, r4, #0
	adds r2, #0x51
	ldrb r0, [r2]
	cmp r0, #0
	bne _08057B4C
	movs r0, #0xfa
	lsls r0, r0, #1
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08057B4C:
	movs r0, #1
	strb r0, [r2]
_08057B50:
	ldr r1, [r4, #0x44]
	asrs r3, r1, #8
	mov r2, sb
	movs r0, #3
	ldrsb r0, [r2, r0]
	lsls r2, r0, #3
	adds r4, r1, #0
	mov ip, r0
	cmp r3, r2
	bgt _08057B70
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08057B8A
_08057B70:
	asrs r1, r4, #8
	mov r3, sb
	ldrb r0, [r3, #5]
	add r0, ip
	lsls r0, r0, #3
	cmp r1, r0
	blt _08057BA6
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08057BA6
_08057B8A:
	ldr r0, _08057BCC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08057BD0 @ =sub_8057BD4
	str r0, [r1, #8]
	movs r0, #0xfa
	lsls r0, r0, #1
	strh r0, [r5, #0xa]
	adds r1, r5, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08057BA6:
	lsls r1, r7, #8
	mov r0, r8
	bl sub_80122DC
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_08057BBA:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057BC8: .4byte gUnknown_030059E0
_08057BCC: .4byte gCurTask
_08057BD0: .4byte sub_8057BD4

	thumb_func_start sub_8057BD4
sub_8057BD4: @ 0x08057BD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _08057C8C @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r3, r0
	ldr r1, _08057C90 @ =IWRAM_START + 0xC
	adds r7, r3, r1
	ldr r2, [r4]
	mov sl, r2
	ldr r0, [r4, #0x40]
	ldr r1, [r4, #0x48]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	ldr r2, _08057C94 @ =IWRAM_START + 0x50
	adds r2, r2, r3
	mov r8, r2
	ldrb r2, [r2]
	movs r3, #0
	str r3, [sp]
	ldr r3, _08057C98 @ =sub_801EE64
	str r3, [sp, #4]
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _08057C44
	lsls r0, r0, #8
	ldr r1, [r4, #0x48]
	adds r1, r1, r0
	str r1, [r4, #0x48]
	ldr r0, [r4, #0x40]
	adds r0, r0, r1
	asrs r0, r0, #8
	ldr r1, [r4, #0x3c]
	ldr r2, [r4, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	mov r3, r8
	ldrb r2, [r3]
	ldr r3, _08057C9C @ =sub_801EC3C
	str r3, [sp]
	movs r3, #8
	bl sub_801F100
_08057C44:
	cmp r0, #0
	ble _08057C50
	lsls r1, r0, #8
	ldr r0, [r4, #0x48]
	adds r0, r0, r1
	str r0, [r4, #0x48]
_08057C50:
	ldr r1, [r4, #0x3c]
	ldr r0, [r4, #0x44]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r5, r1, #0
	ldr r2, [r4, #0x40]
	ldr r0, [r4, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r6, r2, #0
	ldr r0, _08057CA0 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r5, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r6, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08057CA4
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08057D6C
	.align 2, 0
_08057C8C: .4byte gCurTask
_08057C90: .4byte IWRAM_START + 0xC
_08057C94: .4byte IWRAM_START + 0x50
_08057C98: .4byte sub_801EE64
_08057C9C: .4byte sub_801EC3C
_08057CA0: .4byte gUnknown_03005960
_08057CA4:
	ldr r0, [r4, #0x3c]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057CD6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08057CD6
	ldr r0, [r4, #0x40]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08057CD6
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08057D10
_08057CD6:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08057CFA
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08057CFA
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08057D10
_08057CFA:
	ldrb r0, [r4, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _08057D0C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08057D6C
	.align 2, 0
_08057D0C: .4byte gCurTask
_08057D10:
	lsls r0, r5, #8
	lsls r1, r6, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r1, r0, #0
	cmp r1, #0
	bne _08057D66
	adds r0, r4, #0
	adds r0, #0x51
	strb r1, [r0]
	ldr r1, [r7, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08057D44
	ldr r0, _08057D40 @ =0xFFFFFBFF
	ands r1, r0
	b _08057D46
	.align 2, 0
_08057D40: .4byte 0xFFFFFBFF
_08057D44:
	orrs r1, r2
_08057D46:
	str r1, [r7, #0x10]
	movs r1, #0
	movs r0, #0xfa
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08057D7C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08057D80 @ =sub_8057980
	str r0, [r1, #8]
_08057D66:
	adds r0, r7, #0
	bl sub_80051E8
_08057D6C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057D7C: .4byte gCurTask
_08057D80: .4byte sub_8057980

	thumb_func_start sub_8057D84
sub_8057D84: @ 0x08057D84
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r6, r0, #0
	adds r4, r3, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08057E04 @ =sub_8057F80
	movs r1, #0xa0
	lsls r1, r1, #2
	ldr r2, _08057E08 @ =0x00004040
	ldr r3, _08057E0C @ =sub_8058480
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r5, r0
	adds r0, #0xc
	adds r7, r5, r0
	movs r2, #0
	mov r1, sb
	strh r1, [r3, #4]
	mov r0, r8
	strh r0, [r3, #6]
	str r6, [r3]
	ldrb r0, [r6]
	strb r0, [r3, #8]
	strb r4, [r3, #9]
	ldrb r0, [r6]
	lsls r0, r0, #3
	mov r4, sb
	lsls r1, r4, #8
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r3, #0x6c]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r4, r8
	lsls r1, r4, #8
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r3, #0x70]
	str r2, [r3, #0x74]
	str r2, [r3, #0x78]
	ldrb r0, [r6, #5]
	ldrb r1, [r6, #6]
	cmp r0, r1
	bls _08057E14
	ldr r2, _08057E10 @ =IWRAM_START + 0x27C
	adds r1, r5, r2
	movs r0, #0
	b _08057E1A
	.align 2, 0
_08057E04: .4byte sub_8057F80
_08057E08: .4byte 0x00004040
_08057E0C: .4byte sub_8058480
_08057E10: .4byte IWRAM_START + 0x27C
_08057E14:
	ldr r4, _08057F70 @ =IWRAM_START + 0x27C
	adds r1, r5, r4
	movs r0, #1
_08057E1A:
	strb r0, [r1]
	ldr r1, _08057F74 @ =0x0000027D
	adds r0, r3, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _08057F78 @ =0x0000027E
	adds r0, r3, r2
	strb r1, [r0]
	movs r4, #0
	mov r0, sb
	lsls r0, r0, #8
	mov sb, r0
	mov r1, r8
	lsls r1, r1, #8
	mov ip, r1
	ldr r2, _08057F7C @ =gUnknown_080D8F50
	mov sl, r2
	adds r0, r7, #0
	adds r0, #0x20
	str r0, [sp, #4]
	adds r1, r7, #0
	adds r1, #0x21
	str r1, [sp, #8]
	adds r2, r7, #0
	adds r2, #0x22
	str r2, [sp, #0xc]
	adds r0, #5
	str r0, [sp, #0x10]
	adds r1, r3, #0
	adds r1, #0x3c
	str r1, [sp, #0x14]
	adds r2, r3, #0
	adds r2, #0x5c
	str r2, [sp, #0x18]
	adds r0, r3, #0
	adds r0, #0x5d
	str r0, [sp, #0x1c]
	adds r1, #0x22
	str r1, [sp, #0x20]
	adds r2, #5
	str r2, [sp, #0x24]
	movs r0, #0x7c
	adds r0, r0, r3
	mov r8, r0
	movs r1, #0xbe
	lsls r1, r1, #1
	adds r5, r3, r1
_08057E78:
	lsls r1, r4, #2
	mov r0, r8
	adds r2, r0, r1
	ldr r0, [r3, #0x6c]
	asrs r0, r0, #8
	str r0, [r2]
	adds r1, r5, r1
	ldr r0, [r3, #0x70]
	asrs r0, r0, #8
	str r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x3f
	bls _08057E78
	ldrb r0, [r6]
	lsls r0, r0, #3
	add r0, sb
	movs r4, #0
	strh r0, [r7, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	add r0, ip
	strh r0, [r7, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	movs r2, #0x9f
	lsls r2, r2, #2
	adds r5, r3, r2
	ldrb r0, [r5]
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrb r0, [r5]
	lsls r0, r0, #3
	add r0, sl
	ldrh r0, [r0, #4]
	strh r0, [r7, #0xa]
	ldrb r0, [r5]
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0, #6]
	ldr r1, [sp, #4]
	strb r0, [r1]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #0xff
	ldr r2, [sp, #8]
	strb r0, [r2]
	movs r0, #0x10
	mov sb, r0
	mov r2, sb
	ldr r1, [sp, #0xc]
	strb r2, [r1]
	movs r1, #0
	ldr r0, [sp, #0x10]
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	mov r8, r2
	str r2, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #6
	str r6, [r7, #0x10]
	ldr r7, [sp, #0x14]
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	ldrb r0, [r5]
	adds r0, #2
	lsls r0, r0, #3
	add r0, sl
	ldr r0, [r0]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrb r0, [r5]
	adds r0, #2
	lsls r0, r0, #3
	add r0, sl
	ldrh r0, [r0, #4]
	strh r0, [r7, #0xa]
	ldrb r0, [r5]
	adds r0, #2
	lsls r0, r0, #3
	add r0, sl
	ldrb r0, [r0, #6]
	ldr r1, [sp, #0x18]
	strb r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r2, [sp, #0x1c]
	strb r0, [r2]
	mov r0, sb
	ldr r4, [sp, #0x20]
	strb r0, [r4]
	movs r2, #0
	ldr r1, [sp, #0x24]
	strb r2, [r1]
	mov r4, r8
	str r4, [r7, #0x28]
	str r6, [r7, #0x10]
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057F70: .4byte IWRAM_START + 0x27C
_08057F74: .4byte 0x0000027D
_08057F78: .4byte 0x0000027E
_08057F7C: .4byte gUnknown_080D8F50

	thumb_func_start sub_8057F80
sub_8057F80: @ 0x08057F80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _08057FC8 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r6, r0, r1
	adds r1, #0xc
	adds r7, r0, r1
	ldr r2, _08057FCC @ =IWRAM_START + 0x3C
	adds r2, r2, r0
	mov r8, r2
	ldr r3, [r6]
	str r3, [sp, #4]
	ldr r4, _08057FD0 @ =IWRAM_START + 0x27C
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _08057FE4
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	beq _08057FD4
	ldr r0, [r6, #0x78]
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r6, #0x78]
	b _08058002
	.align 2, 0
_08057FC8: .4byte gCurTask
_08057FCC: .4byte IWRAM_START + 0x3C
_08057FD0: .4byte IWRAM_START + 0x27C
_08057FD4:
	ldr r0, [r6, #0x78]
	ldr r2, _08057FE0 @ =0xFFFFFE80
	adds r0, r0, r2
	str r0, [r6, #0x78]
	b _08058002
	.align 2, 0
_08057FE0: .4byte 0xFFFFFE80
_08057FE4:
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08057FFA
	ldr r0, [r6, #0x74]
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r0, r0, r3
	b _08058000
_08057FFA:
	ldr r0, [r6, #0x74]
	ldr r4, _080580F8 @ =0xFFFFFE80
	adds r0, r0, r4
_08058000:
	str r0, [r6, #0x74]
_08058002:
	ldr r1, [r6, #0x6c]
	ldr r0, [r6, #0x74]
	adds r1, r1, r0
	asrs r1, r1, #8
	str r1, [sp, #8]
	ldr r2, [r6, #0x70]
	ldr r0, [r6, #0x78]
	adds r2, r2, r0
	asrs r2, r2, #8
	str r2, [sp, #0xc]
	ldr r5, _080580FC @ =gUnknown_03005960
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	strh r0, [r7, #0x16]
	ldr r0, [r5, #4]
	ldr r4, [sp, #0xc]
	subs r0, r4, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _080580EE
	movs r4, #0
	adds r0, r6, #0
	adds r0, #0x7c
	str r0, [sp, #0x10]
	ldr r1, _08058100 @ =0x0000027E
	adds r1, r1, r6
	mov sl, r1
	mov sb, r5
_08058044:
	adds r5, r4, #1
	movs r0, #0xd
	muls r0, r5, r0
	mov r3, sl
	ldrb r2, [r3]
	subs r2, r2, r0
	movs r0, #0x3f
	ands r2, r0
	lsls r2, r2, #2
	ldr r0, [sp, #0x10]
	adds r4, r0, r2
	ldr r0, [r4]
	mov r3, sb
	ldr r1, [r3]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x16]
	movs r0, #0xbe
	lsls r0, r0, #1
	adds r3, r6, r0
	adds r3, r3, r2
	ldr r0, [r3]
	mov r2, sb
	ldr r1, [r2, #4]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x18]
	ldr r1, [r4]
	ldr r2, [r3]
	ldr r0, _08058104 @ =gUnknown_030059E0
	str r0, [sp]
	mov r0, r8
	movs r3, #0
	bl sub_800CA20
	lsls r5, r5, #0x18
	lsrs r4, r5, #0x18
	cmp r4, #3
	bls _08058044
	ldr r0, [r6, #0x6c]
	asrs r2, r0, #8
	ldr r3, _080580FC @ =gUnknown_03005960
	ldr r1, [r3]
	movs r4, #0xb8
	lsls r4, r4, #1
	adds r0, r1, r4
	cmp r2, r0
	bgt _080580C4
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080580C4
	ldr r0, [r6, #0x70]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080580C4
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805810C
_080580C4:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080580E8
	movs r4, #0x18
	ldrsh r0, [r7, r4]
	adds r0, #0x80
	cmp r0, #0
	blt _080580E8
	movs r0, #0x18
	ldrsh r1, [r7, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805810C
_080580E8:
	ldrb r0, [r6, #8]
	ldr r1, [sp, #4]
	strb r0, [r1]
_080580EE:
	ldr r0, _08058108 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805823E
	.align 2, 0
_080580F8: .4byte 0xFFFFFE80
_080580FC: .4byte gUnknown_03005960
_08058100: .4byte 0x0000027E
_08058104: .4byte gUnknown_030059E0
_08058108: .4byte gCurTask
_0805810C:
	movs r2, #0x9f
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805815A
	ldr r1, [r6, #0x78]
	asrs r3, r1, #8
	ldr r4, [sp, #4]
	movs r0, #4
	ldrsb r0, [r4, r0]
	lsls r2, r0, #3
	adds r4, r1, #0
	adds r5, r0, #0
	cmp r3, r2
	bgt _08058144
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	ands r0, r1
	cmp r0, #0
	bne _08058144
	ldr r0, _08058140 @ =0x0000027D
	adds r1, r6, r0
	b _080581A2
	.align 2, 0
_08058140: .4byte 0x0000027D
_08058144:
	asrs r1, r4, #8
	ldr r2, [sp, #4]
	ldrb r0, [r2, #6]
	adds r0, r5, r0
	lsls r0, r0, #3
	cmp r1, r0
	blt _080581AE
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	b _08058198
_0805815A:
	ldr r1, [r6, #0x74]
	asrs r3, r1, #8
	ldr r4, [sp, #4]
	movs r0, #3
	ldrsb r0, [r4, r0]
	lsls r2, r0, #3
	adds r4, r1, #0
	adds r5, r0, #0
	cmp r3, r2
	bgt _08058184
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08058184
	ldr r0, _08058180 @ =0x0000027D
	adds r1, r6, r0
	b _080581A2
	.align 2, 0
_08058180: .4byte 0x0000027D
_08058184:
	asrs r1, r4, #8
	ldr r2, [sp, #4]
	ldrb r0, [r2, #5]
	adds r0, r5, r0
	lsls r0, r0, #3
	cmp r1, r0
	blt _080581AE
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
_08058198:
	ands r0, r1
	cmp r0, #0
	beq _080581AE
	ldr r3, _08058250 @ =0x0000027D
	adds r1, r6, r3
_080581A2:
	movs r0, #0x3c
	strb r0, [r1]
	ldr r0, _08058254 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08058258 @ =sub_8058264
	str r0, [r1, #8]
_080581AE:
	ldr r4, [sp, #8]
	lsls r0, r4, #8
	ldr r2, [sp, #0xc]
	lsls r1, r2, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	mov r0, r8
	bl sub_8004558
	movs r4, #0
	ldr r3, _0805825C @ =0x0000027E
	adds r3, r3, r6
	mov sb, r3
	ldr r7, _08058260 @ =gUnknown_03005960
_080581D6:
	adds r4, #1
	movs r0, #0xd
	muls r0, r4, r0
	mov r1, sb
	ldrb r2, [r1]
	subs r2, r2, r0
	movs r5, #0x3f
	ands r2, r5
	lsls r2, r2, #2
	ldr r3, [sp, #0x10]
	adds r0, r3, r2
	ldr r0, [r0]
	ldr r1, [r7]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x16]
	movs r3, #0xbe
	lsls r3, r3, #1
	adds r0, r6, r3
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r7, #4]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x18]
	mov r0, r8
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #3
	bls _080581D6
	ldr r2, _0805825C @ =0x0000027E
	adds r1, r6, r2
	ldrb r0, [r1]
	adds r0, #1
	ands r0, r5
	strb r0, [r1]
	ldrb r0, [r1]
	lsls r0, r0, #2
	ldr r3, [sp, #0x10]
	adds r0, r3, r0
	ldr r4, [sp, #8]
	str r4, [r0]
	ldrb r1, [r1]
	lsls r1, r1, #2
	movs r2, #0xbe
	lsls r2, r2, #1
	adds r0, r6, r2
	adds r0, r0, r1
	ldr r3, [sp, #0xc]
	str r3, [r0]
_0805823E:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058250: .4byte 0x0000027D
_08058254: .4byte gCurTask
_08058258: .4byte sub_8058264
_0805825C: .4byte 0x0000027E
_08058260: .4byte gUnknown_03005960

	thumb_func_start sub_8058264
sub_8058264: @ 0x08058264
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _080582E4 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	ldr r1, _080582E8 @ =IWRAM_START + 0xC
	adds r6, r4, r1
	ldr r2, [r7]
	mov sl, r2
	ldr r1, [r7, #0x6c]
	ldr r0, [r7, #0x74]
	adds r1, r1, r0
	asrs r1, r1, #8
	str r1, [sp]
	ldr r2, [r7, #0x70]
	ldr r0, [r7, #0x78]
	adds r2, r2, r0
	asrs r2, r2, #8
	str r2, [sp, #4]
	ldr r3, _080582EC @ =IWRAM_START + 0x27E
	adds r3, r4, r3
	str r3, [sp, #0xc]
	ldrb r3, [r3]
	lsls r3, r3, #2
	mov r8, r3
	ldr r5, _080582F0 @ =IWRAM_START + 0x7C
	adds r0, r4, r5
	add r0, r8
	ldr r0, [r0]
	ldr r3, _080582F4 @ =gUnknown_03005960
	mov r8, r3
	ldr r5, [r3]
	subs r0, r0, r5
	strh r0, [r6, #0x16]
	ldr r3, [sp, #0xc]
	ldrb r0, [r3]
	lsls r0, r0, #2
	ldr r5, _080582F8 @ =IWRAM_START + 0x17C
	adds r4, r4, r5
	adds r4, r4, r0
	ldr r0, [r4]
	mov r4, r8
	ldr r3, [r4, #4]
	subs r0, r0, r3
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080582FC
	mov r5, sb
	ldr r0, [r5]
	bl TaskDestroy
	b _08058460
	.align 2, 0
_080582E4: .4byte gCurTask
_080582E8: .4byte IWRAM_START + 0xC
_080582EC: .4byte IWRAM_START + 0x27E
_080582F0: .4byte IWRAM_START + 0x7C
_080582F4: .4byte gUnknown_03005960
_080582F8: .4byte IWRAM_START + 0x17C
_080582FC:
	ldr r0, [r7, #0x6c]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08058330
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08058330
	ldr r0, [r7, #0x70]
	asrs r1, r0, #8
	mov r4, r8
	ldr r3, [r4, #4]
	movs r5, #0x90
	lsls r5, r5, #1
	adds r0, r3, r5
	cmp r1, r0
	bgt _08058330
	adds r0, r3, #0
	subs r0, #0x80
	cmp r1, r0
	bge _08058368
_08058330:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08058354
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08058354
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08058368
_08058354:
	ldrb r0, [r7, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _08058364 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08058460
	.align 2, 0
_08058364: .4byte gCurTask
_08058368:
	ldr r4, [sp]
	lsls r0, r4, #8
	ldr r5, [sp, #4]
	lsls r1, r5, #8
	bl sub_80122DC
	ldr r0, _080583A4 @ =0x0000027D
	adds r1, r7, r0
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080583D0
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080583AC
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080583C4
	ldr r0, _080583A8 @ =0xFFFFF7FF
	ands r1, r0
	b _080583C6
	.align 2, 0
_080583A4: .4byte 0x0000027D
_080583A8: .4byte 0xFFFFF7FF
_080583AC:
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080583C4
	ldr r0, _080583C0 @ =0xFFFFFBFF
	ands r1, r0
	b _080583C6
	.align 2, 0
_080583C0: .4byte 0xFFFFFBFF
_080583C4:
	orrs r1, r2
_080583C6:
	str r1, [r6, #0x10]
	ldr r0, _08058470 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08058474 @ =sub_8057F80
	str r0, [r1, #8]
_080583D0:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
	adds r6, r7, #0
	adds r6, #0x3c
	adds r0, r6, #0
	bl sub_8004558
	movs r4, #0
	movs r2, #0x7c
	adds r2, r2, r7
	mov sl, r2
	ldr r3, _08058478 @ =0x0000027E
	adds r3, r3, r7
	mov sb, r3
	ldr r5, _0805847C @ =gUnknown_03005960
	mov r8, r5
_080583F8:
	adds r4, #1
	movs r0, #0xd
	muls r0, r4, r0
	mov r1, sb
	ldrb r2, [r1]
	subs r2, r2, r0
	movs r3, #0x3f
	ands r2, r3
	lsls r2, r2, #2
	mov r5, sl
	adds r0, r5, r2
	ldr r0, [r0]
	mov r5, r8
	ldr r1, [r5]
	subs r0, r0, r1
	strh r0, [r6, #0x16]
	movs r1, #0xbe
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r5, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r3, [sp, #8]
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r3, [sp, #8]
	cmp r4, #3
	bls _080583F8
	ldr r2, _08058478 @ =0x0000027E
	adds r1, r7, r2
	ldrb r0, [r1]
	adds r0, #1
	ands r0, r3
	strb r0, [r1]
	ldrb r0, [r1]
	lsls r0, r0, #2
	add r0, sl
	ldr r3, [sp]
	str r3, [r0]
	ldrb r1, [r1]
	lsls r1, r1, #2
	movs r4, #0xbe
	lsls r4, r4, #1
	adds r0, r7, r4
	adds r0, r0, r1
	ldr r5, [sp, #4]
	str r5, [r0]
_08058460:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058470: .4byte gCurTask
_08058474: .4byte sub_8057F80
_08058478: .4byte 0x0000027E
_0805847C: .4byte gUnknown_03005960

	thumb_func_start sub_8058480
sub_8058480: @ 0x08058480
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_805849C
sub_805849C: @ 0x0805849C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sl, r3
	ldr r0, _080585AC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _080584CA
	ldr r0, _080585B0 @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	beq _0805859C
_080584CA:
	ldr r0, _080585B4 @ =sub_80585DC
	ldr r2, _080585B8 @ =0x00004040
	ldr r1, _080585BC @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x60
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r4, r1
	ldr r0, _080585C0 @ =IWRAM_START + 0xC
	adds r5, r4, r0
	movs r0, #0
	mov r8, r0
	strh r6, [r1, #4]
	mov r0, sb
	strh r0, [r1, #6]
	str r7, [r1]
	ldrb r0, [r7]
	strb r0, [r1, #8]
	mov r0, sl
	strb r0, [r1, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r3, r6, #8
	adds r0, r0, r3
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r6, sb
	lsls r2, r6, #8
	adds r0, r0, r2
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	movs r0, #0
	str r0, [r1, #0x4c]
	str r0, [r1, #0x50]
	movs r0, #0x80
	str r0, [r1, #0x54]
	movs r6, #0
	str r6, [r1, #0x58]
	ldr r0, _080585C4 @ =IWRAM_START + 0x5E
	adds r1, r4, r0
	movs r0, #0x78
	strb r0, [r1]
	ldrb r0, [r7, #5]
	lsls r0, r0, #2
	ldr r6, _080585C8 @ =IWRAM_START + 0x5C
	adds r1, r4, r6
	strb r0, [r1]
	ldrb r0, [r7, #6]
	lsls r0, r0, #2
	adds r6, #1
	adds r1, r4, r6
	strb r0, [r1]
	ldrb r0, [r7]
	lsls r0, r0, #3
	adds r0, r0, r3
	strh r0, [r5, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	adds r0, r0, r2
	strh r0, [r5, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #0xa
	bl sub_8007C10
	str r0, [r5, #4]
	ldr r0, _080585CC @ =0x000001F5
	strh r0, [r5, #0xa]
	subs r6, #0x31
	adds r0, r4, r6
	mov r1, r8
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	movs r6, #0
	strh r6, [r5, #8]
	strh r6, [r5, #0x14]
	strh r6, [r5, #0x1c]
	ldr r0, _080585D0 @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r6, _080585D4 @ =IWRAM_START + 0x2E
	adds r1, r4, r6
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080585D8 @ =IWRAM_START + 0x31
	adds r4, r4, r0
	mov r1, r8
	strb r1, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r5, #0x10]
_0805859C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080585AC: .4byte gUnknown_030054CC
_080585B0: .4byte gUnknown_030054EC
_080585B4: .4byte sub_80585DC
_080585B8: .4byte 0x00004040
_080585BC: .4byte sub_80095E8
_080585C0: .4byte IWRAM_START + 0xC
_080585C4: .4byte IWRAM_START + 0x5E
_080585C8: .4byte IWRAM_START + 0x5C
_080585CC: .4byte 0x000001F5
_080585D0: .4byte IWRAM_START + 0x2D
_080585D4: .4byte IWRAM_START + 0x2E
_080585D8: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80585DC
sub_80585DC: @ 0x080585DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _08058684 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r3, r0
	ldr r1, _08058688 @ =IWRAM_START + 0xC
	adds r7, r3, r1
	ldr r2, [r6]
	mov r8, r2
	ldr r1, [r6, #0x58]
	adds r1, #1
	ldr r4, _0805868C @ =0x000003FF
	ands r1, r4
	str r1, [r6, #0x58]
	lsls r0, r1, #2
	adds r0, r0, r1
	ands r0, r4
	ldr r5, _08058690 @ =gUnknown_08097AA4
	mov sl, r5
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	add r0, sl
	movs r2, #0
	ldrsh r5, [r0, r2]
	mov ip, r5
	ldr r5, _08058694 @ =IWRAM_START + 0x5C
	adds r0, r3, r5
	ldrb r0, [r0]
	mov r2, ip
	muls r2, r0, r2
	asrs r2, r2, #6
	str r2, [r6, #0x4c]
	lsls r0, r1, #1
	adds r0, r0, r1
	ands r0, r4
	lsls r0, r0, #1
	add r0, sl
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r5, #1
	adds r3, r3, r5
	ldrb r0, [r3]
	muls r0, r1, r0
	asrs r0, r0, #6
	str r0, [r6, #0x50]
	ldr r1, [r6, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	str r1, [sp]
	ldr r2, [r6, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	str r2, [sp, #4]
	ldr r4, _08058698 @ =gUnknown_03005960
	ldr r0, [r4]
	adds r3, r1, #0
	subs r0, r3, r0
	strh r0, [r7, #0x16]
	ldr r0, [r4, #4]
	ldr r5, [sp, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _0805869C
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08058780
	.align 2, 0
_08058684: .4byte gCurTask
_08058688: .4byte IWRAM_START + 0xC
_0805868C: .4byte 0x000003FF
_08058690: .4byte gUnknown_08097AA4
_08058694: .4byte IWRAM_START + 0x5C
_08058698: .4byte gUnknown_03005960
_0805869C:
	ldr r0, [r6, #0x44]
	asrs r2, r0, #8
	ldr r1, [r4]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080586CC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080586CC
	ldr r0, [r6, #0x48]
	asrs r2, r0, #8
	ldr r1, [r4, #4]
	movs r4, #0x90
	lsls r4, r4, #1
	adds r0, r1, r4
	cmp r2, r0
	bgt _080586CC
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08058704
_080586CC:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080586F0
	movs r5, #0x18
	ldrsh r0, [r7, r5]
	adds r0, #0x80
	cmp r0, #0
	blt _080586F0
	movs r0, #0x18
	ldrsh r1, [r7, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08058704
_080586F0:
	ldrb r0, [r6, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _08058700 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08058780
	.align 2, 0
_08058700: .4byte gCurTask
_08058704:
	ldr r0, [r6, #0x4c]
	asrs r2, r0, #8
	mov r3, r8
	movs r1, #3
	ldrsb r1, [r3, r1]
	lsls r0, r1, #3
	cmp r2, r0
	bgt _08058718
	movs r0, #0x80
	b _08058728
_08058718:
	mov r4, r8
	ldrb r0, [r4, #5]
	adds r0, r1, r0
	lsls r0, r0, #3
	cmp r2, r0
	blt _0805872A
	movs r0, #0x80
	rsbs r0, r0, #0
_08058728:
	str r0, [r6, #0x54]
_0805872A:
	adds r1, r6, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08058758
	ldr r0, _08058790 @ =0x000001F5
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08058794 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08058798 @ =sub_805879C
	str r0, [r1, #8]
_08058758:
	ldr r5, [sp]
	lsls r0, r5, #8
	ldr r2, [sp, #4]
	lsls r1, r2, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	adds r0, r7, #0
	bl sub_80051E8
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_08058780:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058790: .4byte 0x000001F5
_08058794: .4byte gCurTask
_08058798: .4byte sub_805879C

	thumb_func_start sub_805879C
sub_805879C: @ 0x0805879C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _080587FC @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	ldr r2, _08058800 @ =IWRAM_START + 0xC
	adds r7, r1, r2
	ldr r3, [r6]
	mov sl, r3
	ldr r1, [r6, #0x44]
	ldr r0, [r6, #0x4c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r6, #0x48]
	ldr r0, [r6, #0x50]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r0, _08058804 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r4, r0
	strh r0, [r7, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08058808
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08058904
	.align 2, 0
_080587FC: .4byte gCurTask
_08058800: .4byte IWRAM_START + 0xC
_08058804: .4byte gUnknown_03005960
_08058808:
	ldr r0, [r6, #0x44]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805883A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _0805883A
	ldr r0, [r6, #0x48]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805883A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08058874
_0805883A:
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805885E
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805885E
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08058874
_0805885E:
	ldrb r0, [r6, #8]
	mov r3, sl
	strb r0, [r3]
	ldr r0, _08058870 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08058904
	.align 2, 0
_08058870: .4byte gCurTask
_08058874:
	adds r6, #0x5e
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	movs r1, #0xff
	mov r8, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x2d
	bne _080588B8
	mov r1, sp
	movs r2, #0
	movs r0, #3
	strh r0, [r1]
	movs r0, #0xfb
	lsls r0, r0, #1
	strh r0, [r1, #2]
	mov r0, sp
	strb r2, [r0, #4]
	adds r0, r4, #1
	lsls r0, r0, #8
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r0, #0x14
	lsls r0, r0, #8
	str r0, [sp, #0x10]
	movs r0, #0xff
	strh r0, [r1, #6]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	bl sub_8050E04
_080588B8:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r7, #0
	bl sub_8004558
	cmp r0, #0
	bne _080588EE
	movs r0, #0x78
	strb r0, [r6]
	movs r1, #0
	ldr r0, _08058914 @ =0x000001F5
	strh r0, [r7, #0xa]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r7, #0
	adds r1, #0x21
	ldrb r0, [r1]
	mov r2, r8
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08058918 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805891C @ =sub_80585DC
	str r0, [r1, #8]
_080588EE:
	adds r0, r7, #0
	bl sub_80051E8
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_08058904:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058914: .4byte 0x000001F5
_08058918: .4byte gCurTask
_0805891C: .4byte sub_80585DC

	thumb_func_start sub_8058920
sub_8058920: @ 0x08058920
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	ldr r0, _08058AB8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #1
	beq _0805894C
	ldr r0, _08058ABC @ =gUnknown_030054EC
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805894C
	b _08058AA6
_0805894C:
	ldr r0, _08058AC0 @ =sub_8058AF4
	movs r1, #0xaa
	lsls r1, r1, #2
	ldr r2, _08058AC4 @ =0x00004040
	ldr r3, _08058AC8 @ =sub_8059398
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov sl, r0
	ldr r0, _08058ACC @ =IWRAM_START + 0xC
	adds r7, r2, r0
	movs r1, #0
	mov r8, r1
	movs r1, #0
	mov r3, sl
	strh r6, [r3, #4]
	strh r4, [r3, #6]
	mov r0, sb
	str r0, [r3]
	ldrb r0, [r0]
	strb r0, [r3, #8]
	strb r5, [r3, #9]
	ldr r3, _08058AD0 @ =IWRAM_START + 0x8C
	adds r5, r2, r3
	mov r3, sb
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r6, r6, #8
	mov ip, r6
	add r0, ip
	lsls r0, r0, #8
	str r0, [r5]
	ldr r6, _08058AD4 @ =IWRAM_START + 0x90
	adds r3, r2, r6
	mov r6, sb
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	lsls r0, r0, #8
	str r0, [r3]
	ldr r6, _08058AD8 @ =IWRAM_START + 0x94
	adds r0, r2, r6
	str r1, [r0]
	adds r6, #4
	adds r0, r2, r6
	str r1, [r0]
	ldr r0, _08058ADC @ =IWRAM_START + 0x9C
	adds r1, r2, r0
	ldr r0, _08058AE0 @ =0x0000FE80
	strh r0, [r1]
	adds r6, #6
	adds r1, r2, r6
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r1]
	ldr r1, _08058AE4 @ =IWRAM_START + 0x2A4
	adds r0, r2, r1
	mov r6, r8
	strb r6, [r0]
	ldr r0, [r5]
	lsls r0, r0, #8
	ldr r1, [r3]
	lsls r1, r1, #8
	movs r3, #0
	mov r5, ip
	str r5, [sp, #4]
	str r4, [sp, #8]
	ldr r4, _08058AE8 @ =IWRAM_START + 0xA4
	adds r6, r2, r4
	asrs r5, r0, #0x10
	ldr r0, _08058AEC @ =IWRAM_START + 0xA8
	adds r2, r2, r0
	asrs r4, r1, #0x10
_080589EA:
	lsls r1, r3, #3
	adds r0, r6, r1
	str r5, [r0]
	adds r1, r2, r1
	str r4, [r1]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x3f
	bls _080589EA
	movs r5, #0
	movs r4, #0
	strh r4, [r7, #0x16]
	strh r4, [r7, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	mov r3, sb
	strb r0, [r3]
	movs r0, #0x14
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _08058AF0 @ =0x000001FB
	strh r0, [r7, #0xa]
	adds r1, r7, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x22
	movs r6, #0x10
	strb r6, [r0]
	adds r0, #3
	strb r5, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
	str r0, [r7, #0x28]
	movs r6, #0x80
	lsls r6, r6, #6
	str r6, [r7, #0x10]
	mov r7, sl
	adds r7, #0x4c
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	ldr r3, [sp, #4]
	adds r0, r0, r3
	strh r0, [r7, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	ldr r1, [sp, #8]
	adds r0, r0, r1
	strh r0, [r7, #0x18]
	movs r0, #8
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0xfe
	lsls r0, r0, #1
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0x6c
	strb r5, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r1, sl
	adds r1, #0x6d
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	mov r0, sl
	adds r0, #0x6e
	movs r3, #0x10
	strb r3, [r0]
	adds r0, #3
	strb r5, [r0]
	mov r4, r8
	str r4, [r7, #0x28]
	str r6, [r7, #0x10]
_08058AA6:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058AB8: .4byte gUnknown_030054CC
_08058ABC: .4byte gUnknown_030054EC
_08058AC0: .4byte sub_8058AF4
_08058AC4: .4byte 0x00004040
_08058AC8: .4byte sub_8059398
_08058ACC: .4byte IWRAM_START + 0xC
_08058AD0: .4byte IWRAM_START + 0x8C
_08058AD4: .4byte IWRAM_START + 0x90
_08058AD8: .4byte IWRAM_START + 0x94
_08058ADC: .4byte IWRAM_START + 0x9C
_08058AE0: .4byte 0x0000FE80
_08058AE4: .4byte IWRAM_START + 0x2A4
_08058AE8: .4byte IWRAM_START + 0xA4
_08058AEC: .4byte IWRAM_START + 0xA8
_08058AF0: .4byte 0x000001FB

	thumb_func_start sub_8058AF4
sub_8058AF4: @ 0x08058AF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x54
	ldr r0, _08058D1C @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r4
	mov sl, r0
	ldr r0, _08058D20 @ =IWRAM_START + 0xC
	adds r0, r0, r4
	mov sb, r0
	mov r1, sl
	ldr r1, [r1]
	str r1, [sp, #0x2c]
	ldr r2, _08058D24 @ =IWRAM_START + 0x9E
	adds r3, r4, r2
	ldrh r0, [r3]
	adds r0, #0x20
	movs r5, #0
	mov r8, r5
	strh r0, [r3]
	ldr r6, _08058D28 @ =IWRAM_START + 0x94
	adds r5, r4, r6
	ldr r7, _08058D2C @ =IWRAM_START + 0x9C
	adds r0, r4, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, [r5]
	adds r0, r0, r1
	str r0, [r5]
	adds r6, #4
	adds r2, r4, r6
	movs r7, #0
	ldrsh r0, [r3, r7]
	ldr r1, [r2]
	adds r1, r1, r0
	str r1, [r2]
	ldr r2, _08058D30 @ =IWRAM_START + 0x8C
	adds r0, r4, r2
	ldr r6, [r0]
	ldr r0, [r5]
	adds r6, r6, r0
	asrs r6, r6, #8
	str r6, [sp, #0x30]
	ldr r3, _08058D34 @ =IWRAM_START + 0x90
	adds r0, r4, r3
	ldr r5, [r0]
	adds r5, r5, r1
	asrs r5, r5, #8
	str r5, [sp, #0x34]
	mov r7, r8
	str r7, [sp]
	ldr r0, _08058D38 @ =sub_801EE64
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #1
	movs r3, #8
	bl sub_801F07C
	mov r8, r0
	ldr r3, _08058D3C @ =gUnknown_03005960
	ldr r0, [r3]
	ldr r1, [sp, #0x30]
	subs r0, r1, r0
	mov r2, sb
	strh r0, [r2, #0x16]
	ldr r0, [r3, #4]
	ldr r7, [sp, #0x34]
	subs r0, r7, r0
	strh r0, [r2, #0x18]
	ldr r0, _08058D40 @ =IWRAM_START + 0x2A4
	adds r2, r4, r0
	ldrb r1, [r2]
	lsls r1, r1, #3
	ldr r7, _08058D44 @ =IWRAM_START + 0xA4
	adds r0, r4, r7
	adds r0, r0, r1
	str r6, [r0]
	ldrb r1, [r2]
	lsls r1, r1, #3
	ldr r6, _08058D48 @ =IWRAM_START + 0xA8
	adds r0, r4, r6
	adds r0, r0, r1
	str r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	movs r1, #0x3f
	ands r0, r1
	strb r0, [r2]
	subs r7, #0x58
	adds r7, r7, r4
	mov sb, r7
	movs r6, #0
	ldr r0, _08058D40 @ =IWRAM_START + 0x2A4
	adds r0, r4, r0
	str r0, [sp, #0x38]
	adds r7, r3, #0
	ldr r1, _08058D44 @ =IWRAM_START + 0xA4
	adds r1, r4, r1
	str r1, [sp, #0x40]
	ldr r2, _08058D48 @ =IWRAM_START + 0xA8
	adds r2, r4, r2
	str r2, [sp, #0x44]
_08058BCE:
	adds r5, r6, #1
	lsls r0, r5, #4
	ldr r3, [sp, #0x38]
	ldrb r2, [r3]
	subs r2, r2, r0
	movs r0, #0x3f
	ands r2, r0
	lsls r2, r2, #3
	mov r4, sl
	adds r4, #0xa4
	adds r4, r4, r2
	ldr r0, [r4]
	ldr r1, [r7]
	subs r0, r0, r1
	mov r6, sb
	strh r0, [r6, #0x16]
	mov r3, sl
	adds r3, #0xa8
	adds r3, r3, r2
	ldr r0, [r3]
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r6, #0x18]
	ldr r1, [r4]
	ldr r2, [r3]
	mov r0, sb
	bl sub_800C84C
	lsls r5, r5, #0x18
	lsrs r6, r5, #0x18
	cmp r6, #2
	bls _08058BCE
	movs r7, #0xc
	add r7, sl
	mov sb, r7
	mov r0, sb
	ldr r1, [sp, #0x30]
	ldr r2, [sp, #0x34]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08058C26
	b _08058D50
_08058C26:
	mov r1, sl
	adds r1, #0xa0
	movs r0, #0x78
	strb r0, [r1]
	movs r0, #0x4c
	add r0, sl
	mov sb, r0
	bl sub_8004558
	movs r6, #0
	mov r1, sp
	adds r1, #0xc
	str r1, [sp, #0x48]
	mov r2, sp
	adds r2, #0x10
	str r2, [sp, #0x4c]
	mov r3, sl
	adds r3, #0x9c
	str r3, [sp, #0x3c]
	ldr r4, [sp, #0x44]
	mov r8, r4
_08058C50:
	movs r0, #0xa9
	lsls r0, r0, #2
	add r0, sl
	adds r5, r6, #1
	lsls r1, r5, #4
	ldrb r0, [r0]
	subs r7, r0, r1
	movs r0, #0x3f
	ands r7, r0
	lsls r3, r7, #3
	ldr r0, [sp, #0x40]
	adds r4, r0, r3
	ldr r0, [r4]
	ldr r2, _08058D3C @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	mov r1, sb
	strh r0, [r1, #0x16]
	add r3, r8
	ldr r0, [r3]
	ldr r1, [r2, #4]
	subs r0, r0, r1
	mov r2, sb
	strh r0, [r2, #0x18]
	lsls r2, r6, #1
	adds r2, r2, r6
	lsls r2, r2, #2
	mov r1, sp
	adds r1, r1, r2
	adds r1, #8
	ldr r0, [r4]
	str r0, [r1]
	ldr r4, [sp, #0x48]
	adds r1, r4, r2
	ldr r0, [r3]
	str r0, [r1]
	ldr r6, [sp, #0x4c]
	adds r2, r6, r2
	subs r0, r7, #1
	movs r1, #0x3f
	ands r0, r1
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r3]
	ldr r0, [r0]
	subs r1, r1, r0
	str r1, [r2]
	mov r0, sb
	bl sub_80051E8
	lsls r5, r5, #0x18
	lsrs r6, r5, #0x18
	cmp r6, #2
	bls _08058C50
	movs r6, #0
	ldr r3, [sp, #0x40]
	ldr r7, [sp, #0x44]
_08058CC2:
	lsls r1, r6, #3
	adds r2, r3, r1
	lsls r4, r6, #1
	adds r4, r4, r6
	lsls r4, r4, #2
	mov r0, sp
	adds r0, r0, r4
	adds r0, #8
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r2]
	adds r1, r7, r1
	ldr r2, [sp, #0x48]
	adds r0, r2, r4
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r1]
	ldr r5, [sp, #0x3c]
	movs r1, #0
	ldrsh r0, [r5, r1]
	adds r5, r6, #1
	adds r1, r5, #0
	str r3, [sp, #0x50]
	bl Div
	adds r2, r6, #3
	lsls r2, r2, #3
	ldr r3, [sp, #0x50]
	adds r1, r3, r2
	str r0, [r1]
	adds r2, r7, r2
	ldr r6, [sp, #0x4c]
	adds r4, r6, r4
	ldr r0, [r4]
	lsls r0, r0, #8
	str r0, [r2]
	lsls r5, r5, #0x18
	lsrs r6, r5, #0x18
	cmp r6, #2
	bls _08058CC2
	ldr r0, _08058D1C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08058D4C @ =sub_80591FC
	str r0, [r1, #8]
	b _08058ECA
	.align 2, 0
_08058D1C: .4byte gCurTask
_08058D20: .4byte IWRAM_START + 0xC
_08058D24: .4byte IWRAM_START + 0x9E
_08058D28: .4byte IWRAM_START + 0x94
_08058D2C: .4byte IWRAM_START + 0x9C
_08058D30: .4byte IWRAM_START + 0x8C
_08058D34: .4byte IWRAM_START + 0x90
_08058D38: .4byte sub_801EE64
_08058D3C: .4byte gUnknown_03005960
_08058D40: .4byte IWRAM_START + 0x2A4
_08058D44: .4byte IWRAM_START + 0xA4
_08058D48: .4byte IWRAM_START + 0xA8
_08058D4C: .4byte sub_80591FC
_08058D50:
	mov r7, sl
	adds r7, #0x9e
	mov r0, r8
	cmp r0, #0
	bge _08058E06
	mov r1, sb
	ldrh r0, [r1, #0x18]
	add r0, r8
	strh r0, [r1, #0x18]
	mov r2, sl
	adds r2, #0x98
	mov r3, r8
	lsls r1, r3, #8
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0xfc
	lsls r0, r0, #8
	strh r0, [r7]
	ldr r6, _08058DC4 @ =0x000001FB
	mov r4, sb
	strh r6, [r4, #0xa]
	mov r4, sl
	adds r4, #0x2c
	movs r0, #1
	strb r0, [r4]
	mov r3, sl
	adds r3, #0x2d
	movs r5, #1
	rsbs r5, r5, #0
	mov r8, r5
	movs r0, #0xff
	strb r0, [r3]
	subs r2, #4
	ldr r1, [r2]
	asrs r1, r1, #8
	ldr r5, [sp, #0x2c]
	movs r0, #3
	ldrsb r0, [r5, r0]
	lsls r0, r0, #3
	cmp r1, r0
	bgt _08058DC8
	mov r0, sl
	adds r0, #0x9c
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bge _08058DC8
	mov r2, sb
	strh r6, [r2, #0xa]
	movs r0, #0
	strb r0, [r4]
	ldrb r0, [r3]
	mov r4, r8
	orrs r0, r4
	strb r0, [r3]
	b _08058DFE
	.align 2, 0
_08058DC4: .4byte 0x000001FB
_08058DC8:
	ldr r1, [r2]
	asrs r1, r1, #8
	ldr r5, [sp, #0x2c]
	movs r0, #3
	ldrsb r0, [r5, r0]
	ldrb r6, [r5, #5]
	adds r0, r0, r6
	lsls r0, r0, #3
	cmp r1, r0
	blt _08058E06
	mov r0, sl
	adds r0, #0x9c
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	ble _08058E06
	movs r1, #0
	ldr r0, _08058E9C @ =0x000001FB
	mov r2, sb
	strh r0, [r2, #0xa]
	mov r0, sb
	adds r0, #0x20
	strb r1, [r0]
	mov r1, sb
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08058DFE:
	ldr r0, _08058EA0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08058EA4 @ =sub_8058EDC
	str r0, [r1, #8]
_08058E06:
	movs r3, #0
	ldrsh r0, [r7, r3]
	cmp r0, #0
	ble _08058E28
	mov r1, sb
	adds r1, #0x20
	ldrb r0, [r1]
	cmp r0, #1
	bne _08058E28
	ldr r0, _08058E9C @ =0x000001FB
	mov r4, sb
	strh r0, [r4, #0xa]
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
_08058E28:
	mov r0, sl
	adds r0, #0x8c
	ldr r0, [r0]
	asrs r2, r0, #8
	ldr r3, _08058EA8 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r5, #0xb8
	lsls r5, r5, #1
	adds r0, r1, r5
	cmp r2, r0
	bgt _08058E62
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08058E62
	mov r0, sl
	adds r0, #0x90
	ldr r0, [r0]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r6, #0x90
	lsls r6, r6, #1
	adds r0, r1, r6
	cmp r2, r0
	bgt _08058E62
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08058EAC
_08058E62:
	mov r7, sb
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08058E88
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08058E88
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08058EAC
_08058E88:
	mov r3, sl
	ldrb r0, [r3, #8]
	ldr r4, [sp, #0x2c]
	strb r0, [r4]
	ldr r0, _08058EA0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08058ECA
	.align 2, 0
_08058E9C: .4byte 0x000001FB
_08058EA0: .4byte gCurTask
_08058EA4: .4byte sub_8058EDC
_08058EA8: .4byte gUnknown_03005960
_08058EAC:
	ldr r5, [sp, #0x30]
	lsls r0, r5, #8
	ldr r6, [sp, #0x34]
	lsls r1, r6, #8
	bl sub_80122DC
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
	mov r0, sl
	bl sub_8059320
_08058ECA:
	add sp, #0x54
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8058EDC
sub_8058EDC: @ 0x08058EDC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	ldr r0, _080590C4 @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r2
	mov sb, r0
	ldr r0, _080590C8 @ =IWRAM_START + 0xC
	adds r0, r0, r2
	mov r8, r0
	mov r1, sb
	ldr r1, [r1]
	str r1, [sp, #0x24]
	ldr r3, _080590CC @ =IWRAM_START + 0x8C
	adds r0, r2, r3
	ldr r4, _080590D0 @ =IWRAM_START + 0x94
	adds r1, r2, r4
	ldr r5, [r0]
	ldr r0, [r1]
	adds r5, r5, r0
	asrs r5, r5, #8
	str r5, [sp, #0x28]
	ldr r7, _080590D4 @ =IWRAM_START + 0x90
	adds r0, r2, r7
	adds r3, #0xc
	adds r1, r2, r3
	ldr r4, [r0]
	ldr r0, [r1]
	adds r4, r4, r0
	asrs r4, r4, #8
	str r4, [sp, #0x2c]
	ldr r6, _080590D8 @ =gUnknown_03005960
	ldr r0, [r6]
	adds r7, r5, #0
	subs r0, r7, r0
	mov r1, r8
	strh r0, [r1, #0x16]
	ldr r0, [r6, #4]
	ldr r3, [sp, #0x2c]
	subs r0, r3, r0
	strh r0, [r1, #0x18]
	ldr r7, _080590DC @ =IWRAM_START + 0x2A4
	adds r3, r2, r7
	ldrb r1, [r3]
	lsls r1, r1, #3
	ldr r7, _080590E0 @ =IWRAM_START + 0xA4
	adds r0, r2, r7
	adds r0, r0, r1
	str r5, [r0]
	ldrb r1, [r3]
	lsls r1, r1, #3
	ldr r5, _080590E4 @ =IWRAM_START + 0xA8
	adds r0, r2, r5
	adds r0, r0, r1
	str r4, [r0]
	ldrb r0, [r3]
	adds r0, #1
	movs r1, #0x3f
	ands r0, r1
	strb r0, [r3]
	subs r7, #0x58
	adds r7, r7, r2
	mov r8, r7
	movs r7, #0
	ldr r0, _080590DC @ =IWRAM_START + 0x2A4
	adds r0, r0, r2
	mov sl, r0
	ldr r1, _080590E0 @ =IWRAM_START + 0xA4
	adds r1, r2, r1
	str r1, [sp, #0x3c]
	adds r3, r5, #0
	adds r3, r2, r3
	str r3, [sp, #0x40]
_08058F7A:
	adds r5, r7, #1
	lsls r0, r5, #4
	mov r4, sl
	ldrb r2, [r4]
	subs r2, r2, r0
	movs r0, #0x3f
	ands r2, r0
	lsls r2, r2, #3
	mov r4, sb
	adds r4, #0xa4
	adds r4, r4, r2
	ldr r0, [r4]
	ldr r1, [r6]
	subs r0, r0, r1
	mov r7, r8
	strh r0, [r7, #0x16]
	mov r3, sb
	adds r3, #0xa8
	adds r3, r3, r2
	ldr r0, [r3]
	ldr r1, [r6, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	ldr r1, [r4]
	ldr r2, [r3]
	mov r0, r8
	bl sub_800C84C
	lsls r5, r5, #0x18
	lsrs r7, r5, #0x18
	cmp r7, #2
	bls _08058F7A
	movs r0, #0xc
	add r0, sb
	mov r8, r0
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x2c]
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	bne _08058FD0
	b _080590EC
_08058FD0:
	mov r1, sb
	adds r1, #0xa0
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _080590C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080590E8 @ =sub_80591FC
	str r0, [r1, #8]
	movs r1, #0x4c
	add r1, sb
	mov r8, r1
	mov r0, r8
	bl sub_8004558
	movs r7, #0
	mov r2, sp
	adds r2, #4
	str r2, [sp, #0x30]
	mov r3, sp
	adds r3, #8
	str r3, [sp, #0x34]
	mov r4, sb
	adds r4, #0x9c
	str r4, [sp, #0x38]
	ldr r5, [sp, #0x40]
	mov sl, r5
_08059004:
	movs r0, #0xa9
	lsls r0, r0, #2
	add r0, sb
	adds r5, r7, #1
	lsls r1, r5, #4
	ldrb r0, [r0]
	subs r6, r0, r1
	movs r0, #0x3f
	ands r6, r0
	lsls r3, r6, #3
	ldr r0, [sp, #0x3c]
	adds r4, r0, r3
	ldr r0, [r4]
	ldr r2, _080590D8 @ =gUnknown_03005960
	ldr r1, [r2]
	subs r0, r0, r1
	mov r1, r8
	strh r0, [r1, #0x16]
	add r3, sl
	ldr r0, [r3]
	ldr r1, [r2, #4]
	subs r0, r0, r1
	mov r2, r8
	strh r0, [r2, #0x18]
	lsls r2, r7, #1
	adds r2, r2, r7
	lsls r2, r2, #2
	mov r7, sp
	adds r1, r7, r2
	ldr r0, [r4]
	str r0, [r1]
	ldr r0, [sp, #0x30]
	adds r1, r0, r2
	ldr r0, [r3]
	str r0, [r1]
	ldr r1, [sp, #0x34]
	adds r2, r1, r2
	subs r0, r6, #1
	movs r1, #0x3f
	ands r0, r1
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [r3]
	ldr r0, [r0]
	subs r1, r1, r0
	str r1, [r2]
	mov r0, r8
	bl sub_80051E8
	lsls r5, r5, #0x18
	lsrs r7, r5, #0x18
	cmp r7, #2
	bls _08059004
	movs r7, #0
	ldr r3, [sp, #0x3c]
	ldr r6, [sp, #0x40]
_08059074:
	lsls r1, r7, #3
	adds r2, r3, r1
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #2
	mov r5, sp
	adds r0, r5, r4
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r2]
	adds r1, r6, r1
	ldr r2, [sp, #0x30]
	adds r0, r2, r4
	ldr r0, [r0]
	lsls r0, r0, #8
	str r0, [r1]
	ldr r5, [sp, #0x38]
	movs r1, #0
	ldrsh r0, [r5, r1]
	adds r5, r7, #1
	adds r1, r5, #0
	str r3, [sp, #0x44]
	bl Div
	adds r2, r7, #3
	lsls r2, r2, #3
	ldr r3, [sp, #0x44]
	adds r1, r3, r2
	str r0, [r1]
	adds r2, r6, r2
	ldr r7, [sp, #0x34]
	adds r4, r7, r4
	ldr r0, [r4]
	lsls r0, r0, #8
	str r0, [r2]
	lsls r5, r5, #0x18
	lsrs r7, r5, #0x18
	cmp r7, #2
	bls _08059074
	b _080591E0
	.align 2, 0
_080590C4: .4byte gCurTask
_080590C8: .4byte IWRAM_START + 0xC
_080590CC: .4byte IWRAM_START + 0x8C
_080590D0: .4byte IWRAM_START + 0x94
_080590D4: .4byte IWRAM_START + 0x90
_080590D8: .4byte gUnknown_03005960
_080590DC: .4byte IWRAM_START + 0x2A4
_080590E0: .4byte IWRAM_START + 0xA4
_080590E4: .4byte IWRAM_START + 0xA8
_080590E8: .4byte sub_80591FC
_080590EC:
	mov r0, sb
	adds r0, #0x8c
	ldr r0, [r0]
	asrs r2, r0, #8
	ldr r3, _08059160 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r4, #0xb8
	lsls r4, r4, #1
	adds r0, r1, r4
	cmp r2, r0
	bgt _08059126
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08059126
	mov r0, sb
	adds r0, #0x90
	ldr r0, [r0]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r5, #0x90
	lsls r5, r5, #1
	adds r0, r1, r5
	cmp r2, r0
	bgt _08059126
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08059168
_08059126:
	mov r7, r8
	ldrh r0, [r7, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805914C
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805914C
	movs r2, #0x18
	ldrsh r1, [r7, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08059168
_0805914C:
	mov r3, sb
	ldrb r0, [r3, #8]
	ldr r4, [sp, #0x24]
	strb r0, [r4]
	ldr r0, _08059164 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080591E0
	.align 2, 0
_08059160: .4byte gUnknown_03005960
_08059164: .4byte gCurTask
_08059168:
	ldr r5, [sp, #0x28]
	lsls r0, r5, #8
	ldr r7, [sp, #0x2c]
	lsls r1, r7, #8
	bl sub_80122DC
	mov r0, r8
	bl sub_8004558
	cmp r0, #0
	bne _080591D4
	mov r0, r8
	ldr r1, [r0, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _080591A8
	ldr r0, _080591A0 @ =0xFFFFFBFF
	ands r1, r0
	mov r2, r8
	str r1, [r2, #0x10]
	mov r1, sb
	adds r1, #0x9c
	ldr r0, _080591A4 @ =0x0000FE80
	b _080591B6
	.align 2, 0
_080591A0: .4byte 0xFFFFFBFF
_080591A4: .4byte 0x0000FE80
_080591A8:
	orrs r1, r2
	mov r3, r8
	str r1, [r3, #0x10]
	mov r1, sb
	adds r1, #0x9c
	movs r0, #0xc0
	lsls r0, r0, #1
_080591B6:
	strh r0, [r1]
	ldr r0, _080591F0 @ =0x000001FB
	mov r4, r8
	strh r0, [r4, #0xa]
	mov r1, r8
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _080591F4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080591F8 @ =sub_8058AF4
	str r0, [r1, #8]
_080591D4:
	mov r0, r8
	bl sub_80051E8
	mov r0, sb
	bl sub_8059320
_080591E0:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080591F0: .4byte 0x000001FB
_080591F4: .4byte gCurTask
_080591F8: .4byte sub_8058AF4

	thumb_func_start sub_80591FC
sub_80591FC: @ 0x080591FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r2, _0805922C @ =gCurTask
	ldr r0, [r2]
	ldrh r4, [r0, #6]
	ldr r0, _08059230 @ =IWRAM_START + 0x4C
	adds r7, r4, r0
	adds r0, #0x54
	adds r1, r4, r0
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08059234
	ldr r0, [r2]
	bl TaskDestroy
	b _080592F8
	.align 2, 0
_0805922C: .4byte gCurTask
_08059230: .4byte IWRAM_START + 0x4C
_08059234:
	adds r0, r7, #0
	bl sub_8004558
	movs r0, #0
	mov r8, r0
	ldr r0, _08059308 @ =IWRAM_START + 0xA4
	adds r0, r0, r4
	mov sl, r0
	ldr r0, _0805930C @ =IWRAM_START + 0xA0
	adds r0, r4, r0
	str r0, [sp, #8]
	ldr r0, _08059310 @ =IWRAM_START + 0xA8
	adds r0, r0, r4
	mov sb, r0
_08059250:
	mov r1, r8
	adds r1, #3
	lsls r1, r1, #3
	mov r0, sb
	adds r4, r0, r1
	ldr r0, [r4]
	adds r0, #0x30
	str r0, [r4]
	mov r0, r8
	lsls r2, r0, #3
	mov r0, sl
	adds r6, r0, r2
	add r1, sl
	ldr r0, [r6]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r6]
	mov r0, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r1, [r4]
	adds r0, r0, r1
	str r0, [r5]
	asrs r0, r0, #8
	ldr r1, [r6]
	asrs r1, r1, #8
	movs r2, #0
	str r2, [sp]
	ldr r2, _08059314 @ =sub_801EE64
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #8
	bl sub_801F07C
	cmp r0, #0
	bge _080592A6
	lsls r0, r0, #8
	ldr r1, [r5]
	adds r1, r1, r0
	str r1, [r5]
	ldr r0, [r4]
	rsbs r0, r0, #0
	str r0, [r4]
_080592A6:
	ldr r0, [sp, #8]
	ldrb r2, [r0]
	cmp r2, #0x2d
	bhi _080592BE
	ldr r0, _08059318 @ =gUnknown_03005590
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080592EA
	cmp r2, #0x2c
	bhi _080592EA
_080592BE:
	ldr r1, [r6]
	asrs r1, r1, #8
	ldr r2, _0805931C @ =gUnknown_03005960
	ldr r0, [r2]
	subs r1, r1, r0
	strh r1, [r7, #0x16]
	ldr r0, [r5]
	asrs r0, r0, #8
	ldr r1, [r2, #4]
	subs r0, r0, r1
	strh r0, [r7, #0x18]
	adds r0, r7, #0
	bl sub_80051E8
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_80051E8
_080592EA:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #2
	bls _08059250
_080592F8:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059308: .4byte IWRAM_START + 0xA4
_0805930C: .4byte IWRAM_START + 0xA0
_08059310: .4byte IWRAM_START + 0xA8
_08059314: .4byte sub_801EE64
_08059318: .4byte gUnknown_03005590
_0805931C: .4byte gUnknown_03005960

	thumb_func_start sub_8059320
sub_8059320: @ 0x08059320
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x4c
	adds r0, r5, #0
	bl sub_8004558
	movs r4, #0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r0, r0, r6
	mov r8, r0
	ldr r7, _08059394 @ =gUnknown_03005960
_0805933E:
	adds r4, #1
	lsls r0, r4, #4
	mov r1, r8
	ldrb r2, [r1]
	subs r2, r2, r0
	movs r0, #0x3f
	ands r2, r0
	lsls r2, r2, #3
	adds r0, r6, #0
	adds r0, #0xa4
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r7]
	subs r0, r0, r1
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	adds r0, #0xa8
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, [r7, #4]
	subs r0, r0, r1
	strh r0, [r5, #0x18]
	adds r0, r5, #0
	bl sub_80051E8
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	eors r0, r1
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #2
	bls _0805933E
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059394: .4byte gUnknown_03005960

	thumb_func_start sub_8059398
sub_8059398: @ 0x08059398
	push {r4, lr}
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r4, r0
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x50]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80593B4
sub_80593B4: @ 0x080593B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _080594B8 @ =sub_80594E0
	ldr r2, _080594BC @ =0x00004040
	ldr r1, _080594C0 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x5c
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r6, r1
	ldr r7, _080594C4 @ =IWRAM_START + 0xC
	adds r3, r6, r7
	movs r0, #0
	mov sl, r0
	movs r2, #0
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	mov r7, sb
	str r7, [r1]
	ldrb r0, [r7]
	strb r0, [r1, #8]
	mov r0, r8
	strb r0, [r1, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	str r2, [r1, #0x4c]
	str r2, [r1, #0x50]
	str r2, [r1, #0x54]
	ldrb r0, [r7, #5]
	lsls r0, r0, #2
	ldr r4, _080594C8 @ =IWRAM_START + 0x58
	adds r1, r6, r4
	strb r0, [r1]
	ldrb r0, [r7, #6]
	lsls r0, r0, #2
	ldr r7, _080594CC @ =IWRAM_START + 0x59
	adds r1, r6, r7
	strb r0, [r1]
	ldr r0, _080594D0 @ =IWRAM_START + 0x5A
	adds r1, r6, r0
	movs r0, #8
	strb r0, [r1]
	adds r4, #3
	adds r1, r6, r4
	movs r0, #0xc
	strb r0, [r1]
	strh r2, [r3, #0x16]
	strh r2, [r3, #0x18]
	movs r7, #2
	rsbs r7, r7, #0
	adds r0, r7, #0
	mov r1, sb
	strb r0, [r1]
	movs r0, #0x18
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	ldr r3, [sp, #8]
	str r0, [r3, #4]
	ldr r0, _080594D4 @ =0x000001FD
	strh r0, [r3, #0xa]
	subs r4, #0x2f
	adds r0, r6, r4
	mov r7, sl
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r3, #0x1a]
	ldr r2, [sp, #4]
	strh r2, [r3, #8]
	strh r2, [r3, #0x14]
	strh r2, [r3, #0x1c]
	ldr r0, _080594D8 @ =IWRAM_START + 0x2D
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r4, #2
	adds r1, r6, r4
	movs r0, #0x10
	strb r0, [r1]
	ldr r7, _080594DC @ =IWRAM_START + 0x31
	adds r6, r6, r7
	mov r0, sl
	strb r0, [r6]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r3, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r3, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080594B8: .4byte sub_80594E0
_080594BC: .4byte 0x00004040
_080594C0: .4byte sub_80095E8
_080594C4: .4byte IWRAM_START + 0xC
_080594C8: .4byte IWRAM_START + 0x58
_080594CC: .4byte IWRAM_START + 0x59
_080594D0: .4byte IWRAM_START + 0x5A
_080594D4: .4byte 0x000001FD
_080594D8: .4byte IWRAM_START + 0x2D
_080594DC: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80594E0
sub_80594E0: @ 0x080594E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r0, _08059584 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	ldr r1, _08059588 @ =IWRAM_START + 0xC
	adds r1, r1, r4
	mov r8, r1
	ldr r2, [r7]
	mov sl, r2
	ldr r3, [r7, #0x54]
	lsls r0, r3, #2
	adds r0, r0, r3
	ldr r1, _0805958C @ =0x000003FF
	adds r5, r1, #0
	ands r0, r5
	ldr r6, _08059590 @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r2, _08059594 @ =IWRAM_START + 0x58
	adds r0, r4, r2
	ldrb r0, [r0]
	adds r2, r1, #0
	muls r2, r0, r2
	asrs r2, r2, #6
	str r2, [r7, #0x4c]
	lsls r0, r3, #1
	adds r0, r0, r3
	ands r0, r5
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _08059598 @ =IWRAM_START + 0x59
	adds r4, r4, r0
	ldrb r0, [r4]
	muls r0, r1, r0
	asrs r0, r0, #6
	str r0, [r7, #0x50]
	ldr r1, [r7, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	str r1, [sp, #0x14]
	ldr r2, [r7, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	str r2, [sp, #0x18]
	ldr r4, _0805959C @ =gUnknown_03005960
	ldr r0, [r4]
	adds r3, r1, #0
	subs r0, r3, r0
	mov r3, r8
	strh r0, [r3, #0x16]
	ldr r0, [r4, #4]
	ldr r3, [sp, #0x18]
	subs r0, r3, r0
	mov r3, r8
	strh r0, [r3, #0x18]
	mov r0, r8
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _080595A0
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _080596A0
	.align 2, 0
_08059584: .4byte gCurTask
_08059588: .4byte IWRAM_START + 0xC
_0805958C: .4byte 0x000003FF
_08059590: .4byte gUnknown_08097AA4
_08059594: .4byte IWRAM_START + 0x58
_08059598: .4byte IWRAM_START + 0x59
_0805959C: .4byte gUnknown_03005960
_080595A0:
	ldr r0, [r7, #0x44]
	asrs r2, r0, #8
	ldr r1, [r4]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080595CE
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080595CE
	ldr r0, [r7, #0x48]
	asrs r2, r0, #8
	ldr r1, [r4, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _080595CE
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805960C
_080595CE:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080595F6
	mov r2, r8
	movs r3, #0x18
	ldrsh r0, [r2, r3]
	adds r0, #0x80
	cmp r0, #0
	blt _080595F6
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805960C
_080595F6:
	ldrb r0, [r7, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08059608 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080596A0
	.align 2, 0
_08059608: .4byte gCurTask
_0805960C:
	adds r1, r7, #0
	adds r1, #0x5a
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08059688
	movs r0, #4
	strb r0, [r1]
	adds r4, r7, #0
	adds r4, #0x5b
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
	ands r0, r2
	cmp r0, #0
	bne _08059680
	movs r0, #0xc
	strb r0, [r4]
	ldr r2, _080596B0 @ =gUnknown_030053B8
	ldr r1, [r2]
	ldr r0, _080596B4 @ =0x00196225
	muls r0, r1, r0
	ldr r3, _080596B8 @ =0x3C6EF35F
	adds r0, r0, r3
	str r0, [r2]
	movs r2, #1
	ands r2, r0
	mov r1, sp
	movs r0, #3
	strh r0, [r1]
	movs r0, #0xff
	lsls r0, r0, #1
	strh r0, [r1, #2]
	mov r0, sp
	strb r2, [r0, #4]
	ldr r0, [sp, #0x14]
	adds r0, #1
	lsls r0, r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x18]
	adds r0, #0x14
	lsls r0, r0, #8
	str r0, [sp, #0x10]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #6]
	lsls r2, r2, #8
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r3, #0
	subs r0, r0, r2
	strh r0, [r1, #8]
	mov r0, sp
	bl sub_8050E04
_08059680:
	ldr r0, _080596BC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080596C0 @ =sub_80596C4
	str r0, [r1, #8]
_08059688:
	ldr r1, [sp, #0x14]
	lsls r0, r1, #8
	ldr r2, [sp, #0x18]
	lsls r1, r2, #8
	bl sub_80122DC
	mov r0, r8
	bl sub_8004558
	mov r0, r8
	bl sub_80051E8
_080596A0:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080596B0: .4byte gUnknown_030053B8
_080596B4: .4byte 0x00196225
_080596B8: .4byte 0x3C6EF35F
_080596BC: .4byte gCurTask
_080596C0: .4byte sub_80596C4

	thumb_func_start sub_80596C4
sub_80596C4: @ 0x080596C4
	push {r4, r5, lr}
	ldr r3, _0805970C @ =gCurTask
	ldr r0, [r3]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r2, r0, r1
	adds r1, #0xc
	adds r4, r0, r1
	ldr r5, _08059710 @ =IWRAM_START + 0x5A
	adds r1, r0, r5
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080596FA
	movs r0, #8
	strb r0, [r1]
	ldr r0, [r2, #0x54]
	adds r0, #8
	ldr r1, _08059714 @ =0x000003FF
	ands r0, r1
	str r0, [r2, #0x54]
	ldr r1, [r3]
	ldr r0, _08059718 @ =sub_80594E0
	str r0, [r1, #8]
_080596FA:
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805970C: .4byte gCurTask
_08059710: .4byte IWRAM_START + 0x5A
_08059714: .4byte 0x000003FF
_08059718: .4byte sub_80594E0

	thumb_func_start sub_805971C
sub_805971C: @ 0x0805971C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r5, r1, #0
	adds r6, r2, #0
	mov sb, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, sb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r0, _0805982C @ =sub_8059858
	ldr r2, _08059830 @ =0x00004040
	ldr r1, _08059834 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x60
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r4, r1
	ldr r7, _08059838 @ =IWRAM_START + 0xC
	adds r2, r4, r7
	movs r0, #0
	mov sl, r0
	movs r3, #0
	strh r5, [r1, #4]
	strh r6, [r1, #6]
	mov r7, r8
	str r7, [r1]
	ldrb r0, [r7]
	strb r0, [r1, #8]
	mov r0, sb
	strb r0, [r1, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r1, #0x44]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	lsls r0, r0, #8
	str r0, [r1, #0x48]
	str r3, [r1, #0x4c]
	str r3, [r1, #0x50]
	str r3, [r1, #0x54]
	ldrb r0, [r7, #5]
	lsls r0, r0, #2
	ldr r7, _0805983C @ =IWRAM_START + 0x5A
	adds r1, r4, r7
	strb r0, [r1]
	mov r1, r8
	ldrb r0, [r1, #6]
	lsls r0, r0, #2
	adds r7, #1
	adds r1, r4, r7
	strb r0, [r1]
	ldr r1, _08059840 @ =IWRAM_START + 0x5C
	adds r0, r4, r1
	mov r7, sl
	strb r7, [r0]
	adds r1, #2
	adds r0, r4, r1
	strb r7, [r0]
	mov r1, r8
	ldrb r0, [r1]
	lsls r0, r0, #3
	adds r0, r0, r5
	strh r0, [r2, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	adds r0, r0, r6
	strh r0, [r2, #0x18]
	movs r7, #2
	rsbs r7, r7, #0
	adds r0, r7, #0
	strb r0, [r1]
	movs r0, #0x18
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	ldr r2, [sp, #4]
	str r0, [r2, #4]
	ldr r0, _08059844 @ =0x000001F9
	strh r0, [r2, #0xa]
	ldr r1, _08059848 @ =IWRAM_START + 0x2C
	adds r0, r4, r1
	mov r7, sl
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r2, #0x1a]
	ldr r3, [sp, #8]
	strh r3, [r2, #8]
	strh r3, [r2, #0x14]
	strh r3, [r2, #0x1c]
	ldr r0, _0805984C @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r7, _08059850 @ =IWRAM_START + 0x2E
	adds r1, r4, r7
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08059854 @ =IWRAM_START + 0x31
	adds r4, r4, r0
	mov r1, sl
	strb r1, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x90
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805982C: .4byte sub_8059858
_08059830: .4byte 0x00004040
_08059834: .4byte sub_80095E8
_08059838: .4byte IWRAM_START + 0xC
_0805983C: .4byte IWRAM_START + 0x5A
_08059840: .4byte IWRAM_START + 0x5C
_08059844: .4byte 0x000001F9
_08059848: .4byte IWRAM_START + 0x2C
_0805984C: .4byte IWRAM_START + 0x2D
_08059850: .4byte IWRAM_START + 0x2E
_08059854: .4byte IWRAM_START + 0x31

	thumb_func_start sub_8059858
sub_8059858: @ 0x08059858
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _08059904 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r7, r0
	ldr r1, _08059908 @ =IWRAM_START + 0xC
	adds r6, r7, r1
	ldr r2, [r5]
	mov sl, r2
	ldr r3, [r5, #0x4c]
	mov r8, r3
	ldr r1, [r5, #0x54]
	adds r1, #1
	ldr r3, _0805990C @ =0x000003FF
	ands r1, r3
	str r1, [r5, #0x54]
	lsls r0, r1, #2
	adds r0, r0, r1
	ands r0, r3
	ldr r4, _08059910 @ =gUnknown_08097AA4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov ip, r0
	ldr r2, _08059914 @ =IWRAM_START + 0x5A
	adds r0, r7, r2
	ldrb r0, [r0]
	mov r2, ip
	muls r2, r0, r2
	asrs r2, r2, #6
	str r2, [r5, #0x4c]
	lsls r0, r1, #1
	adds r0, r0, r1
	ands r0, r3
	lsls r0, r0, #1
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r4, _08059918 @ =IWRAM_START + 0x5B
	adds r0, r7, r4
	ldrb r0, [r0]
	muls r0, r1, r0
	asrs r0, r0, #6
	str r0, [r5, #0x50]
	ldr r1, [r5, #0x44]
	adds r1, r1, r2
	asrs r1, r1, #8
	str r1, [sp]
	ldr r2, [r5, #0x48]
	adds r2, r2, r0
	asrs r2, r2, #8
	str r2, [sp, #4]
	ldr r3, _0805991C @ =gUnknown_03005960
	ldr r0, [r3]
	adds r4, r1, #0
	subs r0, r4, r0
	movs r4, #0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	ldr r3, [sp, #4]
	subs r0, r3, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08059920
	mov r4, sb
	ldr r0, [r4]
	bl TaskDestroy
	b _08059AEE
	.align 2, 0
_08059904: .4byte gCurTask
_08059908: .4byte IWRAM_START + 0xC
_0805990C: .4byte 0x000003FF
_08059910: .4byte gUnknown_08097AA4
_08059914: .4byte IWRAM_START + 0x5A
_08059918: .4byte IWRAM_START + 0x5B
_0805991C: .4byte gUnknown_03005960
_08059920:
	ldr r1, _08059944 @ =IWRAM_START + 0x5C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08059954
	ldr r0, [r5, #0x4c]
	cmp r8, r0
	bge _08059988
	ldr r0, _08059948 @ =0x000001F9
	strh r0, [r6, #0xa]
	ldr r2, _0805994C @ =IWRAM_START + 0x2C
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _08059950 @ =IWRAM_START + 0x2D
	adds r1, r7, r3
	b _0805996A
	.align 2, 0
_08059944: .4byte IWRAM_START + 0x5C
_08059948: .4byte 0x000001F9
_0805994C: .4byte IWRAM_START + 0x2C
_08059950: .4byte IWRAM_START + 0x2D
_08059954:
	ldr r0, [r5, #0x4c]
	cmp r8, r0
	ble _0805996E
	ldr r0, _0805997C @ =0x000001F9
	strh r0, [r6, #0xa]
	ldr r4, _08059980 @ =IWRAM_START + 0x2C
	adds r1, r7, r4
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08059984 @ =IWRAM_START + 0x2D
	adds r1, r7, r0
_0805996A:
	movs r0, #0xff
	strb r0, [r1]
_0805996E:
	ldr r0, [r5, #0x4c]
	cmp r8, r0
	bge _08059988
	adds r1, r5, #0
	adds r1, #0x5c
	movs r0, #0
	b _0805998E
	.align 2, 0
_0805997C: .4byte 0x000001F9
_08059980: .4byte IWRAM_START + 0x2C
_08059984: .4byte IWRAM_START + 0x2D
_08059988:
	adds r1, r5, #0
	adds r1, #0x5c
	movs r0, #1
_0805998E:
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _080599A0
	subs r0, r1, #1
	strb r0, [r4]
_080599A0:
	ldr r0, [r5, #0x44]
	asrs r2, r0, #8
	ldr r3, _08059A08 @ =gUnknown_03005960
	ldr r1, [r3]
	movs r7, #0xb8
	lsls r7, r7, #1
	adds r0, r1, r7
	cmp r2, r0
	bgt _080599D2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _080599D2
	ldr r0, [r5, #0x48]
	asrs r2, r0, #8
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _080599D2
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08059A10
_080599D2:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080599F6
	movs r7, #0x18
	ldrsh r0, [r6, r7]
	adds r0, #0x80
	cmp r0, #0
	blt _080599F6
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08059A10
_080599F6:
	ldrb r0, [r5, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08059A0C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08059AEE
	.align 2, 0
_08059A08: .4byte gUnknown_03005960
_08059A0C: .4byte gCurTask
_08059A10:
	ldr r1, _08059AB8 @ =gUnknown_030059E0
	ldr r0, [r1, #0xc]
	asrs r0, r0, #8
	ldr r2, [sp, #4]
	subs r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r1, #8]
	asrs r1, r1, #8
	ldr r3, [sp]
	subs r1, r1, r3
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_8004418
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrb r0, [r4]
	cmp r0, #0
	bne _08059A8E
	adds r0, r2, #0
	subs r0, #0x56
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x53
	bhi _08059A50
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08059A68
_08059A50:
	ldr r4, _08059ABC @ =0xFFFFFEAA
	adds r0, r2, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x53
	bhi _08059A8E
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	bne _08059A8E
_08059A68:
	adds r0, r5, #0
	adds r0, #0x58
	movs r1, #0
	strh r2, [r0]
	adds r0, #5
	strb r1, [r0]
	ldr r0, _08059AC0 @ =0x000001F9
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08059AC4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08059AC8 @ =sub_8059B04
	str r0, [r1, #8]
_08059A8E:
	ldr r7, [sp]
	lsls r0, r7, #8
	ldr r2, [sp, #4]
	lsls r1, r2, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _08059AE8
	ldr r1, [r6, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08059AD0
	ldr r0, _08059ACC @ =0xFFFFFBFF
	ands r1, r0
	b _08059AD2
	.align 2, 0
_08059AB8: .4byte gUnknown_030059E0
_08059ABC: .4byte 0xFFFFFEAA
_08059AC0: .4byte 0x000001F9
_08059AC4: .4byte gCurTask
_08059AC8: .4byte sub_8059B04
_08059ACC: .4byte 0xFFFFFBFF
_08059AD0:
	orrs r1, r2
_08059AD2:
	str r1, [r6, #0x10]
	movs r1, #0
	ldr r0, _08059B00 @ =0x000001F9
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_08059AE8:
	adds r0, r6, #0
	bl sub_80051E8
_08059AEE:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059B00: .4byte 0x000001F9

	thumb_func_start sub_8059B04
sub_8059B04: @ 0x08059B04
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _08059B60 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r3, _08059B64 @ =IWRAM_START + 0xC
	adds r6, r1, r3
	ldr r0, [r7]
	mov sl, r0
	ldr r1, [r7, #0x44]
	ldr r0, [r7, #0x4c]
	adds r1, r1, r0
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x48]
	ldr r0, [r7, #0x50]
	adds r2, r2, r0
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08059B68 @ =gUnknown_03005960
	mov r8, r3
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08059B6C
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08059C8A
	.align 2, 0
_08059B60: .4byte gCurTask
_08059B64: .4byte IWRAM_START + 0xC
_08059B68: .4byte gUnknown_03005960
_08059B6C:
	ldr r0, [r7, #0x44]
	asrs r2, r0, #8
	mov r3, r8
	ldr r1, [r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _08059B9E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	blt _08059B9E
	ldr r0, [r7, #0x48]
	asrs r2, r0, #8
	mov r0, r8
	ldr r1, [r0, #4]
	subs r3, #0x50
	adds r0, r1, r3
	cmp r2, r0
	bgt _08059B9E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _08059BD8
_08059B9E:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08059BC2
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08059BC2
	movs r3, #0x18
	ldrsh r1, [r6, r3]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08059BD8
_08059BC2:
	ldrb r0, [r7, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08059BD4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08059C8A
	.align 2, 0
_08059BD4: .4byte gCurTask
_08059BD8:
	adds r1, r7, #0
	adds r1, #0x5d
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x22
	bne _08059C3A
	mov r1, sp
	movs r2, #0
	movs r0, #4
	strh r0, [r1]
	movs r0, #0xfd
	lsls r0, r0, #1
	strh r0, [r1, #2]
	mov r0, sp
	strb r2, [r0, #4]
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _08059C0E
	adds r0, r4, #0
	adds r0, #0xa
	b _08059C12
_08059C0E:
	adds r0, r4, #0
	subs r0, #0xa
_08059C12:
	lsls r0, r0, #8
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r0, #0xe
	lsls r0, r0, #8
	str r0, [sp, #0x10]
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x58
	ldrh r0, [r0]
	subs r0, #0x10
	strh r0, [r1, #6]
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r1, #3
	movs r2, #0x10
	bl sub_8050ED8
_08059C3A:
	lsls r0, r4, #8
	lsls r1, r5, #8
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	cmp r0, #0
	bne _08059C84
	adds r0, r6, #0
	bl sub_80051E8
	adds r1, r7, #0
	adds r1, #0x5e
	movs r0, #0x3c
	strb r0, [r1]
	movs r1, #0
	ldr r0, _08059C78 @ =0x000001F9
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08059C7C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08059C80 @ =sub_8059858
	str r0, [r1, #8]
	b _08059C8A
	.align 2, 0
_08059C78: .4byte 0x000001F9
_08059C7C: .4byte gCurTask
_08059C80: .4byte sub_8059858
_08059C84:
	adds r0, r6, #0
	bl sub_80051E8
_08059C8A:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8059C9C
sub_8059C9C: @ 0x08059C9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _08059D7C @ =sub_8059D9C
	ldr r2, _08059D80 @ =0x00004050
	ldr r1, _08059D84 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x48
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r2, r1
	ldr r7, _08059D88 @ =IWRAM_START + 0xC
	adds r6, r2, r7
	movs r0, #0
	mov sl, r0
	movs r3, #0
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	mov r7, sb
	str r7, [r1]
	ldrb r0, [r7]
	strb r0, [r1, #8]
	mov r0, r8
	strb r0, [r1, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	lsls r0, r0, #8
	str r0, [r1, #0x3c]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	lsls r0, r0, #8
	str r0, [r1, #0x40]
	ldr r4, _08059D8C @ =IWRAM_START + 0x44
	adds r1, r2, r4
	movs r0, #0x78
	strb r0, [r1]
	strh r3, [r6, #0x16]
	strh r3, [r6, #0x18]
	movs r7, #2
	rsbs r7, r7, #0
	adds r0, r7, #0
	mov r1, sb
	strb r0, [r1]
	movs r0, #0x19
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r6, #4]
	ldr r0, _08059D90 @ =0x000001FF
	strh r0, [r6, #0xa]
	ldr r2, [sp, #4]
	subs r4, #0x18
	adds r0, r2, r4
	mov r7, sl
	strb r7, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r6, #0x1a]
	ldr r3, [sp, #8]
	strh r3, [r6, #8]
	strh r3, [r6, #0x14]
	strh r3, [r6, #0x1c]
	ldr r0, _08059D94 @ =IWRAM_START + 0x2D
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r4, #2
	adds r1, r2, r4
	movs r0, #0x10
	strb r0, [r1]
	ldr r7, _08059D98 @ =IWRAM_START + 0x31
	adds r2, r2, r7
	mov r0, sl
	strb r0, [r2]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r6, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059D7C: .4byte sub_8059D9C
_08059D80: .4byte 0x00004050
_08059D84: .4byte sub_80095E8
_08059D88: .4byte IWRAM_START + 0xC
_08059D8C: .4byte IWRAM_START + 0x44
_08059D90: .4byte 0x000001FF
_08059D94: .4byte IWRAM_START + 0x2D
_08059D98: .4byte IWRAM_START + 0x31

	thumb_func_start sub_8059D9C
sub_8059D9C: @ 0x08059D9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08059DF0 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r2, _08059DF4 @ =IWRAM_START + 0xC
	adds r6, r1, r2
	ldr r3, [r7]
	mov sl, r3
	ldr r1, [r7, #0x3c]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r0, _08059DF8 @ =gUnknown_03005960
	mov r8, r0
	ldr r0, [r0]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	mov r3, r8
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	movs r3, #0
	bl sub_800C4FC
	cmp r0, #0
	beq _08059DFC
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08059EA6
	.align 2, 0
_08059DF0: .4byte gCurTask
_08059DF4: .4byte IWRAM_START + 0xC
_08059DF8: .4byte gUnknown_03005960
_08059DFC:
	mov r2, r8
	ldr r1, [r2]
	movs r3, #0xb8
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r4, r0
	bgt _08059E26
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _08059E26
	ldr r1, [r2, #4]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r5, r0
	bgt _08059E26
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _08059E60
_08059E26:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08059E4A
	movs r3, #0x18
	ldrsh r0, [r6, r3]
	adds r0, #0x80
	cmp r0, #0
	blt _08059E4A
	movs r0, #0x18
	ldrsh r1, [r6, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08059E60
_08059E4A:
	ldrb r0, [r7, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08059E5C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08059EA6
	.align 2, 0
_08059E5C: .4byte gCurTask
_08059E60:
	adds r1, r7, #0
	adds r1, #0x44
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08059E92
	movs r0, #0x14
	strb r0, [r1]
	ldr r0, _08059EB4 @ =0x000001FF
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08059EB8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08059EBC @ =sub_8059EC0
	str r0, [r1, #8]
_08059E92:
	ldr r0, [r7, #0x3c]
	ldr r1, [r7, #0x40]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08059EA6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059EB4: .4byte 0x000001FF
_08059EB8: .4byte gCurTask
_08059EBC: .4byte sub_8059EC0

	thumb_func_start sub_8059EC0
sub_8059EC0: @ 0x08059EC0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _08059F5C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r1, [r7]
	mov r8, r1
	ldr r1, [r7, #0x3c]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _08059F60 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r3, [sp]
	bl sub_800C84C
	ldr r3, [sp]
	ldr r1, [r3]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r4, r0
	bgt _08059F26
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _08059F26
	ldr r1, [r3, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r5, r0
	bgt _08059F26
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _08059F64
_08059F26:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08059F4A
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08059F4A
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08059F64
_08059F4A:
	ldrb r0, [r7, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _08059F5C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08059FAA
	.align 2, 0
_08059F5C: .4byte gCurTask
_08059F60: .4byte gUnknown_03005960
_08059F64:
	adds r1, r7, #0
	adds r1, #0x44
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08059F96
	movs r0, #0x78
	strb r0, [r1]
	ldr r0, _08059FB8 @ =0x000001FF
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #2
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _08059FBC @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08059FC0 @ =sub_8059FC4
	str r0, [r1, #8]
_08059F96:
	ldr r0, [r7, #0x3c]
	ldr r1, [r7, #0x40]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08059FAA:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059FB8: .4byte 0x000001FF
_08059FBC: .4byte gCurTask
_08059FC0: .4byte sub_8059FC4

	thumb_func_start sub_8059FC4
sub_8059FC4: @ 0x08059FC4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _0805A060 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r1, [r7]
	mov r8, r1
	ldr r1, [r7, #0x3c]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _0805A064 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r3, [sp]
	bl sub_800C84C
	ldr r3, [sp]
	ldr r1, [r3]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r4, r0
	bgt _0805A02A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _0805A02A
	ldr r1, [r3, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r5, r0
	bgt _0805A02A
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _0805A068
_0805A02A:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805A04E
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805A04E
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805A068
_0805A04E:
	ldrb r0, [r7, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _0805A060 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805A0AE
	.align 2, 0
_0805A060: .4byte gCurTask
_0805A064: .4byte gUnknown_03005960
_0805A068:
	adds r1, r7, #0
	adds r1, #0x44
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0805A09A
	movs r0, #0x14
	strb r0, [r1]
	ldr r0, _0805A0BC @ =0x000001FF
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #3
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _0805A0C0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805A0C4 @ =sub_805A0C8
	str r0, [r1, #8]
_0805A09A:
	ldr r0, [r7, #0x3c]
	ldr r1, [r7, #0x40]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0805A0AE:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A0BC: .4byte 0x000001FF
_0805A0C0: .4byte gCurTask
_0805A0C4: .4byte sub_805A0C8

	thumb_func_start sub_805A0C8
sub_805A0C8: @ 0x0805A0C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _0805A164 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r1, [r7]
	mov r8, r1
	ldr r1, [r7, #0x3c]
	asrs r1, r1, #8
	adds r4, r1, #0
	ldr r2, [r7, #0x40]
	asrs r2, r2, #8
	adds r5, r2, #0
	ldr r3, _0805A168 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r0, r4, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	adds r0, r6, #0
	str r3, [sp]
	bl sub_800C84C
	ldr r3, [sp]
	ldr r1, [r3]
	movs r2, #0xb8
	lsls r2, r2, #1
	adds r0, r1, r2
	cmp r4, r0
	bgt _0805A12E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r4, r0
	blt _0805A12E
	ldr r1, [r3, #4]
	subs r2, #0x50
	adds r0, r1, r2
	cmp r5, r0
	bgt _0805A12E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r5, r0
	bge _0805A16C
_0805A12E:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805A152
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805A152
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805A16C
_0805A152:
	ldrb r0, [r7, #8]
	mov r1, r8
	strb r0, [r1]
	ldr r0, _0805A164 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805A1B4
	.align 2, 0
_0805A164: .4byte gCurTask
_0805A168: .4byte gUnknown_03005960
_0805A16C:
	adds r1, r7, #0
	adds r1, #0x44
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r2, #0xff
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0805A1A0
	movs r0, #0x78
	strb r0, [r1]
	movs r1, #0
	ldr r0, _0805A1C0 @ =0x000001FF
	strh r0, [r6, #0xa]
	adds r0, r6, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x21
	ldrb r0, [r1]
	orrs r0, r2
	strb r0, [r1]
	ldr r0, _0805A1C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805A1C8 @ =sub_8059D9C
	str r0, [r1, #8]
_0805A1A0:
	ldr r0, [r7, #0x3c]
	ldr r1, [r7, #0x40]
	bl sub_80122DC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0805A1B4:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A1C0: .4byte 0x000001FF
_0805A1C4: .4byte gCurTask
_0805A1C8: .4byte sub_8059D9C

	thumb_func_start sub_805A1CC
sub_805A1CC: @ 0x0805A1CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0805A460 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	mov sb, r0
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r1, _0805A464 @ =gDispCnt
	ldr r0, _0805A468 @ =0x00001341
	strh r0, [r1]
	movs r5, #0
	str r5, [sp, #4]
	ldr r0, _0805A46C @ =0x040000D4
	add r1, sp, #4
	str r1, [r0]
	ldr r1, _0805A470 @ =gMultiSioSend
	str r1, [r0, #4]
	ldr r1, _0805A474 @ =0x85000005
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	str r5, [sp, #4]
	add r2, sp, #4
	str r2, [r0]
	ldr r1, _0805A478 @ =gMultiSioRecv
	str r1, [r0, #4]
	ldr r1, _0805A47C @ =0x85000014
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	ldr r1, _0805A480 @ =gBgCntRegs
	ldr r0, _0805A484 @ =0x0000560C
	strh r0, [r1, #2]
	ldr r0, _0805A488 @ =0x00001401
	strh r0, [r1]
	ldr r0, _0805A48C @ =gBgScrollRegs
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	ldr r0, _0805A490 @ =sub_805A9B0
	movs r1, #0xa8
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #6
	ldr r3, _0805A494 @ =sub_805AA94
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	mov r8, r0
	add r8, r6
	ldr r1, _0805A498 @ =IWRAM_START + 0x14C
	adds r0, r6, r1
	movs r2, #0
	strb r2, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r2, [r0]
	ldr r2, _0805A49C @ =IWRAM_START + 0x14E
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	subs r2, #0xe
	adds r0, r6, r2
	movs r1, #1
	strh r1, [r0]
	strh r5, [r0, #4]
	movs r1, #2
	strh r1, [r0, #2]
	movs r2, #0x80
	lsls r2, r2, #1
	strh r2, [r0, #6]
	ldr r1, _0805A4A0 @ =0x00003FFF
	strh r1, [r0, #8]
	strh r5, [r0, #0xa]
	bl sub_802D4CC
	ldr r0, _0805A4A4 @ =IWRAM_START + 0x80
	adds r7, r6, r0
	movs r0, #0x32
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0805A4A8 @ =0x00000431
	strh r0, [r7, #0xa]
	ldr r1, _0805A4AC @ =IWRAM_START + 0xA0
	adds r0, r6, r1
	movs r2, #0
	strb r2, [r0]
	ldr r0, _0805A4B0 @ =IWRAM_START + 0xA1
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	ldr r2, _0805A4B4 @ =IWRAM_START + 0xA2
	adds r0, r6, r2
	movs r1, #0x10
	strb r1, [r0]
	adds r2, #3
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	mov sl, r0
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r1, _0805A4B8 @ =IWRAM_START + 0xB0
	adds r7, r6, r1
	mov r2, sb
	lsls r4, r2, #3
	ldr r0, _0805A4BC @ =gUnknown_080D8F70
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	ldr r2, _0805A4C0 @ =IWRAM_START + 0xD0
	adds r0, r6, r2
	strb r1, [r0]
	ldr r0, _0805A4C4 @ =IWRAM_START + 0xD1
	adds r1, r6, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	adds r2, #2
	adds r0, r6, r2
	movs r1, #0x10
	strb r1, [r0]
	adds r2, #3
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	mov r0, sl
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r1, _0805A4C8 @ =IWRAM_START + 0xE0
	adds r7, r6, r1
	mov r4, sb
	adds r4, #1
	lsls r4, r4, #3
	ldr r2, _0805A4BC @ =gUnknown_080D8F70
	adds r4, r4, r2
	ldr r0, [r4]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r4, #6]
	ldr r2, _0805A4CC @ =IWRAM_START + 0x100
	adds r0, r6, r2
	strb r1, [r0]
	ldr r0, _0805A4D0 @ =IWRAM_START + 0x101
	adds r1, r6, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	strh r5, [r7, #0x16]
	strh r5, [r7, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	adds r2, #2
	adds r0, r6, r2
	movs r1, #0x10
	strb r1, [r0]
	adds r2, #3
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	mov r0, sl
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	ldr r1, _0805A4D4 @ =IWRAM_START + 0x110
	adds r7, r6, r1
	movs r2, #2
	add sb, r2
	mov r0, sb
	lsls r0, r0, #3
	mov sb, r0
	ldr r1, _0805A4BC @ =gUnknown_080D8F70
	add sb, r1
	mov r2, sb
	ldr r0, [r2]
	bl sub_8007C10
	str r0, [r7, #4]
	mov r1, sb
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #6]
	ldr r2, _0805A4D8 @ =IWRAM_START + 0x130
	adds r0, r6, r2
	strb r1, [r0]
	ldr r0, _0805A4DC @ =IWRAM_START + 0x131
	adds r1, r6, r0
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	movs r0, #8
	strh r0, [r7, #0x16]
	movs r0, #0x67
	strh r0, [r7, #0x18]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r7, #0x1a]
	strh r5, [r7, #8]
	strh r5, [r7, #0x14]
	strh r5, [r7, #0x1c]
	adds r2, #2
	adds r0, r6, r2
	movs r1, #0x10
	strb r1, [r0]
	adds r2, #3
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [r7, #0x28]
	str r5, [r7, #0x10]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	mov r1, r8
	str r0, [r1, #4]
	strh r5, [r1, #0xa]
	ldr r0, _0805A4E0 @ =0x0600A000
	str r0, [r1, #0xc]
	strh r5, [r1, #0x18]
	strh r5, [r1, #0x1a]
	movs r0, #0x6e
	strh r0, [r1, #0x1c]
	strh r5, [r1, #0x1e]
	strh r5, [r1, #0x20]
	strh r5, [r1, #0x22]
	strh r5, [r1, #0x24]
	movs r4, #0x20
	strh r4, [r1, #0x26]
	strh r4, [r1, #0x28]
	ldr r2, _0805A4E4 @ =IWRAM_START + 0x2A
	adds r0, r6, r2
	movs r1, #0
	strb r1, [r0]
	mov r2, r8
	strh r5, [r2, #0x2e]
	mov r0, r8
	bl sub_8002A3C
	ldr r1, _0805A4E8 @ =IWRAM_START + 0x40
	adds r0, r6, r1
	ldr r1, _0805A4EC @ =0x0600C000
	str r1, [r0, #4]
	strh r5, [r0, #0xa]
	ldr r1, _0805A4F0 @ =0x0600B000
	str r1, [r0, #0xc]
	strh r5, [r0, #0x18]
	strh r5, [r0, #0x1a]
	movs r1, #0x6f
	strh r1, [r0, #0x1c]
	strh r5, [r0, #0x1e]
	strh r5, [r0, #0x20]
	strh r5, [r0, #0x22]
	strh r5, [r0, #0x24]
	strh r4, [r0, #0x26]
	strh r4, [r0, #0x28]
	ldr r2, _0805A4F4 @ =IWRAM_START + 0x6A
	adds r6, r6, r2
	movs r1, #0
	strb r1, [r6]
	movs r2, #1
	strh r2, [r0, #0x2e]
	bl sub_8002A3C
	movs r0, #0x42
	bl m4aSongNumStart
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A460: .4byte gLoadedSaveGame
_0805A464: .4byte gDispCnt
_0805A468: .4byte 0x00001341
_0805A46C: .4byte 0x040000D4
_0805A470: .4byte gMultiSioSend
_0805A474: .4byte 0x85000005
_0805A478: .4byte gMultiSioRecv
_0805A47C: .4byte 0x85000014
_0805A480: .4byte gBgCntRegs
_0805A484: .4byte 0x0000560C
_0805A488: .4byte 0x00001401
_0805A48C: .4byte gBgScrollRegs
_0805A490: .4byte sub_805A9B0
_0805A494: .4byte sub_805AA94
_0805A498: .4byte IWRAM_START + 0x14C
_0805A49C: .4byte IWRAM_START + 0x14E
_0805A4A0: .4byte 0x00003FFF
_0805A4A4: .4byte IWRAM_START + 0x80
_0805A4A8: .4byte 0x00000431
_0805A4AC: .4byte IWRAM_START + 0xA0
_0805A4B0: .4byte IWRAM_START + 0xA1
_0805A4B4: .4byte IWRAM_START + 0xA2
_0805A4B8: .4byte IWRAM_START + 0xB0
_0805A4BC: .4byte gUnknown_080D8F70
_0805A4C0: .4byte IWRAM_START + 0xD0
_0805A4C4: .4byte IWRAM_START + 0xD1
_0805A4C8: .4byte IWRAM_START + 0xE0
_0805A4CC: .4byte IWRAM_START + 0x100
_0805A4D0: .4byte IWRAM_START + 0x101
_0805A4D4: .4byte IWRAM_START + 0x110
_0805A4D8: .4byte IWRAM_START + 0x130
_0805A4DC: .4byte IWRAM_START + 0x131
_0805A4E0: .4byte 0x0600A000
_0805A4E4: .4byte IWRAM_START + 0x2A
_0805A4E8: .4byte IWRAM_START + 0x40
_0805A4EC: .4byte 0x0600C000
_0805A4F0: .4byte 0x0600B000
_0805A4F4: .4byte IWRAM_START + 0x6A

	thumb_func_start sub_805A4F8
sub_805A4F8: @ 0x0805A4F8
	push {r4, r5, r6, lr}
	ldr r5, _0805A574 @ =gCurTask
	ldr r0, [r5]
	ldrh r4, [r0, #6]
	ldr r1, _0805A578 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0805A57C @ =gUnknown_03002878
	ldr r0, _0805A580 @ =0x04000042
	str r0, [r1]
	ldr r1, _0805A584 @ =gWinRegs
	movs r6, #0
	movs r0, #0x98
	lsls r0, r0, #5
	strh r0, [r1, #8]
	movs r0, #0x11
	strh r0, [r1, #0xa]
	ldr r2, _0805A588 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	movs r0, #0xc8
	lsls r0, r0, #7
	ldr r1, _0805A58C @ =IWRAM_START + 0x14C
	adds r4, r4, r1
	ldrb r1, [r4]
	movs r2, #0x10
	subs r2, r2, r1
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #0x12
	lsrs r1, r1, #0x10
	bl sub_802E164
	ldr r0, _0805A590 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805A558
	strb r6, [r4]
	ldr r1, [r5]
	ldr r0, _0805A594 @ =sub_805A598
	str r0, [r1, #8]
_0805A558:
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0805A56C
	strb r6, [r4]
	ldr r1, [r5]
	ldr r0, _0805A594 @ =sub_805A598
	str r0, [r1, #8]
_0805A56C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805A574: .4byte gCurTask
_0805A578: .4byte gUnknown_03002A80
_0805A57C: .4byte gUnknown_03002878
_0805A580: .4byte 0x04000042
_0805A584: .4byte gWinRegs
_0805A588: .4byte gFlags
_0805A58C: .4byte IWRAM_START + 0x14C
_0805A590: .4byte gPressedKeys
_0805A594: .4byte sub_805A598

	thumb_func_start sub_805A598
sub_805A598: @ 0x0805A598
	push {r4, r5, r6, lr}
	ldr r2, _0805A620 @ =gCurTask
	ldr r0, [r2]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r5, r0
	ldr r0, _0805A624 @ =IWRAM_START + 0x14C
	adds r4, r5, r0
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _0805A5C6
	ldr r0, _0805A628 @ =IWRAM_START + 0x14E
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	ldr r1, [r2]
	ldr r0, _0805A62C @ =sub_805A6C0
	str r0, [r1, #8]
_0805A5C6:
	ldr r0, _0805A630 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805A5D6
	movs r0, #0x1f
	strb r0, [r4]
_0805A5D6:
	ldr r1, _0805A634 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0805A638 @ =gUnknown_03002878
	ldr r0, _0805A63C @ =0x04000042
	str r0, [r1]
	ldr r1, _0805A640 @ =gWinRegs
	movs r0, #0x98
	lsls r0, r0, #5
	strh r0, [r1, #8]
	movs r0, #0x11
	strh r0, [r1, #0xa]
	ldr r2, _0805A644 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	movs r0, #0xc8
	lsls r0, r0, #7
	movs r1, #0xa0
	lsls r1, r1, #1
	bl sub_802E164
	ldr r1, _0805A648 @ =IWRAM_START + 0x80
	adds r2, r5, r1
	ldrb r0, [r4]
	cmp r0, #9
	bhi _0805A64C
	adds r1, r0, #0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, #0x14
	b _0805A64E
	.align 2, 0
_0805A620: .4byte gCurTask
_0805A624: .4byte IWRAM_START + 0x14C
_0805A628: .4byte IWRAM_START + 0x14E
_0805A62C: .4byte sub_805A6C0
_0805A630: .4byte gPressedKeys
_0805A634: .4byte gUnknown_03002A80
_0805A638: .4byte gUnknown_03002878
_0805A63C: .4byte 0x04000042
_0805A640: .4byte gWinRegs
_0805A644: .4byte gFlags
_0805A648: .4byte IWRAM_START + 0x80
_0805A64C:
	movs r0, #0x64
_0805A64E:
	strh r0, [r2, #0x16]
	movs r0, #0xa
	strh r0, [r2, #0x18]
	adds r2, r6, #0
	adds r2, #0xb0
	movs r0, #0xa6
	lsls r0, r0, #1
	adds r1, r6, r0
	ldrb r0, [r1]
	cmp r0, #9
	bhi _0805A66C
	ldr r0, _0805A668 @ =0x0000FFB0
	b _0805A67A
	.align 2, 0
_0805A668: .4byte 0x0000FFB0
_0805A66C:
	cmp r0, #0x13
	bhi _0805A678
	ldrb r0, [r1]
	lsls r0, r0, #4
	subs r0, #0xf0
	b _0805A67A
_0805A678:
	movs r0, #0x50
_0805A67A:
	strh r0, [r2, #0x16]
	movs r0, #0x3c
	strh r0, [r2, #0x18]
	adds r2, r6, #0
	adds r2, #0xe0
	movs r0, #0xa6
	lsls r0, r0, #1
	adds r1, r6, r0
	ldrb r0, [r1]
	cmp r0, #0x13
	bhi _0805A698
	ldr r0, _0805A694 @ =0x0000FFA6
	b _0805A6AE
	.align 2, 0
_0805A694: .4byte 0x0000FFA6
_0805A698:
	cmp r0, #0x1d
	bhi _0805A6AC
	ldrb r0, [r1]
	lsls r0, r0, #4
	ldr r1, _0805A6A8 @ =0xFFFFFE66
	adds r0, r0, r1
	b _0805A6AE
	.align 2, 0
_0805A6A8: .4byte 0xFFFFFE66
_0805A6AC:
	movs r0, #0x46
_0805A6AE:
	strh r0, [r2, #0x16]
	movs r0, #0x55
	strh r0, [r2, #0x18]
	adds r0, r6, #0
	bl sub_805AA50
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_805A6C0
sub_805A6C0: @ 0x0805A6C0
	push {r4, r5, r6, lr}
	ldr r6, _0805A70C @ =gCurTask
	ldr r0, [r6]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r2, r0
	ldr r0, _0805A710 @ =gPressedKeys
	ldrh r3, [r0]
	movs r5, #1
	adds r1, r5, #0
	ands r1, r3
	cmp r1, #0
	beq _0805A720
	ldr r0, _0805A714 @ =IWRAM_START + 0x140
	adds r2, r2, r0
	movs r1, #0
	strh r5, [r2]
	strh r1, [r2, #4]
	strh r5, [r2, #2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #6]
	ldr r0, _0805A718 @ =0x00003FFF
	strh r0, [r2, #8]
	strh r1, [r2, #0xa]
	movs r0, #0x6a
	bl m4aSongNumStart
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r1, [r6]
	ldr r0, _0805A71C @ =sub_805A878
	b _0805A748
	.align 2, 0
_0805A70C: .4byte gCurTask
_0805A710: .4byte gPressedKeys
_0805A714: .4byte IWRAM_START + 0x140
_0805A718: .4byte 0x00003FFF
_0805A71C: .4byte sub_805A878
_0805A720:
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	beq _0805A74A
	ldr r0, _0805A7E8 @ =IWRAM_START + 0x140
	adds r2, r2, r0
	strh r5, [r2]
	strh r1, [r2, #4]
	strh r5, [r2, #2]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #6]
	ldr r0, _0805A7EC @ =0x00003FFF
	strh r0, [r2, #8]
	strh r1, [r2, #0xa]
	movs r0, #0x6b
	bl m4aSongNumStart
	ldr r1, [r6]
	ldr r0, _0805A7F0 @ =sub_805A918
_0805A748:
	str r0, [r1, #8]
_0805A74A:
	ldr r1, _0805A7F4 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0805A7F8 @ =gUnknown_03002878
	ldr r0, _0805A7FC @ =0x04000042
	str r0, [r1]
	ldr r1, _0805A800 @ =gWinRegs
	movs r5, #0
	movs r0, #0x98
	lsls r0, r0, #5
	strh r0, [r1, #8]
	movs r0, #0x11
	strh r0, [r1, #0xa]
	ldr r2, _0805A804 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	movs r0, #0xc8
	lsls r0, r0, #7
	movs r1, #0xa0
	lsls r1, r1, #1
	bl sub_802E164
	ldr r0, _0805A808 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _0805A79E
	movs r0, #0x6c
	bl m4aSongNumStart
	ldr r1, _0805A80C @ =0x0000014D
	adds r2, r4, r1
	ldrb r0, [r2]
	movs r1, #1
	eors r0, r1
	strb r0, [r2]
_0805A79E:
	ldr r2, _0805A80C @ =0x0000014D
	adds r0, r4, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805A820
	ldr r0, _0805A810 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x18
	adds r2, r4, #0
	adds r2, #0xd5
	movs r1, #1
	strb r1, [r2]
	ldr r1, _0805A814 @ =0x00000105
	adds r2, r4, r1
	movs r1, #0xff
	strb r1, [r2]
	adds r1, #0x11
	adds r2, r4, r1
	ldr r1, _0805A818 @ =gUnknown_080D8F70
	adds r0, #3
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrh r1, [r0, #4]
	strh r1, [r2, #0xa]
	ldrb r1, [r0, #6]
	movs r2, #0x98
	lsls r2, r2, #1
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, _0805A81C @ =0x00000131
	adds r1, r4, r0
	movs r0, #1
	rsbs r0, r0, #0
	b _0805A858
	.align 2, 0
_0805A7E8: .4byte IWRAM_START + 0x140
_0805A7EC: .4byte 0x00003FFF
_0805A7F0: .4byte sub_805A918
_0805A7F4: .4byte gUnknown_03002A80
_0805A7F8: .4byte gUnknown_03002878
_0805A7FC: .4byte 0x04000042
_0805A800: .4byte gWinRegs
_0805A804: .4byte gFlags
_0805A808: .4byte gPressedKeys
_0805A80C: .4byte 0x0000014D
_0805A810: .4byte gLoadedSaveGame
_0805A814: .4byte 0x00000105
_0805A818: .4byte gUnknown_080D8F70
_0805A81C: .4byte 0x00000131
_0805A820:
	ldr r0, _0805A868 @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x18
	adds r1, r4, #0
	adds r1, #0xd5
	strb r5, [r1]
	ldr r2, _0805A86C @ =0x00000105
	adds r1, r4, r2
	strb r5, [r1]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r2, r4, r1
	ldr r1, _0805A870 @ =gUnknown_080D8F70
	adds r0, #2
	lsls r0, r0, #3
	adds r0, r0, r1
	ldrh r1, [r0, #4]
	strh r1, [r2, #0xa]
	ldrb r1, [r0, #6]
	movs r2, #0x98
	lsls r2, r2, #1
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, _0805A874 @ =0x00000131
	adds r1, r4, r0
	movs r0, #0xff
_0805A858:
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_805AA50
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805A868: .4byte gLoadedSaveGame
_0805A86C: .4byte 0x00000105
_0805A870: .4byte gUnknown_080D8F70
_0805A874: .4byte 0x00000131

	thumb_func_start sub_805A878
sub_805A878: @ 0x0805A878
	push {r4, r5, lr}
	ldr r4, _0805A8B0 @ =gCurTask
	ldr r0, [r4]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	ldr r1, _0805A8B4 @ =IWRAM_START + 0x140
	adds r0, r0, r1
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #1
	bne _0805A8C4
	ldr r2, _0805A8B8 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r0, _0805A8BC @ =gUnknown_03001954
	strb r3, [r0]
	ldr r1, [r4]
	ldr r0, _0805A8C0 @ =sub_805A9EC
	str r0, [r1, #8]
	b _0805A8FE
	.align 2, 0
_0805A8B0: .4byte gCurTask
_0805A8B4: .4byte IWRAM_START + 0x140
_0805A8B8: .4byte gFlags
_0805A8BC: .4byte gUnknown_03001954
_0805A8C0: .4byte sub_805A9EC
_0805A8C4:
	ldr r1, _0805A904 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0805A908 @ =gUnknown_03002878
	ldr r0, _0805A90C @ =0x04000042
	str r0, [r1]
	ldr r1, _0805A910 @ =gWinRegs
	movs r0, #0xcc
	lsls r0, r0, #6
	strh r0, [r1, #8]
	movs r0, #0x31
	strh r0, [r1, #0xa]
	ldr r2, _0805A914 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	movs r0, #0xc8
	lsls r0, r0, #7
	movs r1, #0xa0
	lsls r1, r1, #1
	bl sub_802E164
	adds r0, r5, #0
	bl sub_805AA50
_0805A8FE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805A904: .4byte gUnknown_03002A80
_0805A908: .4byte gUnknown_03002878
_0805A90C: .4byte 0x04000042
_0805A910: .4byte gWinRegs
_0805A914: .4byte gFlags

	thumb_func_start sub_805A918
sub_805A918: @ 0x0805A918
	push {r4, r5, lr}
	ldr r4, _0805A950 @ =gCurTask
	ldr r0, [r4]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	ldr r1, _0805A954 @ =IWRAM_START + 0x140
	adds r0, r0, r1
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0805A95C
	ldr r2, _0805A958 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	bl sub_808D45C
	ldr r0, [r4]
	bl TaskDestroy
	b _0805A996
	.align 2, 0
_0805A950: .4byte gCurTask
_0805A954: .4byte IWRAM_START + 0x140
_0805A958: .4byte gFlags
_0805A95C:
	ldr r1, _0805A99C @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	ldr r1, _0805A9A0 @ =gUnknown_03002878
	ldr r0, _0805A9A4 @ =0x04000042
	str r0, [r1]
	ldr r1, _0805A9A8 @ =gWinRegs
	movs r0, #0xcc
	lsls r0, r0, #6
	strh r0, [r1, #8]
	movs r0, #0x31
	strh r0, [r1, #0xa]
	ldr r2, _0805A9AC @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	movs r0, #0xf0
	bl sub_802EFDC
	movs r0, #0xc8
	lsls r0, r0, #7
	movs r1, #0xa0
	lsls r1, r1, #1
	bl sub_802E164
	adds r0, r5, #0
	bl sub_805AA50
_0805A996:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805A99C: .4byte gUnknown_03002A80
_0805A9A0: .4byte gUnknown_03002878
_0805A9A4: .4byte 0x04000042
_0805A9A8: .4byte gWinRegs
_0805A9AC: .4byte gFlags

	thumb_func_start sub_805A9B0
sub_805A9B0: @ 0x0805A9B0
	push {r4, r5, lr}
	ldr r5, _0805A9DC @ =gCurTask
	ldr r0, [r5]
	ldrh r4, [r0, #6]
	ldr r1, _0805A9E0 @ =IWRAM_START + 0x140
	adds r0, r4, r1
	bl sub_802D4CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0805A9D6
	ldr r0, _0805A9E4 @ =IWRAM_START + 0x14C
	adds r1, r4, r0
	movs r0, #0xf
	strb r0, [r1]
	ldr r1, [r5]
	ldr r0, _0805A9E8 @ =sub_805A4F8
	str r0, [r1, #8]
_0805A9D6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805A9DC: .4byte gCurTask
_0805A9E0: .4byte IWRAM_START + 0x140
_0805A9E4: .4byte IWRAM_START + 0x14C
_0805A9E8: .4byte sub_805A4F8

	thumb_func_start sub_805A9EC
sub_805A9EC: @ 0x0805A9EC
	push {r4, lr}
	ldr r0, _0805AA24 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	ldr r1, _0805AA28 @ =IWRAM_START + 0x14D
	adds r0, r0, r1
	ldrb r4, [r0]
	ldr r1, _0805AA2C @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805AA30 @ =gUnknown_03002AE4
	ldr r0, _0805AA34 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805AA38 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
	ldr r1, _0805AA3C @ =gUnknown_03004D5C
	ldr r0, _0805AA40 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	cmp r4, #0
	bne _0805AA44
	bl sub_805AAD8
	b _0805AA48
	.align 2, 0
_0805AA24: .4byte gCurTask
_0805AA28: .4byte IWRAM_START + 0x14D
_0805AA2C: .4byte 0x0000FFFF
_0805AA30: .4byte gUnknown_03002AE4
_0805AA34: .4byte gUnknown_0300287C
_0805AA38: .4byte gUnknown_03005390
_0805AA3C: .4byte gUnknown_03004D5C
_0805AA40: .4byte gUnknown_03002A84
_0805AA44:
	bl sub_808129C
_0805AA48:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805AA50
sub_805AA50: @ 0x0805AA50
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl sub_80051E8
	adds r4, #0x30
	adds r0, r4, #0
	bl sub_80051E8
	adds r4, #0x30
	adds r0, r4, #0
	bl sub_80051E8
	movs r1, #0xa7
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805AA8C
	movs r0, #0x88
	lsls r0, r0, #1
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0805AA8C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805AA94
sub_805AA94: @ 0x0805AA94
	push {r4, lr}
	ldrh r4, [r0, #6]
	ldr r1, _0805AAC8 @ =IWRAM_START + 0x84
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0805AACC @ =IWRAM_START + 0xB4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r1, _0805AAD0 @ =IWRAM_START + 0xE4
	adds r0, r4, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _0805AAD4 @ =IWRAM_START + 0x114
	adds r4, r4, r0
	ldr r0, [r4]
	bl sub_8007CF0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0805AAC8: .4byte IWRAM_START + 0x84
_0805AACC: .4byte IWRAM_START + 0xB4
_0805AAD0: .4byte IWRAM_START + 0xE4
_0805AAD4: .4byte IWRAM_START + 0x114

	thumb_func_start sub_805AAD8
sub_805AAD8: @ 0x0805AAD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r0, _0805AD44 @ =0x06010000
	str r0, [sp, #8]
	ldr r0, _0805AD48 @ =gUnknown_030054D4
	movs r3, #0
	strb r3, [r0, #3]
	strb r3, [r0, #2]
	strb r3, [r0, #1]
	strb r3, [r0]
	str r3, [sp, #4]
	ldr r0, _0805AD4C @ =0x040000D4
	add r1, sp, #4
	str r1, [r0]
	ldr r1, _0805AD50 @ =gMultiSioSend
	str r1, [r0, #4]
	ldr r1, _0805AD54 @ =0x85000005
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	str r3, [sp, #4]
	add r2, sp, #4
	str r2, [r0]
	ldr r1, _0805AD58 @ =gMultiSioRecv
	str r1, [r0, #4]
	ldr r1, _0805AD5C @ =0x85000014
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	ldr r1, _0805AD60 @ =gDispCnt
	ldr r5, _0805AD64 @ =0x00001141
	adds r0, r5, #0
	strh r0, [r1]
	ldr r1, _0805AD68 @ =gBgCntRegs
	movs r4, #0
	ldr r0, _0805AD6C @ =0x00001401
	strh r0, [r1]
	ldr r0, _0805AD70 @ =gBgScrollRegs
	strh r3, [r0]
	strh r3, [r0, #2]
	strh r3, [r0, #4]
	strh r3, [r0, #6]
	ldr r0, _0805AD74 @ =sub_805ADAC
	movs r1, #0x80
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #6
	str r3, [sp]
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov sl, r0
	ldr r2, _0805AD78 @ =IWRAM_START + 0xEB
	adds r0, r1, r2
	strb r4, [r0]
	ldr r5, _0805AD7C @ =IWRAM_START + 0xFC
	adds r2, r1, r5
	movs r0, #1
	strb r0, [r2]
	ldr r2, _0805AD80 @ =IWRAM_START + 0xFD
	adds r0, r1, r2
	strb r4, [r0]
	movs r4, #0
	subs r5, #0xe
	adds r3, r1, r5
	movs r2, #0
	ldr r0, _0805AD84 @ =IWRAM_START + 0xF2
	adds r1, r1, r0
_0805AB6A:
	adds r0, r3, r4
	strb r2, [r0]
	adds r0, r1, r4
	strb r2, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _0805AB6A
	movs r4, #0
	movs r0, #1
	mov r1, sl
	strh r0, [r1]
	strh r4, [r1, #4]
	movs r0, #2
	strh r0, [r1, #2]
	movs r2, #0x80
	lsls r2, r2, #1
	mov sb, r2
	mov r5, sb
	strh r5, [r1, #6]
	ldr r0, _0805AD88 @ =0x00003FFF
	strh r0, [r1, #8]
	strh r4, [r1, #0xa]
	mov r0, sl
	bl sub_802D4CC
	mov r7, sl
	adds r7, #0xc
	ldr r0, [sp, #8]
	str r0, [r7, #4]
	ldr r3, _0805AD8C @ =gUnknown_080D9050
	ldr r1, _0805AD90 @ =gLoadedSaveGame
	ldr r2, [r1]
	ldrb r1, [r2, #6]
	lsls r1, r1, #3
	adds r1, r1, r3
	ldr r0, [r1]
	lsls r0, r0, #5
	ldr r5, [sp, #8]
	adds r5, r5, r0
	str r5, [sp, #8]
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r0, [r2, #6]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r1, [r0, #6]
	mov r0, sl
	adds r0, #0x2c
	strb r1, [r0]
	mov r1, sl
	adds r1, #0x2d
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #8
	strh r0, [r7, #0x16]
	movs r0, #0x18
	strh r0, [r7, #0x18]
	mov r0, sb
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r0, sl
	adds r0, #0x2e
	movs r1, #0x10
	mov r8, r1
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	movs r5, #0
	strb r5, [r0]
	movs r6, #1
	rsbs r6, r6, #0
	str r6, [r7, #0x28]
	movs r5, #0x80
	lsls r5, r5, #5
	str r5, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	adds r7, #0x30
	ldr r0, [sp, #8]
	str r0, [r7, #4]
	ldr r3, _0805AD94 @ =gUnknown_080E0D64
	ldr r1, _0805AD90 @ =gLoadedSaveGame
	ldr r2, [r1]
	ldrb r1, [r2, #6]
	lsls r1, r1, #3
	adds r1, r1, r3
	ldr r0, [r1]
	lsls r0, r0, #5
	mov ip, r0
	ldr r0, [sp, #8]
	add r0, ip
	str r0, [sp, #8]
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r0, [r2, #6]
	lsls r0, r0, #3
	adds r0, r0, r3
	ldrb r1, [r0, #6]
	mov r0, sl
	adds r0, #0x5c
	strb r1, [r0]
	mov r1, sl
	adds r1, #0x5d
	adds r0, r6, #0
	strb r0, [r1]
	movs r1, #0x78
	strh r1, [r7, #0x16]
	movs r0, #0x7a
	strh r0, [r7, #0x18]
	mov r2, sb
	strh r2, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r0, sl
	adds r0, #0x5e
	mov r2, r8
	strb r2, [r0]
	adds r0, #3
	movs r2, #0
	strb r2, [r0]
	str r6, [r7, #0x28]
	str r5, [r7, #0x10]
	adds r7, #0x30
	ldr r0, [sp, #8]
	str r0, [r7, #4]
	ldr r0, _0805AD98 @ =0x00000432
	strh r0, [r7, #0xa]
	mov r0, sl
	adds r0, #0x8c
	movs r2, #8
	strb r2, [r0]
	mov r2, sl
	adds r2, #0x8d
	adds r0, r6, #0
	strb r0, [r2]
	strh r1, [r7, #0x16]
	movs r0, #0x8c
	strh r0, [r7, #0x18]
	mov r0, sb
	strh r0, [r7, #0x1a]
	strh r4, [r7, #8]
	strh r4, [r7, #0x14]
	strh r4, [r7, #0x1c]
	mov r0, sl
	adds r0, #0x8e
	mov r1, r8
	strb r1, [r0]
	adds r0, #3
	movs r2, #0
	strb r2, [r0]
	str r6, [r7, #0x28]
	str r5, [r7, #0x10]
	adds r0, #0xb
	movs r1, #0xc0
	lsls r1, r1, #0x13
	str r1, [r0, #4]
	strh r4, [r0, #0xa]
	ldr r1, _0805AD9C @ =0x0600A000
	str r1, [r0, #0xc]
	strh r4, [r0, #0x18]
	strh r4, [r0, #0x1a]
	movs r1, #0x72
	strh r1, [r0, #0x1c]
	strh r4, [r0, #0x1e]
	strh r4, [r0, #0x20]
	strh r4, [r0, #0x22]
	strh r4, [r0, #0x24]
	movs r1, #0x1e
	strh r1, [r0, #0x26]
	movs r1, #0x14
	strh r1, [r0, #0x28]
	mov r1, sl
	adds r1, #0xc6
	strb r2, [r1]
	strh r4, [r0, #0x2e]
	bl sub_8002A3C
	ldr r0, _0805ADA0 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805ACE8
	bl MultiSioStart
_0805ACE8:
	ldr r2, _0805ADA4 @ =gUnknown_03005594
	ldr r5, _0805AD90 @ =gLoadedSaveGame
	ldr r0, [r5]
	ldrb r0, [r0, #0x13]
	movs r1, #0xf
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _0805ADA8 @ =gUnknown_030054D8
	movs r0, #1
	strb r0, [r1]
	movs r4, #0
	mov r6, sl
	adds r6, #0xf6
	mov r7, sl
	adds r7, #0xfa
	adds r5, r1, #0
	ldr r2, _0805AD90 @ =gLoadedSaveGame
_0805AD0A:
	ldr r0, [r2]
	adds r0, #7
	adds r0, r0, r4
	ldrb r3, [r0]
	ldrb r0, [r5]
	cmp r0, r3
	bhs _0805AD1A
	strb r3, [r1]
_0805AD1A:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _0805AD0A
	ldrb r0, [r1]
	cmp r0, #0x1b
	bls _0805AD2E
	movs r0, #0x1b
	strb r0, [r1]
_0805AD2E:
	movs r0, #0
	strb r0, [r6]
	strb r0, [r7]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805AD44: .4byte 0x06010000
_0805AD48: .4byte gUnknown_030054D4
_0805AD4C: .4byte 0x040000D4
_0805AD50: .4byte gMultiSioSend
_0805AD54: .4byte 0x85000005
_0805AD58: .4byte gMultiSioRecv
_0805AD5C: .4byte 0x85000014
_0805AD60: .4byte gDispCnt
_0805AD64: .4byte 0x00001141
_0805AD68: .4byte gBgCntRegs
_0805AD6C: .4byte 0x00001401
_0805AD70: .4byte gBgScrollRegs
_0805AD74: .4byte sub_805ADAC
_0805AD78: .4byte IWRAM_START + 0xEB
_0805AD7C: .4byte IWRAM_START + 0xFC
_0805AD80: .4byte IWRAM_START + 0xFD
_0805AD84: .4byte IWRAM_START + 0xF2
_0805AD88: .4byte 0x00003FFF
_0805AD8C: .4byte gUnknown_080D9050
_0805AD90: .4byte gLoadedSaveGame
_0805AD94: .4byte gUnknown_080E0D64
_0805AD98: .4byte 0x00000432
_0805AD9C: .4byte 0x0600A000
_0805ADA0: .4byte gMultiSioStatusFlags
_0805ADA4: .4byte gUnknown_03005594
_0805ADA8: .4byte gUnknown_030054D8

	thumb_func_start sub_805ADAC
sub_805ADAC: @ 0x0805ADAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	movs r0, #0
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r4, #0
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r2, #1
	str r2, [sp, #0x14]
	ldr r0, _0805AE30 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	adds r0, r6, #0
	bl sub_802D4CC
	ldr r0, _0805AE34 @ =gMultiSioStatusFlags
	ldr r2, [r0]
	movs r0, #0x81
	ands r0, r2
	cmp r0, #0
	beq _0805AE60
	ldr r3, _0805AE38 @ =0x04000128
	ldr r1, [r3]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1e
	ldr r0, [sp, #0x14]
	lsls r0, r1
	ands r2, r0
	cmp r2, #0
	bne _0805AE50
	ldr r1, _0805AE3C @ =gUnknown_030054D4
	ldr r0, [r3]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r2, r1, #1
	strb r2, [r0]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	cmp r1, #0xb4
	bls _0805AE60
	ldr r1, _0805AE40 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805AE44 @ =gUnknown_03002AE4
	ldr r0, _0805AE48 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805AE4C @ =gUnknown_03005390
	mov r1, sp
	ldrb r1, [r1, #8]
	strb r1, [r0]
	b _0805B1F6
	.align 2, 0
_0805AE30: .4byte gCurTask
_0805AE34: .4byte gMultiSioStatusFlags
_0805AE38: .4byte 0x04000128
_0805AE3C: .4byte gUnknown_030054D4
_0805AE40: .4byte 0x0000FFFF
_0805AE44: .4byte gUnknown_03002AE4
_0805AE48: .4byte gUnknown_0300287C
_0805AE4C: .4byte gUnknown_03005390
_0805AE50:
	ldr r1, _0805AEBC @ =gUnknown_030054D4
	ldr r0, [r3]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r0, r0, r1
	mov r2, sp
	ldrb r2, [r2, #8]
	strb r2, [r0]
_0805AE60:
	ldr r1, _0805AEC0 @ =gMultiSioStatusFlags
	ldr r2, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0805AE70
	movs r4, #1
_0805AE70:
	ldr r0, _0805AEC4 @ =gMultiSioRecv
	mov r8, r0
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r2
	cmp r0, #0
	bne _0805AE92
	cmp r4, #0
	beq _0805AED8
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	bne _0805AED8
	ldr r1, _0805AEC4 @ =gMultiSioRecv
	ldrh r0, [r1]
	cmp r0, #0
	beq _0805AED8
_0805AE92:
	adds r1, r6, #0
	adds r1, #0xfd
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bls _0805AEE0
	ldr r1, _0805AEC8 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805AECC @ =gUnknown_03002AE4
	ldr r0, _0805AED0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805AED4 @ =gUnknown_03005390
	movs r0, #0
	b _0805B1F4
	.align 2, 0
_0805AEBC: .4byte gUnknown_030054D4
_0805AEC0: .4byte gMultiSioStatusFlags
_0805AEC4: .4byte gMultiSioRecv
_0805AEC8: .4byte 0x0000FFFF
_0805AECC: .4byte gUnknown_03002AE4
_0805AED0: .4byte gUnknown_0300287C
_0805AED4: .4byte gUnknown_03005390
_0805AED8:
	adds r1, r6, #0
	adds r1, #0xfd
	movs r0, #0
	strb r0, [r1]
_0805AEE0:
	movs r5, #0
	adds r2, r6, #0
	adds r2, #0xfa
	str r2, [sp, #0x20]
	movs r7, #1
	adds r4, r6, #0
	adds r4, #0xee
	movs r0, #0xf2
	adds r0, r0, r6
	mov ip, r0
	movs r1, #0
	str r1, [sp, #0x28]
	movs r2, #0
	str r2, [sp, #0x2c]
	mov sl, r2
	ldr r0, _0805AF98 @ =gUnknown_03005460
	mov sb, r0
_0805AF02:
	lsls r1, r5, #2
	str r1, [sp, #0x30]
	ldr r3, _0805AF9C @ =gMultiSioRecv
	add r3, sl
	ldrb r0, [r4]
	lsls r0, r0, #1
	strb r0, [r4]
	mov r2, ip
	ldrb r0, [r2]
	lsls r0, r0, #1
	strb r0, [r2]
	ldr r0, _0805AFA0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r5, r0
	beq _0805AF3A
	adds r1, r7, #0
	lsls r1, r5
	ldr r2, _0805AFA4 @ =gMultiSioStatusFlags
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	beq _0805AFB8
	ldrh r0, [r3]
	ldr r1, _0805AFA8 @ =0x0000400F
	cmp r0, r1
	bls _0805AFB8
_0805AF3A:
	ldrb r1, [r4]
	adds r0, r7, #0
	orrs r0, r1
	strb r0, [r4]
	ldr r2, [sp]
	adds r2, #1
	str r2, [sp]
	adds r0, r7, #0
	lsls r0, r5
	ldr r1, [sp, #8]
	orrs r1, r0
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	ldr r2, [sp, #0xc]
	cmp r2, #0
	beq _0805AF60
	movs r0, #1
	str r0, [sp, #0x10]
_0805AF60:
	ldr r0, _0805AFAC @ =gUnknown_03005410
	ldr r1, [sp, #0x30]
	adds r0, r1, r0
	ldr r1, [r3, #4]
	str r1, [r0]
	ldrh r0, [r3, #8]
	mov r2, sb
	strh r0, [r2]
	ldr r0, _0805AF98 @ =gUnknown_03005460
	adds r0, #2
	ldr r1, [sp, #0x2c]
	adds r0, r1, r0
	ldrh r1, [r3, #0xa]
	strh r1, [r0]
	ldrh r0, [r3, #0xc]
	strh r0, [r2, #4]
	ldr r2, _0805AFB0 @ =gUnknown_03005594
	ldrb r0, [r2]
	ldrb r1, [r3, #0xe]
	orrs r0, r1
	strb r0, [r2]
	ldr r2, _0805AFB4 @ =gUnknown_030054D8
	ldrb r1, [r3, #0xf]
	ldrb r0, [r2]
	cmp r0, r1
	bhs _0805B01E
	strb r1, [r2]
	b _0805B01E
	.align 2, 0
_0805AF98: .4byte gUnknown_03005460
_0805AF9C: .4byte gMultiSioRecv
_0805AFA0: .4byte 0x04000128
_0805AFA4: .4byte gMultiSioStatusFlags
_0805AFA8: .4byte 0x0000400F
_0805AFAC: .4byte gUnknown_03005410
_0805AFB0: .4byte gUnknown_03005594
_0805AFB4: .4byte gUnknown_030054D8
_0805AFB8:
	ldr r2, [sp, #0x28]
	ldr r1, _0805AFF0 @ =0x04000120
	adds r0, r2, r1
	ldrh r0, [r0]
	str r0, [sp, #0x30]
	movs r2, #1
	str r2, [sp, #0xc]
	adds r1, r2, #0
	lsls r1, r5
	ldr r2, _0805AFF4 @ =gMultiSioStatusFlags
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	bne _0805AFF8
	ldr r0, [sp, #0x30]
	cmp r0, #0
	bne _0805AFF8
	movs r1, #1
	str r1, [sp, #0x10]
	mov r2, ip
	ldrb r0, [r2]
	adds r1, r7, #0
	orrs r1, r0
	strb r1, [r2]
	ldrb r0, [r4]
	cmp r0, #0
	bne _0805B024
	b _0805B01A
	.align 2, 0
_0805AFF0: .4byte 0x04000120
_0805AFF4: .4byte gMultiSioStatusFlags
_0805AFF8:
	mov r1, ip
	ldrb r0, [r1]
	cmp r0, #0
	bne _0805B016
	adds r1, r7, #0
	lsls r1, r5
	ldr r2, _0805B08C @ =gMultiSioStatusFlags
	ldr r0, [r2]
	ands r0, r1
	cmp r0, #0
	beq _0805B01E
	ldrh r0, [r3]
	ldr r1, _0805B090 @ =0x0000400F
	cmp r0, r1
	bhi _0805B01E
_0805B016:
	movs r2, #1
	str r2, [sp, #0x10]
_0805B01A:
	movs r0, #0
	str r0, [sp, #0x14]
_0805B01E:
	ldrb r0, [r4]
	cmp r0, #0
	beq _0805B02A
_0805B024:
	ldr r1, [sp, #4]
	adds r1, #1
	str r1, [sp, #4]
_0805B02A:
	adds r4, #1
	movs r2, #1
	add ip, r2
	ldr r0, [sp, #0x28]
	adds r0, #2
	str r0, [sp, #0x28]
	movs r1, #0xc
	add sb, r1
	ldr r2, [sp, #0x2c]
	adds r2, #0xc
	str r2, [sp, #0x2c]
	movs r0, #0x14
	add sl, r0
	adds r5, #1
	cmp r5, #3
	bgt _0805B04C
	b _0805AF02
_0805B04C:
	ldr r1, [sp, #4]
	cmp r1, #0
	bne _0805B056
	movs r2, #1
	str r2, [sp, #4]
_0805B056:
	ldr r0, [sp, #0x20]
	ldrb r4, [r0]
	cmp r4, #0
	bne _0805B0AE
	ldr r1, _0805B08C @ =gMultiSioStatusFlags
	ldr r0, [r1]
	movs r1, #0x81
	ands r0, r1
	cmp r0, #1
	bne _0805B0A8
	mov r2, r8
	ldrh r1, [r2]
	ldr r0, _0805B094 @ =0x00004010
	cmp r1, r0
	bls _0805B0A8
	ldr r1, _0805B098 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805B09C @ =gUnknown_03002AE4
	ldr r0, _0805B0A0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805B0A4 @ =gUnknown_03005390
	strb r4, [r0]
	b _0805B1F6
	.align 2, 0
_0805B08C: .4byte gMultiSioStatusFlags
_0805B090: .4byte 0x0000400F
_0805B094: .4byte 0x00004010
_0805B098: .4byte 0x0000FFFF
_0805B09C: .4byte gUnknown_03002AE4
_0805B0A0: .4byte gUnknown_0300287C
_0805B0A4: .4byte gUnknown_03005390
_0805B0A8:
	movs r0, #1
	ldr r1, [sp, #0x20]
	strb r0, [r1]
_0805B0AE:
	mov r2, r8
	ldrh r1, [r2]
	ldr r0, [sp, #0x10]
	cmp r0, #0
	beq _0805B0BA
	b _0805B1D8
_0805B0BA:
	ldr r0, _0805B130 @ =0x00004011
	cmp r1, r0
	beq _0805B0C2
	b _0805B1D8
_0805B0C2:
	ldr r2, [sp, #0x20]
	ldrb r0, [r2]
	cmp r0, #0
	bne _0805B0CC
	b _0805B1D8
_0805B0CC:
	ldr r1, _0805B134 @ =gUnknown_03005434
	mov r2, r8
	ldr r0, [r2, #0x10]
	str r0, [r1]
	ldr r1, _0805B138 @ =gUnknown_030055B8
	ldrb r0, [r2, #2]
	strb r0, [r1]
	movs r5, #0
	adds r0, r6, #0
	adds r0, #0xe8
	str r0, [sp, #0x18]
	adds r1, r6, #0
	adds r1, #0xf6
	str r1, [sp, #0x1c]
	adds r6, #0xfb
	str r6, [sp, #0x24]
	ldr r6, _0805B13C @ =gUnknown_03005460
	ldr r7, _0805B140 @ =gUnknown_03005594
	adds r4, r6, #0
	mov sl, r5
	ldr r2, _0805B144 @ =gUnknown_03005410
	mov ip, r2
	mov sb, r5
_0805B0FA:
	ldr r1, _0805B138 @ =gUnknown_030055B8
	ldrb r0, [r1]
	asrs r0, r5
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805B182
	cmp r5, #0
	bne _0805B14C
	mov r2, r8
	ldr r0, [r2, #4]
	ldr r1, _0805B144 @ =gUnknown_03005410
	str r0, [r1]
	ldrh r0, [r2, #8]
	strh r0, [r6]
	ldrh r0, [r2, #0xa]
	strh r0, [r6, #2]
	ldrh r0, [r2, #0xc]
	strh r0, [r6, #4]
	ldrb r0, [r7]
	ldrb r1, [r2, #0xe]
	orrs r0, r1
	strb r0, [r7]
	ldr r2, _0805B148 @ =gUnknown_030054D8
	mov r0, r8
	ldrb r1, [r0, #0xf]
	b _0805B17A
	.align 2, 0
_0805B130: .4byte 0x00004011
_0805B134: .4byte gUnknown_03005434
_0805B138: .4byte gUnknown_030055B8
_0805B13C: .4byte gUnknown_03005460
_0805B140: .4byte gUnknown_03005594
_0805B144: .4byte gUnknown_03005410
_0805B148: .4byte gUnknown_030054D8
_0805B14C:
	ldr r3, _0805B1C0 @ =gMultiSioRecv
	add r3, sb
	ldrh r0, [r3]
	ldr r1, _0805B1C4 @ =0x00004010
	cmp r0, r1
	bne _0805B182
	ldr r0, [r3, #4]
	mov r2, ip
	str r0, [r2]
	ldrh r0, [r3, #8]
	strh r0, [r4]
	adds r0, r6, #2
	add r0, sl
	ldrh r1, [r3, #0xa]
	strh r1, [r0]
	ldrh r0, [r3, #0xc]
	strh r0, [r4, #4]
	ldrb r0, [r7]
	ldrb r1, [r3, #0xe]
	orrs r0, r1
	strb r0, [r7]
	ldr r2, _0805B1C8 @ =gUnknown_030054D8
	ldrb r1, [r3, #0xf]
_0805B17A:
	ldrb r0, [r2]
	cmp r0, r1
	bhs _0805B182
	strb r1, [r2]
_0805B182:
	adds r4, #0xc
	movs r0, #0xc
	add sl, r0
	movs r1, #4
	add ip, r1
	movs r2, #0x14
	add sb, r2
	adds r5, #1
	cmp r5, #3
	ble _0805B0FA
	movs r0, #0
	movs r1, #0
	ldr r2, [sp, #0x18]
	strh r0, [r2]
	ldr r0, [sp, #0x1c]
	strb r1, [r0]
	ldr r2, _0805B1CC @ =gUnknown_030054D4
	strb r1, [r2, #3]
	strb r1, [r2, #2]
	strb r1, [r2, #1]
	strb r1, [r2]
	ldr r0, [sp, #0x24]
	strb r1, [r0]
	ldr r1, _0805B1D0 @ =gCurTask
	ldr r0, [r1]
	ldr r2, _0805B1D4 @ =sub_805B4C0
	str r2, [r0, #8]
	bl _call_via_r2
	b _0805B42A
	.align 2, 0
_0805B1C0: .4byte gMultiSioRecv
_0805B1C4: .4byte 0x00004010
_0805B1C8: .4byte gUnknown_030054D8
_0805B1CC: .4byte gUnknown_030054D4
_0805B1D0: .4byte gCurTask
_0805B1D4: .4byte sub_805B4C0
_0805B1D8:
	lsls r1, r1, #0x10
	ldr r0, _0805B204 @ =0x40120000
	cmp r1, r0
	bls _0805B220
	ldr r1, _0805B208 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805B20C @ =gUnknown_03002AE4
	ldr r0, _0805B210 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805B214 @ =gUnknown_03005390
	movs r0, #0
_0805B1F4:
	strb r0, [r1]
_0805B1F6:
	ldr r1, _0805B218 @ =gUnknown_03004D5C
	ldr r0, _0805B21C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805B42A
	.align 2, 0
_0805B204: .4byte 0x40120000
_0805B208: .4byte 0x0000FFFF
_0805B20C: .4byte gUnknown_03002AE4
_0805B210: .4byte gUnknown_0300287C
_0805B214: .4byte gUnknown_03005390
_0805B218: .4byte gUnknown_03004D5C
_0805B21C: .4byte gUnknown_03002A84
_0805B220:
	ldr r0, _0805B254 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0805B2B0
	movs r0, #0x6b
	bl m4aSongNumStart
	ldr r0, _0805B258 @ =gMultiSioStatusFlags
	ldr r4, [r0]
	movs r0, #0x80
	ands r4, r0
	cmp r4, #0
	beq _0805B268
	ldr r7, _0805B25C @ =gMultiSioSend
	movs r1, #0
	strh r1, [r7]
	adds r0, r6, #0
	adds r0, #0xe8
	strh r1, [r0]
	ldr r0, _0805B260 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805B264 @ =sub_805B454
	str r0, [r1, #8]
	b _0805B42A
	.align 2, 0
_0805B254: .4byte gPressedKeys
_0805B258: .4byte gMultiSioStatusFlags
_0805B25C: .4byte gMultiSioSend
_0805B260: .4byte gCurTask
_0805B264: .4byte sub_805B454
_0805B268:
	ldr r0, _0805B29C @ =gUnknown_03001954
	strb r4, [r0]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r7, _0805B2A0 @ =gMultiSioSend
	movs r2, #0
	strh r4, [r7]
	ldr r0, _0805B2A4 @ =gUnknown_03004D80
	strb r2, [r0]
	ldr r1, _0805B2A8 @ =gUnknown_03002280
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x20
	strb r0, [r1, #3]
	bl sub_805A1CC
	ldr r0, _0805B2AC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805B42A
	.align 2, 0
_0805B29C: .4byte gUnknown_03001954
_0805B2A0: .4byte gMultiSioSend
_0805B2A4: .4byte gUnknown_03004D80
_0805B2A8: .4byte gUnknown_03002280
_0805B2AC: .4byte gCurTask
_0805B2B0:
	ldr r1, _0805B3AC @ =gMultiSioStatusFlags
	ldr r0, [r1]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805B2D8
	ldr r2, [sp, #4]
	cmp r2, #1
	ble _0805B302
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _0805B2D8
	adds r4, r6, #0
	adds r4, #0x3c
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0805B2D8:
	ldr r1, [sp, #4]
	cmp r1, #1
	ble _0805B302
	adds r4, r6, #0
	adds r4, #0x6c
	ldr r0, _0805B3B0 @ =0x00000432
	strh r0, [r4, #0xa]
	adds r1, #6
	adds r0, r6, #0
	adds r0, #0x8c
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x8d
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0805B302:
	adds r4, r6, #0
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_80051E8
	ldr r0, _0805B3AC @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	adds r2, r6, #0
	adds r2, #0xf6
	str r2, [sp, #0x1c]
	cmp r0, #0
	beq _0805B3CC
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _0805B336
	ldr r1, [sp]
	cmp r1, #1
	ble _0805B336
	ldr r0, _0805B3B4 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0805B34E
_0805B336:
	adds r1, r6, #0
	adds r1, #0xf6
	ldrb r0, [r1]
	str r1, [sp, #0x1c]
	cmp r0, #0
	beq _0805B3EC
	ldr r2, [sp, #0x10]
	cmp r2, #0
	bne _0805B3CC
	ldr r0, [sp]
	cmp r0, #1
	ble _0805B3CC
_0805B34E:
	ldr r7, _0805B3B8 @ =gMultiSioSend
	ldr r0, _0805B3BC @ =0x00004011
	strh r0, [r7]
	mov r1, sp
	ldrb r1, [r1, #8]
	strb r1, [r7, #2]
	ldr r1, _0805B3C0 @ =gLoadedSaveGame
	ldr r0, [r1]
	ldr r0, [r0]
	str r0, [r7, #4]
	adds r0, r6, #0
	adds r0, #0xdc
	ldr r0, [r0]
	str r0, [r7, #0x10]
	movs r2, #0
	ldr r0, _0805B3C4 @ =gUnknown_03005594
	mov r8, r0
	ldr r0, _0805B3C8 @ =gUnknown_030054D8
	mov sb, r0
	adds r4, r6, #0
	adds r4, #0xfc
	adds r5, r1, #0
	adds r3, r7, #0
	adds r3, #8
_0805B37E:
	lsls r0, r2, #1
	ldr r1, [r5]
	adds r1, #0x20
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r3]
	adds r3, #2
	adds r2, #1
	cmp r2, #2
	ble _0805B37E
	mov r1, r8
	ldrb r0, [r1]
	movs r1, #0
	strb r0, [r7, #0xe]
	mov r2, sb
	ldrb r0, [r2]
	strb r0, [r7, #0xf]
	movs r0, #1
	ldr r2, [sp, #0x1c]
	strb r0, [r2]
	strb r1, [r4]
	b _0805B42A
	.align 2, 0
_0805B3AC: .4byte gMultiSioStatusFlags
_0805B3B0: .4byte 0x00000432
_0805B3B4: .4byte gPressedKeys
_0805B3B8: .4byte gMultiSioSend
_0805B3BC: .4byte 0x00004011
_0805B3C0: .4byte gLoadedSaveGame
_0805B3C4: .4byte gUnknown_03005594
_0805B3C8: .4byte gUnknown_030054D8
_0805B3CC:
	ldr r1, [sp, #0x1c]
	ldrb r0, [r1]
	cmp r0, #0
	beq _0805B3EC
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0805B43C @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805B3EC
	adds r1, r6, #0
	adds r1, #0xfc
	movs r0, #1
	strb r0, [r1]
_0805B3EC:
	ldr r7, _0805B440 @ =gMultiSioSend
	ldr r0, _0805B444 @ =0x00004010
	strh r0, [r7]
	ldr r1, _0805B448 @ =gLoadedSaveGame
	ldr r0, [r1]
	ldr r0, [r0]
	str r0, [r7, #4]
	movs r2, #0
	ldr r0, _0805B44C @ =gUnknown_03005594
	mov r8, r0
	ldr r0, _0805B450 @ =gUnknown_030054D8
	mov sb, r0
	adds r4, r1, #0
	adds r3, r7, #0
	adds r3, #8
_0805B40A:
	lsls r0, r2, #1
	ldr r1, [r4]
	adds r1, #0x20
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r3]
	adds r3, #2
	adds r2, #1
	cmp r2, #2
	ble _0805B40A
	mov r1, r8
	ldrb r0, [r1]
	strb r0, [r7, #0xe]
	mov r2, sb
	ldrb r0, [r2]
	strb r0, [r7, #0xf]
_0805B42A:
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805B43C: .4byte gMultiSioStatusFlags
_0805B440: .4byte gMultiSioSend
_0805B444: .4byte 0x00004010
_0805B448: .4byte gLoadedSaveGame
_0805B44C: .4byte gUnknown_03005594
_0805B450: .4byte gUnknown_030054D8

	thumb_func_start sub_805B454
sub_805B454: @ 0x0805B454
	push {r4, r5, lr}
	ldr r5, _0805B4A8 @ =gCurTask
	ldr r0, [r5]
	ldrh r1, [r0, #6]
	ldr r2, _0805B4AC @ =gMultiSioSend
	movs r4, #0
	movs r0, #0
	strh r0, [r2]
	ldr r0, _0805B4B0 @ =IWRAM_START + 0xE8
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bls _0805B4A0
	ldr r0, _0805B4B4 @ =gUnknown_03001954
	strb r4, [r0]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r0, _0805B4B8 @ =gUnknown_03004D80
	strb r4, [r0]
	ldr r1, _0805B4BC @ =gUnknown_03002280
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x20
	strb r0, [r1, #3]
	bl sub_805A1CC
	ldr r0, [r5]
	bl TaskDestroy
_0805B4A0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805B4A8: .4byte gCurTask
_0805B4AC: .4byte gMultiSioSend
_0805B4B0: .4byte IWRAM_START + 0xE8
_0805B4B4: .4byte gUnknown_03001954
_0805B4B8: .4byte gUnknown_03004D80
_0805B4BC: .4byte gUnknown_03002280

	thumb_func_start sub_805B4C0
sub_805B4C0: @ 0x0805B4C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	movs r7, #0
	ldr r0, _0805B52C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov r8, r1
	ldr r0, _0805B530 @ =gUnknown_030054CC
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #2
	bls _0805B568
	movs r3, #0
	ldr r0, _0805B534 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov ip, r0
	cmp r1, #0
	beq _0805B568
	movs r5, #1
	ldr r2, _0805B538 @ =gUnknown_030054D4
_0805B4FA:
	ldr r1, _0805B53C @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805B550
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805B554
	movs r0, #0
	ldr r1, _0805B540 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805B544 @ =gUnknown_03002AE4
	ldr r0, _0805B548 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805B54C @ =gUnknown_03005390
	strb r4, [r0]
	b _0805B7C0
	.align 2, 0
_0805B52C: .4byte gCurTask
_0805B530: .4byte gUnknown_030054CC
_0805B534: .4byte gUnknown_030055B8
_0805B538: .4byte gUnknown_030054D4
_0805B53C: .4byte gMultiSioStatusFlags
_0805B540: .4byte 0x0000FFFF
_0805B544: .4byte gUnknown_03002AE4
_0805B548: .4byte gUnknown_0300287C
_0805B54C: .4byte gUnknown_03005390
_0805B550:
	movs r0, #0
	strb r0, [r2]
_0805B554:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _0805B568
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0805B4FA
_0805B568:
	ldr r6, _0805B5C4 @ =gMultiSioRecv
	ldrb r5, [r6, #2]
	ldrh r1, [r6]
	ldr r0, _0805B5C8 @ =0x00004012
	cmp r1, r0
	beq _0805B576
	b _0805B71C
_0805B576:
	ldr r0, _0805B5CC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	asrs r5, r0
	movs r0, #1
	ands r5, r0
	cmp r5, #0
	bne _0805B5F0
	ldr r0, _0805B5D0 @ =gUnknown_03001954
	strb r5, [r0]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r2, _0805B5D4 @ =gMultiSioSend
	movs r4, #0
	strh r5, [r2]
	ldr r0, _0805B5D8 @ =gUnknown_03004D80
	strb r4, [r0]
	ldr r1, _0805B5DC @ =gUnknown_03002280
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x20
	strb r0, [r1, #3]
	ldr r1, _0805B5E0 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805B5E4 @ =gUnknown_03002AE4
	ldr r0, _0805B5E8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805B5EC @ =gUnknown_03005390
	strb r4, [r0]
	b _0805B7C0
	.align 2, 0
_0805B5C4: .4byte gMultiSioRecv
_0805B5C8: .4byte 0x00004012
_0805B5CC: .4byte 0x04000128
_0805B5D0: .4byte gUnknown_03001954
_0805B5D4: .4byte gMultiSioSend
_0805B5D8: .4byte gUnknown_03004D80
_0805B5DC: .4byte gUnknown_03002280
_0805B5E0: .4byte 0x0000FFFF
_0805B5E4: .4byte gUnknown_03002AE4
_0805B5E8: .4byte gUnknown_0300287C
_0805B5EC: .4byte gUnknown_03005390
_0805B5F0:
	movs r0, #3
	mov r1, sb
	strb r0, [r1]
	movs r4, #3
	ldr r5, _0805B63C @ =gUnknown_03005460
	adds r7, r5, #0
	adds r7, #0x24
	movs r2, #0x24
	mov sl, r2
	ldr r0, _0805B640 @ =gUnknown_03005410
	adds r0, #0xc
	mov sb, r0
	movs r1, #0x3c
	str r1, [sp]
	ldr r2, _0805B644 @ =gUnknown_03005594
	mov r8, r2
_0805B610:
	ldr r0, _0805B648 @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805B6DE
	cmp r4, #0
	bne _0805B674
	ldr r0, _0805B640 @ =gUnknown_03005410
	ldr r1, [r0]
	ldr r0, [r6, #4]
	cmp r1, r0
	bne _0805B64C
	ldrh r0, [r6, #8]
	strh r0, [r5, #6]
	ldrh r0, [r6, #0xa]
	strh r0, [r5, #8]
	ldrh r0, [r6, #0xc]
	strh r0, [r5, #0xa]
	b _0805B650
	.align 2, 0
_0805B63C: .4byte gUnknown_03005460
_0805B640: .4byte gUnknown_03005410
_0805B644: .4byte gUnknown_03005594
_0805B648: .4byte gUnknown_030055B8
_0805B64C:
	ldr r0, _0805B66C @ =0x0000FFFF
	strh r0, [r5]
_0805B650:
	mov r1, r8
	ldrb r0, [r1]
	ldrb r1, [r6, #0xe]
	orrs r0, r1
	mov r2, r8
	strb r0, [r2]
	ldr r2, _0805B670 @ =gUnknown_030054D8
	ldrb r1, [r6, #0xf]
	ldrb r0, [r2]
	cmp r0, r1
	bhs _0805B6C8
	strb r1, [r2]
	b _0805B6C8
	.align 2, 0
_0805B66C: .4byte 0x0000FFFF
_0805B670: .4byte gUnknown_030054D8
_0805B674:
	ldr r0, _0805B6A4 @ =gMultiSioRecv
	ldr r1, [sp]
	adds r2, r1, r0
	ldrh r1, [r2]
	ldr r0, _0805B6A8 @ =0x00004011
	cmp r1, r0
	bne _0805B6C8
	mov r0, sb
	ldr r1, [r0]
	ldr r0, [r2, #4]
	cmp r1, r0
	bne _0805B6AC
	adds r0, r5, #6
	add r0, sl
	ldrh r1, [r2, #8]
	strh r1, [r0]
	adds r0, r5, #0
	adds r0, #8
	add r0, sl
	ldrh r1, [r2, #0xa]
	strh r1, [r0]
	ldrh r0, [r2, #0xc]
	strh r0, [r7, #0xa]
	b _0805B6B0
	.align 2, 0
_0805B6A4: .4byte gMultiSioRecv
_0805B6A8: .4byte 0x00004011
_0805B6AC:
	ldr r0, _0805B70C @ =0x0000FFFF
	strh r0, [r7]
_0805B6B0:
	mov r1, r8
	ldrb r0, [r1]
	ldrb r1, [r2, #0xe]
	orrs r0, r1
	mov r1, r8
	strb r0, [r1]
	ldr r3, _0805B710 @ =gUnknown_030054D8
	ldrb r1, [r2, #0xf]
	ldrb r0, [r3]
	cmp r0, r1
	bhs _0805B6C8
	strb r1, [r3]
_0805B6C8:
	ldr r0, _0805B714 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r4, r0
	beq _0805B6DE
	mov r2, sb
	ldr r0, [r2]
	adds r1, r7, #0
	bl sub_8071590
_0805B6DE:
	subs r7, #0xc
	movs r0, #0xc
	rsbs r0, r0, #0
	add sl, r0
	movs r1, #4
	rsbs r1, r1, #0
	add sb, r1
	ldr r2, [sp]
	subs r2, #0x14
	str r2, [sp]
	subs r4, #1
	cmp r4, #0
	bge _0805B610
	bl WriteSaveGame
	ldr r0, _0805B718 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	movs r0, #0
	bl sub_805BA10
	b _0805B966
	.align 2, 0
_0805B70C: .4byte 0x0000FFFF
_0805B710: .4byte gUnknown_030054D8
_0805B714: .4byte 0x04000128
_0805B718: .4byte gCurTask
_0805B71C:
	ldr r0, _0805B768 @ =0x00004010
	cmp r1, r0
	bne _0805B78C
	ldr r1, _0805B76C @ =gUnknown_03001954
	movs r0, #0
	strb r0, [r1]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r0, _0805B770 @ =gMultiSioSend
	mov sl, r0
	movs r4, #0
	movs r0, #0
	mov r1, sl
	strh r0, [r1]
	ldr r0, _0805B774 @ =gUnknown_03004D80
	strb r4, [r0]
	ldr r1, _0805B778 @ =gUnknown_03002280
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #0xff
	strb r0, [r1, #2]
	movs r0, #0x20
	strb r0, [r1, #3]
	ldr r1, _0805B77C @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805B780 @ =gUnknown_03002AE4
	ldr r0, _0805B784 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805B788 @ =gUnknown_03005390
	strb r4, [r0]
	b _0805B7C0
	.align 2, 0
_0805B768: .4byte 0x00004010
_0805B76C: .4byte gUnknown_03001954
_0805B770: .4byte gMultiSioSend
_0805B774: .4byte gUnknown_03004D80
_0805B778: .4byte gUnknown_03002280
_0805B77C: .4byte 0x0000FFFF
_0805B780: .4byte gUnknown_03002AE4
_0805B784: .4byte gUnknown_0300287C
_0805B788: .4byte gUnknown_03005390
_0805B78C:
	ldr r0, _0805B7D0 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805B7EC
	mov r2, r8
	adds r2, #0xfb
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bls _0805B7EC
	ldr r1, _0805B7D4 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805B7D8 @ =gUnknown_03002AE4
	ldr r0, _0805B7DC @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805B7E0 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
_0805B7C0:
	ldr r1, _0805B7E4 @ =gUnknown_03004D5C
	ldr r0, _0805B7E8 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805B966
	.align 2, 0
_0805B7D0: .4byte gMultiSioStatusFlags
_0805B7D4: .4byte 0x0000FFFF
_0805B7D8: .4byte gUnknown_03002AE4
_0805B7DC: .4byte gUnknown_0300287C
_0805B7E0: .4byte gUnknown_03005390
_0805B7E4: .4byte gUnknown_03004D5C
_0805B7E8: .4byte gUnknown_03002A84
_0805B7EC:
	movs r4, #0
	mov r3, r8
	adds r3, #0xee
_0805B7F2:
	adds r2, r3, r4
	ldrb r1, [r2]
	lsls r0, r1, #1
	strb r0, [r2]
	lsls r1, r1, #0x19
	cmp r1, #0
	beq _0805B802
	adds r7, #1
_0805B802:
	adds r4, #1
	cmp r4, #3
	ble _0805B7F2
	cmp r7, #0
	bne _0805B80E
	movs r7, #1
_0805B80E:
	cmp r7, #1
	ble _0805B836
	mov r4, r8
	adds r4, #0x6c
	ldr r0, _0805B8F8 @ =0x00000432
	strh r0, [r4, #0xa]
	adds r1, r7, #6
	mov r0, r8
	adds r0, #0x8c
	strb r1, [r0]
	mov r1, r8
	adds r1, #0x8d
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0805B836:
	ldr r0, _0805B8FC @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805B92A
	ldr r2, _0805B900 @ =gMultiSioSend
	mov sl, r2
	ldr r0, _0805B904 @ =0x00004012
	strh r0, [r2]
	strb r5, [r2, #2]
	ldr r1, _0805B908 @ =gLoadedSaveGame
	ldr r0, [r1]
	ldr r0, [r0]
	str r0, [r2, #4]
	ldr r0, _0805B90C @ =gUnknown_030055B8
	mov ip, r0
	ldr r5, _0805B910 @ =gUnknown_03005594
	ldr r6, _0805B914 @ =gUnknown_030054D8
	movs r2, #8
	add r2, sl
	mov sb, r2
	movs r4, #6
	movs r3, #2
_0805B866:
	ldr r0, [r1]
	adds r0, #0x20
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r4, #2
	adds r2, #2
	subs r3, #1
	cmp r3, #0
	bge _0805B866
	ldrb r0, [r5]
	mov r1, sl
	strb r0, [r1, #0xe]
	ldrb r0, [r6]
	strb r0, [r1, #0xf]
	movs r4, #0
	movs r6, #1
	ldr r7, _0805B8FC @ =gMultiSioStatusFlags
	ldr r2, _0805B918 @ =0x00004011
	mov r8, r2
	movs r5, #0
_0805B890:
	movs r3, #0
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r4
	ands r0, r6
	cmp r0, #0
	bne _0805B8AC
	adds r1, r6, #0
	lsls r1, r4
	ldr r0, [r7]
	ands r0, r1
	cmp r0, #0
	beq _0805B920
	movs r3, #1
_0805B8AC:
	cmp r4, #0
	beq _0805B920
	cmp r3, #0
	bne _0805B8D6
	adds r1, r6, #0
	lsls r1, r4
	ldr r0, [r7]
	ands r0, r1
	cmp r0, #0
	bne _0805B8C2
	movs r3, #1
_0805B8C2:
	cmp r3, #0
	bne _0805B8D6
	ldr r0, _0805B91C @ =gMultiSioRecv
	adds r2, r5, r0
	ldrh r0, [r2]
	cmp r0, r8
	beq _0805B8D2
	movs r3, #1
_0805B8D2:
	cmp r3, #0
	beq _0805B920
_0805B8D6:
	mov r0, r8
	mov r2, sl
	strh r0, [r2]
	movs r3, #0
	ldr r4, _0805B908 @ =gLoadedSaveGame
	mov r2, sb
_0805B8E2:
	lsls r0, r3, #1
	ldr r1, [r4]
	adds r1, #0x20
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2]
	adds r2, #2
	adds r3, #1
	cmp r3, #2
	ble _0805B8E2
	b _0805B966
	.align 2, 0
_0805B8F8: .4byte 0x00000432
_0805B8FC: .4byte gMultiSioStatusFlags
_0805B900: .4byte gMultiSioSend
_0805B904: .4byte 0x00004012
_0805B908: .4byte gLoadedSaveGame
_0805B90C: .4byte gUnknown_030055B8
_0805B910: .4byte gUnknown_03005594
_0805B914: .4byte gUnknown_030054D8
_0805B918: .4byte 0x00004011
_0805B91C: .4byte gMultiSioRecv
_0805B920:
	adds r5, #0x14
	adds r4, #1
	cmp r4, #3
	ble _0805B890
	b _0805B966
_0805B92A:
	ldr r1, _0805B978 @ =gMultiSioSend
	mov sl, r1
	ldr r0, _0805B97C @ =0x00004011
	strh r0, [r1]
	strb r5, [r1, #2]
	ldr r1, _0805B980 @ =gLoadedSaveGame
	ldr r0, [r1]
	ldr r0, [r0]
	mov r2, sl
	str r0, [r2, #4]
	ldr r5, _0805B984 @ =gUnknown_03005594
	ldr r6, _0805B988 @ =gUnknown_030054D8
	movs r4, #6
	adds r2, #8
	movs r3, #2
_0805B948:
	ldr r0, [r1]
	adds r0, #0x20
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r2]
	adds r4, #2
	adds r2, #2
	subs r3, #1
	cmp r3, #0
	bge _0805B948
	ldrb r0, [r5]
	mov r1, sl
	strb r0, [r1, #0xe]
	ldrb r0, [r6]
	strb r0, [r1, #0xf]
_0805B966:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805B978: .4byte gMultiSioSend
_0805B97C: .4byte 0x00004011
_0805B980: .4byte gLoadedSaveGame
_0805B984: .4byte gUnknown_03005594
_0805B988: .4byte gUnknown_030054D8

	thumb_func_start sub_805B98C
sub_805B98C: @ 0x0805B98C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0xc
	bl sub_80051E8
	adds r0, r4, #0
	adds r0, #0x3c
	bl sub_80051E8
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_805B9A4
sub_805B9A4: @ 0x0805B9A4
	push {lr}
	bl m4aMPlayAllStop
	ldr r2, _0805B9F0 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r1, _0805B9F4 @ =gDispCnt
	movs r0, #0x40
	strh r0, [r1]
	ldr r1, _0805B9F8 @ =gUnknown_03001954
	movs r0, #0
	strb r0, [r1]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r1, _0805B9FC @ =gUnknown_03002260
	ldr r0, _0805BA00 @ =gUnknown_080D5CE4
	str r0, [r1]
	ldr r1, _0805BA04 @ =gUnknown_03002794
	ldr r0, _0805BA08 @ =gUnknown_080F40D4
	str r0, [r1]
	ldr r1, _0805BA0C @ =gUnknown_030054D4
	movs r0, #0
	strb r0, [r1]
	strb r0, [r1, #1]
	strb r0, [r1, #2]
	strb r0, [r1, #3]
	movs r0, #1
	bl sub_805BA10
	pop {r0}
	bx r0
	.align 2, 0
_0805B9F0: .4byte gFlags
_0805B9F4: .4byte gDispCnt
_0805B9F8: .4byte gUnknown_03001954
_0805B9FC: .4byte gUnknown_03002260
_0805BA00: .4byte gMapHeaders
_0805BA04: .4byte gUnknown_03002794
_0805BA08: .4byte gUnknown_080F40D4
_0805BA0C: .4byte gUnknown_030054D4

	thumb_func_start sub_805BA10
sub_805BA10: @ 0x0805BA10
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r1, _0805BBD4 @ =gDispCnt
	movs r2, #0xc5
	lsls r2, r2, #6
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _0805BBD8 @ =gBgCntRegs
	movs r4, #0
	ldr r0, _0805BBDC @ =0x00000803
	strh r0, [r1]
	ldr r1, _0805BBE0 @ =gBgScrollRegs
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	strh r4, [r1, #2]
	ldr r1, _0805BBE4 @ =gWinRegs
	movs r0, #0xf0
	strh r0, [r1]
	movs r0, #0xa0
	strh r0, [r1, #4]
	movs r0, #0x31
	strh r0, [r1, #8]
	strh r0, [r1, #0xa]
	ldr r1, _0805BBE8 @ =gBldRegs
	movs r0, #0xbf
	strh r0, [r1]
	movs r0, #0x10
	strh r0, [r1, #4]
	ldr r0, _0805BBEC @ =sub_805BC40
	movs r1, #0x87
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #6
	str r4, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov ip, r0
	ldr r6, _0805BBF0 @ =IWRAM_START + 0x203
	adds r0, r1, r6
	mov r2, sb
	strb r2, [r0]
	subs r6, #3
	adds r2, r1, r6
	movs r0, #0x78
	strh r0, [r2]
	ldr r0, _0805BBF4 @ =IWRAM_START + 0x1FC
	adds r1, r1, r0
	str r4, [r1]
	movs r1, #0
	movs r3, #0
	ldr r0, _0805BBF8 @ =gUnknown_030055B8
	ldrb r2, [r0]
	movs r4, #1
_0805BA94:
	adds r0, r2, #0
	asrs r0, r1
	ands r0, r4
	cmp r0, #0
	beq _0805BAA4
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_0805BAA4:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #3
	bls _0805BA94
	ldr r0, _0805BBFC @ =0x00000206
	add r0, ip
	movs r2, #0
	strb r3, [r0]
	movs r7, #0x80
	lsls r7, r7, #1
	add r7, ip
	movs r3, #0x78
	strh r3, [r7, #0x16]
	movs r0, #0x8c
	strh r0, [r7, #0x18]
	ldr r0, _0805BC00 @ =0x06010000
	str r0, [r7, #4]
	movs r1, #0xf0
	lsls r1, r1, #2
	strh r1, [r7, #0x1a]
	strh r2, [r7, #8]
	ldr r0, _0805BC04 @ =0x00000432
	strh r0, [r7, #0xa]
	mov r1, sb
	adds r1, #6
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	strb r1, [r0]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	ldr r1, _0805BC08 @ =0x00000121
	add r1, ip
	movs r0, #0xff
	strb r0, [r1]
	adds r0, #0x23
	add r0, ip
	movs r5, #0x10
	strb r5, [r0]
	ldr r0, _0805BC0C @ =0x00000125
	add r0, ip
	movs r6, #0
	strb r6, [r0]
	movs r4, #0x80
	lsls r4, r4, #6
	str r4, [r7, #0x10]
	mov r7, ip
	adds r7, #0xd0
	strh r3, [r7, #0x16]
	movs r0, #0x24
	strh r0, [r7, #0x18]
	ldr r0, _0805BC10 @ =0x06012000
	str r0, [r7, #4]
	movs r0, #0xf0
	lsls r0, r0, #2
	strh r0, [r7, #0x1a]
	strh r2, [r7, #8]
	ldr r1, _0805BC14 @ =gUnknown_080D9088
	mov r8, r1
	mov r6, sb
	lsls r0, r6, #1
	add r0, r8
	ldrh r0, [r0]
	mov r8, r0
	strh r0, [r7, #0xa]
	ldr r0, _0805BC18 @ =gUnknown_080D908C
	add r0, sb
	ldrb r1, [r0]
	mov r0, ip
	adds r0, #0xf0
	strb r1, [r0]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	movs r0, #0xf1
	add r0, ip
	movs r6, #1
	rsbs r6, r6, #0
	strb r6, [r0]
	mov r0, ip
	adds r0, #0xf2
	strb r5, [r0]
	movs r6, #0xf5
	add r6, ip
	movs r0, #0
	strb r0, [r6]
	str r4, [r7, #0x10]
	subs r7, #0x30
	strh r3, [r7, #0x16]
	strh r3, [r7, #0x18]
	ldr r0, _0805BC1C @ =0x06014000
	str r0, [r7, #4]
	movs r6, #0xf0
	lsls r6, r6, #2
	strh r6, [r7, #0x1a]
	strh r2, [r7, #8]
	mov r0, r8
	strh r0, [r7, #0xa]
	mov r0, ip
	adds r0, #0xc0
	strb r1, [r0]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	mov r1, ip
	adds r1, #0xc1
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	mov r0, ip
	adds r0, #0xc2
	strb r5, [r0]
	adds r0, #3
	movs r1, #0
	strb r1, [r0]
	str r4, [r7, #0x10]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	mov r6, ip
	str r0, [r6, #4]
	strh r2, [r6, #0xa]
	ldr r0, _0805BC20 @ =0x06004000
	str r0, [r6, #0xc]
	strh r2, [r6, #0x18]
	strh r2, [r6, #0x1a]
	strh r2, [r6, #0x1e]
	strh r2, [r6, #0x20]
	strh r2, [r6, #0x22]
	strh r2, [r6, #0x24]
	movs r0, #0x1e
	strh r0, [r6, #0x26]
	movs r0, #0x14
	strh r0, [r6, #0x28]
	mov r0, ip
	adds r0, #0x2a
	strb r1, [r0]
	strh r2, [r6, #0x2e]
	movs r0, #0x73
	strh r0, [r6, #0x1c]
	mov r0, ip
	bl sub_8002A3C
	bl m4aMPlayAllStop
	mov r0, sb
	cmp r0, #0
	beq _0805BC24
	movs r0, #0xcf
	lsls r0, r0, #1
	bl m4aSongNumStart
	b _0805BC2A
	.align 2, 0
_0805BBD4: .4byte gDispCnt
_0805BBD8: .4byte gBgCntRegs
_0805BBDC: .4byte 0x00000803
_0805BBE0: .4byte gBgScrollRegs
_0805BBE4: .4byte gWinRegs
_0805BBE8: .4byte gBldRegs
_0805BBEC: .4byte sub_805BC40
_0805BBF0: .4byte IWRAM_START + 0x203
_0805BBF4: .4byte IWRAM_START + 0x1FC
_0805BBF8: .4byte gUnknown_030055B8
_0805BBFC: .4byte 0x00000206
_0805BC00: .4byte 0x06010000
_0805BC04: .4byte 0x00000432
_0805BC08: .4byte 0x00000121
_0805BC0C: .4byte 0x00000125
_0805BC10: .4byte 0x06012000
_0805BC14: .4byte gUnknown_080D9088
_0805BC18: .4byte gUnknown_080D908C
_0805BC1C: .4byte 0x06014000
_0805BC20: .4byte 0x06004000
_0805BC24:
	ldr r0, _0805BC3C @ =0x0000019D
	bl m4aSongNumStart
_0805BC2A:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805BC3C: .4byte 0x0000019D

	thumb_func_start sub_805BC40
sub_805BC40: @ 0x0805BC40
	push {r4, r5, r6, r7, lr}
	ldr r0, _0805BCB0 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r5, r0
	adds r0, #0xa0
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	ldr r1, _0805BCB4 @ =IWRAM_START + 0x203
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805BCD0
	ldr r2, _0805BCB8 @ =IWRAM_START + 0x206
	adds r0, r5, r2
	ldrb r3, [r0]
	ldr r0, _0805BCBC @ =IWRAM_START + 0xD0
	adds r4, r5, r0
	ldr r2, _0805BCC0 @ =gUnknown_080D9090
	ldr r0, _0805BCC4 @ =gLoadedSaveGame
	ldr r1, [r0]
	ldrb r0, [r1, #6]
	adds r0, #7
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrh r0, [r0, #4]
	strh r0, [r4, #0xa]
	ldrb r0, [r1, #6]
	adds r0, #7
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r0, [r0, #6]
	adds r0, r0, r3
	subs r0, #2
	ldr r2, _0805BCC8 @ =IWRAM_START + 0xF0
	adds r1, r5, r2
	strb r0, [r1]
	ldr r0, _0805BCCC @ =IWRAM_START + 0xF1
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	b _0805BD06
	.align 2, 0
_0805BCB0: .4byte gCurTask
_0805BCB4: .4byte IWRAM_START + 0x203
_0805BCB8: .4byte IWRAM_START + 0x206
_0805BCBC: .4byte IWRAM_START + 0xD0
_0805BCC0: .4byte gUnknown_080D9090
_0805BCC4: .4byte gLoadedSaveGame
_0805BCC8: .4byte IWRAM_START + 0xF0
_0805BCCC: .4byte IWRAM_START + 0xF1
_0805BCD0:
	ldr r1, _0805BD38 @ =IWRAM_START + 0xD0
	adds r4, r5, r1
	ldr r2, _0805BD3C @ =gUnknown_080D9090
	ldr r0, _0805BD40 @ =gLoadedSaveGame
	ldr r1, [r0]
	ldrb r0, [r1, #6]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrh r0, [r0, #4]
	strh r0, [r4, #0xa]
	ldrb r0, [r1, #6]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r1, [r0, #6]
	ldr r2, _0805BD44 @ =IWRAM_START + 0xF0
	adds r0, r5, r2
	strb r1, [r0]
	ldr r0, _0805BD48 @ =IWRAM_START + 0xF1
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_0805BD06:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r0, [r1]
	adds r6, r0, #0
	cmp r6, #0
	beq _0805BD50
	subs r0, #1
	strh r0, [r1]
	ldr r1, _0805BD4C @ =gBldRegs
	ldrh r0, [r1, #4]
	cmp r0, #0
	beq _0805BDD8
	subs r0, #1
	strh r0, [r1, #4]
	b _0805BDD8
	.align 2, 0
_0805BD38: .4byte IWRAM_START + 0xD0
_0805BD3C: .4byte gUnknown_080D9090
_0805BD40: .4byte gLoadedSaveGame
_0805BD44: .4byte IWRAM_START + 0xF0
_0805BD48: .4byte IWRAM_START + 0xF1
_0805BD4C: .4byte gBldRegs
_0805BD50:
	ldr r1, _0805BD60 @ =gBldRegs
	ldrh r0, [r1, #4]
	adds r5, r0, #0
	cmp r5, #0x10
	beq _0805BD64
	adds r0, #1
	strh r0, [r1, #4]
	b _0805BDD8
	.align 2, 0
_0805BD60: .4byte gBldRegs
_0805BD64:
	ldr r1, _0805BD9C @ =0x00000203
	adds r0, r7, r1
	ldrb r4, [r0]
	ldr r1, _0805BDA0 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805BDA4 @ =gUnknown_03002AE4
	ldr r0, _0805BDA8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805BDAC @ =gUnknown_03005390
	strb r6, [r0]
	ldr r1, _0805BDB0 @ =gUnknown_03004D5C
	ldr r0, _0805BDB4 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	cmp r4, #0
	bne _0805BDC0
	ldr r0, _0805BDB8 @ =gUnknown_030054F0
	ldrb r0, [r0]
	ldr r1, _0805BDBC @ =gUnknown_03005594
	ldrb r1, [r1]
	ands r5, r1
	adds r1, r5, #0
	bl sub_803143C
	b _0805BDD8
	.align 2, 0
_0805BD9C: .4byte 0x00000203
_0805BDA0: .4byte 0x0000FFFF
_0805BDA4: .4byte gUnknown_03002AE4
_0805BDA8: .4byte gUnknown_0300287C
_0805BDAC: .4byte gUnknown_03005390
_0805BDB0: .4byte gUnknown_03004D5C
_0805BDB4: .4byte gUnknown_03002A84
_0805BDB8: .4byte gUnknown_030054F0
_0805BDBC: .4byte gUnknown_03005594
_0805BDC0:
	ldr r0, _0805BDE0 @ =gUnknown_03001954
	strb r6, [r0]
	bl MultiSioStop
	movs r0, #0
	bl MultiSioInit
	ldr r1, _0805BDE4 @ =gUnknown_03002260
	ldr r0, _0805BDE8 @ =gMapHeaders
	str r0, [r1]
	bl sub_808D41C_CreateTitleScreenSkipIntro
_0805BDD8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805BDE0: .4byte gUnknown_03001954
_0805BDE4: .4byte gUnknown_03002260
_0805BDE8: .4byte gMapHeaders

	thumb_func_start sub_805BDEC
sub_805BDEC: @ 0x0805BDEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #0
	mov r8, r0
	ldr r0, _0805BE8C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r4, [r0, #6]
	ldr r0, _0805BE90 @ =gWinRegs
	movs r2, #0
	mov r1, r8
	strh r1, [r0, #8]
	strh r1, [r0, #0xa]
	strh r1, [r0]
	strh r1, [r0, #4]
	strh r1, [r0, #2]
	strh r1, [r0, #6]
	ldr r0, _0805BE94 @ =gDispCnt
	movs r3, #0x40
	strh r3, [r0]
	ldr r1, _0805BE98 @ =gBgCntRegs
	ldr r0, _0805BE9C @ =0x00005E0B
	strh r0, [r1, #6]
	ldr r0, _0805BEA0 @ =gBldRegs
	mov r1, r8
	strh r1, [r0]
	strh r1, [r0, #4]
	ldr r0, _0805BEA4 @ =gUnknown_030054D4
	strb r2, [r0, #3]
	strb r2, [r0, #2]
	strb r2, [r0, #1]
	strb r2, [r0]
	ldr r0, _0805BEA8 @ =gUnknown_03004D80
	strb r2, [r0, #3]
	ldr r0, _0805BEAC @ =gUnknown_03002280
	strb r2, [r0, #0xc]
	strb r2, [r0, #0xd]
	movs r1, #0xff
	strb r1, [r0, #0xe]
	strb r3, [r0, #0xf]
	mov r2, r8
	str r2, [sp, #4]
	ldr r1, _0805BEB0 @ =0x040000D4
	add r3, sp, #4
	str r3, [r1]
	ldr r0, _0805BEB4 @ =0x06009FE0
	str r0, [r1, #4]
	ldr r0, _0805BEB8 @ =0x85000010
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _0805BEBC @ =sub_805C0F0
	movs r1, #0x82
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #6
	mov r3, r8
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r5, r0, r1
	ldr r1, _0805BEC0 @ =IWRAM_START + 0x200
	adds r0, r0, r1
	mov r2, r8
	strh r2, [r0]
	movs r6, #0
	ldr r2, _0805BEC4 @ =gUnknown_030055B8
	ldrb r0, [r2]
	movs r1, #1
	b _0805BED2
	.align 2, 0
_0805BE8C: .4byte gLoadedSaveGame
_0805BE90: .4byte gWinRegs
_0805BE94: .4byte gDispCnt
_0805BE98: .4byte gBgCntRegs
_0805BE9C: .4byte 0x00005E0B
_0805BEA0: .4byte gBldRegs
_0805BEA4: .4byte gUnknown_030054D4
_0805BEA8: .4byte gUnknown_03004D80
_0805BEAC: .4byte gUnknown_03002280
_0805BEB0: .4byte 0x040000D4
_0805BEB4: .4byte 0x06009FE0
_0805BEB8: .4byte 0x85000010
_0805BEBC: .4byte sub_805C0F0
_0805BEC0: .4byte IWRAM_START + 0x200
_0805BEC4: .4byte gUnknown_030055B8
_0805BEC8:
	adds r6, #1
	cmp r6, #3
	bhi _0805BED8
	ldrb r0, [r2]
	asrs r0, r6
_0805BED2:
	ands r0, r1
	cmp r0, #0
	bne _0805BEC8
_0805BED8:
	ldr r3, _0805BEFC @ =0x00000202
	adds r0, r5, r3
	strb r6, [r0]
	ldr r1, _0805BF00 @ =0x00000203
	adds r0, r5, r1
	mov r2, sp
	ldrb r2, [r2, #8]
	strb r2, [r0]
	ldr r3, [sp, #8]
	cmp r3, #0
	beq _0805BF04
	movs r0, #0x81
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #0xde
	strb r0, [r1]
	b _0805BF10
	.align 2, 0
_0805BEFC: .4byte 0x00000202
_0805BF00: .4byte 0x00000203
_0805BF04:
	movs r1, #0x81
	lsls r1, r1, #2
	adds r0, r5, r1
	mov r2, sp
	ldrb r2, [r2, #8]
	strb r2, [r0]
_0805BF10:
	ldr r0, _0805BFD8 @ =0x06008000
	str r0, [r5, #4]
	movs r3, #0
	movs r1, #0
	strh r1, [r5, #0xa]
	ldr r0, _0805BFDC @ =0x0600F000
	str r0, [r5, #0xc]
	strh r1, [r5, #0x18]
	strh r1, [r5, #0x1a]
	ldr r2, _0805BFE0 @ =gUnknown_080D92A8
	lsls r0, r4, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r5, #0x1c]
	strh r1, [r5, #0x1e]
	strh r1, [r5, #0x20]
	strh r1, [r5, #0x22]
	strh r1, [r5, #0x24]
	movs r0, #0x1e
	strh r0, [r5, #0x26]
	movs r0, #0x20
	strh r0, [r5, #0x28]
	adds r0, r5, #0
	adds r0, #0x2a
	strb r3, [r0]
	movs r0, #3
	strh r0, [r5, #0x2e]
	adds r0, r5, #0
	bl sub_8002A3C
	mov r3, r8
	cmp r3, #3
	bhi _0805BF7A
	ldr r2, _0805BFE4 @ =gUnknown_030054B4
	adds r0, r3, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _0805BF7A
_0805BF64:
	movs r0, #1
	add r8, r0
	mov r3, r8
	cmp r3, #3
	bhi _0805BF7A
	adds r0, r3, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	bne _0805BF64
_0805BF7A:
	movs r6, #0
	movs r7, #0
	ldr r1, _0805BFE8 @ =gUnknown_080D9100
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #3
	adds r4, r0, r1
	movs r0, #0
	mov sl, r0
	mov sb, r0
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [sp, #0xc]
_0805BF94:
	ldr r0, _0805BFEC @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0805BFA4
	b _0805C0B0
_0805BFA4:
	mov r0, sl
	adds r0, #0x80
	adds r2, r5, r0
	movs r0, #0xc8
	strh r0, [r2, #0x16]
	mov r0, sb
	adds r0, #0x33
	strh r0, [r2, #0x18]
	lsls r0, r6, #0xb
	ldr r3, _0805BFF0 @ =0x06010000
	adds r0, r0, r3
	str r0, [r2, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r2, #0x1a]
	strh r7, [r2, #8]
	ldr r0, _0805BFE4 @ =gUnknown_030054B4
	adds r0, r6, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #5
	bne _0805BFF4
	ldrh r0, [r4, #0xc]
	strh r0, [r2, #0xa]
	ldrb r1, [r4, #0xe]
	b _0805BFFE
	.align 2, 0
_0805BFD8: .4byte 0x06008000
_0805BFDC: .4byte 0x0600F000
_0805BFE0: .4byte gUnknown_080D92A8
_0805BFE4: .4byte gUnknown_030054B4
_0805BFE8: .4byte gUnknown_080D9100
_0805BFEC: .4byte gUnknown_030055B8
_0805BFF0: .4byte 0x06010000
_0805BFF4:
	cmp r1, #4
	bne _0805C006
	ldrh r0, [r4, #0x14]
	strh r0, [r2, #0xa]
	ldrb r1, [r4, #0x16]
_0805BFFE:
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	b _0805C02E
_0805C006:
	mov r0, r8
	cmp r0, #2
	beq _0805C014
	ldr r0, _0805C01C @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #4
	bne _0805C020
_0805C014:
	ldrh r0, [r4, #4]
	strh r0, [r2, #0xa]
	ldrb r0, [r4, #6]
	b _0805C026
	.align 2, 0
_0805C01C: .4byte gUnknown_030054CC
_0805C020:
	ldrh r0, [r4, #0x1c]
	strh r0, [r2, #0xa]
	ldrb r0, [r4, #0x1e]
_0805C026:
	adds r0, r0, r1
	adds r1, r2, #0
	adds r1, #0x20
	strb r0, [r1]
_0805C02E:
	strh r7, [r2, #0x14]
	strh r7, [r2, #0x1c]
	adds r1, r2, #0
	adds r1, #0x21
	ldrb r0, [r1]
	movs r3, #0xff
	orrs r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	strb r7, [r0]
	movs r3, #0x80
	lsls r3, r3, #5
	str r3, [r2, #0x10]
	adds r0, r2, #0
	bl sub_8004558
	movs r0, #0xa0
	lsls r0, r0, #1
	add r0, sl
	adds r2, r5, r0
	strh r7, [r2, #0x16]
	mov r0, sb
	adds r0, #0x1f
	strh r0, [r2, #0x18]
	ldr r1, [sp, #0xc]
	ldr r3, _0805C0E8 @ =0x06010000
	adds r0, r1, r3
	str r0, [r2, #4]
	movs r0, #0x80
	lsls r0, r0, #3
	strh r0, [r2, #0x1a]
	strh r7, [r2, #8]
	ldr r0, _0805C0EC @ =gUnknown_080D9288
	lsls r1, r6, #3
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	strh r7, [r2, #0x14]
	strh r7, [r2, #0x1c]
	adds r1, r2, #0
	adds r1, #0x21
	ldrb r0, [r1]
	movs r3, #0xff
	orrs r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x22
	movs r1, #0x10
	strb r1, [r0]
	adds r0, #3
	strb r7, [r0]
	movs r3, #0x80
	lsls r3, r3, #5
	str r3, [r2, #0x10]
	adds r0, r2, #0
	bl sub_8004558
_0805C0B0:
	movs r0, #0x30
	add sl, r0
	movs r1, #0x20
	add sb, r1
	ldr r2, [sp, #0xc]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r2, r2, r3
	str r2, [sp, #0xc]
	adds r6, #1
	cmp r6, #3
	bhi _0805C0CA
	b _0805BF94
_0805C0CA:
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0805C0D6
	movs r0, #0x3b
	bl m4aSongNumStart
_0805C0D6:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805C0E8: .4byte 0x06010000
_0805C0EC: .4byte gUnknown_080D9288

	thumb_func_start sub_805C0F0
sub_805C0F0: @ 0x0805C0F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _0805C168 @ =gUnknown_03001884
	ldr r3, [r0]
	ldr r2, _0805C16C @ =gDispCnt
	ldrh r0, [r2]
	movs r4, #0xc0
	lsls r4, r4, #5
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0805C170 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805C1B0
	movs r5, #0
	ldr r0, _0805C174 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	mov sl, r0
	cmp r1, #0
	beq _0805C1B0
	movs r6, #1
	ldr r2, _0805C178 @ =gUnknown_030054D4
_0805C12A:
	ldr r1, _0805C17C @ =gMultiSioStatusFlags
	adds r0, r6, #0
	lsls r0, r5
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805C198
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805C19C
	movs r0, #0
	ldr r1, _0805C180 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805C184 @ =gUnknown_03002AE4
	ldr r0, _0805C188 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805C18C @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0805C190 @ =gUnknown_03004D5C
	ldr r0, _0805C194 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805C2FA
	.align 2, 0
_0805C168: .4byte gUnknown_03001884
_0805C16C: .4byte gDispCnt
_0805C170: .4byte gUnknown_030054CC
_0805C174: .4byte gUnknown_030055B8
_0805C178: .4byte gUnknown_030054D4
_0805C17C: .4byte gMultiSioStatusFlags
_0805C180: .4byte 0x0000FFFF
_0805C184: .4byte gUnknown_03002AE4
_0805C188: .4byte gUnknown_0300287C
_0805C18C: .4byte gUnknown_03005390
_0805C190: .4byte gUnknown_03004D5C
_0805C194: .4byte gUnknown_03002A84
_0805C198:
	movs r0, #0
	strb r0, [r2]
_0805C19C:
	adds r2, #1
	adds r5, #1
	cmp r5, #3
	bhi _0805C1B0
	mov r1, sl
	ldrb r0, [r1]
	asrs r0, r5
	ands r0, r6
	cmp r0, #0
	bne _0805C12A
_0805C1B0:
	ldr r0, _0805C1E0 @ =gCurTask
	ldr r5, [r0]
	ldrh r6, [r5, #6]
	ldr r2, _0805C1E4 @ =IWRAM_START + 0x200
	adds r4, r6, r2
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r1, #0
	ldrh r1, [r4]
	adds r2, r0, r1
	strh r2, [r4]
	lsls r1, r2, #0x10
	movs r0, #0xf0
	lsls r0, r0, #0x18
	cmp r1, r0
	bls _0805C1EC
	movs r0, #0
	strh r0, [r4]
	ldr r0, _0805C1E8 @ =sub_805C30C
	str r0, [r5, #8]
	bl _call_via_r0
	b _0805C2FA
	.align 2, 0
_0805C1E0: .4byte gCurTask
_0805C1E4: .4byte IWRAM_START + 0x200
_0805C1E8: .4byte sub_805C30C
_0805C1EC:
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x18
	mov ip, r0
	ldr r1, _0805C264 @ =gFlags
	ldr r0, [r1]
	movs r2, #4
	orrs r0, r2
	str r0, [r1]
	ldr r1, _0805C268 @ =gUnknown_03002878
	ldr r0, _0805C26C @ =0x0400001C
	str r0, [r1]
	ldr r0, _0805C270 @ =gUnknown_03002A80
	strb r2, [r0]
	movs r1, #0
	movs r4, #0
	ldr r2, _0805C274 @ =gUnknown_030055B8
	mov sl, r2
	movs r5, #0
	ldr r0, _0805C278 @ =IWRAM_START + 0x204
	adds r2, r6, r0
_0805C214:
	strh r5, [r3]
	adds r3, #2
	ldrb r0, [r2]
	strh r0, [r3]
	adds r3, #2
	adds r4, #1
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r4, #0x1f
	bls _0805C214
	movs r4, #0
	movs r2, #1
	mov sb, r2
	ldr r6, _0805C27C @ =gUnknown_03005500
	mov r8, r6
_0805C234:
	mov r2, sl
	ldrb r0, [r2]
	asrs r0, r4
	mov r6, sb
	ands r0, r6
	cmp r0, #0
	bne _0805C280
	movs r2, #0
	adds r7, r4, #1
	adds r5, r1, #0
	adds r5, #0x20
	movs r4, #0
	movs r0, #0xc0
	subs r1, r0, r1
_0805C250:
	strh r4, [r3]
	adds r3, #2
	strh r1, [r3]
	adds r3, #2
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1f
	bls _0805C250
	b _0805C2F0
	.align 2, 0
_0805C264: .4byte gFlags
_0805C268: .4byte gUnknown_03002878
_0805C26C: .4byte 0x0400001C
_0805C270: .4byte gUnknown_03002A80
_0805C274: .4byte gUnknown_030055B8
_0805C278: .4byte IWRAM_START + 0x204
_0805C27C: .4byte gUnknown_03005500
_0805C280:
	adds r0, r4, #0
	mov r2, sb
	ands r0, r2
	cmp r0, #0
	beq _0805C2C2
	movs r2, #0
	adds r7, r4, #1
	adds r5, r1, #0
	adds r5, #0x20
	lsls r1, r1, #0x10
	movs r0, #0xf0
	mov r6, ip
	subs r6, r0, r6
	str r6, [sp]
	add r4, r8
	asrs r1, r1, #0x10
_0805C2A0:
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r3]
	adds r3, #2
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #5
	adds r0, #0x20
	subs r0, r0, r1
	strh r0, [r3]
	adds r3, #2
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1f
	bls _0805C2A0
	b _0805C2F0
_0805C2C2:
	movs r2, #0
	adds r7, r4, #1
	adds r5, r1, #0
	adds r5, #0x20
	lsls r1, r1, #0x10
	mov r6, ip
	subs r6, #0xf0
	add r4, r8
	asrs r1, r1, #0x10
_0805C2D4:
	strh r6, [r3]
	adds r3, #2
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #5
	adds r0, #0x20
	subs r0, r0, r1
	strh r0, [r3]
	adds r3, #2
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1f
	bls _0805C2D4
_0805C2F0:
	lsls r0, r5, #0x10
	lsrs r1, r0, #0x10
	adds r4, r7, #0
	cmp r4, #3
	bls _0805C234
_0805C2FA:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805C30C
sub_805C30C: @ 0x0805C30C
	push {r4, lr}
	ldr r0, _0805C33C @ =gCurTask
	ldr r0, [r0]
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r2, r0
	movs r4, #0
	ldr r1, _0805C340 @ =IWRAM_START + 0x203
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805C348
	ldr r0, _0805C344 @ =IWRAM_START + 0x200
	adds r2, r2, r0
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	movs r1, #0x96
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0805C35C
	b _0805C360
	.align 2, 0
_0805C33C: .4byte gCurTask
_0805C340: .4byte IWRAM_START + 0x203
_0805C344: .4byte IWRAM_START + 0x200
_0805C348:
	ldr r1, _0805C3A0 @ =IWRAM_START + 0x200
	adds r0, r2, r1
	ldrh r1, [r0]
	adds r2, r1, #1
	strh r2, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	cmp r1, #0x3c
	bls _0805C35C
	movs r4, #1
_0805C35C:
	cmp r4, #0
	beq _0805C3C0
_0805C360:
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r3, r0
	movs r0, #0
	strh r0, [r1]
	ldr r1, _0805C3A4 @ =gBldRegs
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _0805C3A8 @ =gMPlayInfo_BGM
	movs r1, #0
	bl m4aMPlayFadeOut
	ldr r0, _0805C3AC @ =gMPlayInfo_SE1
	movs r1, #0
	bl m4aMPlayFadeOut
	ldr r0, _0805C3B0 @ =gMPlayInfo_SE2
	movs r1, #0
	bl m4aMPlayFadeOut
	ldr r0, _0805C3B4 @ =gMPlayInfo_SE3
	movs r1, #0
	bl m4aMPlayFadeOut
	ldr r0, _0805C3B8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805C3BC @ =sub_805C3D0
	str r0, [r1, #8]
	bl _call_via_r0
	b _0805C3C8
	.align 2, 0
_0805C3A0: .4byte IWRAM_START + 0x200
_0805C3A4: .4byte gBldRegs
_0805C3A8: .4byte gMPlayInfo_BGM
_0805C3AC: .4byte gMPlayInfo_SE1
_0805C3B0: .4byte gMPlayInfo_SE2
_0805C3B4: .4byte gMPlayInfo_SE3
_0805C3B8: .4byte gCurTask
_0805C3BC: .4byte sub_805C3D0
_0805C3C0:
	bl sub_805C69C
	bl sub_805C504
_0805C3C8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805C3D0
sub_805C3D0: @ 0x0805C3D0
	push {r4, r5, r6, lr}
	ldr r0, _0805C438 @ =gCurTask
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	ldr r0, _0805C43C @ =IWRAM_START + 0x200
	adds r4, r5, r0
	ldrh r0, [r4]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r6, #0
	strh r0, [r4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #5
	cmp r0, r1
	bhi _0805C3F6
	b _0805C4EE
_0805C3F6:
	strh r1, [r4]
	ldr r1, _0805C440 @ =gBldRegs
	movs r0, #0x10
	strh r0, [r1, #4]
	ldr r2, _0805C444 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r1, _0805C448 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805C44C @ =gUnknown_03002AE4
	ldr r0, _0805C450 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805C454 @ =gUnknown_03005390
	strb r6, [r0]
	ldr r1, _0805C458 @ =gUnknown_03004D5C
	ldr r0, _0805C45C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805C460 @ =IWRAM_START + 0x203
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805C464
	bl sub_8087400
	b _0805C4FA
	.align 2, 0
_0805C438: .4byte gCurTask
_0805C43C: .4byte IWRAM_START + 0x200
_0805C440: .4byte gBldRegs
_0805C444: .4byte gFlags
_0805C448: .4byte 0x0000FFFF
_0805C44C: .4byte gUnknown_03002AE4
_0805C450: .4byte gUnknown_0300287C
_0805C454: .4byte gUnknown_03005390
_0805C458: .4byte gUnknown_03004D5C
_0805C45C: .4byte gUnknown_03002A84
_0805C460: .4byte IWRAM_START + 0x203
_0805C464:
	ldr r0, _0805C49C @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #3
	bne _0805C4A8
	movs r2, #0
	ldr r3, _0805C4A0 @ =gUnknown_030055B8
	ldrb r0, [r3]
	movs r1, #1
	ands r0, r1
	ldr r4, _0805C4A4 @ =gUnknown_030054D8
	cmp r0, #0
	beq _0805C492
_0805C47E:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bhi _0805C492
	ldrb r0, [r3]
	asrs r0, r2
	ands r0, r1
	cmp r0, #0
	bne _0805C47E
_0805C492:
	movs r0, #3
	strb r0, [r5]
	ldrb r1, [r4]
	b _0805C4E4
	.align 2, 0
_0805C49C: .4byte gUnknown_030054CC
_0805C4A0: .4byte gUnknown_030055B8
_0805C4A4: .4byte gUnknown_030054D8
_0805C4A8:
	ldr r2, _0805C4CC @ =gLoadedSaveGame
	ldr r3, _0805C4D0 @ =gUnknown_030054F0
	cmp r1, #0
	bne _0805C4D8
	ldr r0, [r2]
	movs r1, #0
	ldrsb r1, [r3, r1]
	adds r0, #7
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805C4D8
	ldr r0, _0805C4D4 @ =gUnknown_030055B4
	strb r6, [r0]
	bl sub_801A770
	b _0805C4FA
	.align 2, 0
_0805C4CC: .4byte gLoadedSaveGame
_0805C4D0: .4byte gUnknown_030054F0
_0805C4D4: .4byte gUnknown_030055B4
_0805C4D8:
	ldr r0, [r2]
	movs r1, #0
	ldrsb r1, [r3, r1]
	adds r0, #7
	adds r0, r0, r1
	ldrb r1, [r0]
_0805C4E4:
	movs r0, #0
	movs r2, #0
	bl sub_80346C8
	b _0805C4FA
_0805C4EE:
	bl sub_805C504
	ldr r1, _0805C500 @ =gBldRegs
	ldrh r0, [r4]
	lsrs r0, r0, #8
	strh r0, [r1, #4]
_0805C4FA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805C500: .4byte gBldRegs

	thumb_func_start sub_805C504
sub_805C504: @ 0x0805C504
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0805C568 @ =gUnknown_03001884
	ldr r5, [r0]
	ldr r0, _0805C56C @ =gUnknown_030054CC
	ldrb r0, [r0]
	ldr r1, _0805C570 @ =gUnknown_030055B8
	mov r8, r1
	cmp r0, #2
	bls _0805C5AC
	movs r3, #0
	ldrb r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805C5AC
	movs r6, #1
	ldr r2, _0805C574 @ =gUnknown_030054D4
_0805C52A:
	ldr r1, _0805C578 @ =gMultiSioStatusFlags
	adds r0, r6, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805C594
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805C598
	movs r0, #0
	ldr r1, _0805C57C @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805C580 @ =gUnknown_03002AE4
	ldr r0, _0805C584 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805C588 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0805C58C @ =gUnknown_03004D5C
	ldr r0, _0805C590 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805C692
	.align 2, 0
_0805C568: .4byte gUnknown_03001884
_0805C56C: .4byte gUnknown_030054CC
_0805C570: .4byte gUnknown_030055B8
_0805C574: .4byte gUnknown_030054D4
_0805C578: .4byte gMultiSioStatusFlags
_0805C57C: .4byte 0x0000FFFF
_0805C580: .4byte gUnknown_03002AE4
_0805C584: .4byte gUnknown_0300287C
_0805C588: .4byte gUnknown_03005390
_0805C58C: .4byte gUnknown_03004D5C
_0805C590: .4byte gUnknown_03002A84
_0805C594:
	movs r0, #0
	strb r0, [r2]
_0805C598:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _0805C5AC
	mov r1, r8
	ldrb r0, [r1]
	asrs r0, r3
	ands r0, r6
	cmp r0, #0
	bne _0805C52A
_0805C5AC:
	ldr r0, _0805C614 @ =gCurTask
	ldr r0, [r0]
	ldrh r3, [r0, #6]
	ldr r2, _0805C618 @ =gFlags
	ldr r0, [r2]
	movs r1, #4
	orrs r0, r1
	str r0, [r2]
	ldr r1, _0805C61C @ =gUnknown_03002878
	ldr r0, _0805C620 @ =0x0400001E
	str r0, [r1]
	ldr r1, _0805C624 @ =gUnknown_03002A80
	movs r0, #2
	strb r0, [r1]
	movs r4, #0
	movs r2, #0
	ldr r0, _0805C628 @ =IWRAM_START + 0x204
	adds r3, r3, r0
_0805C5D0:
	ldrb r0, [r3]
	strh r0, [r5]
	adds r5, #2
	adds r2, #1
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r2, #0x1f
	bls _0805C5D0
	movs r2, #0
	movs r1, #1
	mov ip, r1
	ldr r7, _0805C62C @ =gUnknown_03005500
_0805C5EA:
	mov r1, r8
	ldrb r0, [r1]
	asrs r0, r2
	mov r1, ip
	ands r0, r1
	cmp r0, #0
	bne _0805C630
	movs r1, #0
	adds r6, r2, #1
	adds r3, r4, #0
	adds r3, #0x20
	movs r0, #0xc0
	subs r2, r0, r4
_0805C604:
	strh r2, [r5]
	adds r5, #2
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x1f
	bls _0805C604
	b _0805C688
	.align 2, 0
_0805C614: .4byte gCurTask
_0805C618: .4byte gFlags
_0805C61C: .4byte gUnknown_03002878
_0805C620: .4byte 0x0400001E
_0805C624: .4byte gUnknown_03002A80
_0805C628: .4byte IWRAM_START + 0x204
_0805C62C: .4byte gUnknown_03005500
_0805C630:
	adds r0, r2, #0
	mov r1, ip
	ands r0, r1
	cmp r0, #0
	beq _0805C662
	movs r1, #0
	adds r6, r2, #1
	adds r3, r4, #0
	adds r3, #0x20
	lsls r0, r4, #0x10
	adds r4, r2, r7
	asrs r2, r0, #0x10
_0805C648:
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #5
	adds r0, #0x20
	subs r0, r0, r2
	strh r0, [r5]
	adds r5, #2
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x1f
	bls _0805C648
	b _0805C688
_0805C662:
	movs r1, #0
	adds r6, r2, #1
	adds r3, r4, #0
	adds r3, #0x20
	lsls r0, r4, #0x10
	adds r4, r2, r7
	asrs r2, r0, #0x10
_0805C670:
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #5
	adds r0, #0x20
	subs r0, r0, r2
	strh r0, [r5]
	adds r5, #2
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0x1f
	bls _0805C670
_0805C688:
	lsls r0, r3, #0x10
	lsrs r4, r0, #0x10
	adds r2, r6, #0
	cmp r2, #3
	bls _0805C5EA
_0805C692:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805C69C
sub_805C69C: @ 0x0805C69C
	push {r4, r5, r6, r7, lr}
	ldr r0, _0805C6F8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805C736
	movs r3, #0
	ldr r0, _0805C6FC @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _0805C736
	movs r5, #1
	ldr r2, _0805C700 @ =gUnknown_030054D4
_0805C6BA:
	ldr r1, _0805C704 @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805C720
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805C724
	movs r0, #0
	ldr r1, _0805C708 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805C70C @ =gUnknown_03002AE4
	ldr r0, _0805C710 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805C714 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0805C718 @ =gUnknown_03004D5C
	ldr r0, _0805C71C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805C778
	.align 2, 0
_0805C6F8: .4byte gUnknown_030054CC
_0805C6FC: .4byte gUnknown_030055B8
_0805C700: .4byte gUnknown_030054D4
_0805C704: .4byte gMultiSioStatusFlags
_0805C708: .4byte 0x0000FFFF
_0805C70C: .4byte gUnknown_03002AE4
_0805C710: .4byte gUnknown_0300287C
_0805C714: .4byte gUnknown_03005390
_0805C718: .4byte gUnknown_03004D5C
_0805C71C: .4byte gUnknown_03002A84
_0805C720:
	movs r0, #0
	strb r0, [r2]
_0805C724:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _0805C736
	ldrb r0, [r6]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0805C6BA
_0805C736:
	ldr r0, _0805C780 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	movs r5, #0
	movs r7, #0x80
	movs r6, #0xa0
	lsls r6, r6, #1
_0805C74A:
	ldr r0, _0805C784 @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r5
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805C76E
	adds r0, r4, r6
	bl sub_80051E8
	ldr r1, _0805C788 @ =0x00000203
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805C76E
	adds r0, r4, r7
	bl sub_80051E8
_0805C76E:
	adds r7, #0x30
	adds r6, #0x30
	adds r5, #1
	cmp r5, #3
	bls _0805C74A
_0805C778:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805C780: .4byte gCurTask
_0805C784: .4byte gUnknown_030055B8
_0805C788: .4byte 0x00000203

	thumb_func_start sub_805C78C
sub_805C78C: @ 0x0805C78C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r0, _0805CA9C @ =gLoadedSaveGame
	ldr r0, [r0]
	ldrb r0, [r0, #6]
	mov sl, r0
	cmp r0, #6
	bls _0805C7A8
	movs r0, #1
	mov sl, r0
_0805C7A8:
	movs r4, #0
	str r4, [sp, #4]
	ldr r0, _0805CAA0 @ =0x040000D4
	add r1, sp, #4
	str r1, [r0]
	ldr r1, _0805CAA4 @ =gMultiSioSend
	str r1, [r0, #4]
	ldr r1, _0805CAA8 @ =0x85000005
	str r1, [r0, #8]
	ldr r1, [r0, #8]
	str r4, [sp, #4]
	add r2, sp, #4
	str r2, [r0]
	ldr r1, _0805CAAC @ =gMultiSioRecv
	str r1, [r0, #4]
	ldr r1, _0805CAB0 @ =0x85000014
	str r1, [r0, #8]
	ldr r0, [r0, #8]
	ldr r0, _0805CAB4 @ =gUnknown_030054D4
	strb r4, [r0, #3]
	strb r4, [r0, #2]
	strb r4, [r0, #1]
	strb r4, [r0]
	ldr r1, _0805CAB8 @ =gDispCnt
	movs r0, #0xda
	lsls r0, r0, #5
	strh r0, [r1]
	ldr r1, _0805CABC @ =gBgCntRegs
	movs r5, #0
	ldr r0, _0805CAC0 @ =0x00001E0D
	strh r0, [r1, #6]
	ldr r0, _0805CAC4 @ =0x00009608
	strh r0, [r1, #4]
	ldr r0, _0805CAC8 @ =0x00008E06
	strh r0, [r1, #2]
	ldr r0, _0805CACC @ =0x00008603
	strh r0, [r1]
	ldr r0, _0805CAD0 @ =gBgScrollRegs
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	strh r4, [r0, #0xa]
	strh r4, [r0, #0xc]
	strh r4, [r0, #0xe]
	ldr r0, _0805CAD4 @ =gUnknown_03004D80
	strb r5, [r0, #2]
	ldr r1, _0805CAD8 @ =gUnknown_03002280
	strb r5, [r1, #8]
	strb r5, [r1, #9]
	movs r0, #0xff
	strb r0, [r1, #0xa]
	movs r0, #0x20
	strb r0, [r1, #0xb]
	ldr r0, _0805CADC @ =sub_805CB34
	movs r1, #0xc8
	lsls r1, r1, #2
	movs r2, #0xc0
	lsls r2, r2, #6
	str r4, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r7, r0, r1
	ldr r3, _0805CAE0 @ =IWRAM_START + 0x310
	adds r1, r0, r3
	strh r4, [r1]
	ldr r2, _0805CAE4 @ =IWRAM_START + 0x312
	adds r1, r0, r2
	strh r4, [r1]
	adds r3, #4
	adds r1, r0, r3
	strh r4, [r1]
	ldr r1, _0805CAE8 @ =IWRAM_START + 0x316
	adds r2, r0, r1
	movs r1, #1
	strb r1, [r2]
	ldr r2, _0805CAEC @ =IWRAM_START + 0x317
	adds r0, r0, r2
	strb r5, [r0]
	ldr r3, _0805CAF0 @ =0x06010000
	mov r0, sl
	lsls r0, r0, #2
	str r0, [sp, #0x28]
	movs r6, #0
	movs r5, #0
_0805C85C:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r2, r7, r0
	strh r5, [r2, #0x16]
	strh r5, [r2, #0x18]
	str r3, [r2, #4]
	ldr r0, _0805CAF4 @ =gUnknown_080D92BC
	lsls r1, r4, #3
	adds r1, r1, r0
	ldr r0, [r1]
	lsls r0, r0, #5
	adds r3, r3, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r2, #0x1a]
	strh r5, [r2, #8]
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	strh r5, [r2, #0x14]
	strh r5, [r2, #0x1c]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x25
	strb r6, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r2, #0x10]
	adds r0, r2, #0
	str r3, [sp, #0x30]
	bl sub_8004558
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r3, [sp, #0x30]
	cmp r4, #3
	bls _0805C85C
	movs r4, #0
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r1, r7, r1
	str r1, [sp, #0x14]
	ldr r2, _0805CAF8 @ =0x000001D1
	adds r2, r7, r2
	str r2, [sp, #0x18]
	movs r0, #0xe9
	lsls r0, r0, #1
	adds r0, r7, r0
	str r0, [sp, #0x1c]
	ldr r1, _0805CAFC @ =0x000001D5
	adds r1, r7, r1
	str r1, [sp, #0x20]
	ldr r2, _0805CB00 @ =0x0000023A
	adds r2, r7, r2
	str r2, [sp, #0xc]
	ldr r0, _0805CB04 @ =0x0000027A
	adds r0, r7, r0
	str r0, [sp, #0x24]
	ldr r1, _0805CB08 @ =0x000002BA
	adds r1, r7, r1
	str r1, [sp, #8]
	ldr r2, _0805CB0C @ =0x000002FA
	adds r2, r7, r2
	str r2, [sp, #0x10]
	movs r5, #0
_0805C8FA:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #4
	adds r0, #0xc0
	adds r2, r7, r0
	strh r5, [r2, #0x16]
	strh r5, [r2, #0x18]
	str r3, [r2, #4]
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, r4, r1
	lsls r1, r1, #3
	ldr r0, _0805CB10 @ =gUnknown_080D92DC
	adds r1, r1, r0
	ldr r0, [r1]
	lsls r0, r0, #5
	adds r3, r3, r0
	movs r0, #0xc0
	mov r8, r0
	mov r0, r8
	strh r0, [r2, #0x1a]
	strh r5, [r2, #8]
	ldrh r0, [r1, #4]
	strh r0, [r2, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r2, #0
	adds r0, #0x20
	strb r1, [r0]
	strh r5, [r2, #0x14]
	strh r5, [r2, #0x1c]
	adds r1, r2, #0
	adds r1, #0x21
	movs r0, #1
	rsbs r0, r0, #0
	mov sb, r0
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x22
	movs r6, #0x10
	strb r6, [r0]
	adds r0, #3
	movs r1, #0
	strb r1, [r0]
	movs r1, #1
	rsbs r1, r1, #0
	str r1, [r2, #0x28]
	str r5, [r2, #0x10]
	adds r0, r2, #0
	str r1, [sp, #0x2c]
	str r3, [sp, #0x30]
	bl sub_8004558
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, [sp, #0x2c]
	ldr r3, [sp, #0x30]
	cmp r4, #4
	bls _0805C8FA
	movs r0, #0xd8
	lsls r0, r0, #1
	adds r2, r7, r0
	movs r0, #0
	mov sl, r0
	movs r4, #0
	strh r4, [r2, #0x16]
	strh r4, [r2, #0x18]
	str r3, [r2, #4]
	mov r3, r8
	strh r3, [r2, #0x1a]
	strh r4, [r2, #8]
	ldr r0, _0805CB14 @ =0x00000434
	strh r0, [r2, #0xa]
	movs r0, #9
	ldr r3, [sp, #0x14]
	strb r0, [r3]
	strh r4, [r2, #0x14]
	strh r4, [r2, #0x1c]
	ldr r3, [sp, #0x18]
	ldrb r0, [r3]
	mov r3, sb
	orrs r0, r3
	ldr r3, [sp, #0x18]
	strb r0, [r3]
	ldr r0, [sp, #0x1c]
	strb r6, [r0]
	mov r0, sl
	ldr r3, [sp, #0x20]
	strb r0, [r3]
	str r1, [r2, #0x28]
	str r4, [r2, #0x10]
	movs r2, #0x84
	lsls r2, r2, #2
	adds r1, r7, r2
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _0805CB18 @ =0x06003000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x7b
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r5, #0x1e
	strh r5, [r1, #0x26]
	movs r0, #0x14
	strh r0, [r1, #0x28]
	mov r0, sl
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	strh r4, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	movs r2, #0x94
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, _0805CB1C @ =0x06004000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _0805CB20 @ =0x06007000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x7a
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	strh r5, [r1, #0x26]
	movs r0, #0x28
	strh r0, [r1, #0x28]
	mov r0, sl
	ldr r3, [sp, #0x24]
	strb r0, [r3]
	movs r0, #1
	strh r0, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	movs r2, #0xa4
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, _0805CB24 @ =0x06008000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _0805CB28 @ =0x0600B000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x7c
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	strh r5, [r1, #0x26]
	movs r0, #0xa
	strh r0, [r1, #0x28]
	mov r0, sl
	ldr r3, [sp, #8]
	strb r0, [r3]
	movs r5, #3
	strh r5, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	movs r2, #0xb4
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, _0805CB2C @ =0x0600C000
	str r0, [r1, #4]
	strh r4, [r1, #0xa]
	ldr r0, _0805CB30 @ =0x0600F000
	str r0, [r1, #0xc]
	strh r4, [r1, #0x18]
	strh r4, [r1, #0x1a]
	movs r0, #0x7e
	strh r0, [r1, #0x1c]
	strh r4, [r1, #0x1e]
	strh r4, [r1, #0x20]
	strh r4, [r1, #0x22]
	strh r4, [r1, #0x24]
	movs r0, #0x20
	strh r0, [r1, #0x26]
	strh r0, [r1, #0x28]
	mov r0, sl
	ldr r3, [sp, #0x10]
	strb r0, [r3]
	strh r5, [r1, #0x2e]
	adds r0, r1, #0
	bl sub_8002A3C
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805CA9C: .4byte gLoadedSaveGame
_0805CAA0: .4byte 0x040000D4
_0805CAA4: .4byte gMultiSioSend
_0805CAA8: .4byte 0x85000005
_0805CAAC: .4byte gMultiSioRecv
_0805CAB0: .4byte 0x85000014
_0805CAB4: .4byte gUnknown_030054D4
_0805CAB8: .4byte gDispCnt
_0805CABC: .4byte gBgCntRegs
_0805CAC0: .4byte 0x00001E0D
_0805CAC4: .4byte 0x00009608
_0805CAC8: .4byte 0x00008E06
_0805CACC: .4byte 0x00008603
_0805CAD0: .4byte gBgScrollRegs
_0805CAD4: .4byte gUnknown_03004D80
_0805CAD8: .4byte gUnknown_03002280
_0805CADC: .4byte sub_805CB34
_0805CAE0: .4byte IWRAM_START + 0x310
_0805CAE4: .4byte IWRAM_START + 0x312
_0805CAE8: .4byte IWRAM_START + 0x316
_0805CAEC: .4byte IWRAM_START + 0x317
_0805CAF0: .4byte 0x06010000
_0805CAF4: .4byte gUnknown_080D92BC
_0805CAF8: .4byte 0x000001D1
_0805CAFC: .4byte 0x000001D5
_0805CB00: .4byte 0x0000023A
_0805CB04: .4byte 0x0000027A
_0805CB08: .4byte 0x000002BA
_0805CB0C: .4byte 0x000002FA
_0805CB10: .4byte gUnknown_080D92DC
_0805CB14: .4byte 0x00000434
_0805CB18: .4byte 0x06003000
_0805CB1C: .4byte 0x06004000
_0805CB20: .4byte 0x06007000
_0805CB24: .4byte 0x06008000
_0805CB28: .4byte 0x0600B000
_0805CB2C: .4byte 0x0600C000
_0805CB30: .4byte 0x0600F000

	thumb_func_start sub_805CB34
sub_805CB34: @ 0x0805CB34
	push {r4, r5, r6, lr}
	ldr r0, _0805CB90 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805CBCE
	movs r3, #0
	ldr r0, _0805CB94 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _0805CBCE
	movs r5, #1
	ldr r2, _0805CB98 @ =gUnknown_030054D4
_0805CB52:
	ldr r1, _0805CB9C @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805CBB8
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805CBBC
	movs r0, #0
	ldr r1, _0805CBA0 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805CBA4 @ =gUnknown_03002AE4
	ldr r0, _0805CBA8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805CBAC @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0805CBB0 @ =gUnknown_03004D5C
	ldr r0, _0805CBB4 @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805CC2A
	.align 2, 0
_0805CB90: .4byte gUnknown_030054CC
_0805CB94: .4byte gUnknown_030055B8
_0805CB98: .4byte gUnknown_030054D4
_0805CB9C: .4byte gMultiSioStatusFlags
_0805CBA0: .4byte 0x0000FFFF
_0805CBA4: .4byte gUnknown_03002AE4
_0805CBA8: .4byte gUnknown_0300287C
_0805CBAC: .4byte gUnknown_03005390
_0805CBB0: .4byte gUnknown_03004D5C
_0805CBB4: .4byte gUnknown_03002A84
_0805CBB8:
	movs r0, #0
	strb r0, [r2]
_0805CBBC:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _0805CBCE
	ldrb r0, [r6]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0805CB52
_0805CBCE:
	ldr r0, _0805CC04 @ =gCurTask
	ldr r4, [r0]
	ldrh r1, [r4, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r2, _0805CC08 @ =gWinRegs
	movs r0, #0x3f
	strh r0, [r2, #0xa]
	ldr r1, _0805CC0C @ =gBldRegs
	ldr r0, _0805CC10 @ =0x00003F48
	strh r0, [r1]
	movs r0, #0x81
	lsls r0, r0, #4
	strh r0, [r1, #2]
	movs r3, #0xa0
	strh r3, [r2, #4]
	ldr r1, _0805CC14 @ =gBgScrollRegs
	ldrh r2, [r1, #6]
	movs r6, #6
	ldrsh r0, [r1, r6]
	cmp r0, #0x9f
	bgt _0805CC18
	adds r0, r2, #4
	strh r0, [r1, #6]
	b _0805CC1E
	.align 2, 0
_0805CC04: .4byte gCurTask
_0805CC08: .4byte gWinRegs
_0805CC0C: .4byte gBldRegs
_0805CC10: .4byte 0x00003F48
_0805CC14: .4byte gBgScrollRegs
_0805CC18:
	strh r3, [r1, #6]
	ldr r0, _0805CC30 @ =sub_805CC34
	str r0, [r4, #8]
_0805CC1E:
	adds r0, r5, #0
	bl sub_805D118
	adds r0, r5, #0
	bl sub_805D644
_0805CC2A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805CC30: .4byte sub_805CC34

	thumb_func_start sub_805CC34
sub_805CC34: @ 0x0805CC34
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r2, _0805CCA4 @ =gDispCnt
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _0805CCA8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	ldr r1, _0805CCAC @ =gMultiSioStatusFlags
	mov ip, r1
	cmp r0, #2
	bls _0805CCE6
	movs r5, #0
	ldr r2, _0805CCB0 @ =gUnknown_030055B8
	ldrb r1, [r2]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0805CCE6
	movs r6, #1
	ldr r3, _0805CCB4 @ =gUnknown_030054D4
_0805CC64:
	adds r0, r6, #0
	lsls r0, r5
	mov r1, ip
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805CCD0
	ldrb r0, [r3]
	adds r1, r0, #1
	strb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805CCD4
	movs r0, #0
	ldr r1, _0805CCB8 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805CCBC @ =gUnknown_03002AE4
	ldr r0, _0805CCC0 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805CCC4 @ =gUnknown_03005390
	strb r4, [r0]
	ldr r1, _0805CCC8 @ =gUnknown_03004D5C
	ldr r0, _0805CCCC @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805D0FA
	.align 2, 0
_0805CCA4: .4byte gDispCnt
_0805CCA8: .4byte gUnknown_030054CC
_0805CCAC: .4byte gMultiSioStatusFlags
_0805CCB0: .4byte gUnknown_030055B8
_0805CCB4: .4byte gUnknown_030054D4
_0805CCB8: .4byte 0x0000FFFF
_0805CCBC: .4byte gUnknown_03002AE4
_0805CCC0: .4byte gUnknown_0300287C
_0805CCC4: .4byte gUnknown_03005390
_0805CCC8: .4byte gUnknown_03004D5C
_0805CCCC: .4byte gUnknown_03002A84
_0805CCD0:
	movs r0, #0
	strb r0, [r3]
_0805CCD4:
	adds r3, #1
	adds r5, #1
	cmp r5, #3
	bhi _0805CCE6
	ldrb r0, [r2]
	asrs r0, r5
	ands r0, r6
	cmp r0, #0
	bne _0805CC64
_0805CCE6:
	ldr r0, _0805CD34 @ =gCurTask
	ldr r0, [r0]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	mov r2, ip
	ldr r0, [r2]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805CD66
	ldr r3, _0805CD38 @ =IWRAM_START + 0x317
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CD66
	ldr r0, _0805CD3C @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0805CD48
	ldr r1, _0805CD40 @ =IWRAM_START + 0x31E
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CD28
	movs r0, #0x6c
	bl m4aSongNumStart
_0805CD28:
	ldr r2, _0805CD44 @ =IWRAM_START + 0x316
	adds r1, r4, r2
	movs r0, #1
	strb r0, [r1]
	b _0805CD66
	.align 2, 0
_0805CD34: .4byte gCurTask
_0805CD38: .4byte IWRAM_START + 0x317
_0805CD3C: .4byte gPressedKeys
_0805CD40: .4byte IWRAM_START + 0x31E
_0805CD44: .4byte IWRAM_START + 0x316
_0805CD48:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0805CD66
	ldr r3, _0805CDE4 @ =IWRAM_START + 0x31E
	adds r0, r4, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805CD60
	movs r0, #0x6c
	bl m4aSongNumStart
_0805CD60:
	ldr r1, _0805CDE8 @ =IWRAM_START + 0x316
	adds r0, r4, r1
	strb r5, [r0]
_0805CD66:
	movs r3, #1
	movs r6, #0
_0805CD6A:
	ldr r0, _0805CDEC @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r6, r0
	beq _0805CDAA
	ldr r0, _0805CDF0 @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805CDAA
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r6, #0
	bne _0805CDAA
	ldr r4, _0805CDF4 @ =gMultiSioRecv
	ldr r2, _0805CDF8 @ =0x00000316
	adds r5, r7, r2
	ldrb r0, [r5]
	ldrb r1, [r4, #2]
	cmp r0, r1
	beq _0805CDA6
	movs r0, #0x6c
	str r3, [sp]
	bl m4aSongNumStart
	ldr r3, [sp]
_0805CDA6:
	ldrb r0, [r4, #2]
	strb r0, [r5]
_0805CDAA:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #3
	bls _0805CD6A
	ldr r0, _0805CDFC @ =gMultiSioStatusFlags
	ldr r5, [r0]
	movs r0, #0x80
	ands r5, r0
	cmp r5, #0
	bne _0805CDC2
	b _0805CF3C
_0805CDC2:
	ldr r0, _0805CE00 @ =gPressedKeys
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805CE08
	ldr r2, _0805CE04 @ =0x00000317
	adds r1, r7, r2
	ldrb r0, [r1]
	cmp r0, #0
	bne _0805CE14
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0805D030
	.align 2, 0
_0805CDE4: .4byte IWRAM_START + 0x31E
_0805CDE8: .4byte IWRAM_START + 0x316
_0805CDEC: .4byte 0x04000128
_0805CDF0: .4byte gUnknown_030055B8
_0805CDF4: .4byte gMultiSioRecv
_0805CDF8: .4byte 0x00000316
_0805CDFC: .4byte gMultiSioStatusFlags
_0805CE00: .4byte gPressedKeys
_0805CE04: .4byte 0x00000317
_0805CE08:
	ldr r1, _0805CEC4 @ =0x00000317
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CE14
	b _0805D030
_0805CE14:
	movs r2, #1
	movs r6, #0
	cmp r6, r3
	bhs _0805CE5A
	ldr r0, _0805CEC8 @ =gUnknown_030055B8
	mov ip, r0
	ldr r5, _0805CECC @ =gMultiSioRecv
_0805CE22:
	ldr r0, _0805CED0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r6, r0
	beq _0805CE50
	mov r1, ip
	ldrb r0, [r1]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805CE50
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r4, r0, r5
	ldrh r0, [r4]
	cmp r0, #1
	bls _0805CE50
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_0805CE50:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, r3
	blo _0805CE22
_0805CE5A:
	cmp r3, r2
	beq _0805CE60
	b _0805D030
_0805CE60:
	ldr r2, _0805CED4 @ =0x00000316
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805CEF4
	movs r3, #0xa4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r1, _0805CED8 @ =gUnknown_03004D80
	movs r3, #0
	strb r3, [r1, #2]
	ldr r2, _0805CEDC @ =gUnknown_03002280
	strb r3, [r2, #8]
	strb r3, [r2, #9]
	movs r1, #0xff
	strb r1, [r2, #0xa]
	movs r1, #0x20
	strb r1, [r2, #0xb]
	ldr r1, _0805CEE0 @ =0x06008000
	str r1, [r0, #4]
	movs r4, #0
	strh r3, [r0, #0xa]
	ldr r1, _0805CEE4 @ =0x0600B000
	str r1, [r0, #0xc]
	strh r3, [r0, #0x18]
	strh r3, [r0, #0x1a]
	movs r1, #0x7d
	strh r1, [r0, #0x1c]
	strh r3, [r0, #0x1e]
	strh r3, [r0, #0x20]
	strh r3, [r0, #0x22]
	strh r3, [r0, #0x24]
	movs r1, #0x1e
	strh r1, [r0, #0x26]
	movs r1, #7
	strh r1, [r0, #0x28]
	ldr r2, _0805CEE8 @ =0x000002BA
	adds r1, r7, r2
	strb r4, [r1]
	movs r1, #3
	strh r1, [r0, #0x2e]
	bl sub_8002A3C
	ldr r1, _0805CEEC @ =gMultiSioSend
	ldr r0, _0805CEF0 @ =0x00004035
	strh r0, [r1]
	ldr r3, _0805CEC4 @ =0x00000317
	adds r0, r7, r3
	b _0805CFA8
	.align 2, 0
_0805CEC4: .4byte 0x00000317
_0805CEC8: .4byte gUnknown_030055B8
_0805CECC: .4byte gMultiSioRecv
_0805CED0: .4byte 0x04000128
_0805CED4: .4byte 0x00000316
_0805CED8: .4byte gUnknown_03004D80
_0805CEDC: .4byte gUnknown_03002280
_0805CEE0: .4byte 0x06008000
_0805CEE4: .4byte 0x0600B000
_0805CEE8: .4byte 0x000002BA
_0805CEEC: .4byte gMultiSioSend
_0805CEF0: .4byte 0x00004035
_0805CEF4:
	ldr r0, _0805CF24 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	ldr r2, _0805CF28 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r1, _0805CF2C @ =gUnknown_030054CC
	movs r0, #3
	strb r0, [r1]
	ldr r0, _0805CF30 @ =gUnknown_030054D8
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_80346C8
	ldr r1, _0805CF34 @ =gMultiSioSend
	ldr r0, _0805CF38 @ =0x00004035
	strh r0, [r1]
	b _0805D0FA
	.align 2, 0
_0805CF24: .4byte gCurTask
_0805CF28: .4byte gFlags
_0805CF2C: .4byte gUnknown_030054CC
_0805CF30: .4byte gUnknown_030054D8
_0805CF34: .4byte gMultiSioSend
_0805CF38: .4byte 0x00004035
_0805CF3C:
	ldr r4, _0805CFBC @ =gMultiSioRecv
	ldrh r0, [r4]
	cmp r0, #1
	bne _0805D030
	movs r0, #0x6a
	bl m4aSongNumStart
	ldr r1, _0805CFC0 @ =0x00000316
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805CFF0
	movs r2, #0xa4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r1, _0805CFC4 @ =gUnknown_03004D80
	strb r5, [r1, #2]
	ldr r2, _0805CFC8 @ =gUnknown_03002280
	strb r5, [r2, #8]
	strb r5, [r2, #9]
	movs r1, #0xff
	strb r1, [r2, #0xa]
	movs r1, #0x20
	strb r1, [r2, #0xb]
	ldr r1, _0805CFCC @ =0x06008000
	str r1, [r0, #4]
	movs r4, #0
	strh r5, [r0, #0xa]
	ldr r1, _0805CFD0 @ =0x0600B000
	str r1, [r0, #0xc]
	strh r5, [r0, #0x18]
	strh r5, [r0, #0x1a]
	movs r1, #0x7d
	strh r1, [r0, #0x1c]
	strh r5, [r0, #0x1e]
	strh r5, [r0, #0x20]
	strh r5, [r0, #0x22]
	strh r5, [r0, #0x24]
	movs r1, #0x1e
	strh r1, [r0, #0x26]
	movs r1, #7
	strh r1, [r0, #0x28]
	ldr r3, _0805CFD4 @ =0x000002BA
	adds r1, r7, r3
	strb r4, [r1]
	movs r1, #3
	strh r1, [r0, #0x2e]
	bl sub_8002A3C
	ldr r1, _0805CFD8 @ =gMultiSioSend
	ldr r0, _0805CFDC @ =0x00004035
	strh r0, [r1]
	ldr r1, _0805CFE0 @ =0x00000317
	adds r0, r7, r1
_0805CFA8:
	strb r4, [r0]
	ldr r1, _0805CFE4 @ =gUnknown_030054CC
	movs r0, #4
	strb r0, [r1]
	ldr r0, _0805CFE8 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805CFEC @ =sub_805D5C8
	str r0, [r1, #8]
	b _0805D0FA
	.align 2, 0
_0805CFBC: .4byte gMultiSioRecv
_0805CFC0: .4byte 0x00000316
_0805CFC4: .4byte gUnknown_03004D80
_0805CFC8: .4byte gUnknown_03002280
_0805CFCC: .4byte 0x06008000
_0805CFD0: .4byte 0x0600B000
_0805CFD4: .4byte 0x000002BA
_0805CFD8: .4byte gMultiSioSend
_0805CFDC: .4byte 0x00004035
_0805CFE0: .4byte 0x00000317
_0805CFE4: .4byte gUnknown_030054CC
_0805CFE8: .4byte gCurTask
_0805CFEC: .4byte sub_805D5C8
_0805CFF0:
	movs r0, #0x6a
	bl m4aSongNumStart
	ldr r0, _0805D020 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	ldr r2, _0805D024 @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r1, _0805D028 @ =gUnknown_030054CC
	movs r0, #3
	strb r0, [r1]
	ldr r0, _0805D02C @ =gUnknown_030054D8
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_80346C8
	b _0805D0FA
	.align 2, 0
_0805D020: .4byte gCurTask
_0805D024: .4byte gFlags
_0805D028: .4byte gUnknown_030054CC
_0805D02C: .4byte gUnknown_030054D8
_0805D030:
	adds r0, r7, #0
	bl sub_805D118
	adds r0, r7, #0
	bl sub_805D644
	adds r1, r7, #0
	adds r1, #0xc0
	movs r0, #0x78
	strh r0, [r1, #0x16]
	movs r0, #0x1c
	strh r0, [r1, #0x18]
	adds r0, r1, #0
	bl sub_80051E8
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #0x46
	strh r0, [r1, #0x16]
	movs r0, #0x34
	strh r0, [r1, #0x18]
	ldr r3, _0805D070 @ =0x00000316
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805D078
	ldr r0, _0805D074 @ =0x00000145
	adds r2, r7, r0
	movs r0, #0
	b _0805D07E
	.align 2, 0
_0805D070: .4byte 0x00000316
_0805D074: .4byte 0x00000145
_0805D078:
	ldr r3, _0805D0A8 @ =0x00000145
	adds r2, r7, r3
	movs r0, #0xff
_0805D07E:
	strb r0, [r2]
	adds r0, r1, #0
	bl sub_80051E8
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #0xaa
	strh r0, [r1, #0x16]
	movs r0, #0x34
	strh r0, [r1, #0x18]
	ldr r2, _0805D0AC @ =0x00000316
	adds r0, r7, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805D0B4
	ldr r3, _0805D0B0 @ =0x00000175
	adds r2, r7, r3
	movs r0, #0
	b _0805D0BA
	.align 2, 0
_0805D0A8: .4byte 0x00000145
_0805D0AC: .4byte 0x00000316
_0805D0B0: .4byte 0x00000175
_0805D0B4:
	ldr r0, _0805D104 @ =0x00000175
	adds r2, r7, r0
	movs r0, #1
_0805D0BA:
	strb r0, [r2]
	adds r0, r1, #0
	bl sub_80051E8
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #0x78
	strh r0, [r1, #0x16]
	movs r0, #0x34
	strh r0, [r1, #0x18]
	adds r0, r1, #0
	bl sub_80051E8
	ldr r0, _0805D108 @ =gMultiSioStatusFlags
	ldr r0, [r0]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805D0FA
	ldr r1, _0805D10C @ =gMultiSioSend
	ldr r3, _0805D110 @ =0x00000317
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805D0F0
	movs r0, #1
_0805D0F0:
	strh r0, [r1]
	ldr r2, _0805D114 @ =0x00000316
	adds r0, r7, r2
	ldrb r0, [r0]
	strb r0, [r1, #2]
_0805D0FA:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D104: .4byte 0x00000175
_0805D108: .4byte gMultiSioStatusFlags
_0805D10C: .4byte gMultiSioSend
_0805D110: .4byte 0x00000317
_0805D114: .4byte 0x00000316

	thumb_func_start sub_805D118
sub_805D118: @ 0x0805D118
	push {r4, r5, r6, r7, lr}
	ldr r1, _0805D1D4 @ =gUnknown_03001884
	ldr r6, [r1]
	movs r1, #0xc5
	lsls r1, r1, #2
	adds r3, r0, r1
	ldrh r1, [r3]
	adds r1, #1
	ldr r4, _0805D1D8 @ =0x000003FF
	adds r2, r4, #0
	ands r1, r2
	strh r1, [r3]
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r2, r0, r1
	ldr r5, _0805D1DC @ =gUnknown_08097AA4
	ldrh r1, [r3]
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r4, [r2]
	adds r1, r1, r4
	strh r1, [r2]
	ldr r1, _0805D1E0 @ =0x00000312
	adds r0, r0, r1
	ldrh r1, [r3]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r1, r5
	ldrh r1, [r1]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r4, [r0]
	adds r1, r1, r4
	strh r1, [r0]
	ldrh r4, [r2]
	lsls r4, r4, #0x10
	lsls r1, r1, #0x10
	ldr r2, _0805D1E4 @ =gFlags
	ldr r0, [r2]
	movs r3, #4
	orrs r0, r3
	str r0, [r2]
	ldr r0, _0805D1E8 @ =gUnknown_03002A80
	strb r3, [r0]
	ldr r2, _0805D1EC @ =gUnknown_03002878
	ldr r0, _0805D1F0 @ =0x0400001C
	str r0, [r2]
	movs r2, #0
	adds r7, r5, #0
	ldr r5, _0805D1F4 @ =gUnknown_03002264
	ldr r3, _0805D1D8 @ =0x000003FF
	asrs r4, r4, #0x18
	mov ip, r4
	asrs r4, r1, #0x18
_0805D18E:
	lsls r1, r2, #2
	ldr r0, [r5]
	adds r0, r0, r1
	ands r0, r3
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1b
	add r0, ip
	strh r0, [r6]
	adds r6, #2
	lsls r1, r2, #1
	ldr r0, [r5]
	adds r0, r0, r1
	ands r0, r3
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r7
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x1b
	adds r0, r4, r0
	strh r0, [r6]
	adds r6, #2
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x9f
	bls _0805D18E
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D1D4: .4byte gUnknown_03001884
_0805D1D8: .4byte 0x000003FF
_0805D1DC: .4byte gUnknown_08097AA4
_0805D1E0: .4byte 0x00000312
_0805D1E4: .4byte gFlags
_0805D1E8: .4byte gUnknown_03002A80
_0805D1EC: .4byte gUnknown_03002878
_0805D1F0: .4byte 0x0400001C
_0805D1F4: .4byte gUnknown_03002264

	thumb_func_start sub_805D1F8
sub_805D1F8: @ 0x0805D1F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	movs r0, #1
	str r0, [sp, #4]
	mov r0, sp
	movs r1, #0
	movs r2, #2
	bl memset
	ldr r0, _0805D254 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov r8, r0
	ldr r2, _0805D258 @ =IWRAM_START + 0x31F
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805D27E
	ldr r0, _0805D25C @ =gRepeatedKeys
	ldrh r2, [r0]
	movs r0, #0x10
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0805D264
	ldr r0, _0805D260 @ =IWRAM_START + 0x31E
	adds r4, r1, r0
	ldrb r0, [r4]
	cmp r0, #0
	bne _0805D24A
	movs r0, #0x6c
	bl m4aSongNumStart
_0805D24A:
	mov r1, sp
	ldrb r1, [r1, #4]
	strb r1, [r4]
	b _0805D27E
	.align 2, 0
_0805D254: .4byte gCurTask
_0805D258: .4byte IWRAM_START + 0x31F
_0805D25C: .4byte gRepeatedKeys
_0805D260: .4byte IWRAM_START + 0x31E
_0805D264:
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _0805D27E
	ldr r2, _0805D2CC @ =IWRAM_START + 0x31E
	adds r4, r1, r2
	ldrb r0, [r4]
	cmp r0, #1
	bne _0805D27C
	movs r0, #0x6c
	bl m4aSongNumStart
_0805D27C:
	strb r5, [r4]
_0805D27E:
	ldr r0, _0805D2D0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805D306
	movs r3, #0
	ldr r0, _0805D2D4 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r7, r0, #0
	cmp r1, #0
	beq _0805D306
	movs r5, #1
	ldr r2, _0805D2D8 @ =gUnknown_030054D4
_0805D29A:
	ldr r1, _0805D2DC @ =gMultiSioStatusFlags
	adds r0, r5, #0
	lsls r0, r3
	ldr r4, [r1]
	ands r4, r0
	cmp r4, #0
	bne _0805D2F0
	ldrb r0, [r2]
	adds r1, r0, #1
	strb r1, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb4
	bls _0805D2F4
	movs r0, #0
	ldr r1, _0805D2E0 @ =0x0000FFFF
	bl sub_80029D0
	ldr r1, _0805D2E4 @ =gUnknown_03002AE4
	ldr r0, _0805D2E8 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _0805D2EC @ =gUnknown_03005390
	strb r4, [r0]
	b _0805D52A
	.align 2, 0
_0805D2CC: .4byte IWRAM_START + 0x31E
_0805D2D0: .4byte gUnknown_030054CC
_0805D2D4: .4byte gUnknown_030055B8
_0805D2D8: .4byte gUnknown_030054D4
_0805D2DC: .4byte gMultiSioStatusFlags
_0805D2E0: .4byte 0x0000FFFF
_0805D2E4: .4byte gUnknown_03002AE4
_0805D2E8: .4byte gUnknown_0300287C
_0805D2EC: .4byte gUnknown_03005390
_0805D2F0:
	movs r0, #0
	strb r0, [r2]
_0805D2F4:
	adds r2, #1
	adds r3, #1
	cmp r3, #3
	bhi _0805D306
	ldrb r0, [r7]
	asrs r0, r3
	ands r0, r5
	cmp r0, #0
	bne _0805D29A
_0805D306:
	mov r4, r8
	adds r4, #0xf0
	movs r0, #0x78
	strh r0, [r4, #0x16]
	movs r0, #0x1c
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	bl sub_80051E8
	movs r6, #0
	ldr r2, _0805D3A8 @ =gUnknown_030055B8
	ldrb r0, [r2]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0805D328
	b _0805D436
_0805D328:
	mov sb, r2
	mov r7, sp
	movs r0, #0
	str r0, [sp, #8]
	movs r1, #0x40
	mov sl, r1
	movs r2, #0
	str r2, [sp, #0xc]
_0805D338:
	ldr r0, _0805D3AC @ =gMultiSioRecv
	ldr r1, [sp, #0xc]
	adds r5, r1, r0
	cmp r6, #0
	bne _0805D34E
	movs r4, #0xd8
	lsls r4, r4, #1
	add r4, r8
	adds r0, r4, #0
	bl sub_8004558
_0805D34E:
	ldrh r1, [r5]
	ldr r2, _0805D3B0 @ =0xFFFFBFC0
	adds r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0805D40C
	ldr r0, _0805D3B4 @ =0x00004041
	cmp r1, r0
	beq _0805D3E2
	ldr r4, [sp, #8]
	add r4, r8
	mov r1, sl
	strh r1, [r4, #0x18]
	ldr r1, _0805D3B8 @ =gUnknown_080D92B8
	ldrb r0, [r5, #2]
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4, #0x16]
	adds r0, r4, #0
	bl sub_80051E8
	movs r4, #0xd8
	lsls r4, r4, #1
	add r4, r8
	mov r2, sl
	strh r2, [r4, #0x18]
	ldr r1, _0805D3BC @ =gUnknown_080D92BA
	ldrb r0, [r5, #2]
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4, #0x16]
	ldrb r0, [r5, #2]
	cmp r0, #0
	bne _0805D3C4
	ldr r0, [r4, #0x10]
	ldr r1, _0805D3C0 @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r4, #0x10]
	movs r1, #0x10
	lsls r1, r6
	mov r2, sb
	ldrb r0, [r2]
	bics r0, r1
	b _0805D3D8
	.align 2, 0
_0805D3A8: .4byte gUnknown_030055B8
_0805D3AC: .4byte gMultiSioRecv
_0805D3B0: .4byte 0xFFFFBFC0
_0805D3B4: .4byte 0x00004041
_0805D3B8: .4byte gUnknown_080D92B8
_0805D3BC: .4byte gUnknown_080D92BA
_0805D3C0: .4byte 0xFFFFFBFF
_0805D3C4:
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #0x10]
	movs r0, #0x10
	lsls r0, r6
	mov r2, sb
	ldrb r1, [r2]
	orrs r0, r1
_0805D3D8:
	strb r0, [r2]
	adds r0, r4, #0
	bl sub_80051E8
	b _0805D40C
_0805D3E2:
	ldr r4, [sp, #8]
	add r4, r8
	adds r0, r4, #0
	bl sub_80051E8
	movs r2, #0x16
	ldrsh r1, [r4, r2]
	ldr r0, _0805D400 @ =gUnknown_080D92B8
	ldrb r0, [r0]
	cmp r1, r0
	bne _0805D404
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	b _0805D410
	.align 2, 0
_0805D400: .4byte gUnknown_080D92B8
_0805D404:
	ldrb r0, [r7, #1]
	adds r0, #1
	strb r0, [r7, #1]
	b _0805D410
_0805D40C:
	movs r0, #0
	str r0, [sp, #4]
_0805D410:
	ldr r1, [sp, #8]
	adds r1, #0x30
	str r1, [sp, #8]
	movs r2, #0x18
	add sl, r2
	ldr r0, [sp, #0xc]
	adds r0, #0x14
	str r0, [sp, #0xc]
	adds r6, #1
	cmp r6, #3
	bgt _0805D436
	mov r1, sb
	ldrb r0, [r1]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805D436
	b _0805D338
_0805D436:
	lsls r0, r6, #0x18
	lsrs r5, r0, #0x18
	ldr r2, [sp, #4]
	cmp r2, #0
	beq _0805D474
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805D450
	mov r0, sp
	ldrb r0, [r0, #1]
	cmp r0, #0
	bne _0805D460
_0805D450:
	ldr r1, _0805D45C @ =0x0000031F
	add r1, r8
	movs r0, #0
	strb r0, [r1]
	b _0805D474
	.align 2, 0
_0805D45C: .4byte 0x0000031F
_0805D460:
	ldr r0, _0805D46C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805D470 @ =sub_805D610
	str r0, [r1, #8]
	b _0805D59C
	.align 2, 0
_0805D46C: .4byte gCurTask
_0805D470: .4byte sub_805D610
_0805D474:
	mov r0, r8
	bl sub_805D118
	ldr r4, _0805D4FC @ =gPressedKeys
	ldrh r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0805D494
	movs r0, #0x6b
	bl m4aSongNumStart
	ldr r1, _0805D500 @ =0x0000031F
	add r1, r8
	movs r0, #0
	strb r0, [r1]
_0805D494:
	ldr r0, _0805D504 @ =gInput
	ldrh r1, [r0]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	bne _0805D4CC
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805D4CC
	ldr r0, _0805D508 @ =0x0000031E
	add r0, r8
	ldrb r2, [r0]
	cmp r2, #0
	bne _0805D4BE
	subs r1, r5, #1
	mov r0, sp
	ldrb r0, [r0]
	cmp r1, r0
	bne _0805D4D6
_0805D4BE:
	cmp r2, #1
	bne _0805D4CC
	subs r0, r5, #1
	mov r1, sp
	ldrb r1, [r1, #1]
	cmp r0, r1
	bne _0805D4D6
_0805D4CC:
	ldr r0, _0805D500 @ =0x0000031F
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805D550
_0805D4D6:
	ldr r4, _0805D500 @ =0x0000031F
	add r4, r8
	ldrb r0, [r4]
	cmp r0, #0
	bne _0805D4E6
	movs r0, #0x6a
	bl m4aSongNumStart
_0805D4E6:
	ldr r5, _0805D50C @ =gMultiSioSend
	ldr r0, _0805D510 @ =0x00004041
	strh r0, [r5]
	ldr r0, _0805D508 @ =0x0000031E
	add r0, r8
	ldrb r0, [r0]
	strb r0, [r5, #2]
	movs r0, #1
	strb r0, [r4]
	b _0805D55E
	.align 2, 0
_0805D4FC: .4byte gPressedKeys
_0805D500: .4byte 0x0000031F
_0805D504: .4byte gInput
_0805D508: .4byte 0x0000031E
_0805D50C: .4byte gMultiSioSend
_0805D510: .4byte 0x00004041
_0805D514:
	ldr r1, _0805D538 @ =0x0000FFFF
	movs r0, #0
	bl sub_80029D0
	ldr r1, _0805D53C @ =gUnknown_03002AE4
	ldr r0, _0805D540 @ =gUnknown_0300287C
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _0805D544 @ =gUnknown_03005390
	movs r0, #0
	strb r0, [r1]
_0805D52A:
	ldr r1, _0805D548 @ =gUnknown_03004D5C
	ldr r0, _0805D54C @ =gUnknown_03002A84
	ldrb r0, [r0]
	strb r0, [r1]
	bl sub_805B9A4
	b _0805D59C
	.align 2, 0
_0805D538: .4byte 0x0000FFFF
_0805D53C: .4byte gUnknown_03002AE4
_0805D540: .4byte gUnknown_0300287C
_0805D544: .4byte gUnknown_03005390
_0805D548: .4byte gUnknown_03004D5C
_0805D54C: .4byte gUnknown_03002A84
_0805D550:
	ldr r5, _0805D5AC @ =gMultiSioSend
	ldr r0, _0805D5B0 @ =0x00004040
	strh r0, [r5]
	ldr r0, _0805D5B4 @ =0x0000031E
	add r0, r8
	ldrb r0, [r0]
	strb r0, [r5, #2]
_0805D55E:
	movs r6, #0
	ldr r0, _0805D5B8 @ =gUnknown_030055B8
	ldrb r1, [r0]
	movs r2, #1
	ands r1, r2
	adds r7, r0, #0
	cmp r1, #0
	beq _0805D59C
	ldr r3, _0805D5BC @ =0x00004041
	movs r2, #0
_0805D572:
	ldr r0, _0805D5C0 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, r6
	beq _0805D588
	ldr r0, _0805D5C4 @ =gMultiSioRecv
	adds r5, r2, r0
	ldrh r0, [r5]
	cmp r0, r3
	bhi _0805D514
_0805D588:
	adds r2, #0x14
	adds r6, #1
	cmp r6, #3
	bgt _0805D59C
	ldrb r0, [r7]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0805D572
_0805D59C:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D5AC: .4byte gMultiSioSend
_0805D5B0: .4byte 0x00004040
_0805D5B4: .4byte 0x0000031E
_0805D5B8: .4byte gUnknown_030055B8
_0805D5BC: .4byte 0x00004041
_0805D5C0: .4byte 0x04000128
_0805D5C4: .4byte gMultiSioRecv

	thumb_func_start sub_805D5C8
sub_805D5C8: @ 0x0805D5C8
	push {r4, lr}
	ldr r4, _0805D5FC @ =gCurTask
	ldr r0, [r4]
	ldrh r2, [r0, #6]
	ldr r0, _0805D600 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	movs r1, #1
	ands r1, r0
	ldr r3, _0805D604 @ =IWRAM_START + 0x31E
	adds r0, r2, r3
	movs r3, #0
	strb r1, [r0]
	ldr r0, _0805D608 @ =IWRAM_START + 0x31F
	adds r2, r2, r0
	strb r3, [r2]
	ldr r1, [r4]
	ldr r0, _0805D60C @ =sub_805D1F8
	str r0, [r1, #8]
	bl _call_via_r0
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0805D5FC: .4byte gCurTask
_0805D600: .4byte 0x04000128
_0805D604: .4byte IWRAM_START + 0x31E
_0805D608: .4byte IWRAM_START + 0x31F
_0805D60C: .4byte sub_805D1F8

	thumb_func_start sub_805D610
sub_805D610: @ 0x0805D610
	push {lr}
	ldr r0, _0805D638 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	ldr r2, _0805D63C @ =gFlags
	ldr r0, [r2]
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2]
	ldr r0, _0805D640 @ =gUnknown_030054D8
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_80346C8
	pop {r0}
	bx r0
	.align 2, 0
_0805D638: .4byte gCurTask
_0805D63C: .4byte gFlags
_0805D640: .4byte gUnknown_030054D8

	thumb_func_start sub_805D644
sub_805D644: @ 0x0805D644
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	movs r4, #0
	movs r5, #1
	ldr r7, _0805D688 @ =gUnknown_080D92B8
_0805D64E:
	ldr r0, _0805D68C @ =gUnknown_030055B8
	ldrb r0, [r0]
	asrs r0, r4
	ands r0, r5
	cmp r0, #0
	beq _0805D676
	lsls r2, r4, #1
	adds r2, r2, r4
	lsls r0, r2, #4
	adds r0, r6, r0
	adds r1, r4, #0
	ands r1, r5
	adds r1, r1, r7
	ldrb r1, [r1]
	strh r1, [r0, #0x16]
	lsls r2, r2, #3
	adds r2, #0x40
	strh r2, [r0, #0x18]
	bl sub_80051E8
_0805D676:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _0805D64E
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D688: .4byte gUnknown_080D92B8
_0805D68C: .4byte gUnknown_030055B8

	thumb_func_start sub_805D690
sub_805D690: @ 0x0805D690
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sb, r3
	movs r0, #3
	ldrsb r0, [r7, r0]
	cmp r0, #0
	blt _0805D762
	ldr r0, _0805D774 @ =sub_805D794
	ldr r2, _0805D778 @ =0x00002010
	ldr r1, _0805D77C @ =sub_805D814
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r6, r0
	ldr r1, _0805D780 @ =IWRAM_START + 0xC
	adds r4, r6, r1
	movs r2, #0
	mov r8, r2
	strh r5, [r0, #4]
	mov r1, sl
	strh r1, [r0, #6]
	str r7, [r0]
	ldrb r1, [r7]
	strb r1, [r0, #8]
	mov r2, sb
	strb r2, [r0, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	lsls r1, r5, #8
	adds r0, r0, r1
	strh r0, [r4, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r2, sl
	lsls r1, r2, #8
	adds r0, r0, r1
	strh r0, [r4, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	ldr r5, _0805D784 @ =gUnknown_080D93F4
	movs r0, #3
	ldrsb r0, [r7, r0]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldr r0, [r0]
	bl sub_8007C10
	str r0, [r4, #4]
	movs r0, #3
	ldrsb r0, [r7, r0]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrh r0, [r0, #4]
	strh r0, [r4, #0xa]
	movs r0, #3
	ldrsb r0, [r7, r0]
	lsls r0, r0, #3
	adds r0, r0, r5
	ldrb r1, [r0, #6]
	ldr r2, _0805D788 @ =IWRAM_START + 0x2C
	adds r0, r6, r2
	strb r1, [r0]
	movs r0, #0xe0
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	mov r0, r8
	strh r0, [r4, #8]
	strh r0, [r4, #0x14]
	strh r0, [r4, #0x1c]
	adds r2, #1
	adds r1, r6, r2
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805D78C @ =IWRAM_START + 0x2E
	adds r1, r6, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0805D790 @ =IWRAM_START + 0x31
	adds r6, r6, r1
	movs r2, #0
	strb r2, [r6]
	subs r0, #0x11
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
_0805D762:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D774: .4byte sub_805D794
_0805D778: .4byte 0x00002010
_0805D77C: .4byte sub_805D814
_0805D780: .4byte IWRAM_START + 0xC
_0805D784: .4byte gUnknown_080D93F4
_0805D788: .4byte IWRAM_START + 0x2C
_0805D78C: .4byte IWRAM_START + 0x2E
_0805D790: .4byte IWRAM_START + 0x31

	thumb_func_start sub_805D794
sub_805D794: @ 0x0805D794
	push {r4, r5, r6, r7, lr}
	ldr r4, _0805D7F8 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r7, [r5]
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805D7FC @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r2, r2, r0
	strh r2, [r6, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0805D7EA
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805D7EA
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0805D800
_0805D7EA:
	ldrb r0, [r5, #8]
	strb r0, [r7]
	ldr r0, [r4]
	bl TaskDestroy
	b _0805D80C
	.align 2, 0
_0805D7F8: .4byte gCurTask
_0805D7FC: .4byte gUnknown_03005960
_0805D800:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0805D80C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805D814
sub_805D814: @ 0x0805D814
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_805D828
sub_805D828: @ 0x0805D828
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0805D950 @ =sub_805D96C
	movs r1, #0x80
	lsls r1, r1, #6
	mov sl, r1
	ldr r1, _0805D954 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x3c
	mov r2, sl
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r2, r0
	ldr r3, _0805D958 @ =IWRAM_START + 0xC
	adds r7, r2, r3
	movs r1, #0
	mov sb, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r3, r8
	str r3, [r0]
	ldrb r1, [r3]
	strb r1, [r0, #8]
	strb r6, [r0, #9]
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r7, #0x16]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	ldr r0, _0805D95C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	movs r1, #0
	cmp r0, #5
	bne _0805D8A0
	movs r1, #1
_0805D8A0:
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	mov r3, r8
	strb r0, [r3]
	ldr r5, _0805D960 @ =gUnknown_080D942C
	movs r0, #3
	ldrsb r0, [r3, r0]
	lsls r0, r0, #3
	lsls r4, r1, #1
	adds r4, r4, r1
	lsls r4, r4, #4
	adds r0, r0, r4
	adds r0, r0, r5
	ldr r0, [r0]
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r7, #4]
	mov r1, r8
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	adds r0, r0, r4
	adds r0, r0, r5
	ldrh r0, [r0, #4]
	strh r0, [r7, #0xa]
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	adds r0, r0, r4
	adds r0, r0, r5
	ldrb r1, [r0, #6]
	ldr r2, [sp, #4]
	ldr r3, _0805D964 @ =IWRAM_START + 0x2C
	adds r0, r2, r3
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	mov r0, sb
	strh r0, [r7, #8]
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x1c]
	adds r3, #1
	adds r1, r2, r3
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805D968 @ =IWRAM_START + 0x2E
	adds r1, r2, r0
	movs r0, #0x10
	strb r0, [r1]
	adds r3, #4
	adds r1, r2, r3
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	mov r0, sl
	str r0, [r7, #0x10]
	mov r1, r8
	ldrb r0, [r1, #5]
	cmp r0, #0
	beq _0805D92C
	movs r0, #0x80
	lsls r0, r0, #4
	mov r3, sl
	orrs r0, r3
	str r0, [r7, #0x10]
_0805D92C:
	mov r1, r8
	movs r0, #4
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _0805D940
	ldr r0, [r7, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r7, #0x10]
_0805D940:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D950: .4byte sub_805D96C
_0805D954: .4byte sub_80095E8
_0805D958: .4byte IWRAM_START + 0xC
_0805D95C: .4byte gUnknown_030055B4
_0805D960: .4byte gUnknown_080D942C
_0805D964: .4byte IWRAM_START + 0x2C
_0805D968: .4byte IWRAM_START + 0x2E

	thumb_func_start sub_805D96C
sub_805D96C: @ 0x0805D96C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _0805D9EC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r7, [r6]
	ldrb r1, [r6, #8]
	lsls r1, r1, #3
	ldrh r0, [r6, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	ldrh r0, [r6, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805D9F0 @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r0, r1, r0
	strh r0, [r5, #0x16]
	ldr r0, [r3, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r0, r2, r0
	strh r0, [r5, #0x18]
	ldr r4, _0805D9F4 @ =gUnknown_030059E0
	ldr r3, [r4, #0x20]
	movs r0, #0x82
	ands r3, r0
	cmp r3, #0
	beq _0805D9BA
	b _0805DAC4
_0805D9BA:
	str r4, [sp]
	str r3, [sp, #4]
	adds r0, r5, #0
	movs r3, #0
	bl sub_800C204
	cmp r0, #1
	beq _0805D9CC
	b _0805DAC4
_0805D9CC:
	adds r0, r4, #0
	bl sub_80218E4
	ldr r0, [r4, #0x20]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0805D9F8
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	b _0805DA06
	.align 2, 0
_0805D9EC: .4byte gCurTask
_0805D9F0: .4byte gUnknown_03005960
_0805D9F4: .4byte gUnknown_030059E0
_0805D9F8:
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
_0805DA06:
	strb r0, [r4, #0x17]
	movs r0, #0x9b
	bl m4aSongNumStart
	ldr r2, _0805DA58 @ =gUnknown_030059E0
	adds r1, r2, #0
	adds r1, #0x62
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x5a
	movs r3, #1
	strb r3, [r0]
	ldr r0, _0805DA5C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805DA70
	ldr r1, [r5, #0x10]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0805DA64
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	bne _0805DAAC
	ldr r0, [r2, #0x20]
	orrs r0, r3
	str r0, [r2, #0x20]
	movs r0, #0x14
	ldrsh r1, [r2, r0]
	ldr r0, _0805DA60 @ =0xFFFFF400
	cmp r1, r0
	ble _0805DAC4
	movs r0, #0xf4
	lsls r0, r0, #8
	b _0805DAC2
	.align 2, 0
_0805DA58: .4byte gUnknown_030059E0
_0805DA5C: .4byte gUnknown_03005424
_0805DA60: .4byte 0xFFFFF400
_0805DA64:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	bne _0805DA92
	b _0805DAAC
_0805DA70:
	ldr r1, [r5, #0x10]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0805DA88
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	beq _0805DA92
	b _0805DAAC
_0805DA88:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r1, r0
	cmp r1, #0
	beq _0805DAAC
_0805DA92:
	ldr r0, [r2, #0x20]
	orrs r0, r3
	str r0, [r2, #0x20]
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	ldr r1, _0805DAA8 @ =0xFFFFF400
	cmp r0, r1
	ble _0805DAC4
	strh r1, [r2, #0x14]
	b _0805DAC4
	.align 2, 0
_0805DAA8: .4byte 0xFFFFF400
_0805DAAC:
	ldr r0, [r2, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r2, #0x20]
	movs r0, #0x14
	ldrsh r1, [r2, r0]
	ldr r0, _0805DAF8 @ =0x00000BFF
	cmp r1, r0
	bgt _0805DAC4
	adds r0, #1
_0805DAC2:
	strh r0, [r2, #0x14]
_0805DAC4:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805DAE8
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805DAE8
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805DB00
_0805DAE8:
	ldrb r0, [r6, #8]
	strb r0, [r7]
	ldr r0, _0805DAFC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805DB0C
	.align 2, 0
_0805DAF8: .4byte 0x00000BFF
_0805DAFC: .4byte gCurTask
_0805DB00:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0805DB0C:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805DB14
sub_805DB14: @ 0x0805DB14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0805DC18 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r0, [r7]
	mov sb, r0
	ldrb r0, [r7, #8]
	lsls r0, r0, #3
	ldrh r1, [r7, #6]
	lsls r1, r1, #8
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	mov r1, sb
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	ldrh r1, [r7, #4]
	lsls r1, r1, #8
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r6, _0805DC1C @ =gUnknown_030059E0
	ldr r2, [r6, #0x20]
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _0805DB5E
	b _0805DC8A
_0805DB5E:
	mov r3, sl
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	ldr r0, [r6, #8]
	asrs r1, r0, #8
	cmp r3, r1
	ble _0805DB6E
	b _0805DC8A
_0805DB6E:
	mov r4, sb
	ldrb r0, [r4, #5]
	lsls r0, r0, #3
	adds r0, r3, r0
	cmp r0, r1
	bge _0805DB7C
	b _0805DC8A
_0805DB7C:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	ldr r0, [r6, #0xc]
	asrs r1, r0, #8
	cmp r3, r1
	ble _0805DB8C
	b _0805DC8A
_0805DB8C:
	ldrb r0, [r4, #6]
	lsls r0, r0, #3
	adds r0, r3, r0
	cmp r0, r1
	blt _0805DC8A
	movs r3, #2
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _0805DC8A
	movs r0, #9
	ldrsb r0, [r7, r0]
	cmp r0, #0
	bne _0805DC20
	movs r4, #0x10
	ldrsh r1, [r6, r4]
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r1, r0
	ble _0805DC8A
	movs r0, #9
	rsbs r0, r0, #0
	ands r2, r0
	orrs r2, r3
	subs r0, #0xf8
	ands r2, r0
	adds r0, #0xfc
	ands r2, r0
	str r2, [r6, #0x20]
	adds r0, r6, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r5, #6
	strb r5, [r6, #0x16]
	movs r4, #0xe
	strb r4, [r6, #0x17]
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6, #0x12]
	movs r1, #0x88
	lsls r1, r1, #5
	strh r1, [r6, #0x14]
	ldrh r0, [r6, #0x10]
	adds r0, r0, r1
	strh r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8023260
	adds r0, r6, #0
	bl sub_80218E4
	adds r0, r6, #0
	movs r1, #0xe
	bl sub_8023B5C
	strb r5, [r6, #0x16]
	strb r4, [r6, #0x17]
	adds r1, r6, #0
	adds r1, #0x64
	movs r0, #0x27
	strh r0, [r1]
	adds r1, #9
	movs r0, #7
	strb r0, [r1]
	movs r0, #0x99
	bl m4aSongNumStart
	b _0805DC8A
	.align 2, 0
_0805DC18: .4byte gCurTask
_0805DC1C: .4byte gUnknown_030059E0
_0805DC20:
	movs r0, #0x10
	ldrsh r1, [r6, r0]
	ldr r0, _0805DCE8 @ =0xFFFFFC00
	cmp r1, r0
	bge _0805DC8A
	movs r0, #9
	rsbs r0, r0, #0
	ands r2, r0
	orrs r2, r3
	subs r0, #0xf8
	ands r2, r0
	adds r0, #0xfc
	ands r2, r0
	str r2, [r6, #0x20]
	adds r0, r6, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r5, #6
	strb r5, [r6, #0x16]
	movs r4, #0xe
	strb r4, [r6, #0x17]
	movs r0, #0xfd
	lsls r0, r0, #8
	strh r0, [r6, #0x12]
	movs r1, #0xef
	lsls r1, r1, #8
	strh r1, [r6, #0x14]
	ldrh r0, [r6, #0x10]
	adds r0, r0, r1
	strh r0, [r6, #0x10]
	adds r0, r6, #0
	bl sub_8023260
	adds r0, r6, #0
	bl sub_80218E4
	adds r0, r6, #0
	movs r1, #0xe
	bl sub_8023B5C
	strb r5, [r6, #0x16]
	strb r4, [r6, #0x17]
	adds r1, r6, #0
	adds r1, #0x64
	movs r0, #0xb
	strh r0, [r1]
	adds r1, #9
	movs r0, #7
	strb r0, [r1]
	movs r0, #0x99
	bl m4aSongNumStart
_0805DC8A:
	ldr r2, _0805DCEC @ =gUnknown_03005960
	ldr r0, [r2]
	mov r3, sl
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	ldr r2, [r2, #4]
	mov r4, r8
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	movs r0, #0x80
	lsls r0, r0, #0x10
	adds r1, r1, r0
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0805DCCC
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	adds r0, r1, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805DCCC
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805DCDA
_0805DCCC:
	ldrb r0, [r7, #8]
	mov r3, sb
	strb r0, [r3]
	ldr r0, _0805DCF0 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_0805DCDA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805DCE8: .4byte 0xFFFFFC00
_0805DCEC: .4byte gUnknown_03005960
_0805DCF0: .4byte gCurTask

	thumb_func_start sub_805DCF4
sub_805DCF4: @ 0x0805DCF4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _0805DD40 @ =sub_805DB14
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0xc
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	strh r4, [r0, #6]
	strh r5, [r0, #4]
	str r6, [r0]
	ldrb r1, [r6, #3]
	strb r1, [r0, #9]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805DD40: .4byte sub_805DB14

	thumb_func_start sub_805DD44
sub_805DD44: @ 0x0805DD44
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0805DDC8 @ =sub_805DE60
	ldr r2, _0805DDCC @ =0x00002010
	ldr r1, _0805DDD0 @ =sub_805E10C
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	mov sb, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	add r0, sb
	ldr r7, _0805DDD4 @ =IWRAM_START + 0xC
	add r7, sb
	movs r1, #0
	mov sl, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r2, r8
	str r2, [r0]
	ldrb r1, [r2]
	strb r1, [r0, #8]
	strb r6, [r0, #9]
	ldrb r0, [r2]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r7, #0x16]
	ldrb r0, [r2, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r2]
	ldr r0, _0805DDD8 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	cmp r0, #2
	bne _0805DDE0
	movs r0, #0x10
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0805DDDC @ =0x0000023A
	b _0805DE0E
	.align 2, 0
_0805DDC8: .4byte sub_805DE60
_0805DDCC: .4byte 0x00002010
_0805DDD0: .4byte sub_805E10C
_0805DDD4: .4byte IWRAM_START + 0xC
_0805DDD8: .4byte gUnknown_030055B4
_0805DDDC: .4byte 0x0000023A
_0805DDE0:
	cmp r0, #5
	bne _0805DE04
	movs r0, #0x18
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0805DDFC @ =0x0000025B
	strh r0, [r7, #0xa]
	ldr r0, _0805DE00 @ =IWRAM_START + 0x2C
	add r0, sb
	mov r1, sl
	strb r1, [r0]
	b _0805DE18
	.align 2, 0
_0805DDFC: .4byte 0x0000025B
_0805DE00: .4byte IWRAM_START + 0x2C
_0805DE04:
	movs r0, #0x18
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _0805DE58 @ =0x00000219
_0805DE0E:
	strh r0, [r7, #0xa]
	ldr r0, _0805DE5C @ =IWRAM_START + 0x2C
	add r0, sb
	mov r2, sl
	strb r2, [r0]
_0805DE18:
	movs r2, #0
	movs r1, #0
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r1, [r7, #8]
	strh r1, [r7, #0x14]
	strh r1, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	strb r2, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805DE58: .4byte 0x00000219
_0805DE5C: .4byte IWRAM_START + 0x2C

	thumb_func_start sub_805DE60
sub_805DE60: @ 0x0805DE60
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _0805DF44 @ =gCurTask
	ldr r0, [r0]
	ldrh r7, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov sl, r0
	ldr r0, _0805DF48 @ =IWRAM_START + 0xC
	adds r0, r0, r7
	mov sb, r0
	mov r1, sl
	ldr r1, [r1]
	str r1, [sp]
	mov r2, sl
	ldrb r1, [r2, #8]
	lsls r1, r1, #3
	ldrh r0, [r2, #4]
	lsls r0, r0, #8
	adds r3, r1, r0
	ldr r4, [sp]
	ldrb r1, [r4, #1]
	lsls r1, r1, #3
	ldrh r0, [r2, #6]
	lsls r0, r0, #8
	adds r2, r1, r0
	ldr r1, _0805DF4C @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r3, r0
	mov r4, sb
	strh r0, [r4, #0x16]
	ldr r0, [r1, #4]
	subs r0, r2, r0
	strh r0, [r4, #0x18]
	ldr r4, _0805DF50 @ =gUnknown_030059E0
	ldr r0, [r4, #0x20]
	ldr r1, _0805DF54 @ =0x00400080
	ands r0, r1
	cmp r0, #0
	beq _0805DEBC
	b _0805DFBA
_0805DEBC:
	ldrh r5, [r4, #0x12]
	mov r0, sb
	adds r1, r3, #0
	adds r3, r4, #0
	bl sub_800CCB8
	cmp r0, #0
	beq _0805DFBA
	lsls r6, r5, #0x10
	asrs r5, r6, #0x10
	movs r1, #0xc8
	lsls r1, r1, #1
	adds r0, r5, #0
	bl Div
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #2
	bls _0805DEE8
	movs r0, #2
	mov r8, r0
_0805DEE8:
	asrs r0, r6, #0x13
	adds r0, r5, r0
	rsbs r0, r0, #0
	strh r0, [r4, #0x12]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0805DF58 @ =0xFFFFF880
	cmp r0, r1
	ble _0805DEFC
	strh r1, [r4, #0x12]
_0805DEFC:
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	ldr r1, _0805DF5C @ =0xFFFFF400
	cmp r0, r1
	bge _0805DF08
	strh r1, [r4, #0x12]
_0805DF08:
	adds r1, r4, #0
	adds r1, #0x36
	movs r0, #3
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_80218E4
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #0xe
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	movs r1, #2
	orrs r0, r1
	ldr r1, _0805DF60 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r4, #0x20]
	ldr r0, _0805DF64 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	cmp r0, #2
	bne _0805DF6C
	ldr r1, _0805DF68 @ =gUnknown_080D94A4
	b _0805DF7A
	.align 2, 0
_0805DF44: .4byte gCurTask
_0805DF48: .4byte IWRAM_START + 0xC
_0805DF4C: .4byte gUnknown_03005960
_0805DF50: .4byte gUnknown_030059E0
_0805DF54: .4byte 0x00400080
_0805DF58: .4byte 0xFFFFF880
_0805DF5C: .4byte 0xFFFFF400
_0805DF60: .4byte 0xFFFFFEFF
_0805DF64: .4byte gUnknown_030055B4
_0805DF68: .4byte gUnknown_080D94A4
_0805DF6C:
	cmp r0, #5
	bne _0805DF78
	ldr r1, _0805DF74 @ =gUnknown_080D94BC
	b _0805DF7A
	.align 2, 0
_0805DF74: .4byte gUnknown_080D94BC
_0805DF78:
	ldr r1, _0805DFF4 @ =gUnknown_080D948C
_0805DF7A:
	mov r2, r8
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r1, [r0, #4]
	mov r4, sb
	strh r1, [r4, #0xa]
	ldrb r1, [r0, #6]
	ldr r2, _0805DFF8 @ =IWRAM_START + 0x2C
	adds r0, r7, r2
	strb r1, [r0]
	ldr r4, _0805DFFC @ =IWRAM_START + 0x2D
	adds r1, r7, r4
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _0805E000 @ =gUnknown_030059E0
	adds r1, r2, #0
	adds r1, #0x64
	movs r0, #0x26
	strh r0, [r1]
	adds r1, #9
	movs r0, #7
	strb r0, [r1]
	subs r1, #7
	ldr r0, _0805E004 @ =0x0000FFFF
	strh r0, [r1]
	movs r0, #0xaa
	bl m4aSongNumStart
	ldr r0, _0805E008 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805E00C @ =sub_805E02C
	str r0, [r1, #8]
_0805DFBA:
	mov r1, sb
	ldrh r0, [r1, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805DFE2
	mov r2, sb
	movs r4, #0x18
	ldrsh r0, [r2, r4]
	adds r0, #0x80
	cmp r0, #0
	blt _0805DFE2
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805E010
_0805DFE2:
	mov r1, sl
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _0805E008 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805E01C
	.align 2, 0
_0805DFF4: .4byte gUnknown_080D948C
_0805DFF8: .4byte IWRAM_START + 0x2C
_0805DFFC: .4byte IWRAM_START + 0x2D
_0805E000: .4byte gUnknown_030059E0
_0805E004: .4byte 0x0000FFFF
_0805E008: .4byte gCurTask
_0805E00C: .4byte sub_805E02C
_0805E010:
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
_0805E01C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805E02C
sub_805E02C: @ 0x0805E02C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r7, _0805E0A0 @ =gCurTask
	ldr r0, [r7]
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r6, r0
	adds r0, #0xc
	adds r4, r6, r0
	ldr r1, [r5]
	mov ip, r1
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r0, ip
	ldrb r2, [r0, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805E0A4 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	movs r0, #0
	mov r8, r0
	strh r1, [r4, #0x16]
	ldr r0, [r3, #4]
	subs r2, r2, r0
	strh r2, [r4, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	adds r3, r7, #0
	cmp r1, r0
	bhi _0805E090
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805E090
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0805E0A8
_0805E090:
	ldrb r0, [r5, #8]
	mov r1, ip
	strb r0, [r1]
	ldr r0, [r3]
	bl TaskDestroy
	b _0805E0FA
	.align 2, 0
_0805E0A0: .4byte gCurTask
_0805E0A4: .4byte gUnknown_03005960
_0805E0A8:
	adds r0, r4, #0
	bl sub_8004558
	cmp r0, #0
	bne _0805E0F4
	ldr r1, [r7]
	ldr r0, _0805E0C8 @ =sub_805DE60
	str r0, [r1, #8]
	ldr r0, _0805E0CC @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	cmp r0, #2
	bne _0805E0D4
	ldr r0, _0805E0D0 @ =0x0000023A
	b _0805E0E2
	.align 2, 0
_0805E0C8: .4byte sub_805DE60
_0805E0CC: .4byte gUnknown_030055B4
_0805E0D0: .4byte 0x0000023A
_0805E0D4:
	cmp r0, #5
	bne _0805E0E0
	ldr r0, _0805E0DC @ =0x0000025B
	b _0805E0E2
	.align 2, 0
_0805E0DC: .4byte 0x0000025B
_0805E0E0:
	ldr r0, _0805E104 @ =0x00000219
_0805E0E2:
	strh r0, [r4, #0xa]
	ldr r1, _0805E108 @ =IWRAM_START + 0x2C
	adds r0, r6, r1
	mov r1, r8
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
_0805E0F4:
	adds r0, r4, #0
	bl sub_80051E8
_0805E0FA:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E104: .4byte 0x00000219
_0805E108: .4byte IWRAM_START + 0x2C

	thumb_func_start sub_805E10C
sub_805E10C: @ 0x0805E10C
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_805E120
sub_805E120: @ 0x0805E120
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _0805E210 @ =sub_805E234
	ldr r1, _0805E214 @ =sub_805E87C
	str r1, [sp]
	movs r1, #0x40
	movs r2, #0x80
	lsls r2, r2, #6
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r6, r0
	ldr r1, _0805E218 @ =IWRAM_START + 0xC
	adds r7, r6, r1
	movs r3, #0
	mov sl, r3
	movs r2, #0
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r1, sb
	str r1, [r0]
	ldrb r1, [r1]
	strb r1, [r0, #8]
	mov r3, r8
	strb r3, [r0, #9]
	movs r3, #2
	rsbs r3, r3, #0
	adds r1, r3, #0
	mov r3, sb
	strb r1, [r3]
	strh r2, [r0, #0x3c]
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r7, #0x16]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	movs r0, #0x20
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r1, _0805E21C @ =gUnknown_080D94D4
	ldr r0, _0805E220 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldr r1, _0805E224 @ =IWRAM_START + 0x2C
	adds r0, r6, r1
	mov r3, sl
	strb r3, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	ldr r2, [sp, #4]
	strh r2, [r7, #8]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	ldr r0, _0805E228 @ =IWRAM_START + 0x2D
	adds r1, r6, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r3, _0805E22C @ =IWRAM_START + 0x2E
	adds r1, r6, r3
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0805E230 @ =IWRAM_START + 0x31
	adds r6, r6, r0
	mov r1, sl
	strb r1, [r6]
	movs r3, #0x80
	lsls r3, r3, #6
	str r3, [r7, #0x10]
	mov r1, sb
	movs r0, #3
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _0805E1FA
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r0, r3
	str r0, [r7, #0x10]
_0805E1FA:
	adds r0, r7, #0
	bl sub_8004558
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E210: .4byte sub_805E234
_0805E214: .4byte sub_805E87C
_0805E218: .4byte IWRAM_START + 0xC
_0805E21C: .4byte gUnknown_080D94D4
_0805E220: .4byte gUnknown_030055B4
_0805E224: .4byte IWRAM_START + 0x2C
_0805E228: .4byte IWRAM_START + 0x2D
_0805E22C: .4byte IWRAM_START + 0x2E
_0805E230: .4byte IWRAM_START + 0x31

	thumb_func_start sub_805E234
sub_805E234: @ 0x0805E234
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r1, _0805E32C @ =gCurTask
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r3, _0805E330 @ =IWRAM_START + 0xC
	adds r4, r1, r3
	ldr r6, [r5]
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldr r3, _0805E334 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r7, r1, #0x10
	mov sb, r7
	asrs r1, r1, #0x10
	subs r0, r1, r0
	movs r7, #0
	mov r8, r7
	strh r0, [r4, #0x16]
	ldr r0, [r3, #4]
	lsrs r3, r2, #0x10
	mov sl, r3
	asrs r2, r2, #0x10
	subs r0, r2, r0
	strh r0, [r4, #0x18]
	ldr r3, _0805E338 @ =gUnknown_030059E0
	adds r0, r4, #0
	bl sub_800C060
	movs r1, #8
	ands r1, r0
	cmp r1, #0
	beq _0805E2A2
	ldr r7, _0805E32C @ =gCurTask
	ldr r1, [r7]
	ldr r0, _0805E33C @ =sub_805E35C
	str r0, [r1, #8]
	mov r0, r8
	strh r0, [r5, #0x3c]
_0805E2A2:
	ldr r0, _0805E340 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805E2C2
	movs r1, #0
	ldrsb r1, [r6, r1]
	movs r0, #3
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0805E2C2
	mov r1, r8
	strh r1, [r5, #0x3c]
	ldr r3, _0805E32C @ =gCurTask
	ldr r1, [r3]
	ldr r0, _0805E344 @ =sub_805E480
	str r0, [r1, #8]
_0805E2C2:
	mov r7, sb
	lsls r0, r7, #0x10
	asrs r1, r0, #0x10
	ldr r3, _0805E334 @ =gUnknown_03005960
	ldr r2, [r3]
	movs r7, #0xb8
	lsls r7, r7, #1
	adds r0, r2, r7
	cmp r1, r0
	bgt _0805E2F8
	adds r0, r2, #0
	subs r0, #0x80
	cmp r1, r0
	blt _0805E2F8
	mov r1, sl
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805E2F8
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805E348
_0805E2F8:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805E31C
	movs r7, #0x18
	ldrsh r0, [r4, r7]
	adds r0, #0x80
	cmp r0, #0
	blt _0805E31C
	movs r0, #0x18
	ldrsh r1, [r4, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805E348
_0805E31C:
	ldrb r0, [r5, #8]
	strb r0, [r6]
	ldr r0, _0805E32C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805E34E
	.align 2, 0
_0805E32C: .4byte gCurTask
_0805E330: .4byte IWRAM_START + 0xC
_0805E334: .4byte gUnknown_03005960
_0805E338: .4byte gUnknown_030059E0
_0805E33C: .4byte sub_805E35C
_0805E340: .4byte gUnknown_030054CC
_0805E344: .4byte sub_805E480
_0805E348:
	adds r0, r4, #0
	bl sub_80051E8
_0805E34E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805E35C
sub_805E35C: @ 0x0805E35C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0805E3CC @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r3, _0805E3D0 @ =IWRAM_START + 0xC
	adds r5, r1, r3
	ldr r6, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldr r3, _0805E3D4 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r7, r1, #0x10
	asrs r1, r1, #0x10
	subs r0, r1, r0
	strh r0, [r5, #0x16]
	ldr r0, [r3, #4]
	lsrs r3, r2, #0x10
	mov r8, r3
	asrs r2, r2, #0x10
	subs r0, r2, r0
	strh r0, [r5, #0x18]
	ldr r3, _0805E3D8 @ =gUnknown_030059E0
	adds r0, r5, #0
	bl sub_800C060
	ldr r0, _0805E3DC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #2
	bls _0805E3E0
	movs r1, #0
	ldrsb r1, [r6, r1]
	movs r0, #3
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0805E3E0
	movs r0, #0
	strh r0, [r4, #0x3c]
	mov r0, sb
	b _0805E3F4
	.align 2, 0
_0805E3CC: .4byte gCurTask
_0805E3D0: .4byte IWRAM_START + 0xC
_0805E3D4: .4byte gUnknown_03005960
_0805E3D8: .4byte gUnknown_030059E0
_0805E3DC: .4byte gUnknown_030054CC
_0805E3E0:
	ldrh r0, [r4, #0x3c]
	adds r1, r0, #1
	strh r1, [r4, #0x3c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1e
	ble _0805E3FA
	movs r0, #0
	strh r0, [r4, #0x3c]
	ldr r0, _0805E460 @ =gCurTask
_0805E3F4:
	ldr r1, [r0]
	ldr r0, _0805E464 @ =sub_805E480
	str r0, [r1, #8]
_0805E3FA:
	lsls r0, r7, #0x10
	asrs r1, r0, #0x10
	ldr r3, _0805E468 @ =gUnknown_03005960
	ldr r2, [r3]
	movs r7, #0xb8
	lsls r7, r7, #1
	adds r0, r2, r7
	cmp r1, r0
	bgt _0805E42E
	adds r0, r2, #0
	subs r0, #0x80
	cmp r1, r0
	blt _0805E42E
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	ldr r1, [r3, #4]
	movs r3, #0x90
	lsls r3, r3, #1
	adds r0, r1, r3
	cmp r2, r0
	bgt _0805E42E
	adds r0, r1, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805E46C
_0805E42E:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805E452
	movs r7, #0x18
	ldrsh r0, [r5, r7]
	adds r0, #0x80
	cmp r0, #0
	blt _0805E452
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805E46C
_0805E452:
	ldrb r0, [r4, #8]
	strb r0, [r6]
	ldr r0, _0805E460 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805E472
	.align 2, 0
_0805E460: .4byte gCurTask
_0805E464: .4byte sub_805E480
_0805E468: .4byte gUnknown_03005960
_0805E46C:
	adds r0, r5, #0
	bl sub_80051E8
_0805E472:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805E480
sub_805E480: @ 0x0805E480
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _0805E51C @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov r8, r0
	ldr r2, _0805E520 @ =IWRAM_START + 0xC
	adds r5, r1, r2
	ldr r7, [r0]
	ldrb r1, [r0, #8]
	lsls r1, r1, #3
	ldrh r0, [r0, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	mov r3, r8
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r4, _0805E524 @ =gUnknown_03005960
	ldr r0, [r4, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r0, r0, r2
	adds r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, [r4]
	lsls r1, r1, #0x10
	asrs r6, r1, #0x10
	subs r0, r6, r0
	strh r0, [r5, #0x16]
	ldr r0, [r4, #4]
	subs r0, r2, r0
	strh r0, [r5, #0x18]
	ldrh r0, [r3, #0x3c]
	adds r0, #1
	strh r0, [r3, #0x3c]
	ldr r3, _0805E528 @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_800C060
	ldr r4, [r4]
	movs r1, #0xb8
	lsls r1, r1, #1
	adds r0, r4, r1
	cmp r6, r0
	bgt _0805E4FE
	adds r0, r4, #0
	subs r0, #0x80
	cmp r6, r0
	bge _0805E52C
_0805E4FE:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0805E52C
	mov r2, r8
	ldrb r0, [r2, #8]
	strb r0, [r7]
	mov r3, sb
	ldr r0, [r3]
	bl TaskDestroy
	b _0805E688
	.align 2, 0
_0805E51C: .4byte gCurTask
_0805E520: .4byte IWRAM_START + 0xC
_0805E524: .4byte gUnknown_03005960
_0805E528: .4byte gUnknown_030059E0
_0805E52C:
	ldr r0, _0805E5B8 @ =gUnknown_03002794
	ldr r1, [r0]
	ldrh r0, [r5, #0xa]
	ldr r1, [r1, #8]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r5, #0xc]
	ldrb r1, [r0, #1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r2, r2, r0
	mov sl, r2
	movs r6, #0
	mov sb, r6
_0805E54C:
	movs r7, #0
_0805E54E:
	ldr r1, _0805E5BC @ =0x0000FFE1
	adds r0, r6, r1
	mov r2, r8
	ldrh r2, [r2, #0x3c]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	ble _0805E5CC
	cmp r6, #0
	bne _0805E590
	cmp r0, #1
	bne _0805E590
	ldr r2, _0805E5C0 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0805E588
	ldr r0, [r2, #0x3c]
	cmp r0, r5
	bne _0805E588
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r2, #0x20]
_0805E588:
	ldr r0, _0805E5C4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805E5C8 @ =sub_805E6A4
	str r0, [r1, #8]
_0805E590:
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x2a
	muls r0, r1, r0
	muls r1, r0, r1
	lsls r1, r1, #8
	lsrs r4, r1, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0805E5CE
	cmp r6, #0
	bne _0805E688
	ldr r0, _0805E5C4 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805E688
	.align 2, 0
_0805E5B8: .4byte gUnknown_03002794
_0805E5BC: .4byte 0x0000FFE1
_0805E5C0: .4byte gUnknown_030059E0
_0805E5C4: .4byte gCurTask
_0805E5C8: .4byte sub_805E6A4
_0805E5CC:
	movs r4, #0
_0805E5CE:
	ldrh r0, [r5, #0x1a]
	movs r2, #0xf8
	lsls r2, r2, #3
	adds r1, r2, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _0805E624 @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _0805E688
	mov r0, sb
	lsls r1, r0, #3
	ldrh r2, [r5, #0x18]
	adds r1, r1, r2
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	movs r1, #0xff
	ands r0, r1
	movs r2, #0
	strh r0, [r3]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0805E62C
	lsls r1, r7, #3
	ldrh r0, [r5, #0x16]
	subs r0, r0, r1
	subs r0, #8
	ldr r2, _0805E628 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	b _0805E638
	.align 2, 0
_0805E624: .4byte gUnknown_03005BB4
_0805E628: .4byte 0x000001FF
_0805E62C:
	lsls r0, r7, #3
	ldrh r1, [r5, #0x16]
	adds r0, r0, r1
	ldr r2, _0805E698 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
_0805E638:
	strh r0, [r3, #2]
	adds r0, r5, #0
	adds r0, #0x25
	ldrb r0, [r0]
	mov r1, sl
	ldrh r2, [r1, #4]
	adds r2, r2, r0
	ldr r1, _0805E69C @ =0xFFFFF000
	adds r0, r1, #0
	ands r2, r0
	ldr r0, [r5, #0x10]
	movs r1, #0xc0
	lsls r1, r1, #6
	ands r0, r1
	lsrs r0, r0, #2
	orrs r2, r0
	ldr r0, [r5, #4]
	ldr r1, _0805E6A0 @ =0xF9FF0000
	adds r0, r0, r1
	lsrs r0, r0, #5
	adds r0, r0, r6
	orrs r2, r0
	strh r2, [r3, #4]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #7
	bhi _0805E678
	b _0805E54E
_0805E678:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #3
	bhi _0805E688
	b _0805E54C
_0805E688:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E698: .4byte 0x000001FF
_0805E69C: .4byte 0xFFFFF000
_0805E6A0: .4byte 0xF9FF0000

	thumb_func_start sub_805E6A4
sub_805E6A4: @ 0x0805E6A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r6, _0805E738 @ =gCurTask
	ldr r0, [r6]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r1
	mov r8, r0
	ldr r0, _0805E73C @ =IWRAM_START + 0xC
	adds r5, r1, r0
	mov r1, r8
	ldr r1, [r1]
	str r1, [sp]
	mov r3, r8
	ldrb r2, [r3, #8]
	lsls r2, r2, #3
	ldrh r0, [r3, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r3, _0805E740 @ =gUnknown_03005960
	ldr r0, [r3, #4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r0, r0, r1
	adds r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [r3]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r0, r2, r0
	strh r0, [r5, #0x16]
	ldr r0, [r3, #4]
	subs r1, r1, r0
	strh r1, [r5, #0x18]
	mov r1, r8
	ldrh r0, [r1, #0x3c]
	adds r0, #1
	strh r0, [r1, #0x3c]
	ldr r3, [r3]
	movs r1, #0xb8
	lsls r1, r1, #1
	adds r0, r3, r1
	cmp r2, r0
	bgt _0805E71A
	adds r0, r3, #0
	subs r0, #0x80
	cmp r2, r0
	bge _0805E744
_0805E71A:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bls _0805E744
	mov r2, r8
	ldrb r0, [r2, #8]
	ldr r3, [sp]
	strb r0, [r3]
	ldr r0, [r6]
	bl TaskDestroy
	b _0805E860
	.align 2, 0
_0805E738: .4byte gCurTask
_0805E73C: .4byte IWRAM_START + 0xC
_0805E740: .4byte gUnknown_03005960
_0805E744:
	ldr r0, _0805E7A4 @ =gUnknown_03002794
	ldr r1, [r0]
	ldrh r0, [r5, #0xa]
	ldr r1, [r1, #8]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r2, [r0]
	ldr r0, [r5, #0xc]
	ldrb r1, [r0, #1]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r2, r2, r0
	str r2, [sp, #4]
	movs r7, #0
	movs r0, #0
	mov sb, r0
	lsls r4, r4, #0x10
	mov sl, r4
_0805E76A:
	movs r6, #0
_0805E76C:
	ldr r1, _0805E7A8 @ =0x0000FFE1
	adds r0, r7, r1
	mov r2, r8
	ldrh r2, [r2, #0x3c]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x2a
	muls r1, r0, r1
	muls r0, r1, r0
	lsls r0, r0, #8
	asrs r4, r0, #0x10
	mov r3, sl
	asrs r0, r3, #0x10
	cmp r4, r0
	ble _0805E7B0
	cmp r7, #0
	bne _0805E860
	ldr r0, _0805E7AC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	mov r1, r8
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	b _0805E860
	.align 2, 0
_0805E7A4: .4byte gUnknown_03002794
_0805E7A8: .4byte 0x0000FFE1
_0805E7AC: .4byte gCurTask
_0805E7B0:
	ldrh r0, [r5, #0x1a]
	movs r3, #0xf8
	lsls r3, r3, #3
	adds r1, r3, #0
	ands r0, r1
	lsrs r0, r0, #6
	bl sub_80058B4
	adds r3, r0, #0
	ldr r0, _0805E800 @ =gUnknown_03005BB4
	ldr r0, [r0]
	cmp r0, r3
	beq _0805E860
	mov r1, sb
	lsls r0, r1, #3
	ldrh r2, [r5, #0x18]
	adds r0, r0, r2
	adds r0, r4, r0
	movs r1, #0xff
	ands r0, r1
	movs r2, #0
	strh r0, [r3]
	ldr r0, [r5, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	cmp r0, #0
	beq _0805E808
	lsls r1, r6, #3
	ldrh r0, [r5, #0x16]
	subs r0, r0, r1
	subs r0, #8
	ldr r2, _0805E804 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	b _0805E814
	.align 2, 0
_0805E800: .4byte gUnknown_03005BB4
_0805E804: .4byte 0x000001FF
_0805E808:
	lsls r0, r6, #3
	ldrh r1, [r5, #0x16]
	adds r0, r0, r1
	ldr r2, _0805E870 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
_0805E814:
	strh r0, [r3, #2]
	adds r0, r5, #0
	adds r0, #0x25
	ldrb r0, [r0]
	ldr r1, [sp, #4]
	ldrh r2, [r1, #4]
	adds r2, r2, r0
	ldr r1, _0805E874 @ =0xFFFFF000
	adds r0, r1, #0
	ands r2, r0
	ldr r0, [r5, #0x10]
	movs r1, #0xc0
	lsls r1, r1, #6
	ands r0, r1
	lsrs r0, r0, #2
	orrs r2, r0
	ldr r0, [r5, #4]
	ldr r1, _0805E878 @ =0xF9FF0000
	adds r0, r0, r1
	lsrs r0, r0, #5
	adds r0, r0, r7
	orrs r2, r0
	strh r2, [r3, #4]
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #7
	bls _0805E76C
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #3
	bls _0805E76A
_0805E860:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E870: .4byte 0x000001FF
_0805E874: .4byte 0xFFFFF000
_0805E878: .4byte 0xF9FF0000

	thumb_func_start sub_805E87C
sub_805E87C: @ 0x0805E87C
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_805E890
sub_805E890: @ 0x0805E890
	push {r4, r5, r6, r7, lr}
	ldr r3, _0805E8F0 @ =gCurTask
	ldr r0, [r3]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r6, [r0]
	ldrb r7, [r0, #8]
	ldrh r1, [r0, #4]
	ldrh r2, [r0, #6]
	lsls r0, r7, #3
	lsls r1, r1, #8
	adds r5, r0, r1
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r4, r0, r2
	ldr r1, _0805E8F4 @ =gUnknown_030059E0
	ldr r0, [r1, #8]
	asrs r2, r0, #8
	mov ip, r1
	cmp r5, r2
	bgt _0805E910
	ldrb r0, [r6, #5]
	lsls r0, r0, #3
	adds r0, r5, r0
	cmp r0, r2
	blt _0805E910
	ldr r0, [r1, #0xc]
	asrs r1, r0, #8
	cmp r4, r1
	bgt _0805E910
	ldrb r0, [r6, #6]
	lsls r0, r0, #3
	adds r0, r4, r0
	cmp r0, r1
	blt _0805E910
	ldrb r0, [r6, #2]
	cmp r0, #0
	bne _0805E8F8
	mov r2, ip
	adds r2, #0x38
	ldrb r1, [r2]
	movs r0, #0xfe
	ands r0, r1
	b _0805E902
	.align 2, 0
_0805E8F0: .4byte gCurTask
_0805E8F4: .4byte gUnknown_030059E0
_0805E8F8:
	mov r2, ip
	adds r2, #0x38
	ldrb r1, [r2]
	movs r0, #1
	orrs r0, r1
_0805E902:
	strb r0, [r2]
	mov r1, ip
	ldr r0, [r1, #0x20]
	ldr r1, _0805E944 @ =0xFEFFFFFF
	ands r0, r1
	mov r1, ip
	str r0, [r1, #0x20]
_0805E910:
	ldr r1, _0805E948 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r5, r5, r0
	ldr r0, [r1, #4]
	subs r4, r4, r0
	adds r1, r5, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _0805E936
	adds r0, r4, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805E936
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r4, r0
	ble _0805E93E
_0805E936:
	strb r7, [r6]
	ldr r0, [r3]
	bl TaskDestroy
_0805E93E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E944: .4byte 0xFEFFFFFF
_0805E948: .4byte gUnknown_03005960

	thumb_func_start sub_805E94C
sub_805E94C: @ 0x0805E94C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _0805E994 @ =sub_805E890
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0xc
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805E994: .4byte sub_805E890

	thumb_func_start sub_805E998
sub_805E998: @ 0x0805E998
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov r8, r3
	movs r0, #3
	ldrsb r0, [r7, r0]
	cmp r0, #0
	blt _0805EA5E
	ldr r0, _0805EA70 @ =sub_805EA94
	ldr r2, _0805EA74 @ =0x00002010
	ldr r1, _0805EA78 @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r5, r0
	ldr r1, _0805EA7C @ =IWRAM_START + 0xC
	adds r4, r5, r1
	movs r6, #0
	mov r2, sb
	strh r2, [r0, #4]
	mov r1, sl
	strh r1, [r0, #6]
	str r7, [r0]
	ldrb r1, [r7]
	strb r1, [r0, #8]
	mov r2, r8
	strb r2, [r0, #9]
	strh r6, [r0, #0x3c]
	strh r6, [r0, #0x3e]
	ldr r1, _0805EA80 @ =IWRAM_START + 0x40
	adds r0, r5, r1
	movs r2, #0
	strb r2, [r0]
	ldrb r0, [r7]
	lsls r0, r0, #3
	mov r2, sb
	lsls r1, r2, #8
	adds r0, r0, r1
	strh r0, [r4, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r2, sl
	lsls r1, r2, #8
	adds r0, r0, r1
	strh r0, [r4, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #9
	bl sub_8007C10
	str r0, [r4, #4]
	ldr r0, _0805EA84 @ =0x00000222
	strh r0, [r4, #0xa]
	ldr r2, _0805EA88 @ =IWRAM_START + 0x2C
	adds r0, r5, r2
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	strh r6, [r4, #8]
	strh r6, [r4, #0x14]
	strh r6, [r4, #0x1c]
	adds r2, #1
	adds r1, r5, r2
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0805EA8C @ =IWRAM_START + 0x2E
	adds r1, r5, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0805EA90 @ =IWRAM_START + 0x31
	adds r5, r5, r1
	movs r2, #0
	strb r2, [r5]
	subs r0, #0x11
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
_0805EA5E:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805EA70: .4byte sub_805EA94
_0805EA74: .4byte 0x00002010
_0805EA78: .4byte sub_80095E8
_0805EA7C: .4byte IWRAM_START + 0xC
_0805EA80: .4byte IWRAM_START + 0x40
_0805EA84: .4byte 0x00000222
_0805EA88: .4byte IWRAM_START + 0x2C
_0805EA8C: .4byte IWRAM_START + 0x2E
_0805EA90: .4byte IWRAM_START + 0x31

	thumb_func_start sub_805EA94
sub_805EA94: @ 0x0805EA94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _0805EB78 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov sb, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	mov r1, sb
	adds r7, r1, r0
	ldr r6, _0805EB7C @ =IWRAM_START + 0xC
	add r6, sb
	ldr r2, [r7]
	str r2, [sp, #8]
	ldrb r1, [r7, #8]
	lsls r1, r1, #3
	ldrh r0, [r7, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [sp, #0xc]
	ldrb r1, [r2, #1]
	lsls r1, r1, #3
	ldrh r0, [r7, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov sl, r1
	ldr r1, _0805EB80 @ =gUnknown_03005960
	ldr r0, [r1]
	ldr r2, [sp, #0xc]
	subs r0, r2, r0
	strh r0, [r6, #0x16]
	ldr r0, [r1, #4]
	mov r1, sl
	subs r0, r1, r0
	strh r0, [r6, #0x18]
	ldr r5, _0805EB84 @ =gUnknown_030059E0
	ldr r4, [r5, #0x20]
	ldr r0, _0805EB88 @ =0x00400080
	ands r4, r0
	cmp r4, #0
	beq _0805EAF0
	b _0805EC4C
_0805EAF0:
	str r5, [sp]
	str r4, [sp, #4]
	adds r0, r6, #0
	ldr r1, [sp, #0xc]
	mov r2, sl
	movs r3, #0
	bl sub_800C204
	mov r8, r0
	cmp r0, #1
	beq _0805EB08
	b _0805EC4C
_0805EB08:
	adds r0, r5, #0
	bl sub_80218E4
	strh r4, [r7, #0x3c]
	movs r2, #0x10
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bge _0805EB1A
	rsbs r0, r0, #0
_0805EB1A:
	movs r2, #0x12
	ldrsh r1, [r5, r2]
	cmp r1, #0
	bge _0805EB24
	rsbs r1, r1, #0
_0805EB24:
	adds r0, r0, r1
	strh r0, [r7, #0x3e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xdf
	bgt _0805EB34
	movs r0, #0xe0
	strh r0, [r7, #0x3e]
_0805EB34:
	movs r1, #0x3e
	ldrsh r0, [r7, r1]
	movs r1, #0xc0
	lsls r1, r1, #1
	cmp r0, r1
	ble _0805EB42
	strh r1, [r7, #0x3e]
_0805EB42:
	movs r2, #0x10
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _0805EBB4
	ldr r0, [r5, #0x20]
	movs r1, #2
	rsbs r1, r1, #0
	ands r0, r1
	str r0, [r5, #0x20]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	cmp r0, sl
	ble _0805EB90
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x2d
	strh r0, [r1]
	ldr r1, _0805EB8C @ =IWRAM_START + 0x40
	add r1, sb
	movs r0, #0
	b _0805EBFC
	.align 2, 0
_0805EB78: .4byte gCurTask
_0805EB7C: .4byte IWRAM_START + 0xC
_0805EB80: .4byte gUnknown_03005960
_0805EB84: .4byte gUnknown_030059E0
_0805EB88: .4byte 0x00400080
_0805EB8C: .4byte IWRAM_START + 0x40
_0805EB90:
	ldr r0, [r6, #0x10]
	ldr r1, _0805EBAC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x2e
	strh r0, [r1]
	ldr r0, _0805EBB0 @ =IWRAM_START + 0x40
	add r0, sb
	mov r1, r8
	strb r1, [r0]
	b _0805EBFE
	.align 2, 0
_0805EBAC: .4byte 0xFFFFFBFF
_0805EBB0: .4byte IWRAM_START + 0x40
_0805EBB4:
	ldr r0, [r5, #0x20]
	mov r2, r8
	orrs r0, r2
	str r0, [r5, #0x20]
	ldr r0, [r5, #0xc]
	asrs r0, r0, #8
	cmp r0, sl
	ble _0805EBE4
	ldr r0, [r6, #0x10]
	ldr r1, _0805EBDC @ =0xFFFFFBFF
	ands r0, r1
	str r0, [r6, #0x10]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x2d
	strh r0, [r1]
	ldr r1, _0805EBE0 @ =IWRAM_START + 0x40
	add r1, sb
	movs r0, #2
	b _0805EBFC
	.align 2, 0
_0805EBDC: .4byte 0xFFFFFBFF
_0805EBE0: .4byte IWRAM_START + 0x40
_0805EBE4:
	ldr r0, [r6, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r6, #0x10]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x2e
	strh r0, [r1]
	ldr r1, _0805EC3C @ =IWRAM_START + 0x40
	add r1, sb
	movs r0, #3
_0805EBFC:
	strb r0, [r1]
_0805EBFE:
	ldr r5, _0805EC40 @ =gUnknown_030059E0
	ldr r1, [sp, #0xc]
	lsls r0, r1, #8
	str r0, [r5, #8]
	mov r2, sl
	lsls r0, r2, #8
	str r0, [r5, #0xc]
	adds r1, r5, #0
	adds r1, #0x6a
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x9b
	bl m4aSongNumStart
	adds r0, r5, #0
	adds r0, #0x62
	strb r4, [r0]
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r5, #0x20]
	ldr r0, _0805EC44 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805EC48 @ =sub_805ECA0
	str r0, [r1, #8]
	b _0805EC84
	.align 2, 0
_0805EC3C: .4byte IWRAM_START + 0x40
_0805EC40: .4byte gUnknown_030059E0
_0805EC44: .4byte gCurTask
_0805EC48: .4byte sub_805ECA0
_0805EC4C:
	ldrh r0, [r6, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805EC70
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805EC70
	movs r2, #0x18
	ldrsh r1, [r6, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805EC84
_0805EC70:
	ldrb r0, [r7, #8]
	ldr r1, [sp, #8]
	strb r0, [r1]
	ldr r0, _0805EC80 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805EC90
	.align 2, 0
_0805EC80: .4byte gCurTask
_0805EC84:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0805EC90:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805ECA0
sub_805ECA0: @ 0x0805ECA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r0, _0805ED20 @ =gCurTask
	ldr r2, [r0]
	ldrh r7, [r2, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r7
	mov sl, r0
	ldr r1, _0805ED24 @ =IWRAM_START + 0xC
	adds r1, r1, r7
	mov sb, r1
	ldr r3, [r0]
	str r3, [sp]
	ldrb r1, [r0, #8]
	lsls r1, r1, #3
	ldrh r0, [r0, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [sp, #4]
	ldrb r1, [r3, #1]
	lsls r1, r1, #3
	mov r3, sl
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [sp, #8]
	ldrh r0, [r3, #0x3e]
	ldrh r1, [r3, #0x3c]
	adds r0, r0, r1
	ldr r3, _0805ED28 @ =0x00003FF0
	adds r1, r3, #0
	ands r0, r1
	mov r1, sl
	strh r0, [r1, #0x3c]
	ldr r3, _0805ED2C @ =0x000003FF
	mov r8, r3
	lsrs r6, r0, #4
	ldr r1, _0805ED30 @ =gUnknown_03005960
	ldr r0, [r1]
	ldr r3, [sp, #4]
	subs r0, r3, r0
	mov r3, sb
	strh r0, [r3, #0x16]
	ldr r0, [r1, #4]
	ldr r1, [sp, #8]
	subs r0, r1, r0
	strh r0, [r3, #0x18]
	ldr r5, _0805ED34 @ =gUnknown_030059E0
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0805ED3C
	ldr r0, _0805ED38 @ =sub_805EF90
	str r0, [r2, #8]
	mov r0, sb
	bl sub_80051E8
	b _0805EF80
	.align 2, 0
_0805ED20: .4byte gCurTask
_0805ED24: .4byte IWRAM_START + 0xC
_0805ED28: .4byte 0x00003FF0
_0805ED2C: .4byte 0x000003FF
_0805ED30: .4byte gUnknown_03005960
_0805ED34: .4byte gUnknown_030059E0
_0805ED38: .4byte sub_805EF90
_0805ED3C:
	adds r1, r5, #0
	adds r1, #0x5e
	ldr r0, _0805ED98 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r4, [r0]
	ands r4, r1
	cmp r4, #0
	bne _0805ED4E
	b _0805EEC8
_0805ED4E:
	adds r1, r5, #0
	adds r1, #0x6d
	movs r0, #5
	strb r0, [r1]
	mov r2, sl
	ldrb r0, [r2, #8]
	ldr r3, [sp]
	strb r0, [r3]
	adds r0, r5, #0
	bl sub_80218E4
	adds r0, r5, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r5, #0x16]
	movs r0, #9
	strb r0, [r5, #0x17]
	ldr r0, [r5, #0x20]
	ldr r1, _0805ED9C @ =0xFFBFFFFF
	ands r0, r1
	str r0, [r5, #0x20]
	ldr r0, _0805EDA0 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _0805EDA4 @ =sub_805EF90
	str r0, [r1, #8]
	ldr r1, _0805EDA8 @ =IWRAM_START + 0x40
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #1
	beq _0805EDEC
	cmp r0, #1
	bgt _0805EDAC
	cmp r0, #0
	beq _0805EDB6
	b _0805EE80
	.align 2, 0
_0805ED98: .4byte gUnknown_03005B38
_0805ED9C: .4byte 0xFFBFFFFF
_0805EDA0: .4byte gCurTask
_0805EDA4: .4byte sub_805EF90
_0805EDA8: .4byte IWRAM_START + 0x40
_0805EDAC:
	cmp r0, #2
	beq _0805EE0C
	cmp r0, #3
	beq _0805EE44
	b _0805EE80
_0805EDB6:
	movs r0, #0x20
	subs r4, r0, r6
	mov r2, r8
	ands r4, r2
	ldr r2, _0805EDE8 @ =gUnknown_08097AA4
	lsls r0, r6, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	b _0805EE76
	.align 2, 0
_0805EDE8: .4byte gUnknown_08097AA4
_0805EDEC:
	adds r4, r6, #0
	adds r4, #0x20
	mov r0, r8
	ands r4, r0
	ldr r2, _0805EE08 @ =gUnknown_08097AA4
	lsls r0, r6, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #8]
	adds r0, r0, r1
	b _0805EE60
	.align 2, 0
_0805EE08: .4byte gUnknown_08097AA4
_0805EE0C:
	movs r0, #0xf0
	lsls r0, r0, #1
	adds r4, r6, r0
	mov r1, r8
	ands r4, r1
	ldr r2, _0805EE40 @ =gUnknown_08097AA4
	lsls r0, r6, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #8]
	subs r0, r0, r1
	str r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	b _0805EE76
	.align 2, 0
_0805EE40: .4byte gUnknown_08097AA4
_0805EE44:
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r1, #0
	subs r4, r0, r6
	mov r2, r8
	ands r4, r2
	ldr r2, _0805EE7C @ =gUnknown_08097AA4
	lsls r0, r6, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #8]
	subs r0, r0, r1
_0805EE60:
	str r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	asrs r1, r1, #1
	ldr r0, [r5, #0xc]
	subs r0, r0, r1
_0805EE76:
	str r0, [r5, #0xc]
	adds r6, r2, #0
	b _0805EE84
	.align 2, 0
_0805EE7C: .4byte gUnknown_08097AA4
_0805EE80:
	movs r4, #0
	ldr r6, _0805EEC0 @ =gUnknown_08097AA4
_0805EE84:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #1
	movs r1, #0x11
	bl Div
	ldr r5, _0805EEC4 @ =gUnknown_030059E0
	strh r0, [r5, #0x10]
	lsls r4, r4, #1
	adds r4, r4, r6
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #1
	movs r1, #0x11
	bl Div
	strh r0, [r5, #0x12]
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	adds r5, #0x6c
	movs r0, #1
	strb r0, [r5]
	b _0805EF2A
	.align 2, 0
_0805EEC0: .4byte gUnknown_08097AA4
_0805EEC4: .4byte gUnknown_030059E0
_0805EEC8:
	adds r0, r5, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x2d
	bne _0805EEE6
	adds r0, r6, #0
	movs r1, #0x56
	bl Div
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xb
	bls _0805EEF8
	b _0805EEF6
_0805EEE6:
	adds r0, r6, #0
	movs r1, #0x56
	bl Div
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xb
	bls _0805EEF8
_0805EEF6:
	movs r2, #0xb
_0805EEF8:
	ldr r0, _0805EF64 @ =0x00000222
	mov r3, sb
	strh r0, [r3, #0xa]
	ldr r1, _0805EF68 @ =IWRAM_START + 0x2C
	adds r0, r7, r1
	strb r2, [r0]
	ldr r3, _0805EF6C @ =IWRAM_START + 0x2D
	adds r1, r7, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x6a
	strh r2, [r0]
	adds r1, r5, #0
	adds r1, #0x6c
	movs r0, #1
	strb r0, [r1]
	ldr r1, [sp, #4]
	lsls r0, r1, #8
	str r0, [r5, #8]
	ldr r2, [sp, #8]
	lsls r0, r2, #8
	str r0, [r5, #0xc]
	strh r4, [r5, #0x10]
	strh r4, [r5, #0x12]
_0805EF2A:
	mov r3, sb
	ldrh r0, [r3, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805EF50
	movs r1, #0x18
	ldrsh r0, [r3, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805EF50
	movs r2, #0x18
	ldrsh r1, [r3, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805EF74
_0805EF50:
	mov r3, sl
	ldrb r0, [r3, #8]
	ldr r1, [sp]
	strb r0, [r1]
	ldr r0, _0805EF70 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805EF80
	.align 2, 0
_0805EF64: .4byte 0x00000222
_0805EF68: .4byte IWRAM_START + 0x2C
_0805EF6C: .4byte IWRAM_START + 0x2D
_0805EF70: .4byte gCurTask
_0805EF74:
	mov r0, sb
	bl sub_8004558
	mov r0, sb
	bl sub_80051E8
_0805EF80:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_805EF90
sub_805EF90: @ 0x0805EF90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0805F04C @ =gCurTask
	mov sl, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r5, r0
	ldr r1, _0805F050 @ =IWRAM_START + 0xC
	adds r6, r5, r1
	ldr r2, [r4]
	mov sb, r2
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r8, r1
	ldrb r1, [r2, #1]
	lsls r1, r1, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r7, r1, r0
	ldrh r0, [r4, #0x3e]
	subs r0, #1
	strh r0, [r4, #0x3e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xdf
	bgt _0805EFD8
	movs r0, #0xe0
	strh r0, [r4, #0x3e]
_0805EFD8:
	ldrh r0, [r4, #0x3e]
	ldrh r3, [r4, #0x3c]
	adds r0, r0, r3
	ldr r2, _0805F054 @ =0x00003FF0
	adds r1, r2, #0
	ands r0, r1
	strh r0, [r4, #0x3c]
	lsrs r0, r0, #4
	movs r1, #0x55
	bl Div
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0xb
	bls _0805EFF8
	movs r2, #0xb
_0805EFF8:
	ldr r0, _0805F058 @ =0x00000222
	strh r0, [r6, #0xa]
	ldr r3, _0805F05C @ =IWRAM_START + 0x2C
	adds r0, r5, r3
	strb r2, [r0]
	ldr r0, _0805F060 @ =IWRAM_START + 0x2D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r1, _0805F064 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r3, r8
	subs r0, r3, r0
	strh r0, [r6, #0x16]
	ldr r1, [r1, #4]
	subs r3, r7, r1
	strh r3, [r6, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805F03A
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805F03A
	lsls r1, r3, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0805F068
_0805F03A:
	ldrb r0, [r4, #8]
	mov r2, sb
	strb r0, [r2]
	ldr r0, _0805F04C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805F084
	.align 2, 0
_0805F04C: .4byte gCurTask
_0805F050: .4byte IWRAM_START + 0xC
_0805F054: .4byte 0x00003FF0
_0805F058: .4byte 0x00000222
_0805F05C: .4byte IWRAM_START + 0x2C
_0805F060: .4byte IWRAM_START + 0x2D
_0805F064: .4byte gUnknown_03005960
_0805F068:
	cmp r2, #0
	bne _0805F078
	strh r2, [r4, #0x3c]
	strh r2, [r4, #0x3e]
	mov r3, sl
	ldr r1, [r3]
	ldr r0, _0805F094 @ =sub_805EA94
	str r0, [r1, #8]
_0805F078:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0805F084:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F094: .4byte sub_805EA94

	thumb_func_start sub_805F098
sub_805F098: @ 0x0805F098
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0805F188 @ =gCurTask
	ldr r0, [r0]
	mov sb, r0
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	mov sl, r1
	adds r4, r0, r1
	ldr r7, [r4]
	ldrb r2, [r4, #8]
	str r2, [sp]
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #6]
	lsls r2, r2, #3
	lsls r0, r0, #8
	adds r6, r2, r0
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r5, r0, r1
	ldr r3, _0805F18C @ =gUnknown_030059E0
	ldr r2, [r3, #0x20]
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	bne _0805F144
	ldr r0, [r3, #8]
	mov r8, r0
	asrs r1, r0, #8
	cmp r6, r1
	bgt _0805F144
	ldrb r0, [r7, #5]
	lsls r0, r0, #3
	adds r0, r6, r0
	cmp r0, r1
	blt _0805F144
	ldr r1, [r3, #0xc]
	mov ip, r1
	asrs r1, r1, #8
	cmp r5, r1
	bgt _0805F144
	ldrb r0, [r7, #6]
	lsls r0, r0, #3
	adds r0, r5, r0
	cmp r0, r1
	blt _0805F144
	movs r1, #0x14
	ldrsh r0, [r3, r1]
	str r0, [sp, #4]
	mov r1, sl
	asrs r0, r1, #0x10
	ldr r1, [sp, #4]
	cmp r1, r0
	ble _0805F144
	movs r0, #3
	ands r0, r2
	cmp r0, #0
	bne _0805F144
	ldr r0, _0805F190 @ =sub_805F19C
	mov r1, sb
	str r0, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #0xf
	orrs r2, r0
	str r2, [r3, #0x20]
	ldr r0, [r4, #0x10]
	mov r2, ip
	subs r0, r2, r0
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [r4, #0xc]
	mov r3, r8
	subs r1, r3, r1
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r4, #0x14]
	ldr r0, _0805F194 @ =0x0000FFF8
	strh r0, [r4, #0x16]
_0805F144:
	ldr r1, _0805F198 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r6, r6, r0
	ldr r0, [r1, #4]
	subs r5, r5, r0
	adds r1, r6, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _0805F16A
	adds r0, r5, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805F16A
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r5, r0
	ble _0805F178
_0805F16A:
	mov r0, sp
	ldrb r0, [r0]
	strb r0, [r7]
	ldr r0, _0805F188 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_0805F178:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F188: .4byte gCurTask
_0805F18C: .4byte gUnknown_030059E0
_0805F190: .4byte sub_805F19C
_0805F194: .4byte 0x0000FFF8
_0805F198: .4byte gUnknown_03005960

	thumb_func_start sub_805F19C
sub_805F19C: @ 0x0805F19C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r3, _0805F1E0 @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, [r4]
	mov r8, r0
	ldrb r1, [r4, #8]
	mov ip, r1
	ldrh r5, [r4, #4]
	ldrh r6, [r4, #6]
	ldr r2, _0805F1E4 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #0x80
	ands r1, r0
	mov sl, r3
	mov sb, r2
	cmp r1, #0
	beq _0805F1E8
	mov r3, ip
	mov r2, r8
	strb r3, [r2]
	mov r6, sl
	ldr r0, [r6]
	bl TaskDestroy
	b _0805F2BC
	.align 2, 0
_0805F1E0: .4byte gCurTask
_0805F1E4: .4byte gUnknown_030059E0
_0805F1E8:
	mov r0, ip
	lsls r1, r0, #3
	lsls r0, r5, #8
	adds r7, r1, r0
	mov r1, r8
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r1, r6, #8
	adds r5, r0, r1
	ldrh r2, [r4, #0x16]
	ldrh r3, [r4, #0x14]
	adds r0, r2, r3
	ldr r6, _0805F2CC @ =0x000003FF
	adds r1, r6, #0
	ands r0, r1
	strh r0, [r4, #0x14]
	mov r1, sb
	adds r1, #0x24
	ldrb r0, [r1]
	adds r2, r2, r0
	strb r2, [r1]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	movs r0, #0xc0
	lsls r0, r0, #2
	subs r0, r0, r1
	cmp r0, #0
	bge _0805F224
	ldr r2, _0805F2D0 @ =0xFFFFFD00
	adds r0, r1, r2
_0805F224:
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r2, _0805F2D4 @ =gUnknown_08097AA4
	movs r6, #0x14
	ldrsh r0, [r4, r6]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r6, #0
	ldrsh r1, [r0, r6]
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x87
	muls r1, r0, r1
	asrs r1, r1, #6
	ldr r0, [r4, #0x10]
	adds r0, r0, r1
	mov r1, sb
	str r0, [r1, #0xc]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	asrs r0, r0, #6
	ldr r1, [r4, #0xc]
	adds r1, r1, r0
	mov r3, sb
	str r1, [r3, #8]
	ldr r1, _0805F2D8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r7, r7, r0
	ldr r0, [r1, #4]
	subs r5, r5, r0
	movs r6, #0x14
	ldrsh r1, [r4, r6]
	ldr r0, _0805F2DC @ =0x0000024A
	cmp r1, r0
	bgt _0805F292
	ldr r0, [r3, #0x20]
	ldr r1, _0805F2E0 @ =0xFFBFFFFF
	ands r0, r1
	str r0, [r3, #0x20]
	mov r0, sl
	ldr r1, [r0]
	ldr r0, _0805F2E4 @ =sub_805F098
	str r0, [r1, #8]
_0805F292:
	adds r1, r7, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _0805F2AE
	adds r0, r5, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805F2AE
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r5, r0
	ble _0805F2BC
_0805F2AE:
	mov r2, ip
	mov r1, r8
	strb r2, [r1]
	mov r3, sl
	ldr r0, [r3]
	bl TaskDestroy
_0805F2BC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F2CC: .4byte 0x000003FF
_0805F2D0: .4byte 0xFFFFFD00
_0805F2D4: .4byte gUnknown_08097AA4
_0805F2D8: .4byte gUnknown_03005960
_0805F2DC: .4byte 0x0000024A
_0805F2E0: .4byte 0xFFBFFFFF
_0805F2E4: .4byte sub_805F098

	thumb_func_start sub_805F2E8
sub_805F2E8: @ 0x0805F2E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _0805F3E8 @ =gCurTask
	ldr r0, [r0]
	mov sb, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r6, [r4]
	ldrb r0, [r4, #8]
	mov sl, r0
	ldrh r0, [r4, #4]
	ldrh r1, [r4, #6]
	mov r3, sl
	lsls r2, r3, #3
	lsls r0, r0, #8
	adds r7, r2, r0
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r5, r0, r1
	ldr r0, _0805F3EC @ =gUnknown_030059E0
	mov ip, r0
	ldr r3, [r0, #0x20]
	movs r0, #0x80
	ands r0, r3
	cmp r0, #0
	bne _0805F3A4
	movs r0, #3
	ldrsb r0, [r6, r0]
	lsls r0, r0, #3
	adds r2, r7, r0
	mov r1, ip
	ldr r1, [r1, #8]
	mov r8, r1
	asrs r1, r1, #8
	cmp r2, r1
	bgt _0805F3A4
	ldrb r0, [r6, #5]
	lsls r0, r0, #3
	adds r0, r2, r0
	cmp r0, r1
	blt _0805F3A4
	mov r0, ip
	ldr r2, [r0, #0xc]
	asrs r1, r2, #8
	cmp r5, r1
	bgt _0805F3A4
	ldrb r0, [r6, #6]
	lsls r0, r0, #3
	adds r0, r5, r0
	cmp r0, r1
	blt _0805F3A4
	mov r1, ip
	movs r0, #0x14
	ldrsh r1, [r1, r0]
	ldr r0, _0805F3F0 @ =0xFFFFFD00
	cmp r1, r0
	bge _0805F3A4
	movs r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0805F3A4
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	bne _0805F3A4
	ldr r0, _0805F3F4 @ =sub_805F3FC
	mov r1, sb
	str r0, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #0xf
	orrs r3, r0
	mov r0, ip
	str r3, [r0, #0x20]
	ldr r0, [r4, #0x10]
	subs r0, r2, r0
	lsls r0, r0, #8
	asrs r0, r0, #0x10
	ldr r1, [r4, #0xc]
	mov r2, r8
	subs r1, r2, r1
	lsls r1, r1, #8
	asrs r1, r1, #0x10
	bl sub_8004418
	strh r0, [r4, #0x14]
	movs r0, #8
	strh r0, [r4, #0x16]
_0805F3A4:
	ldr r1, _0805F3F8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r7, r7, r0
	ldr r0, [r1, #4]
	subs r5, r5, r0
	adds r1, r7, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _0805F3CA
	adds r0, r5, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805F3CA
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r5, r0
	ble _0805F3D6
_0805F3CA:
	mov r3, sl
	strb r3, [r6]
	ldr r0, _0805F3E8 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_0805F3D6:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F3E8: .4byte gCurTask
_0805F3EC: .4byte gUnknown_030059E0
_0805F3F0: .4byte 0xFFFFFD00
_0805F3F4: .4byte sub_805F3FC
_0805F3F8: .4byte gUnknown_03005960

	thumb_func_start sub_805F3FC
sub_805F3FC: @ 0x0805F3FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r3, _0805F440 @ =gCurTask
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r0, [r4]
	mov r8, r0
	ldrb r1, [r4, #8]
	mov ip, r1
	ldrh r5, [r4, #4]
	ldrh r6, [r4, #6]
	ldr r2, _0805F444 @ =gUnknown_030059E0
	ldr r1, [r2, #0x20]
	movs r0, #0x80
	ands r1, r0
	mov sl, r3
	mov sb, r2
	cmp r1, #0
	beq _0805F448
	mov r3, ip
	mov r2, r8
	strb r3, [r2]
	mov r6, sl
	ldr r0, [r6]
	bl TaskDestroy
	b _0805F51C
	.align 2, 0
_0805F440: .4byte gCurTask
_0805F444: .4byte gUnknown_030059E0
_0805F448:
	mov r0, ip
	lsls r1, r0, #3
	lsls r0, r5, #8
	adds r7, r1, r0
	mov r1, r8
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r1, r6, #8
	adds r5, r0, r1
	ldrh r2, [r4, #0x16]
	ldrh r3, [r4, #0x14]
	adds r0, r2, r3
	ldr r6, _0805F52C @ =0x000003FF
	adds r1, r6, #0
	ands r0, r1
	strh r0, [r4, #0x14]
	mov r1, sb
	adds r1, #0x24
	ldrb r0, [r1]
	adds r2, r2, r0
	strb r2, [r1]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	movs r0, #0xc0
	lsls r0, r0, #2
	subs r0, r0, r1
	cmp r0, #0
	bge _0805F484
	ldr r2, _0805F530 @ =0xFFFFFD00
	adds r0, r1, r2
_0805F484:
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r2, _0805F534 @ =gUnknown_08097AA4
	movs r6, #0x14
	ldrsh r0, [r4, r6]
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r6, #0
	ldrsh r1, [r0, r6]
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x87
	muls r1, r0, r1
	asrs r1, r1, #6
	ldr r0, [r4, #0x10]
	adds r0, r0, r1
	mov r1, sb
	str r0, [r1, #0xc]
	movs r3, #0x14
	ldrsh r0, [r4, r3]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #3
	subs r0, r0, r1
	asrs r0, r0, #6
	ldr r1, [r4, #0xc]
	adds r1, r1, r0
	mov r3, sb
	str r1, [r3, #8]
	ldr r1, _0805F538 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r7, r7, r0
	ldr r0, [r1, #4]
	subs r5, r5, r0
	movs r6, #0x14
	ldrsh r1, [r4, r6]
	ldr r0, _0805F53C @ =0x000003B6
	cmp r1, r0
	ble _0805F4F2
	ldr r0, [r3, #0x20]
	ldr r1, _0805F540 @ =0xFFBFFFFF
	ands r0, r1
	str r0, [r3, #0x20]
	mov r0, sl
	ldr r1, [r0]
	ldr r0, _0805F544 @ =sub_805F2E8
	str r0, [r1, #8]
_0805F4F2:
	adds r1, r7, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _0805F50E
	adds r0, r5, #0
	adds r0, #0x80
	cmp r0, #0
	blt _0805F50E
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r5, r0
	ble _0805F51C
_0805F50E:
	mov r2, ip
	mov r1, r8
	strb r2, [r1]
	mov r3, sl
	ldr r0, [r3]
	bl TaskDestroy
_0805F51C:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F52C: .4byte 0x000003FF
_0805F530: .4byte 0xFFFFFD00
_0805F534: .4byte gUnknown_08097AA4
_0805F538: .4byte gUnknown_03005960
_0805F53C: .4byte 0x000003B6
_0805F540: .4byte 0xFFBFFFFF
_0805F544: .4byte sub_805F2E8

	thumb_func_start sub_805F548
sub_805F548: @ 0x0805F548
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _0805F5AC @ =sub_805F098
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	str r6, [r1]
	ldrb r0, [r6]
	strb r0, [r1, #8]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r6]
	ldrb r0, [r1, #8]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	subs r0, #0x60
	lsls r0, r0, #8
	str r0, [r1, #0xc]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	adds r0, #0x60
	lsls r0, r0, #8
	str r0, [r1, #0x10]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805F5AC: .4byte sub_805F098

	thumb_func_start sub_805F5B0
sub_805F5B0: @ 0x0805F5B0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _0805F614 @ =sub_805F2E8
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x18
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	str r6, [r1]
	ldrb r0, [r6]
	strb r0, [r1, #8]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r6]
	ldrb r0, [r1, #8]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	adds r0, #0x60
	lsls r0, r0, #8
	str r0, [r1, #0xc]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	adds r0, #0x60
	lsls r0, r0, #8
	str r0, [r1, #0x10]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805F614: .4byte sub_805F2E8

	thumb_func_start sub_805F618
sub_805F618: @ 0x0805F618
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0805F6B0 @ =sub_805F810
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	mov sb, r1
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	ldr r3, _0805F6B4 @ =IWRAM_START + 0xC
	adds r2, r1, r3
	mov r1, sb
	str r1, [r0, #0x40]
	str r1, [r0, #0x3c]
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r3, r8
	str r3, [r0]
	ldrb r1, [r3]
	strb r1, [r0, #8]
	strb r6, [r0, #9]
	ldrb r0, [r3]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r2, #0x16]
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r2, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r3]
	ldr r0, _0805F6B8 @ =0x06011980
	str r0, [r2, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r2, #0x1a]
	mov r3, sb
	strh r3, [r2, #8]
	ldr r0, _0805F6BC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	beq _0805F6C8
	ldr r1, _0805F6C0 @ =gUnknown_080D94D8
	ldr r0, _0805F6C4 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	b _0805F6CA
	.align 2, 0
_0805F6B0: .4byte sub_805F810
_0805F6B4: .4byte IWRAM_START + 0xC
_0805F6B8: .4byte 0x06011980
_0805F6BC: .4byte gUnknown_030054CC
_0805F6C0: .4byte gUnknown_080D94D8
_0805F6C4: .4byte gUnknown_030055B4
_0805F6C8:
	ldr r0, _0805F710 @ =0x0000021E
_0805F6CA:
	strh r0, [r2, #0xa]
	adds r1, r2, #0
	adds r1, #0x20
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	strh r0, [r2, #0x14]
	strh r0, [r2, #0x1c]
	adds r3, r2, #0
	adds r3, #0x21
	movs r0, #0xff
	strb r0, [r3]
	adds r3, #1
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0x25
	strb r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r2, #0x28]
	movs r0, #0x88
	lsls r0, r0, #6
	str r0, [r2, #0x10]
	adds r0, r2, #0
	bl sub_8004558
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805F710: .4byte 0x0000021E

	thumb_func_start sub_805F714
sub_805F714: @ 0x0805F714
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r0, _0805F7EC @ =sub_805F928
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	mov sb, r1
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r3, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r3, r1
	ldr r2, _0805F7F0 @ =IWRAM_START + 0xC
	adds r0, r3, r2
	mov r7, sb
	str r7, [r1, #0x40]
	str r7, [r1, #0x3c]
	movs r2, #0
	mov sl, r2
	strh r4, [r1, #4]
	strh r5, [r1, #6]
	mov r7, r8
	str r7, [r1]
	ldrb r2, [r7]
	strb r2, [r1, #8]
	strb r6, [r1, #9]
	ldrb r1, [r7]
	lsls r1, r1, #3
	lsls r4, r4, #8
	adds r1, r1, r4
	strh r1, [r0, #0x16]
	ldrb r1, [r7, #1]
	lsls r1, r1, #3
	lsls r5, r5, #8
	adds r1, r1, r5
	strh r1, [r0, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r1, r2, #0
	strb r1, [r7]
	ldr r1, _0805F7F4 @ =0x06011980
	str r1, [r0, #4]
	movs r1, #0x88
	lsls r1, r1, #3
	strh r1, [r0, #0x1a]
	ldr r2, _0805F7F8 @ =gUnknown_080D94D8
	ldr r1, _0805F7FC @ =gUnknown_030055B4
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x1a
	lsls r1, r1, #1
	adds r1, r1, r2
	ldrh r1, [r1]
	strh r1, [r0, #0xa]
	ldr r7, _0805F800 @ =IWRAM_START + 0x2C
	adds r1, r3, r7
	mov r2, sl
	strb r2, [r1]
	mov r7, sb
	strh r7, [r0, #0x14]
	mov r1, sb
	strh r1, [r0, #0x1c]
	ldr r7, _0805F804 @ =IWRAM_START + 0x2D
	adds r2, r3, r7
	movs r1, #0xff
	strb r1, [r2]
	ldr r1, _0805F808 @ =IWRAM_START + 0x2E
	adds r2, r3, r1
	movs r1, #0x10
	strb r1, [r2]
	ldr r2, _0805F80C @ =IWRAM_START + 0x31
	adds r3, r3, r2
	mov r7, sl
	strb r7, [r3]
	subs r1, #0x11
	str r1, [r0, #0x28]
	movs r1, #0xa8
	lsls r1, r1, #6
	str r1, [r0, #0x10]
	bl sub_8004558
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805F7EC: .4byte sub_805F928
_0805F7F0: .4byte IWRAM_START + 0xC
_0805F7F4: .4byte 0x06011980
_0805F7F8: .4byte gUnknown_080D94D8
_0805F7FC: .4byte gUnknown_030055B4
_0805F800: .4byte IWRAM_START + 0x2C
_0805F804: .4byte IWRAM_START + 0x2D
_0805F808: .4byte IWRAM_START + 0x2E
_0805F80C: .4byte IWRAM_START + 0x31

	thumb_func_start sub_805F810
sub_805F810: @ 0x0805F810
	push {r4, r5, r6, lr}
	ldr r0, _0805F868 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r6, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805F86C @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r0, [r3, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r2, r2, r0
	strh r2, [r5, #0x18]
	ldr r0, _0805F870 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0805F878
	ldr r3, _0805F874 @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80601F8
	b _0805F884
	.align 2, 0
_0805F868: .4byte gCurTask
_0805F86C: .4byte gUnknown_03005960
_0805F870: .4byte gUnknown_03005424
_0805F874: .4byte gUnknown_030059E0
_0805F878:
	ldr r3, _0805F900 @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_8060440
_0805F884:
	ldr r0, _0805F904 @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #5
	bne _0805F8CE
	movs r0, #3
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0805F8CE
	ldr r0, _0805F908 @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805F8CE
	ldr r0, [r4, #0x3c]
	movs r1, #0xc0
	lsls r1, r1, #0xc
	ands r0, r1
	cmp r0, #0
	beq _0805F8B6
	ldr r0, _0805F900 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805F8B6:
	ldr r0, [r4, #0x3c]
	movs r1, #0x80
	lsls r1, r1, #9
	ands r0, r1
	cmp r0, #0
	beq _0805F8CE
	ldr r0, _0805F900 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805F8CE:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805F8F2
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805F8F2
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805F910
_0805F8F2:
	ldrb r0, [r4, #8]
	strb r0, [r6]
	ldr r0, _0805F90C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805F922
	.align 2, 0
_0805F900: .4byte gUnknown_030059E0
_0805F904: .4byte gUnknown_030054CC
_0805F908: .4byte gUnknown_030053E0
_0805F90C: .4byte gCurTask
_0805F910:
	ldrb r0, [r3]
	cmp r0, #5
	beq _0805F91C
	adds r0, r5, #0
	bl sub_8004558
_0805F91C:
	adds r0, r5, #0
	bl sub_80051E8
_0805F922:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_805F928
sub_805F928: @ 0x0805F928
	push {r4, r5, r6, lr}
	ldr r0, _0805F998 @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r6, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805F99C @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r0, [r3, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r2, r2, r0
	strh r2, [r5, #0x18]
	ldr r0, _0805F9A0 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0805F97E
	movs r0, #3
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0805F97E
	ldr r0, _0805F9A4 @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805F9BC
_0805F97E:
	ldr r0, _0805F9A8 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0805F9B0
	ldr r3, _0805F9AC @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_8060440
	b _0805F9BC
	.align 2, 0
_0805F998: .4byte gCurTask
_0805F99C: .4byte gUnknown_03005960
_0805F9A0: .4byte gUnknown_030054CC
_0805F9A4: .4byte gUnknown_030053E0
_0805F9A8: .4byte gUnknown_03005424
_0805F9AC: .4byte gUnknown_030059E0
_0805F9B0:
	ldr r3, _0805FA34 @ =gUnknown_030059E0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80601F8
_0805F9BC:
	ldr r0, _0805FA38 @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #5
	bne _0805FA02
	movs r0, #3
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0805FA02
	ldr r0, _0805FA3C @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805FA02
	ldr r0, [r4, #0x3c]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0805F9EC
	ldr r0, _0805FA34 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805F9EC:
	ldr r0, [r4, #0x3c]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0805FA02
	ldr r0, _0805FA34 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805FA02:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805FA26
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805FA26
	movs r0, #0x18
	ldrsh r1, [r5, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805FA44
_0805FA26:
	ldrb r0, [r4, #8]
	strb r0, [r6]
	ldr r0, _0805FA40 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805FA66
	.align 2, 0
_0805FA34: .4byte gUnknown_030059E0
_0805FA38: .4byte gUnknown_030054CC
_0805FA3C: .4byte gUnknown_030053E0
_0805FA40: .4byte gCurTask
_0805FA44:
	ldrb r0, [r3]
	cmp r0, #5
	bne _0805FA5A
	movs r0, #3
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0805FA5A
	ldr r0, _0805FA6C @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805FA66
_0805FA5A:
	adds r0, r5, #0
	bl sub_8004558
	adds r0, r5, #0
	bl sub_80051E8
_0805FA66:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805FA6C: .4byte gUnknown_030053E0

	thumb_func_start sub_805FA70
sub_805FA70: @ 0x0805FA70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _0805FB50 @ =sub_805FBA0
	movs r2, #0x80
	lsls r2, r2, #6
	ldr r1, _0805FB54 @ =sub_8060CF4
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r6, r0
	ldr r1, _0805FB58 @ =IWRAM_START + 0xC
	adds r7, r6, r1
	movs r2, #0
	str r2, [r0, #0x40]
	str r2, [r0, #0x3c]
	movs r3, #0
	mov sb, r3
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r1, sl
	str r1, [r0]
	ldrb r1, [r1]
	strb r1, [r0, #8]
	mov r3, r8
	strb r3, [r0, #9]
	mov r1, sl
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r7, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	strb r0, [r1]
	movs r0, #0x10
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r7, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	ldr r2, [sp, #4]
	strh r2, [r7, #8]
	ldr r1, _0805FB5C @ =gUnknown_080D94D8
	ldr r0, _0805FB60 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r7, #0xa]
	ldr r0, _0805FB64 @ =IWRAM_START + 0x2C
	adds r1, r6, r0
	movs r0, #3
	strb r0, [r1]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	ldr r2, _0805FB68 @ =IWRAM_START + 0x2D
	adds r1, r6, r2
	movs r0, #0xff
	strb r0, [r1]
	ldr r3, _0805FB6C @ =IWRAM_START + 0x2E
	adds r1, r6, r3
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0805FB70 @ =IWRAM_START + 0x31
	adds r6, r6, r0
	mov r1, sb
	strb r1, [r6]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	movs r1, #0x88
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	ldr r0, _0805FB74 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0805FB78
	mov r2, sl
	ldrb r0, [r2, #2]
	b _0805FB7C
	.align 2, 0
_0805FB50: .4byte sub_805FBA0
_0805FB54: .4byte sub_8060CF4
_0805FB58: .4byte IWRAM_START + 0xC
_0805FB5C: .4byte gUnknown_080D94D8
_0805FB60: .4byte gUnknown_030055B4
_0805FB64: .4byte IWRAM_START + 0x2C
_0805FB68: .4byte IWRAM_START + 0x2D
_0805FB6C: .4byte IWRAM_START + 0x2E
_0805FB70: .4byte IWRAM_START + 0x31
_0805FB74: .4byte gUnknown_030054CC
_0805FB78:
	mov r3, sl
	ldrb r0, [r3, #2]
_0805FB7C:
	cmp r0, #0x19
	bne _0805FB88
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r0, r1
	str r0, [r7, #0x10]
_0805FB88:
	adds r0, r7, #0
	bl sub_8004558
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_805FBA0
sub_805FBA0: @ 0x0805FBA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0805FCAC @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r1, r0
	str r0, [sp, #4]
	ldr r0, _0805FCB0 @ =IWRAM_START + 0xC
	adds r0, r0, r1
	mov sl, r0
	ldr r1, [sp, #4]
	ldr r1, [r1]
	str r1, [sp]
	ldr r3, [sp, #4]
	ldrb r2, [r3, #8]
	lsls r2, r2, #3
	ldrh r0, [r3, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _0805FCB4 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r4, r2, #0x10
	asrs r2, r2, #0x10
	subs r2, r2, r0
	mov r0, sl
	strh r2, [r0, #0x16]
	ldr r0, [r3, #4]
	lsrs r2, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	mov r3, sl
	strh r1, [r3, #0x18]
	ldr r0, _0805FCB8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _0805FC16
	ldr r1, [sp]
	movs r0, #3
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0805FC16
	ldr r0, _0805FCBC @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805FC16
	b _0805FDA4
_0805FC16:
	lsls r0, r4, #0x10
	asrs r6, r0, #0x10
	lsls r0, r2, #0x10
	asrs r7, r0, #0x10
	ldr r5, _0805FCC0 @ =gUnknown_030059E0
	mov r0, sl
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_800CCB8
	adds r4, r0, #0
	ldr r0, _0805FCC4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #0
	beq _0805FCC8
	movs r2, #0x80
	lsls r2, r2, #9
	mov r8, r2
	adds r0, r4, #0
	ands r0, r2
	cmp r0, #0
	beq _0805FC6C
	lsls r1, r4, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	movs r2, #0
	strh r2, [r5, #0x12]
	ldr r0, [r5, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	str r0, [r5, #0x20]
	str r2, [r5, #0x3c]
_0805FC6C:
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r4
	cmp r0, #0
	beq _0805FD12
	mov r0, sl
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_8060D08
	mov r3, r8
	ands r0, r3
	cmp r0, #0
	beq _0805FD12
	lsls r1, r4, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	movs r0, #0
	strh r0, [r5, #0x12]
	ldr r0, [r5, #0x20]
	movs r1, #8
	orrs r0, r1
	subs r1, #0xb
	ands r0, r1
	str r0, [r5, #0x20]
	mov r0, sl
	str r0, [r5, #0x3c]
	b _0805FD12
	.align 2, 0
_0805FCAC: .4byte gCurTask
_0805FCB0: .4byte IWRAM_START + 0xC
_0805FCB4: .4byte gUnknown_03005960
_0805FCB8: .4byte gUnknown_030054CC
_0805FCBC: .4byte gUnknown_030053E0
_0805FCC0: .4byte gUnknown_030059E0
_0805FCC4: .4byte gUnknown_03005424
_0805FCC8:
	movs r1, #0x80
	lsls r1, r1, #9
	mov r8, r1
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _0805FCF8
	mov r0, sl
	adds r1, r6, #0
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_8060D08
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	beq _0805FCF8
	lsls r1, r4, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r5, #0xc]
	adds r0, r0, r1
	str r0, [r5, #0xc]
	mov r3, sb
	strh r3, [r5, #0x12]
_0805FCF8:
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r4
	cmp r0, #0
	beq _0805FD12
	ldr r2, _0805FD5C @ =gUnknown_030059E0
	lsls r1, r4, #0x18
	asrs r1, r1, #0x10
	ldr r0, [r2, #0xc]
	adds r0, r0, r1
	str r0, [r2, #0xc]
	movs r0, #0
	strh r0, [r2, #0x12]
_0805FD12:
	movs r3, #0x80
	lsls r3, r3, #0xb
	ands r3, r4
	cmp r3, #0
	beq _0805FD60
	ldr r2, _0805FD5C @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r2, #0x20]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r4, r0
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	movs r0, #0
	strh r0, [r2, #0x10]
	strh r0, [r2, #0x14]
	movs r0, #0x19
	ldr r3, [sp]
	ldrb r3, [r3, #2]
	cmp r0, r3
	beq _0805FDA4
	adds r0, r2, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _0805FDA4
	movs r0, #0x9a
	bl m4aSongNumStart
	b _0805FDA4
	.align 2, 0
_0805FD5C: .4byte gUnknown_030059E0
_0805FD60:
	movs r0, #0x80
	lsls r0, r0, #0xc
	ands r0, r4
	cmp r0, #0
	beq _0805FDA4
	ldr r2, _0805FE28 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r2, #0x20]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r4, r0
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r2, #8]
	adds r0, r0, r1
	str r0, [r2, #8]
	strh r3, [r2, #0x10]
	strh r3, [r2, #0x14]
	movs r0, #0x19
	ldr r3, [sp]
	ldrb r3, [r3, #2]
	cmp r0, r3
	bne _0805FDA4
	adds r0, r2, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _0805FDA4
	movs r0, #0x9a
	bl m4aSongNumStart
_0805FDA4:
	ldr r0, _0805FE2C @ =gUnknown_030054CC
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #5
	bne _0805FDF0
	ldr r1, [sp]
	movs r0, #3
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0805FDF0
	ldr r0, _0805FE30 @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805FDF0
	ldr r2, [sp, #4]
	ldr r0, [r2, #0x3c]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0805FDD8
	ldr r0, _0805FE28 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805FDD8:
	ldr r1, [sp, #4]
	ldr r0, [r1, #0x3c]
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0805FDF0
	ldr r0, _0805FE28 @ =gUnknown_030059E0
	ldr r1, [r0, #0x20]
	movs r2, #9
	rsbs r2, r2, #0
	ands r1, r2
	str r1, [r0, #0x20]
_0805FDF0:
	mov r2, sl
	ldrh r0, [r2, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805FE16
	movs r1, #0x18
	ldrsh r0, [r2, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805FE16
	movs r0, #0x18
	ldrsh r1, [r2, r0]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _0805FE38
_0805FE16:
	ldr r1, [sp, #4]
	ldrb r0, [r1, #8]
	ldr r2, [sp]
	strb r0, [r2]
	ldr r0, _0805FE34 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _0805FE5C
	.align 2, 0
_0805FE28: .4byte gUnknown_030059E0
_0805FE2C: .4byte gUnknown_030054CC
_0805FE30: .4byte gUnknown_030053E0
_0805FE34: .4byte gCurTask
_0805FE38:
	ldrb r0, [r3]
	cmp r0, #5
	bne _0805FE50
	ldr r3, [sp]
	movs r0, #3
	ldrsb r0, [r3, r0]
	cmp r0, #0
	bne _0805FE50
	ldr r0, _0805FE6C @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805FE5C
_0805FE50:
	mov r0, sl
	bl sub_8004558
	mov r0, sl
	bl sub_80051E8
_0805FE5C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805FE6C: .4byte gUnknown_030053E0

	thumb_func_start sub_805FE70
sub_805FE70: @ 0x0805FE70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r4, r1, #0
	adds r6, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _0805FF48 @ =sub_805FF68
	movs r2, #0x80
	lsls r2, r2, #6
	ldr r1, _0805FF4C @ =sub_8060CF4
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r2, r0
	ldr r1, _0805FF50 @ =IWRAM_START + 0xC
	adds r5, r2, r1
	movs r3, #0
	str r3, [r0, #0x40]
	str r3, [r0, #0x3c]
	movs r7, #0
	mov sl, r7
	strh r4, [r0, #4]
	strh r6, [r0, #6]
	mov r1, sb
	str r1, [r0]
	ldrb r1, [r1]
	strb r1, [r0, #8]
	mov r7, r8
	strb r7, [r0, #9]
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r5, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	strh r0, [r5, #0x18]
	movs r7, #2
	rsbs r7, r7, #0
	adds r0, r7, #0
	strb r0, [r1]
	movs r0, #0x10
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	ldr r3, [sp, #8]
	strh r3, [r5, #8]
	ldr r0, _0805FF54 @ =0x0000FFFF
	strh r0, [r5, #0xa]
	ldr r2, [sp, #4]
	ldr r0, _0805FF58 @ =IWRAM_START + 0x2C
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	strh r3, [r5, #0x14]
	strh r3, [r5, #0x1c]
	ldr r7, _0805FF5C @ =IWRAM_START + 0x2D
	adds r1, r2, r7
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r0, _0805FF60 @ =IWRAM_START + 0x2E
	adds r1, r2, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0805FF64 @ =IWRAM_START + 0x31
	adds r2, r2, r1
	mov r7, sl
	strb r7, [r2]
	subs r0, #0x11
	str r0, [r5, #0x28]
	movs r0, #0x88
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805FF48: .4byte sub_805FF68
_0805FF4C: .4byte sub_8060CF4
_0805FF50: .4byte IWRAM_START + 0xC
_0805FF54: .4byte 0x0000FFFF
_0805FF58: .4byte IWRAM_START + 0x2C
_0805FF5C: .4byte IWRAM_START + 0x2D
_0805FF60: .4byte IWRAM_START + 0x2E
_0805FF64: .4byte IWRAM_START + 0x31

	thumb_func_start sub_805FF68
sub_805FF68: @ 0x0805FF68
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #0
	str r0, [sp, #4]
	ldr r4, _0805FFD8 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r7, [r5]
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0805FFDC @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	ldr r0, [r3, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r2, r2, r0
	strh r2, [r6, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0805FFCC
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0805FFCC
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0805FFE0
_0805FFCC:
	ldrb r0, [r5, #8]
	strb r0, [r7]
	ldr r0, [r4]
	bl TaskDestroy
	b _08060028
	.align 2, 0
_0805FFD8: .4byte gCurTask
_0805FFDC: .4byte gUnknown_03005960
_0805FFE0:
	ldr r0, _08060000 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08060008
	ldr r3, _08060004 @ =gUnknown_030059E0
	add r0, sp, #4
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl sub_8060554
	b _08060018
	.align 2, 0
_08060000: .4byte gUnknown_03005424
_08060004: .4byte gUnknown_030059E0
_08060008:
	ldr r3, _08060030 @ =gUnknown_030059E0
	add r1, sp, #4
	str r1, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl sub_80609B4
_08060018:
	cmp r0, #0
	beq _08060028
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_08060028:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08060030: .4byte gUnknown_030059E0

	thumb_func_start sub_8060034
sub_8060034: @ 0x08060034
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r4, r1, #0
	adds r6, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _0806010C @ =sub_806012C
	movs r2, #0x80
	lsls r2, r2, #6
	ldr r1, _08060110 @ =sub_8060CF4
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r2, r0
	ldr r1, _08060114 @ =IWRAM_START + 0xC
	adds r5, r2, r1
	movs r3, #0
	str r3, [r0, #0x40]
	str r3, [r0, #0x3c]
	movs r7, #0
	mov sl, r7
	strh r4, [r0, #4]
	strh r6, [r0, #6]
	mov r1, sb
	str r1, [r0]
	ldrb r1, [r1]
	strb r1, [r0, #8]
	mov r7, r8
	strb r7, [r0, #9]
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r5, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	strh r0, [r5, #0x18]
	movs r7, #2
	rsbs r7, r7, #0
	adds r0, r7, #0
	strb r0, [r1]
	movs r0, #0x10
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0x88
	lsls r0, r0, #3
	strh r0, [r5, #0x1a]
	ldr r3, [sp, #8]
	strh r3, [r5, #8]
	ldr r0, _08060118 @ =0x0000FFFF
	strh r0, [r5, #0xa]
	ldr r2, [sp, #4]
	ldr r0, _0806011C @ =IWRAM_START + 0x2C
	adds r1, r2, r0
	movs r0, #0xff
	strb r0, [r1]
	strh r3, [r5, #0x14]
	strh r3, [r5, #0x1c]
	ldr r7, _08060120 @ =IWRAM_START + 0x2D
	adds r1, r2, r7
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldr r0, _08060124 @ =IWRAM_START + 0x2E
	adds r1, r2, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _08060128 @ =IWRAM_START + 0x31
	adds r2, r2, r1
	mov r7, sl
	strb r7, [r2]
	subs r0, #0x11
	str r0, [r5, #0x28]
	movs r0, #0xa8
	lsls r0, r0, #6
	str r0, [r5, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806010C: .4byte sub_806012C
_08060110: .4byte sub_8060CF4
_08060114: .4byte IWRAM_START + 0xC
_08060118: .4byte 0x0000FFFF
_0806011C: .4byte IWRAM_START + 0x2C
_08060120: .4byte IWRAM_START + 0x2D
_08060124: .4byte IWRAM_START + 0x2E
_08060128: .4byte IWRAM_START + 0x31

	thumb_func_start sub_806012C
sub_806012C: @ 0x0806012C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	movs r0, #0
	str r0, [sp, #4]
	ldr r4, _0806019C @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r7, [r5]
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _080601A0 @ =gUnknown_03005960
	ldr r0, [r3]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	ldr r0, [r3, #4]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	subs r2, r2, r0
	strh r2, [r6, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _08060190
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08060190
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _080601A4
_08060190:
	ldrb r0, [r5, #8]
	strb r0, [r7]
	ldr r0, [r4]
	bl TaskDestroy
	b _080601EC
	.align 2, 0
_0806019C: .4byte gCurTask
_080601A0: .4byte gUnknown_03005960
_080601A4:
	ldr r0, _080601C4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080601CC
	ldr r3, _080601C8 @ =gUnknown_030059E0
	add r0, sp, #4
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl sub_80609B4
	b _080601DC
	.align 2, 0
_080601C4: .4byte gUnknown_03005424
_080601C8: .4byte gUnknown_030059E0
_080601CC:
	ldr r3, _080601F4 @ =gUnknown_030059E0
	add r1, sp, #4
	str r1, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl sub_8060554
_080601DC:
	cmp r0, #0
	beq _080601EC
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_080601EC:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080601F4: .4byte gUnknown_030059E0

	thumb_func_start sub_80601F8
sub_80601F8: @ 0x080601F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r3, #0
	ldrb r3, [r2, #8]
	lsls r3, r3, #3
	ldrh r0, [r2, #4]
	lsls r0, r0, #8
	adds r3, r3, r0
	lsls r3, r3, #0x10
	ldrb r1, [r4, #1]
	lsls r1, r1, #3
	ldrh r0, [r2, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r2, _080602C8 @ =gUnknown_03005960
	ldr r0, [r2]
	lsrs r7, r3, #0x10
	mov sl, r7
	asrs r3, r3, #0x10
	subs r0, r3, r0
	strh r0, [r6, #0x16]
	ldr r0, [r2, #4]
	lsrs r2, r1, #0x10
	mov sb, r2
	asrs r7, r1, #0x10
	subs r0, r7, r0
	strh r0, [r6, #0x18]
	ldr r0, _080602CC @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #5
	bne _080602FC
	movs r0, #3
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _080602FC
	ldr r0, _080602D0 @ =gUnknown_030053E0
	ldrb r0, [r0]
	cmp r0, #0x1e
	bne _080602FC
	adds r0, r6, #0
	adds r1, r3, #0
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_800CCB8
	mov r8, r0
	cmp r0, #0
	beq _080602FC
	ldrb r4, [r5, #0x16]
	adds r4, #5
	rsbs r0, r4, #0
	add r1, sp, #4
	strb r0, [r1]
	ldrb r3, [r5, #0x17]
	movs r0, #1
	subs r0, r0, r3
	mov r2, sp
	adds r2, #5
	strb r0, [r2]
	mov r0, sp
	adds r0, #6
	strb r4, [r0]
	subs r3, #1
	adds r0, #1
	strb r3, [r0]
	mov r0, sp
	movs r2, #4
	bl memcpy
	movs r0, #0xc0
	lsls r0, r0, #0xc
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _080602A4
	ldr r0, [r5, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x20]
_080602A4:
	ldr r0, _080602D4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080602D8
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r7, r0
	mov r1, sp
	ldrb r1, [r1, #3]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	b _080602EE
	.align 2, 0
_080602C8: .4byte gUnknown_03005960
_080602CC: .4byte gUnknown_030054CC
_080602D0: .4byte gUnknown_030053E0
_080602D4: .4byte gUnknown_03005424
_080602D8:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r7, r0
	mov r1, sp
	ldrb r1, [r1, #3]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
_080602EE:
	lsls r0, r0, #8
	str r0, [r5, #0xc]
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	bne _080603C6
_080602FC:
	ldr r1, [r5, #0x20]
	lsrs r7, r1, #3
	movs r0, #1
	ands r7, r0
	lsrs r1, r1, #1
	mov r8, r1
	mov r2, r8
	ands r2, r0
	mov r8, r2
	ldr r0, [r5, #0x3c]
	str r0, [sp, #8]
	mov r1, sl
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #0xc]
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	adds r0, r6, #0
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_800CCB8
	adds r2, r0, #0
	cmp r2, #0
	beq _0806042C
	movs r3, #0xc0
	lsls r3, r3, #0xa
	ands r3, r2
	cmp r3, #0
	beq _08060404
	ldr r0, _08060388 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	cmp r0, #0
	beq _0806038C
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r2
	cmp r0, #0
	beq _0806042C
	movs r0, #0
	strh r0, [r5, #0x12]
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r4, r0
	movs r1, #0x17
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x20]
	movs r1, #8
	orrs r0, r1
	subs r1, #0xb
	ands r0, r1
	str r0, [r5, #0x20]
	str r6, [r5, #0x3c]
	ldrh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
	b _080603BC
	.align 2, 0
_08060388: .4byte gUnknown_03005424
_0806038C:
	movs r0, #0x80
	lsls r0, r0, #9
	mov sb, r0
	ands r2, r0
	cmp r2, #0
	beq _0806042C
	adds r0, r6, #0
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_8060D08
	adds r2, r0, #0
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _080603D0
	lsls r0, r2, #0x18
	asrs r0, r0, #0x10
	ldr r1, [r5, #0xc]
	adds r1, r1, r0
	str r1, [r5, #0xc]
	mov r2, sl
	strh r2, [r5, #0x12]
_080603BC:
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _0806042C
_080603C6:
	movs r0, #0x9a
	bl m4aSongNumStart
	movs r0, #1
	b _0806042E
_080603D0:
	cmp r7, #0
	beq _080603DC
	ldr r0, [r5, #0x20]
	movs r1, #8
	orrs r0, r1
	b _080603E4
_080603DC:
	ldr r0, [r5, #0x20]
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
_080603E4:
	str r0, [r5, #0x20]
	mov r7, r8
	cmp r7, #0
	beq _080603F4
	ldr r0, [r5, #0x20]
	movs r1, #2
	orrs r0, r1
	b _080603FC
_080603F4:
	ldr r0, [r5, #0x20]
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
_080603FC:
	str r0, [r5, #0x20]
	ldr r0, [sp, #8]
	str r0, [r5, #0x3c]
	b _0806042C
_08060404:
	movs r0, #0xc0
	lsls r0, r0, #0xc
	ands r0, r2
	cmp r0, #0
	beq _0806042C
	ldr r0, [r5, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x20]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	strh r3, [r5, #0x10]
	strh r3, [r5, #0x14]
_0806042C:
	movs r0, #0
_0806042E:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8060440
sub_8060440: @ 0x08060440
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r4, r3, #0
	ldrb r3, [r2, #8]
	lsls r3, r3, #3
	ldrh r0, [r2, #4]
	lsls r0, r0, #8
	adds r3, r3, r0
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r2, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r2, _080604C8 @ =gUnknown_03005960
	ldr r0, [r2]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	subs r0, r3, r0
	strh r0, [r6, #0x16]
	ldr r0, [r2, #4]
	lsrs r7, r1, #0x10
	asrs r5, r1, #0x10
	subs r0, r5, r0
	strh r0, [r6, #0x18]
	ldr r0, [r4, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _0806054A
	adds r0, r6, #0
	adds r1, r3, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_800CCB8
	adds r2, r0, #0
	cmp r2, #0
	beq _0806054A
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r2
	cmp r0, #0
	beq _080604D0
	ldr r0, _080604CC @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	bne _080604D0
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r5, r0
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	adds r0, r0, r1
	adds r0, #1
	lsls r0, r0, #8
	str r0, [r4, #0xc]
	strh r3, [r4, #0x12]
	strh r3, [r4, #0x14]
	b _08060508
	.align 2, 0
_080604C8: .4byte gUnknown_03005960
_080604CC: .4byte gUnknown_03005424
_080604D0:
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r2
	cmp r0, #0
	beq _08060520
	ldr r0, _0806051C @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08060520
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	movs r1, #0x17
	ldrsb r1, [r4, r1]
	subs r0, r0, r1
	subs r0, #1
	lsls r0, r0, #8
	str r0, [r4, #0xc]
	movs r0, #0
	strh r0, [r4, #0x12]
	strh r0, [r4, #0x14]
_08060508:
	adds r0, r4, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _0806054A
	movs r0, #0x9a
	bl m4aSongNumStart
	movs r0, #1
	b _0806054C
	.align 2, 0
_0806051C: .4byte gUnknown_03005424
_08060520:
	movs r0, #0xc0
	lsls r0, r0, #0xc
	ands r0, r2
	cmp r0, #0
	beq _0806054A
	ldr r0, [r4, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x20]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r4, #8]
	adds r0, r0, r1
	str r0, [r4, #8]
	movs r0, #0
	strh r0, [r4, #0x10]
	strh r0, [r4, #0x14]
_0806054A:
	movs r0, #0
_0806054C:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8060554
sub_8060554: @ 0x08060554
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	mov sb, r2
	adds r5, r3, #0
	ldr r0, _080605F4 @ =gUnknown_03005590
	ldr r4, [r0]
	movs r0, #0x7f
	ands r4, r0
	str r4, [sp, #0xc]
	movs r0, #0x60
	adds r0, r0, r5
	mov ip, r0
	movs r2, #0
	ldrsb r2, [r0, r2]
	mov sl, r2
	mov r3, sb
	ldrb r2, [r3, #8]
	lsls r2, r2, #3
	ldrh r0, [r3, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _080605F8 @ =gUnknown_03005960
	ldr r0, [r3]
	lsrs r7, r2, #0x10
	str r7, [sp, #8]
	asrs r2, r2, #0x10
	mov r8, r2
	subs r0, r2, r0
	strh r0, [r6, #0x16]
	ldr r0, [r3, #4]
	lsrs r3, r1, #0x10
	asrs r7, r1, #0x10
	subs r0, r7, r0
	strh r0, [r6, #0x18]
	cmp r4, #0x3b
	bhi _080605FC
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080605D0
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _080605D0
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_080605D0:
	mov r0, sl
	lsls r1, r0, #2
	mov r0, sb
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080605F0
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_080605F0:
	movs r0, #0
	b _0806099A
	.align 2, 0
_080605F4: .4byte gUnknown_03005590
_080605F8: .4byte gUnknown_03005960
_080605FC:
	cmp r4, #0x3d
	bhi _08060660
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0806061C
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _0806061C
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_0806061C:
	mov r2, sl
	lsls r1, r2, #2
	mov r0, sb
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0806063C
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_0806063C:
	ldr r1, _08060658 @ =gUnknown_080D94D8
	ldr r0, _0806065C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	b _08060928
	.align 2, 0
_08060658: .4byte gUnknown_080D94D8
_0806065C: .4byte gUnknown_030055B4
_08060660:
	cmp r4, #0x3f
	bhi _08060686
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060680
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060680
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060680:
	mov r3, sl
	lsls r1, r3, #2
	b _080608F4
_08060686:
	cmp r4, #0x7b
	bls _0806068C
	b _080608CE
_0806068C:
	adds r2, r6, #0
	adds r2, #0x20
	ldrb r0, [r2]
	mov r4, ip
	ldrb r1, [r4]
	cmp r0, #0
	bne _080606AA
	cmp r1, #0
	bne _080606A0
	b _080607EA
_080606A0:
	ldr r4, [sp, #0x30]
	ldr r0, [r4]
	cmp r0, #0
	bne _080606AA
	b _080607EA
_080606AA:
	cmp r1, #0
	bne _080606B4
	movs r0, #1
	ldr r1, [sp, #0x30]
	str r0, [r1]
_080606B4:
	ldr r1, _0806074C @ =gUnknown_080D94D8
	ldr r0, _08060750 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	movs r0, #0
	strb r0, [r2]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_800DF38
	movs r1, #0x80
	lsls r1, r1, #0xc
	cmp r0, r1
	bne _08060786
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_8060D08
	movs r1, #0xd0
	lsls r1, r1, #0xc
	ands r1, r0
	cmp r1, #0
	bne _080606FC
	b _08060998
_080606FC:
	ldrb r4, [r5, #0x16]
	adds r4, #5
	rsbs r0, r4, #0
	add r1, sp, #4
	strb r0, [r1]
	ldrb r3, [r5, #0x17]
	movs r0, #1
	subs r0, r0, r3
	mov r2, sp
	adds r2, #5
	strb r0, [r2]
	mov r0, sp
	adds r0, #6
	strb r4, [r0]
	subs r3, #1
	adds r0, #1
	strb r3, [r0]
	mov r0, sp
	movs r2, #4
	bl memcpy
	ldr r0, _08060754 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08060758
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r7, r0
	mov r1, sp
	ldrb r1, [r1, #3]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	b _0806076E
	.align 2, 0
_0806074C: .4byte gUnknown_080D94D8
_08060750: .4byte gUnknown_030055B4
_08060754: .4byte gUnknown_03005424
_08060758:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r7, r0
	mov r1, sp
	ldrb r1, [r1, #3]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
_0806076E:
	lsls r0, r0, #8
	str r0, [r5, #0xc]
_08060772:
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	bne _0806077E
	b _08060998
_0806077E:
	movs r0, #0x9a
	bl m4aSongNumStart
	b _08060998
_08060786:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_800CCB8
	adds r2, r0, #0
	cmp r2, #0
	bne _0806079A
	b _08060998
_0806079A:
	movs r4, #0x80
	lsls r4, r4, #9
	adds r3, r2, #0
	ands r3, r4
	cmp r3, #0
	beq _080607BE
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_8060D08
	adds r2, r0, #0
	ands r2, r4
	cmp r2, #0
	bne _080607BC
	b _08060998
_080607BC:
	b _08060772
_080607BE:
	movs r0, #0xc0
	lsls r0, r0, #0xc
	ands r0, r2
	cmp r0, #0
	bne _080607CA
	b _08060998
_080607CA:
	ldr r0, [r5, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x20]
	movs r4, #0xff
	lsls r4, r4, #8
	adds r0, r4, #0
	ands r2, r0
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	strh r3, [r5, #0x10]
	strh r3, [r5, #0x14]
	b _08060998
_080607EA:
	ldr r7, [sp, #8]
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	lsls r4, r3, #0x10
	asrs r7, r4, #0x10
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_800CCB8
	adds r2, r0, #0
	adds r3, r4, #0
	cmp r2, #0
	beq _080608BE
	movs r4, #0x80
	lsls r4, r4, #9
	ands r0, r4
	cmp r0, #0
	beq _08060844
	ldr r0, _08060840 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08060844
	adds r0, r6, #0
	mov r1, r8
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_8060D08
	adds r2, r0, #0
	ands r2, r4
	cmp r2, #0
	beq _080608BE
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _080608BE
	b _0806077E
	.align 2, 0
_08060840: .4byte gUnknown_03005424
_08060844:
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r2
	cmp r0, #0
	beq _08060894
	ldr r0, _08060890 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08060894
	asrs r0, r3, #0x10
	adds r1, r6, #0
	adds r1, #0x2f
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	movs r1, #0x17
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r5, #0xc]
	ldr r0, [r5, #0x20]
	movs r1, #8
	orrs r0, r1
	subs r1, #0xb
	ands r0, r1
	str r0, [r5, #0x20]
	str r6, [r5, #0x3c]
	ldrh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _080608BE
	b _0806077E
	.align 2, 0
_08060890: .4byte gUnknown_03005424
_08060894:
	movs r0, #0xc0
	lsls r0, r0, #0xc
	ands r0, r2
	cmp r0, #0
	beq _080608BE
	ldr r0, [r5, #0x20]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r5, #0x20]
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r2, r0
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	ldr r0, [r5, #8]
	adds r0, r0, r1
	str r0, [r5, #8]
	movs r0, #0
	strh r0, [r5, #0x10]
	strh r0, [r5, #0x14]
_080608BE:
	mov r2, sl
	lsls r0, r2, #2
	mov r1, sb
	adds r1, #0x3c
	adds r1, r1, r0
	ldr r0, [r5, #0x20]
	str r0, [r1]
	b _08060998
_080608CE:
	ldr r3, [sp, #0xc]
	cmp r3, #0x7d
	bhi _0806093C
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080608F0
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _080608F0
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_080608F0:
	mov r4, sl
	lsls r1, r4, #2
_080608F4:
	mov r0, sb
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060910
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060910:
	ldr r1, _08060934 @ =gUnknown_080D94D8
	ldr r0, _08060938 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #2
_08060928:
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
	b _08060998
	.align 2, 0
_08060934: .4byte gUnknown_080D94D8
_08060938: .4byte gUnknown_030055B4
_0806093C:
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060958
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060958
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060958:
	mov r7, sl
	lsls r1, r7, #2
	mov r0, sb
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060978
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060978:
	ldr r1, _080609AC @ =gUnknown_080D94D8
	ldr r0, _080609B0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
_08060998:
	movs r0, #1
_0806099A:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080609AC: .4byte gUnknown_080D94D8
_080609B0: .4byte gUnknown_030055B4

	thumb_func_start sub_80609B4
sub_80609B4: @ 0x080609B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	adds r7, r2, #0
	adds r5, r3, #0
	ldr r0, _08060A58 @ =gUnknown_03005590
	ldr r4, [r0]
	movs r0, #0x7f
	ands r4, r0
	str r4, [sp, #0xc]
	movs r0, #0x60
	adds r0, r0, r5
	mov ip, r0
	movs r2, #0
	ldrsb r2, [r0, r2]
	mov sl, r2
	ldrb r2, [r7, #8]
	lsls r2, r2, #3
	ldrh r0, [r7, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	lsls r2, r2, #0x10
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r7, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _08060A5C @ =gUnknown_03005960
	ldr r0, [r3]
	mov sb, r0
	lsrs r0, r2, #0x10
	str r0, [sp, #8]
	asrs r2, r2, #0x10
	mov r8, r2
	mov r0, sb
	subs r2, r2, r0
	strh r2, [r6, #0x16]
	ldr r0, [r3, #4]
	lsrs r2, r1, #0x10
	asrs r1, r1, #0x10
	mov sb, r1
	subs r0, r1, r0
	strh r0, [r6, #0x18]
	cmp r4, #0x3b
	bhi _08060A60
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060A34
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060A34
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060A34:
	mov r2, sl
	lsls r1, r2, #2
	adds r0, r7, #0
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060A54
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060A54:
	movs r0, #0
	b _08060CDA
	.align 2, 0
_08060A58: .4byte gUnknown_03005590
_08060A5C: .4byte gUnknown_03005960
_08060A60:
	cmp r4, #0x3d
	bhi _08060AC4
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060A80
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060A80
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060A80:
	mov r4, sl
	lsls r1, r4, #2
	adds r0, r7, #0
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060AA0
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060AA0:
	ldr r1, _08060ABC @ =gUnknown_080D94D8
	ldr r0, _08060AC0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	b _08060C68
	.align 2, 0
_08060ABC: .4byte gUnknown_080D94D8
_08060AC0: .4byte gUnknown_030055B4
_08060AC4:
	cmp r4, #0x3f
	bhi _08060AEA
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060AE4
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060AE4
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060AE4:
	mov r0, sl
	lsls r1, r0, #2
	b _08060C34
_08060AEA:
	cmp r4, #0x7b
	bls _08060AF0
	b _08060C0E
_08060AF0:
	adds r3, r6, #0
	adds r3, #0x20
	ldrb r0, [r3]
	mov r4, ip
	ldrb r1, [r4]
	cmp r0, #0
	bne _08060B0A
	cmp r1, #0
	beq _08060BD4
	ldr r4, [sp, #0x30]
	ldr r0, [r4]
	cmp r0, #0
	beq _08060BD4
_08060B0A:
	cmp r1, #0
	bne _08060B14
	movs r0, #1
	ldr r1, [sp, #0x30]
	str r0, [r1]
_08060B14:
	ldr r1, _08060BAC @ =gUnknown_080D94D8
	ldr r0, _08060BB0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	movs r0, #0
	strb r0, [r3]
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	mov r1, r8
	mov r2, sb
	adds r3, r5, #0
	bl sub_800DF38
	movs r1, #0x80
	lsls r1, r1, #0xc
	cmp r0, r1
	beq _08060B46
	b _08060CD8
_08060B46:
	adds r0, r6, #0
	mov r1, r8
	mov r2, sb
	adds r3, r5, #0
	bl sub_8060D08
	movs r1, #0xd0
	lsls r1, r1, #0xc
	ands r1, r0
	cmp r1, #0
	bne _08060B5E
	b _08060CD8
_08060B5E:
	ldrb r4, [r5, #0x16]
	adds r4, #5
	rsbs r0, r4, #0
	add r1, sp, #4
	strb r0, [r1]
	ldrb r3, [r5, #0x17]
	movs r0, #1
	subs r0, r0, r3
	mov r2, sp
	adds r2, #5
	strb r0, [r2]
	mov r0, sp
	adds r0, #6
	strb r4, [r0]
	subs r3, #1
	adds r0, #1
	strb r3, [r0]
	mov r0, sp
	movs r2, #4
	bl memcpy
	ldr r0, _08060BB4 @ =gUnknown_03005424
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08060BB8
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	add r0, sb
	mov r1, sp
	ldrb r1, [r1, #1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r0, r0, r1
	b _08060BCE
	.align 2, 0
_08060BAC: .4byte gUnknown_080D94D8
_08060BB0: .4byte gUnknown_030055B4
_08060BB4: .4byte gUnknown_03005424
_08060BB8:
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	add r0, sb
	mov r1, sp
	ldrb r1, [r1, #1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
_08060BCE:
	lsls r0, r0, #8
	str r0, [r5, #0xc]
	b _08060BFC
_08060BD4:
	ldr r4, [sp, #8]
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r6, #0
	adds r3, r5, #0
	bl sub_800CCB8
	mov r1, sl
	lsls r2, r1, #2
	adds r1, r7, #0
	adds r1, #0x3c
	adds r1, r1, r2
	str r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0xa
	ands r1, r0
	cmp r1, #0
	beq _08060CD8
_08060BFC:
	adds r0, r5, #0
	bl sub_800CBA4
	cmp r0, #0
	beq _08060CD8
	movs r0, #0x9a
	bl m4aSongNumStart
	b _08060CD8
_08060C0E:
	ldr r2, [sp, #0xc]
	cmp r2, #0x7d
	bhi _08060C7C
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060C30
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060C30
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060C30:
	mov r4, sl
	lsls r1, r4, #2
_08060C34:
	adds r0, r7, #0
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060C50
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060C50:
	ldr r1, _08060C74 @ =gUnknown_080D94D8
	ldr r0, _08060C78 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #2
_08060C68:
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
	b _08060CD8
	.align 2, 0
_08060C74: .4byte gUnknown_080D94D8
_08060C78: .4byte gUnknown_030055B4
_08060C7C:
	ldr r1, [r5, #0x20]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08060C98
	ldr r0, [r5, #0x3c]
	cmp r0, r6
	bne _08060C98
	movs r0, #9
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	str r1, [r5, #0x20]
_08060C98:
	mov r0, sl
	lsls r1, r0, #2
	adds r0, r7, #0
	adds r0, #0x3c
	adds r2, r0, r1
	ldr r0, [r2]
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08060CB8
	ldr r0, [r5, #0x20]
	subs r1, #0x41
	ands r0, r1
	str r0, [r5, #0x20]
	movs r0, #0
	str r0, [r2]
_08060CB8:
	ldr r1, _08060CEC @ =gUnknown_080D94D8
	ldr r0, _08060CF0 @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0xa]
	adds r1, r6, #0
	adds r1, #0x20
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8004558
_08060CD8:
	movs r0, #1
_08060CDA:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08060CEC: .4byte gUnknown_080D94D8
_08060CF0: .4byte gUnknown_030055B4

	thumb_func_start sub_8060CF4
sub_8060CF4: @ 0x08060CF4
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8060D08
sub_8060D08: @ 0x08060D08
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r5, #0x2c
	ldrb r4, [r5]
	adds r4, #1
	strb r4, [r5]
	adds r6, r0, #0
	adds r6, #0x2e
	ldrb r4, [r6]
	subs r4, #1
	strb r4, [r6]
	bl sub_800CCB8
	ldrb r1, [r5]
	subs r1, #1
	strb r1, [r5]
	ldrb r1, [r6]
	adds r1, #1
	strb r1, [r6]
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_8060D34
sub_8060D34: @ 0x08060D34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r3, _08060E24 @ =gCurTask
	ldr r0, [r3]
	str r0, [sp]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r1, [r5]
	mov sb, r1
	ldrh r1, [r5, #4]
	ldrh r2, [r5, #6]
	ldrb r0, [r5, #8]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r0, r0, r1
	mov ip, r0
	mov r1, sb
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov r8, r0
	ldr r7, _08060E28 @ =gUnknown_030059E0
	ldr r6, [r7, #0x20]
	movs r2, #0x80
	mov sl, r2
	mov r0, sl
	ands r0, r6
	mov sl, r0
	cmp r0, #0
	beq _08060D80
	b _08060E7A
_08060D80:
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	mov r2, ip
	adds r1, r2, r0
	ldr r3, [r7, #8]
	str r3, [sp, #4]
	asrs r4, r3, #8
	cmp r1, r4
	bgt _08060E72
	mov r2, sb
	ldrb r0, [r2, #5]
	lsls r0, r0, #3
	adds r0, r1, r0
	cmp r0, r4
	blt _08060E72
	movs r0, #4
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	mov r3, r8
	adds r2, r3, r0
	ldr r0, [r7, #0xc]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _08060E72
	mov r3, sb
	ldrb r0, [r3, #6]
	lsls r0, r0, #3
	adds r0, r2, r0
	cmp r0, r1
	blt _08060E72
	cmp ip, r4
	bge _08060E3C
	ldrb r1, [r5, #9]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _08060E6C
	adds r1, r7, #0
	adds r1, #0x6d
	movs r0, #0x1b
	strb r0, [r1]
	mov r1, ip
	subs r0, r4, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _08060E2C @ =0x000003FF
	ands r0, r1
	movs r3, #0x14
	ldrsh r1, [r7, r3]
	ldr r2, [sp, #4]
	adds r1, r2, r1
	str r1, [r7, #8]
	mov r3, r8
	lsls r2, r3, #8
	ldr r1, _08060E30 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08060E34 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r7, #0xc]
	mov r2, sl
	strh r2, [r7, #0x12]
	ldr r0, _08060E38 @ =sub_8060ED0
	ldr r3, [sp]
	str r0, [r3, #8]
	b _08060E7A
	.align 2, 0
_08060E24: .4byte gCurTask
_08060E28: .4byte gUnknown_030059E0
_08060E2C: .4byte 0x000003FF
_08060E30: .4byte gUnknown_08097AA4
_08060E34: .4byte 0xFFFFE400
_08060E38: .4byte sub_8060ED0
_08060E3C:
	movs r0, #0x14
	ldrsh r1, [r7, r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ldrb r3, [r5, #9]
	cmp r1, r0
	ble _08060E6C
	movs r0, #2
	ands r6, r0
	cmp r6, #0
	bne _08060E6C
	adds r0, r7, #0
	adds r0, #0x5e
	ldr r1, _08060E68 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _08060E6C
	movs r0, #1
	orrs r0, r3
	b _08060E78
	.align 2, 0
_08060E68: .4byte gUnknown_03005B38
_08060E6C:
	movs r0, #0xfe
	ands r0, r3
	b _08060E78
_08060E72:
	ldrb r1, [r5, #9]
	movs r0, #0xfe
	ands r0, r1
_08060E78:
	strb r0, [r5, #9]
_08060E7A:
	ldr r1, _08060EC8 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, ip
	subs r2, r2, r0
	mov ip, r2
	ldr r0, [r1, #4]
	mov r3, r8
	subs r3, r3, r0
	mov r8, r3
	mov r1, ip
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08060EA8
	mov r0, r8
	adds r0, #0x80
	cmp r0, #0
	blt _08060EA8
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r8, r0
	ble _08060EB6
_08060EA8:
	ldrb r0, [r5, #8]
	mov r1, sb
	strb r0, [r1]
	ldr r2, _08060ECC @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
_08060EB6:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08060EC8: .4byte gUnknown_03005960
_08060ECC: .4byte gCurTask

	thumb_func_start sub_8060ED0
sub_8060ED0: @ 0x08060ED0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08060F20 @ =gCurTask
	mov ip, r0
	ldr r1, [r0]
	mov sb, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r5, [r7]
	mov r8, r5
	ldrh r0, [r7, #4]
	ldrh r2, [r7, #6]
	ldr r4, _08060F24 @ =gUnknown_030059E0
	ldrb r3, [r7, #8]
	lsls r1, r3, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov sl, r0
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r0, #0x80
	ands r6, r0
	cmp r6, #0
	beq _08060F28
	mov r1, r8
	strb r3, [r1]
	mov r5, ip
	ldr r0, [r5]
	bl TaskDestroy
	b _08061072
	.align 2, 0
_08060F20: .4byte gCurTask
_08060F24: .4byte gUnknown_030059E0
_08060F28:
	ldr r2, [r4, #8]
	asrs r0, r2, #8
	subs r3, r0, r1
	movs r0, #0x8c
	lsls r0, r0, #2
	cmp r3, r0
	ble _08060F60
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	beq _08060F46
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #2
	b _08060F4C
_08060F46:
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #1
_08060F4C:
	strb r0, [r1]
	ldr r0, _08060F58 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08060F5C @ =sub_8060D34
	str r0, [r1, #8]
	b _08061072
	.align 2, 0
_08060F58: .4byte gCurTask
_08060F5C: .4byte sub_8060D34
_08060F60:
	lsls r1, r3, #4
	subs r1, r1, r3
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r3, r0, #8
	movs r1, #0x80
	lsls r1, r1, #1
	adds r3, r3, r1
	ldr r0, _08060FC4 @ =0x000003FF
	mov r8, r0
	ands r3, r0
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	adds r0, r2, r0
	str r0, [r4, #8]
	mov r0, sl
	lsls r2, r0, #8
	ldr r1, _08060FC8 @ =gUnknown_08097AA4
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08060FCC @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r7, #0x10]
	cmp r1, r0
	bge _08060FD4
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08060FD0 @ =sub_8060D34
	mov r1, sb
	str r0, [r1, #8]
	b _08061072
	.align 2, 0
_08060FC4: .4byte 0x000003FF
_08060FC8: .4byte gUnknown_08097AA4
_08060FCC: .4byte 0xFFFFE400
_08060FD0: .4byte sub_8060D34
_08060FD4:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08061004 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08061010
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08061008 @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _0806100C @ =sub_8060D34
	mov r5, sb
	str r0, [r5, #8]
	b _08061072
	.align 2, 0
_08061004: .4byte gUnknown_03005B38
_08061008: .4byte 0x0000FB20
_0806100C: .4byte sub_8060D34
_08061010:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _08061072
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08061044
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _08061072
_08061044:
	ldr r1, _08061080 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r1, _08061084 @ =0xFFFFFEE6
	adds r0, r3, r1
	mov r5, r8
	ands r0, r5
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_08061072:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061080: .4byte gUnknown_080D672C
_08061084: .4byte 0xFFFFFEE6

	thumb_func_start sub_8061088
sub_8061088: @ 0x08061088
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r3, _08061178 @ =gCurTask
	ldr r0, [r3]
	str r0, [sp]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r1, [r5]
	mov sb, r1
	ldrh r1, [r5, #4]
	ldrh r2, [r5, #6]
	ldrb r0, [r5, #8]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r0, r0, r1
	mov ip, r0
	mov r1, sb
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov r8, r0
	ldr r7, _0806117C @ =gUnknown_030059E0
	ldr r6, [r7, #0x20]
	movs r2, #0x80
	mov sl, r2
	mov r0, sl
	ands r0, r6
	mov sl, r0
	cmp r0, #0
	beq _080610D4
	b _080611D2
_080610D4:
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	mov r2, ip
	adds r1, r2, r0
	ldr r3, [r7, #8]
	str r3, [sp, #4]
	asrs r4, r3, #8
	cmp r1, r4
	bgt _080611CA
	mov r2, sb
	ldrb r0, [r2, #5]
	lsls r0, r0, #3
	adds r0, r1, r0
	cmp r0, r4
	blt _080611CA
	movs r0, #4
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	mov r3, r8
	adds r2, r3, r0
	ldr r0, [r7, #0xc]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _080611CA
	mov r3, sb
	ldrb r0, [r3, #6]
	lsls r0, r0, #3
	adds r0, r2, r0
	cmp r0, r1
	blt _080611CA
	cmp ip, r4
	ble _08061190
	ldrb r1, [r5, #9]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _080611C4
	adds r1, r7, #0
	adds r1, #0x6d
	movs r0, #0x1b
	strb r0, [r1]
	mov r1, ip
	subs r0, r4, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _08061180 @ =0x000003FF
	ands r0, r1
	movs r3, #0x14
	ldrsh r1, [r7, r3]
	ldr r2, [sp, #4]
	adds r1, r2, r1
	str r1, [r7, #8]
	mov r3, r8
	lsls r2, r3, #8
	ldr r1, _08061184 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08061188 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r7, #0xc]
	mov r2, sl
	strh r2, [r7, #0x12]
	ldr r0, _0806118C @ =sub_8061228
	ldr r3, [sp]
	str r0, [r3, #8]
	b _080611D2
	.align 2, 0
_08061178: .4byte gCurTask
_0806117C: .4byte gUnknown_030059E0
_08061180: .4byte 0x000003FF
_08061184: .4byte gUnknown_08097AA4
_08061188: .4byte 0xFFFFE400
_0806118C: .4byte sub_8061228
_08061190:
	movs r0, #0x14
	ldrsh r1, [r7, r0]
	ldr r0, _080611BC @ =0xFFFFFC00
	ldrb r3, [r5, #9]
	cmp r1, r0
	bge _080611C4
	movs r0, #2
	ands r6, r0
	cmp r6, #0
	bne _080611C4
	adds r0, r7, #0
	adds r0, #0x5e
	ldr r1, _080611C0 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _080611C4
	movs r0, #1
	orrs r0, r3
	b _080611D0
	.align 2, 0
_080611BC: .4byte 0xFFFFFC00
_080611C0: .4byte gUnknown_03005B38
_080611C4:
	movs r0, #0xfe
	ands r0, r3
	b _080611D0
_080611CA:
	ldrb r1, [r5, #9]
	movs r0, #0xfe
	ands r0, r1
_080611D0:
	strb r0, [r5, #9]
_080611D2:
	ldr r1, _08061220 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, ip
	subs r2, r2, r0
	mov ip, r2
	ldr r0, [r1, #4]
	mov r3, r8
	subs r3, r3, r0
	mov r8, r3
	mov r1, ip
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08061200
	mov r0, r8
	adds r0, #0x80
	cmp r0, #0
	blt _08061200
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r8, r0
	ble _0806120E
_08061200:
	ldrb r0, [r5, #8]
	mov r1, sb
	strb r0, [r1]
	ldr r2, _08061224 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
_0806120E:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061220: .4byte gUnknown_03005960
_08061224: .4byte gCurTask

	thumb_func_start sub_8061228
sub_8061228: @ 0x08061228
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08061278 @ =gCurTask
	mov ip, r0
	ldr r1, [r0]
	mov sb, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r5, [r7]
	mov r8, r5
	ldrh r0, [r7, #4]
	ldrh r2, [r7, #6]
	ldr r4, _0806127C @ =gUnknown_030059E0
	ldrb r3, [r7, #8]
	lsls r1, r3, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov sl, r0
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r0, #0x80
	ands r6, r0
	cmp r6, #0
	beq _08061280
	mov r1, r8
	strb r3, [r1]
	mov r5, ip
	ldr r0, [r5]
	bl TaskDestroy
	b _080613CE
	.align 2, 0
_08061278: .4byte gCurTask
_0806127C: .4byte gUnknown_030059E0
_08061280:
	ldr r2, [r4, #8]
	asrs r0, r2, #8
	subs r3, r0, r1
	ldr r0, _0806129C @ =0xFFFFFDD0
	cmp r3, r0
	bge _080612BC
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	beq _080612A0
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #2
	b _080612A6
	.align 2, 0
_0806129C: .4byte 0xFFFFFDD0
_080612A0:
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #1
_080612A6:
	strb r0, [r1]
	ldr r0, _080612B4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _080612B8 @ =sub_8061088
	str r0, [r1, #8]
	b _080613CE
	.align 2, 0
_080612B4: .4byte gCurTask
_080612B8: .4byte sub_8061088
_080612BC:
	lsls r1, r3, #4
	subs r1, r1, r3
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r3, r0, #8
	movs r1, #0x80
	lsls r1, r1, #1
	adds r3, r3, r1
	ldr r0, _08061320 @ =0x000003FF
	mov r8, r0
	ands r3, r0
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	adds r0, r2, r0
	str r0, [r4, #8]
	mov r0, sl
	lsls r2, r0, #8
	ldr r1, _08061324 @ =gUnknown_08097AA4
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08061328 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r7, #0x10]
	cmp r1, r0
	ble _08061330
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _0806132C @ =sub_8061088
	mov r1, sb
	str r0, [r1, #8]
	b _080613CE
	.align 2, 0
_08061320: .4byte 0x000003FF
_08061324: .4byte gUnknown_08097AA4
_08061328: .4byte 0xFFFFE400
_0806132C: .4byte sub_8061088
_08061330:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08061360 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0806136C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08061364 @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061368 @ =sub_8061088
	mov r5, sb
	str r0, [r5, #8]
	b _080613CE
	.align 2, 0
_08061360: .4byte gUnknown_03005B38
_08061364: .4byte 0x0000FB20
_08061368: .4byte sub_8061088
_0806136C:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _080613CE
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080613A0
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _080613CE
_080613A0:
	ldr r1, _080613DC @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r1, _080613E0 @ =0xFFFFFEE6
	adds r0, r3, r1
	mov r5, r8
	ands r0, r5
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_080613CE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080613DC: .4byte gUnknown_080D672C
_080613E0: .4byte 0xFFFFFEE6

	thumb_func_start sub_80613E4
sub_80613E4: @ 0x080613E4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _08061434 @ =sub_8060D34
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x14
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r2, #0
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r3, #2
	rsbs r3, r3, #0
	adds r1, r3, #0
	strb r1, [r6]
	strb r2, [r0, #9]
	movs r1, #0x80
	lsls r1, r1, #3
	str r1, [r0, #0x10]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08061434: .4byte sub_8060D34

	thumb_func_start sub_8061438
sub_8061438: @ 0x08061438
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _08061484 @ =sub_8061088
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x14
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r2, #2
	rsbs r2, r2, #0
	adds r1, r2, #0
	strb r1, [r6]
	ldr r1, _08061488 @ =0xFFFFFC00
	str r1, [r0, #0x10]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08061484: .4byte sub_8061088
_08061488: .4byte 0xFFFFFC00

	thumb_func_start sub_806148C
sub_806148C: @ 0x0806148C
	push {r4, r5, lr}
	ldr r5, _080614DC @ =gUnknown_030059E0
	ldr r4, [r5, #8]
	asrs r2, r4, #8
	subs r2, r2, r0
	lsls r3, r2, #4
	subs r3, r3, r2
	lsls r0, r3, #5
	subs r0, r0, r3
	lsls r0, r0, #1
	asrs r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r2, _080614E0 @ =0x000003FF
	ands r0, r2
	movs r3, #0x14
	ldrsh r2, [r5, r3]
	adds r4, r4, r2
	str r4, [r5, #8]
	lsls r1, r1, #8
	ldr r3, _080614E4 @ =gUnknown_08097AA4
	lsls r2, r0, #1
	adds r2, r2, r3
	ldrh r3, [r2]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x16
	lsls r2, r3, #1
	adds r2, r2, r3
	lsls r2, r2, #3
	adds r2, r2, r1
	ldr r1, _080614E8 @ =0xFFFFE400
	adds r2, r2, r1
	str r2, [r5, #0xc]
	movs r1, #0
	strh r1, [r5, #0x12]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080614DC: .4byte gUnknown_030059E0
_080614E0: .4byte 0x000003FF
_080614E4: .4byte gUnknown_08097AA4
_080614E8: .4byte 0xFFFFE400

	thumb_func_start sub_80614EC
sub_80614EC: @ 0x080614EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r5, r1, #0
	adds r6, r2, #0
	mov r8, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov sl, r6
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _080615E4 @ =sub_806160C
	ldr r2, _080615E8 @ =0x00002010
	ldr r1, _080615EC @ =sub_80095E8
	str r1, [sp]
	movs r1, #0x44
	movs r3, #0
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r1, r4, r1
	ldr r2, _080615F0 @ =IWRAM_START + 0xC
	adds r7, r4, r2
	movs r3, #0
	movs r2, #0
	strh r5, [r1, #4]
	mov r6, sl
	strh r6, [r1, #6]
	mov r0, sb
	str r0, [r1]
	ldrb r0, [r0]
	strb r0, [r1, #8]
	mov r6, r8
	strb r6, [r1, #9]
	ldr r6, _080615F4 @ =IWRAM_START + 0x3C
	adds r0, r4, r6
	strb r3, [r0]
	adds r6, #1
	adds r0, r4, r6
	strb r3, [r0]
	strh r2, [r1, #0x3e]
	ldr r1, _080615F8 @ =IWRAM_START + 0x40
	adds r0, r4, r1
	strh r2, [r0]
	mov r6, sb
	ldrb r0, [r6]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x16]
	ldrb r0, [r6, #1]
	lsls r0, r0, #3
	mov r1, sl
	lsls r6, r1, #8
	adds r0, r0, r6
	strh r0, [r7, #0x18]
	movs r6, #2
	rsbs r6, r6, #0
	adds r0, r6, #0
	mov r1, sb
	strb r0, [r1]
	movs r0, #0x18
	str r2, [sp, #4]
	str r3, [sp, #8]
	bl sub_8007C10
	str r0, [r7, #4]
	ldr r0, _080615FC @ =0x0000021A
	strh r0, [r7, #0xa]
	ldr r6, _08061600 @ =IWRAM_START + 0x2C
	adds r0, r4, r6
	ldr r3, [sp, #8]
	strb r3, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	ldr r2, [sp, #4]
	strh r2, [r7, #8]
	strh r2, [r7, #0x14]
	strh r2, [r7, #0x1c]
	ldr r0, _08061604 @ =IWRAM_START + 0x2D
	adds r1, r4, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08061608 @ =IWRAM_START + 0x2E
	adds r1, r4, r2
	movs r0, #0x10
	strb r0, [r1]
	adds r6, #5
	adds r4, r4, r6
	strb r3, [r4]
	subs r0, #0x11
	str r0, [r7, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	str r1, [r7, #0x10]
	mov r2, sb
	movs r0, #3
	ldrsb r0, [r2, r0]
	cmp r0, #0
	beq _080615D2
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r0, r1
	str r0, [r7, #0x10]
_080615D2:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080615E4: .4byte sub_806160C
_080615E8: .4byte 0x00002010
_080615EC: .4byte sub_80095E8
_080615F0: .4byte IWRAM_START + 0xC
_080615F4: .4byte IWRAM_START + 0x3C
_080615F8: .4byte IWRAM_START + 0x40
_080615FC: .4byte 0x0000021A
_08061600: .4byte IWRAM_START + 0x2C
_08061604: .4byte IWRAM_START + 0x2D
_08061608: .4byte IWRAM_START + 0x2E

	thumb_func_start sub_806160C
sub_806160C: @ 0x0806160C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _080616D4 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	mov r8, r0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	mov r1, r8
	adds r6, r1, r0
	ldr r4, _080616D8 @ =IWRAM_START + 0xC
	add r4, r8
	ldr r2, [r6]
	mov sl, r2
	ldrb r1, [r6, #8]
	lsls r1, r1, #3
	ldrh r0, [r6, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov sb, r1
	ldrb r1, [r2, #1]
	lsls r1, r1, #3
	ldrh r0, [r6, #6]
	lsls r0, r0, #8
	adds r5, r1, r0
	ldr r1, _080616DC @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, sb
	subs r0, r2, r0
	strh r0, [r4, #0x16]
	ldr r0, [r1, #4]
	subs r0, r5, r0
	strh r0, [r4, #0x18]
	ldr r7, _080616E0 @ =gUnknown_030059E0
	ldr r1, [r7, #0x20]
	movs r0, #0x80
	ands r1, r0
	cmp r1, #0
	bne _08061750
	str r7, [sp]
	str r1, [sp, #4]
	adds r0, r4, #0
	mov r1, sb
	adds r2, r5, #0
	movs r3, #0
	bl sub_800C204
	cmp r0, #1
	bne _08061750
	ldrh r0, [r7, #0x12]
	lsls r2, r0, #0x10
	cmp r2, #0
	ble _08061750
	ldr r0, [r7, #0xc]
	asrs r0, r0, #8
	adds r0, #4
	cmp r0, r5
	bge _08061750
	adds r1, r7, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	asrs r0, r2, #0x1a
	ldr r2, _080616E4 @ =IWRAM_START + 0x3C
	add r2, r8
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080616AA
	movs r0, #2
	strb r0, [r2]
_080616AA:
	ldrb r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	adds r0, #0xa
	ldr r1, _080616E8 @ =IWRAM_START + 0x3D
	add r1, r8
	strb r0, [r1]
	ldr r1, _080616EC @ =gUnknown_080D94E8
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r6, #0x3e]
	ldr r0, [r7, #8]
	asrs r0, r0, #8
	mov r1, sb
	subs r2, r1, r0
	cmp r2, #0
	blt _080616F0
	adds r1, r2, #0
	b _080616F4
	.align 2, 0
_080616D4: .4byte gCurTask
_080616D8: .4byte IWRAM_START + 0xC
_080616DC: .4byte gUnknown_03005960
_080616E0: .4byte gUnknown_030059E0
_080616E4: .4byte IWRAM_START + 0x3C
_080616E8: .4byte IWRAM_START + 0x3D
_080616EC: .4byte gUnknown_080D94E8
_080616F0:
	mov r2, sb
	subs r1, r0, r2
_080616F4:
	adds r0, r6, #0
	adds r0, #0x40
	strh r1, [r0]
	ldr r0, _0806173C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08061740 @ =sub_80617A4
	str r0, [r1, #8]
	ldr r2, _08061744 @ =gUnknown_030059E0
	ldr r0, [r2, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r2, #0x20]
	adds r2, r6, #0
	adds r2, #0x3c
	ldrb r0, [r2]
	movs r3, #2
	subs r0, r3, r0
	strb r0, [r2]
	ldr r0, _08061748 @ =0x0000021A
	strh r0, [r4, #0xa]
	ldrb r0, [r2]
	adds r0, #1
	adds r1, r4, #0
	adds r1, #0x20
	strb r0, [r1]
	adds r1, #1
	movs r0, #0xff
	strb r0, [r1]
	ldrb r0, [r2]
	subs r3, r3, r0
	strb r3, [r2]
	ldr r0, _0806174C @ =0x00000117
	bl m4aSongNumStart
	b _08061788
	.align 2, 0
_0806173C: .4byte gCurTask
_08061740: .4byte sub_80617A4
_08061744: .4byte gUnknown_030059E0
_08061748: .4byte 0x0000021A
_0806174C: .4byte 0x00000117
_08061750:
	ldrh r0, [r4, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08061774
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08061774
	movs r2, #0x18
	ldrsh r1, [r4, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08061788
_08061774:
	ldrb r0, [r6, #8]
	mov r1, sl
	strb r0, [r1]
	ldr r0, _08061784 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08061794
	.align 2, 0
_08061784: .4byte gCurTask
_08061788:
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_08061794:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80617A4
sub_80617A4: @ 0x080617A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r6, _080618A4 @ =gCurTask
	ldr r0, [r6]
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r4, r0
	adds r0, #0xc
	adds r5, r4, r0
	ldr r1, [r7]
	mov ip, r1
	ldrb r2, [r7, #8]
	lsls r2, r2, #3
	ldrh r0, [r7, #4]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldrb r1, [r1, #1]
	lsls r1, r1, #3
	ldrh r0, [r7, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r3, _080618A8 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r2, r2, r0
	strh r2, [r5, #0x16]
	ldr r0, [r3, #4]
	subs r1, r1, r0
	strh r1, [r5, #0x18]
	ldr r3, _080618AC @ =IWRAM_START + 0x3D
	adds r2, r4, r3
	ldrb r0, [r2]
	mov r8, r6
	cmp r0, #0
	beq _0806186E
	subs r0, #1
	strb r0, [r2]
	ldr r6, _080618B0 @ =gUnknown_030059E0
	ldr r0, _080618B4 @ =IWRAM_START + 0x40
	adds r3, r4, r0
	movs r0, #0
	ldrsh r1, [r3, r0]
	mov sb, r1
	movs r1, #0x3e
	ldrsh r0, [r7, r1]
	mov r1, sb
	muls r1, r0, r1
	ldr r0, [r6, #0xc]
	adds r0, r0, r1
	str r0, [r6, #0xc]
	movs r0, #0
	strh r0, [r6, #0x12]
	ldrb r0, [r2]
	cmp r0, #0
	bne _0806186E
	ldrh r1, [r3]
	lsls r1, r1, #0x10
	asrs r0, r1, #0x11
	asrs r1, r1, #0x12
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x18
	ble _0806182E
	movs r3, #0x18
_0806182E:
	ldr r1, _080618B8 @ =gUnknown_080D94F2
	ldr r2, _080618BC @ =IWRAM_START + 0x3C
	adds r2, r4, r2
	str r2, [sp]
	ldrb r0, [r2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	strh r2, [r6, #0x12]
	lsls r0, r3, #0x18
	asrs r0, r0, #0x18
	movs r3, #0x3e
	ldrsh r1, [r7, r3]
	adds r3, r0, #0
	muls r3, r1, r3
	ldr r1, _080618C0 @ =gUnknown_080D94EE
	ldr r4, [sp]
	ldrb r0, [r4]
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	muls r0, r3, r0
	asrs r0, r0, #1
	adds r2, r2, r0
	strh r2, [r6, #0x12]
	ldr r0, [r6, #0x20]
	ldr r1, _080618C4 @ =0xFFBFFFFF
	ands r0, r1
	ldr r1, _080618C8 @ =0xFFFFFEFF
	ands r0, r1
	str r0, [r6, #0x20]
_0806186E:
	ldrh r0, [r5, #0x16]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08061892
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08061892
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _080618CC
_08061892:
	ldrb r0, [r7, #8]
	mov r3, ip
	strb r0, [r3]
	mov r4, r8
	ldr r0, [r4]
	bl TaskDestroy
	b _080618F8
	.align 2, 0
_080618A4: .4byte gCurTask
_080618A8: .4byte gUnknown_03005960
_080618AC: .4byte IWRAM_START + 0x3D
_080618B0: .4byte gUnknown_030059E0
_080618B4: .4byte IWRAM_START + 0x40
_080618B8: .4byte gUnknown_080D94F2
_080618BC: .4byte IWRAM_START + 0x3C
_080618C0: .4byte gUnknown_080D94EE
_080618C4: .4byte 0xFFBFFFFF
_080618C8: .4byte 0xFFFFFEFF
_080618CC:
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _080618F2
	movs r1, #0
	ldr r0, _08061908 @ =0x0000021A
	strh r0, [r5, #0xa]
	adds r0, r5, #0
	adds r0, #0x20
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0806190C @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08061910 @ =sub_806160C
	str r0, [r1, #8]
_080618F2:
	adds r0, r5, #0
	bl sub_80051E8
_080618F8:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061908: .4byte 0x0000021A
_0806190C: .4byte gCurTask
_08061910: .4byte sub_806160C

	thumb_func_start sub_8061914
sub_8061914: @ 0x08061914
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r3, _08061A04 @ =gCurTask
	ldr r0, [r3]
	str r0, [sp]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r1, [r5]
	mov sb, r1
	ldrh r1, [r5, #4]
	ldrh r2, [r5, #6]
	ldrb r0, [r5, #8]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r0, r0, r1
	mov ip, r0
	mov r1, sb
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov r8, r0
	ldr r7, _08061A08 @ =gUnknown_030059E0
	ldr r6, [r7, #0x20]
	movs r2, #0x80
	mov sl, r2
	mov r0, sl
	ands r0, r6
	mov sl, r0
	cmp r0, #0
	beq _08061960
	b _08061A5A
_08061960:
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	mov r2, ip
	adds r1, r2, r0
	ldr r3, [r7, #8]
	str r3, [sp, #4]
	asrs r4, r3, #8
	cmp r1, r4
	bgt _08061A52
	mov r2, sb
	ldrb r0, [r2, #5]
	lsls r0, r0, #3
	adds r0, r1, r0
	cmp r0, r4
	blt _08061A52
	movs r0, #4
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	mov r3, r8
	adds r2, r3, r0
	ldr r0, [r7, #0xc]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _08061A52
	mov r3, sb
	ldrb r0, [r3, #6]
	lsls r0, r0, #3
	adds r0, r2, r0
	cmp r0, r1
	blt _08061A52
	cmp ip, r4
	bge _08061A1C
	ldrb r1, [r5, #9]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _08061A4C
	adds r1, r7, #0
	adds r1, #0x6d
	movs r0, #0x1b
	strb r0, [r1]
	mov r1, ip
	subs r0, r4, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _08061A0C @ =0x000003FF
	ands r0, r1
	movs r3, #0x14
	ldrsh r1, [r7, r3]
	ldr r2, [sp, #4]
	adds r1, r2, r1
	str r1, [r7, #8]
	mov r3, r8
	lsls r2, r3, #8
	ldr r1, _08061A10 @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08061A14 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r7, #0xc]
	mov r2, sl
	strh r2, [r7, #0x12]
	ldr r0, _08061A18 @ =sub_8061AB0
	ldr r3, [sp]
	str r0, [r3, #8]
	b _08061A5A
	.align 2, 0
_08061A04: .4byte gCurTask
_08061A08: .4byte gUnknown_030059E0
_08061A0C: .4byte 0x000003FF
_08061A10: .4byte gUnknown_08097AA4
_08061A14: .4byte 0xFFFFE400
_08061A18: .4byte sub_8061AB0
_08061A1C:
	movs r0, #0x14
	ldrsh r1, [r7, r0]
	movs r0, #0x80
	lsls r0, r0, #3
	ldrb r3, [r5, #9]
	cmp r1, r0
	ble _08061A4C
	movs r0, #2
	ands r6, r0
	cmp r6, #0
	bne _08061A4C
	adds r0, r7, #0
	adds r0, #0x5e
	ldr r1, _08061A48 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _08061A4C
	movs r0, #1
	orrs r0, r3
	b _08061A58
	.align 2, 0
_08061A48: .4byte gUnknown_03005B38
_08061A4C:
	movs r0, #0xfe
	ands r0, r3
	b _08061A58
_08061A52:
	ldrb r1, [r5, #9]
	movs r0, #0xfe
	ands r0, r1
_08061A58:
	strb r0, [r5, #9]
_08061A5A:
	ldr r1, _08061AA8 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, ip
	subs r2, r2, r0
	mov ip, r2
	ldr r0, [r1, #4]
	mov r3, r8
	subs r3, r3, r0
	mov r8, r3
	mov r1, ip
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08061A88
	mov r0, r8
	adds r0, #0x80
	cmp r0, #0
	blt _08061A88
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r8, r0
	ble _08061A96
_08061A88:
	ldrb r0, [r5, #8]
	mov r1, sb
	strb r0, [r1]
	ldr r2, _08061AAC @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
_08061A96:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061AA8: .4byte gUnknown_03005960
_08061AAC: .4byte gCurTask

	thumb_func_start sub_8061AB0
sub_8061AB0: @ 0x08061AB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08061B00 @ =gCurTask
	ldr r0, [r0]
	mov sl, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov ip, r1
	ldr r3, [r1]
	ldrh r0, [r1, #4]
	ldrh r2, [r1, #6]
	ldr r4, _08061B04 @ =gUnknown_030059E0
	ldrb r7, [r1, #8]
	lsls r1, r7, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r8, r1
	ldrb r0, [r3, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov sb, r0
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r1, #0x80
	ands r6, r1
	cmp r6, #0
	beq _08061B08
	strb r7, [r3]
	ldr r2, _08061B00 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _08061C56
	.align 2, 0
_08061B00: .4byte gCurTask
_08061B04: .4byte gUnknown_030059E0
_08061B08:
	ldr r2, [r4, #8]
	asrs r0, r2, #8
	mov r1, r8
	subs r0, r0, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r7, r0, #8
	movs r0, #0x80
	lsls r0, r0, #1
	adds r7, r7, r0
	ldr r1, _08061B78 @ =0x000003FF
	ands r7, r1
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	adds r2, r2, r0
	str r2, [r4, #8]
	mov r0, sb
	lsls r3, r0, #8
	ldr r1, _08061B7C @ =gUnknown_08097AA4
	lsls r0, r7, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r3
	ldr r1, _08061B80 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	asrs r2, r2, #8
	mov r0, r8
	subs r2, r2, r0
	cmp r2, #0x8c
	ble _08061B8C
	adds r0, #0x8c
	lsls r0, r0, #8
	str r0, [r4, #8]
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	bne _08061B6E
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x30
	strh r0, [r1]
_08061B6E:
	ldr r2, _08061B84 @ =gCurTask
	ldr r1, [r2]
	ldr r0, _08061B88 @ =sub_8061C70
	str r0, [r1, #8]
	b _08061C56
	.align 2, 0
_08061B78: .4byte 0x000003FF
_08061B7C: .4byte gUnknown_08097AA4
_08061B80: .4byte 0xFFFFE400
_08061B84: .4byte gCurTask
_08061B88: .4byte sub_8061C70
_08061B8C:
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	mov r2, ip
	ldr r0, [r2, #0xc]
	cmp r1, r0
	bge _08061BB8
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061BB4 @ =sub_8061914
	mov r1, sl
	str r0, [r1, #8]
	b _08061C56
	.align 2, 0
_08061BB4: .4byte sub_8061914
_08061BB8:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08061BE8 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08061BF4
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08061BEC @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061BF0 @ =sub_8061914
	mov r2, sl
	str r0, [r2, #8]
	b _08061C56
	.align 2, 0
_08061BE8: .4byte gUnknown_03005B38
_08061BEC: .4byte 0x0000FB20
_08061BF0: .4byte sub_8061914
_08061BF4:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _08061C56
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08061C28
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _08061C56
_08061C28:
	ldr r1, _08061C64 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r1, _08061C68 @ =0xFFFFFEE6
	adds r0, r7, r1
	ldr r2, _08061C6C @ =0x000003FF
	ands r0, r2
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_08061C56:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061C64: .4byte gUnknown_080D672C
_08061C68: .4byte 0xFFFFFEE6
_08061C6C: .4byte 0x000003FF

	thumb_func_start sub_8061C70
sub_8061C70: @ 0x08061C70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08061CC0 @ =gCurTask
	mov sb, r0
	ldr r1, [r0]
	mov r8, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r7, [r3]
	ldrh r0, [r3, #4]
	ldrh r2, [r3, #6]
	ldr r4, _08061CC4 @ =gUnknown_030059E0
	ldrb r6, [r3, #8]
	lsls r1, r6, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov ip, r0
	ldr r2, [r4, #0x20]
	movs r0, #0x80
	mov sl, r0
	adds r5, r2, #0
	ands r5, r0
	cmp r5, #0
	beq _08061CC8
	strb r6, [r7]
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08061D96
	.align 2, 0
_08061CC0: .4byte gCurTask
_08061CC4: .4byte gUnknown_030059E0
_08061CC8:
	ldrh r0, [r4, #0x14]
	adds r6, r0, #1
	strh r6, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x8c
	lsls r0, r0, #8
	str r0, [r4, #8]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r5, [r4, #0x12]
	asrs r0, r0, #8
	mov r1, ip
	subs r0, r0, r1
	cmp r0, #0xbe
	ble _08061D14
	mov r0, ip
	adds r0, #0xbe
	lsls r0, r0, #8
	str r0, [r4, #0xc]
	movs r0, #4
	ands r2, r0
	cmp r2, #0
	bne _08061D04
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x2f
	strh r0, [r1]
_08061D04:
	mov r0, sb
	ldr r1, [r0]
	ldr r0, _08061D10 @ =sub_8061DA4
	str r0, [r1, #8]
	b _08061D96
	.align 2, 0
_08061D10: .4byte sub_8061DA4
_08061D14:
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r3, #0xc]
	cmp r1, r0
	bge _08061D2C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	strh r5, [r4, #0x10]
	strh r6, [r4, #0x12]
	b _08061D4A
_08061D2C:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08061D58 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08061D64
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	strh r5, [r4, #0x10]
	ldr r0, _08061D5C @ =0x0000FB20
	strh r0, [r4, #0x12]
_08061D4A:
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061D60 @ =sub_8061914
	mov r1, r8
	str r0, [r1, #8]
	b _08061D96
	.align 2, 0
_08061D58: .4byte gUnknown_03005B38
_08061D5C: .4byte 0x0000FB20
_08061D60: .4byte sub_8061914
_08061D64:
	movs r5, #4
	ands r2, r5
	cmp r2, #0
	bne _08061D96
	mov r0, sl
	ands r0, r1
	cmp r0, #0
	beq _08061D96
	adds r0, r4, #0
	adds r0, #0x64
	strh r5, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r5
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
_08061D96:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8061DA4
sub_8061DA4: @ 0x08061DA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08061DF8 @ =gCurTask
	mov ip, r0
	ldr r1, [r0]
	mov sb, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r3, [r7]
	mov r8, r3
	ldrh r0, [r7, #4]
	ldrh r2, [r7, #6]
	ldr r4, _08061DFC @ =gUnknown_030059E0
	ldrb r3, [r7, #8]
	lsls r1, r3, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r5, r8
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r2, r0, r2
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r0, #0x80
	ands r6, r0
	mov sl, ip
	cmp r6, #0
	beq _08061E00
	mov r1, r8
	strb r3, [r1]
	mov r3, ip
	ldr r0, [r3]
	bl TaskDestroy
	b _08061F4A
	.align 2, 0
_08061DF8: .4byte gCurTask
_08061DFC: .4byte gUnknown_030059E0
_08061E00:
	ldr r0, [r4, #8]
	mov r8, r0
	asrs r0, r0, #8
	subs r3, r0, r1
	movs r0, #0xd4
	lsls r0, r0, #1
	cmp r3, r0
	ble _08061E38
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	beq _08061E20
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #2
	b _08061E26
_08061E20:
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #1
_08061E26:
	strb r0, [r1]
	mov r3, sl
	ldr r1, [r3]
	ldr r0, _08061E34 @ =sub_8061914
	str r0, [r1, #8]
	b _08061F4A
	.align 2, 0
_08061E34: .4byte sub_8061914
_08061E38:
	adds r2, #0xbe
	lsls r1, r3, #4
	subs r1, r1, r3
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r3, r0, #8
	movs r0, #0xc0
	lsls r0, r0, #2
	adds r3, r3, r0
	ldr r1, _08061E9C @ =0x000003FF
	mov sl, r1
	ands r3, r1
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	add r0, r8
	str r0, [r4, #8]
	lsls r2, r2, #8
	ldr r1, _08061EA0 @ =gUnknown_08097AA4
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08061EA4 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	bge _08061EAC
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061EA8 @ =sub_8061914
	mov r1, sb
	str r0, [r1, #8]
	b _08061F4A
	.align 2, 0
_08061E9C: .4byte 0x000003FF
_08061EA0: .4byte gUnknown_08097AA4
_08061EA4: .4byte 0xFFFFE400
_08061EA8: .4byte sub_8061914
_08061EAC:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08061EDC @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _08061EE8
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08061EE0 @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08061EE4 @ =sub_8061914
	mov r3, sb
	str r0, [r3, #8]
	b _08061F4A
	.align 2, 0
_08061EDC: .4byte gUnknown_03005B38
_08061EE0: .4byte 0x0000FB20
_08061EE4: .4byte sub_8061914
_08061EE8:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _08061F4A
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08061F1C
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _08061F4A
_08061F1C:
	ldr r1, _08061F58 @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r5, _08061F5C @ =0xFFFFFEE6
	adds r0, r3, r5
	mov r1, sl
	ands r0, r1
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_08061F4A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061F58: .4byte gUnknown_080D672C
_08061F5C: .4byte 0xFFFFFEE6

	thumb_func_start sub_8061F60
sub_8061F60: @ 0x08061F60
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r3, _08062050 @ =gCurTask
	ldr r0, [r3]
	str r0, [sp]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	ldr r1, [r5]
	mov sb, r1
	ldrh r1, [r5, #4]
	ldrh r2, [r5, #6]
	ldrb r0, [r5, #8]
	lsls r0, r0, #3
	lsls r1, r1, #8
	adds r0, r0, r1
	mov ip, r0
	mov r1, sb
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov r8, r0
	ldr r7, _08062054 @ =gUnknown_030059E0
	ldr r6, [r7, #0x20]
	movs r2, #0x80
	mov sl, r2
	mov r0, sl
	ands r0, r6
	mov sl, r0
	cmp r0, #0
	beq _08061FAC
	b _080620AA
_08061FAC:
	movs r0, #3
	ldrsb r0, [r1, r0]
	lsls r0, r0, #3
	mov r2, ip
	adds r1, r2, r0
	ldr r3, [r7, #8]
	str r3, [sp, #4]
	asrs r4, r3, #8
	cmp r1, r4
	bgt _080620A2
	mov r2, sb
	ldrb r0, [r2, #5]
	lsls r0, r0, #3
	adds r0, r1, r0
	cmp r0, r4
	blt _080620A2
	movs r0, #4
	ldrsb r0, [r2, r0]
	lsls r0, r0, #3
	mov r3, r8
	adds r2, r3, r0
	ldr r0, [r7, #0xc]
	asrs r1, r0, #8
	cmp r2, r1
	bgt _080620A2
	mov r3, sb
	ldrb r0, [r3, #6]
	lsls r0, r0, #3
	adds r0, r2, r0
	cmp r0, r1
	blt _080620A2
	cmp ip, r4
	ble _08062068
	ldrb r1, [r5, #9]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	beq _0806209C
	adds r1, r7, #0
	adds r1, #0x6d
	movs r0, #0x1b
	strb r0, [r1]
	mov r1, ip
	subs r0, r4, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r0, r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r1, _08062058 @ =0x000003FF
	ands r0, r1
	movs r3, #0x14
	ldrsh r1, [r7, r3]
	ldr r2, [sp, #4]
	adds r1, r2, r1
	str r1, [r7, #8]
	mov r3, r8
	lsls r2, r3, #8
	ldr r1, _0806205C @ =gUnknown_08097AA4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08062060 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r7, #0xc]
	mov r2, sl
	strh r2, [r7, #0x12]
	ldr r0, _08062064 @ =sub_8062100
	ldr r3, [sp]
	str r0, [r3, #8]
	b _080620AA
	.align 2, 0
_08062050: .4byte gCurTask
_08062054: .4byte gUnknown_030059E0
_08062058: .4byte 0x000003FF
_0806205C: .4byte gUnknown_08097AA4
_08062060: .4byte 0xFFFFE400
_08062064: .4byte sub_8062100
_08062068:
	movs r0, #0x14
	ldrsh r1, [r7, r0]
	ldr r0, _08062094 @ =0xFFFFFC00
	ldrb r3, [r5, #9]
	cmp r1, r0
	bge _0806209C
	movs r0, #2
	ands r6, r0
	cmp r6, #0
	bne _0806209C
	adds r0, r7, #0
	adds r0, #0x5e
	ldr r1, _08062098 @ =gUnknown_03005B38
	ldrh r2, [r0]
	ldrh r0, [r1]
	ands r0, r2
	cmp r0, #0
	bne _0806209C
	movs r0, #1
	orrs r0, r3
	b _080620A8
	.align 2, 0
_08062094: .4byte 0xFFFFFC00
_08062098: .4byte gUnknown_03005B38
_0806209C:
	movs r0, #0xfe
	ands r0, r3
	b _080620A8
_080620A2:
	ldrb r1, [r5, #9]
	movs r0, #0xfe
	ands r0, r1
_080620A8:
	strb r0, [r5, #9]
_080620AA:
	ldr r1, _080620F8 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, ip
	subs r2, r2, r0
	mov ip, r2
	ldr r0, [r1, #4]
	mov r3, r8
	subs r3, r3, r0
	mov r8, r3
	mov r1, ip
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _080620D8
	mov r0, r8
	adds r0, #0x80
	cmp r0, #0
	blt _080620D8
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r8, r0
	ble _080620E6
_080620D8:
	ldrb r0, [r5, #8]
	mov r1, sb
	strb r0, [r1]
	ldr r2, _080620FC @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
_080620E6:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080620F8: .4byte gUnknown_03005960
_080620FC: .4byte gCurTask

	thumb_func_start sub_8062100
sub_8062100: @ 0x08062100
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08062150 @ =gCurTask
	ldr r0, [r0]
	mov sl, r0
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	mov ip, r1
	ldr r7, [r1]
	ldrh r0, [r1, #4]
	ldrh r2, [r1, #6]
	ldr r4, _08062154 @ =gUnknown_030059E0
	ldrb r3, [r1, #8]
	lsls r1, r3, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r8, r1
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov sb, r0
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r1, #0x80
	ands r6, r1
	cmp r6, #0
	beq _08062158
	strb r3, [r7]
	ldr r2, _08062150 @ =gCurTask
	ldr r0, [r2]
	bl TaskDestroy
	b _080622AE
	.align 2, 0
_08062150: .4byte gCurTask
_08062154: .4byte gUnknown_030059E0
_08062158:
	ldr r2, [r4, #8]
	asrs r0, r2, #8
	mov r1, r8
	subs r0, r0, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r7, r0, #8
	movs r0, #0x80
	lsls r0, r0, #1
	adds r7, r7, r0
	ldr r1, _080621CC @ =0x000003FF
	ands r7, r1
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	adds r2, r2, r0
	str r2, [r4, #8]
	mov r0, sb
	lsls r3, r0, #8
	ldr r1, _080621D0 @ =gUnknown_08097AA4
	lsls r0, r7, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r3
	ldr r1, _080621D4 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	asrs r2, r2, #8
	mov r0, r8
	subs r2, r2, r0
	ldr r0, _080621D8 @ =0xFFFFFEE0
	cmp r2, r0
	bge _080621E4
	add r0, r8
	lsls r0, r0, #8
	str r0, [r4, #8]
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	bne _080621C0
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x31
	strh r0, [r1]
_080621C0:
	ldr r2, _080621DC @ =gCurTask
	ldr r1, [r2]
	ldr r0, _080621E0 @ =sub_80622C8
	str r0, [r1, #8]
	b _080622AE
	.align 2, 0
_080621CC: .4byte 0x000003FF
_080621D0: .4byte gUnknown_08097AA4
_080621D4: .4byte 0xFFFFE400
_080621D8: .4byte 0xFFFFFEE0
_080621DC: .4byte gCurTask
_080621E0: .4byte sub_80622C8
_080621E4:
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	mov r2, ip
	ldr r0, [r2, #0xc]
	cmn r1, r0
	ble _08062210
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _0806220C @ =sub_8061F60
	mov r1, sl
	str r0, [r1, #8]
	b _080622AE
	.align 2, 0
_0806220C: .4byte sub_8061F60
_08062210:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08062240 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0806224C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08062244 @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08062248 @ =sub_8061F60
	mov r2, sl
	str r0, [r2, #8]
	b _080622AE
	.align 2, 0
_08062240: .4byte gUnknown_03005B38
_08062244: .4byte 0x0000FB20
_08062248: .4byte sub_8061F60
_0806224C:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _080622AE
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08062280
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _080622AE
_08062280:
	ldr r1, _080622BC @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r1, _080622C0 @ =0xFFFFFEE6
	adds r0, r7, r1
	ldr r2, _080622C4 @ =0x000003FF
	ands r0, r2
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_080622AE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080622BC: .4byte gUnknown_080D672C
_080622C0: .4byte 0xFFFFFEE6
_080622C4: .4byte 0x000003FF

	thumb_func_start sub_80622C8
sub_80622C8: @ 0x080622C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08062318 @ =gCurTask
	mov sb, r0
	ldr r1, [r0]
	mov r8, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r1, r0
	ldr r7, [r3]
	ldrh r0, [r3, #4]
	ldrh r2, [r3, #6]
	ldr r4, _0806231C @ =gUnknown_030059E0
	ldrb r6, [r3, #8]
	lsls r1, r6, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov ip, r0
	ldr r2, [r4, #0x20]
	movs r0, #0x80
	mov sl, r0
	adds r5, r2, #0
	ands r5, r0
	cmp r5, #0
	beq _08062320
	strb r6, [r7]
	mov r1, sb
	ldr r0, [r1]
	bl TaskDestroy
	b _08062406
	.align 2, 0
_08062318: .4byte gCurTask
_0806231C: .4byte gUnknown_030059E0
_08062320:
	ldrh r0, [r4, #0x14]
	adds r6, r0, #1
	strh r6, [r4, #0x14]
	ldr r7, _0806236C @ =0xFFFFFEE0
	adds r0, r1, r7
	lsls r0, r0, #8
	str r0, [r4, #8]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r4, #0xc]
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r5, [r4, #0x12]
	asrs r0, r0, #8
	mov r1, ip
	subs r0, r0, r1
	movs r1, #0xff
	rsbs r1, r1, #0
	cmp r0, r1
	bge _08062374
	mov r0, ip
	subs r0, #0xff
	lsls r0, r0, #8
	str r0, [r4, #0xc]
	movs r0, #4
	ands r2, r0
	cmp r2, #0
	bne _08062360
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x2f
	strh r0, [r1]
_08062360:
	mov r7, sb
	ldr r1, [r7]
	ldr r0, _08062370 @ =sub_8062414
	str r0, [r1, #8]
	b _08062406
	.align 2, 0
_0806236C: .4byte 0xFFFFFEE0
_08062370: .4byte sub_8062414
_08062374:
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r3, #0xc]
	cmn r1, r0
	ble _0806239C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	strh r5, [r4, #0x10]
	strh r6, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08062398 @ =sub_8061F60
	mov r1, r8
	str r0, [r1, #8]
	b _08062406
	.align 2, 0
_08062398: .4byte sub_8061F60
_0806239C:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _080623C8 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _080623D4
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	strh r5, [r4, #0x10]
	ldr r0, _080623CC @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _080623D0 @ =sub_8061F60
	mov r7, r8
	str r0, [r7, #8]
	b _08062406
	.align 2, 0
_080623C8: .4byte gUnknown_03005B38
_080623CC: .4byte 0x0000FB20
_080623D0: .4byte sub_8061F60
_080623D4:
	movs r5, #4
	ands r2, r5
	cmp r2, #0
	bne _08062406
	mov r0, sl
	ands r0, r1
	cmp r0, #0
	beq _08062406
	adds r0, r4, #0
	adds r0, #0x64
	strh r5, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r5
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
_08062406:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8062414
sub_8062414: @ 0x08062414
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08062468 @ =gCurTask
	mov ip, r0
	ldr r1, [r0]
	mov sb, r1
	ldrh r1, [r1, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r7, r1, r0
	ldr r3, [r7]
	mov r8, r3
	ldrh r0, [r7, #4]
	ldrh r2, [r7, #6]
	ldr r4, _0806246C @ =gUnknown_030059E0
	ldrb r3, [r7, #8]
	lsls r1, r3, #3
	lsls r0, r0, #8
	adds r1, r1, r0
	mov r5, r8
	ldrb r0, [r5, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r2, r0, r2
	ldr r5, [r4, #0x20]
	adds r6, r5, #0
	movs r0, #0x80
	ands r6, r0
	mov sl, ip
	cmp r6, #0
	beq _08062470
	mov r1, r8
	strb r3, [r1]
	mov r3, ip
	ldr r0, [r3]
	bl TaskDestroy
	b _080625BE
	.align 2, 0
_08062468: .4byte gCurTask
_0806246C: .4byte gUnknown_030059E0
_08062470:
	ldr r0, [r4, #8]
	mov r8, r0
	asrs r0, r0, #8
	subs r3, r0, r1
	ldr r0, _08062490 @ =0xFFFFFE58
	cmp r3, r0
	bge _080624AC
	movs r0, #4
	ands r5, r0
	cmp r5, #0
	beq _08062494
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #2
	b _0806249A
	.align 2, 0
_08062490: .4byte 0xFFFFFE58
_08062494:
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #1
_0806249A:
	strb r0, [r1]
	mov r3, sl
	ldr r1, [r3]
	ldr r0, _080624A8 @ =sub_8061F60
	str r0, [r1, #8]
	b _080625BE
	.align 2, 0
_080624A8: .4byte sub_8061F60
_080624AC:
	subs r2, #0xc3
	lsls r1, r3, #4
	subs r1, r1, r3
	lsls r0, r1, #5
	subs r0, r0, r1
	lsls r0, r0, #1
	asrs r3, r0, #8
	movs r0, #0xc0
	lsls r0, r0, #2
	adds r3, r3, r0
	ldr r1, _08062510 @ =0x000003FF
	mov sl, r1
	ands r3, r1
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	add r0, r8
	str r0, [r4, #8]
	lsls r2, r2, #8
	ldr r1, _08062514 @ =gUnknown_08097AA4
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x16
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, _08062518 @ =0xFFFFE400
	adds r0, r0, r1
	str r0, [r4, #0xc]
	strh r6, [r4, #0x12]
	movs r0, #0x14
	ldrsh r1, [r4, r0]
	ldr r0, [r7, #0xc]
	cmn r1, r0
	ble _08062520
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _0806251C @ =sub_8061F60
	mov r1, sb
	str r0, [r1, #8]
	b _080625BE
	.align 2, 0
_08062510: .4byte 0x000003FF
_08062514: .4byte gUnknown_08097AA4
_08062518: .4byte 0xFFFFE400
_0806251C: .4byte sub_8061F60
_08062520:
	adds r1, r4, #0
	adds r1, #0x5e
	ldr r0, _08062550 @ =gUnknown_03005B38
	ldrh r1, [r1]
	ldrh r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0806255C
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0x32
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	strh r0, [r4, #0x10]
	ldr r0, _08062554 @ =0x0000FB20
	strh r0, [r4, #0x12]
	adds r1, #9
	movs r0, #5
	strb r0, [r1]
	ldr r0, _08062558 @ =sub_8061F60
	mov r3, sb
	str r0, [r3, #8]
	b _080625BE
	.align 2, 0
_08062550: .4byte gUnknown_03005B38
_08062554: .4byte 0x0000FB20
_08062558: .4byte sub_8061F60
_0806255C:
	movs r6, #4
	ands r5, r6
	cmp r5, #0
	bne _080625BE
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08062590
	adds r0, r4, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, r4, #0
	movs r1, #9
	bl sub_8023B5C
	movs r0, #6
	strb r0, [r4, #0x16]
	movs r0, #9
	strb r0, [r4, #0x17]
	ldr r0, [r4, #0x20]
	orrs r0, r6
	str r0, [r4, #0x20]
	movs r0, #0x6d
	bl m4aSongNumStart
	b _080625BE
_08062590:
	ldr r1, _080625CC @ =gUnknown_080D672C
	adds r0, r4, #0
	adds r0, #0x85
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r0, #0x44
	adds r1, r4, #0
	adds r1, #0x68
	strh r0, [r1]
	ldr r5, _080625D0 @ =0xFFFFFEE6
	adds r0, r3, r5
	mov r1, sl
	ands r0, r1
	movs r1, #0x5e
	bl Div
	adds r1, r4, #0
	adds r1, #0x6a
	strh r0, [r1]
_080625BE:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080625CC: .4byte gUnknown_080D672C
_080625D0: .4byte 0xFFFFFEE6

	thumb_func_start sub_80625D4
sub_80625D4: @ 0x080625D4
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _08062624 @ =sub_8061914
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x10
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r2, #0
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r3, #2
	rsbs r3, r3, #0
	adds r1, r3, #0
	strb r1, [r6]
	strb r2, [r0, #9]
	movs r1, #0x80
	lsls r1, r1, #3
	str r1, [r0, #0xc]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08062624: .4byte sub_8061914

	thumb_func_start sub_8062628
sub_8062628: @ 0x08062628
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _08062678 @ =sub_8061F60
	movs r2, #0x80
	lsls r2, r2, #6
	movs r1, #0
	str r1, [sp]
	movs r1, #0x10
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	movs r2, #0
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r3, #2
	rsbs r3, r3, #0
	adds r1, r3, #0
	strb r1, [r6]
	strb r2, [r0, #9]
	movs r1, #0x80
	lsls r1, r1, #3
	str r1, [r0, #0xc]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08062678: .4byte sub_8061F60

	thumb_func_start sub_806267C
sub_806267C: @ 0x0806267C
	push {r4, r5, r6, lr}
	ldr r6, _080626CC @ =gUnknown_030059E0
	ldr r5, [r6, #8]
	asrs r3, r5, #8
	subs r3, r3, r0
	lsls r4, r3, #4
	subs r4, r4, r3
	lsls r0, r4, #5
	subs r0, r0, r4
	lsls r0, r0, #1
	asrs r0, r0, #8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r0, r2
	ldr r2, _080626D0 @ =0x000003FF
	ands r0, r2
	movs r3, #0x14
	ldrsh r2, [r6, r3]
	adds r5, r5, r2
	str r5, [r6, #8]
	lsls r1, r1, #8
	ldr r3, _080626D4 @ =gUnknown_08097AA4
	lsls r2, r0, #1
	adds r2, r2, r3
	ldrh r3, [r2]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x16
	lsls r2, r3, #1
	adds r2, r2, r3
	lsls r2, r2, #3
	adds r2, r2, r1
	ldr r1, _080626D8 @ =0xFFFFE400
	adds r2, r2, r1
	str r2, [r6, #0xc]
	movs r1, #0
	strh r1, [r6, #0x12]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080626CC: .4byte gUnknown_030059E0
_080626D0: .4byte 0x000003FF
_080626D4: .4byte gUnknown_08097AA4
_080626D8: .4byte 0xFFFFE400

	thumb_func_start sub_80626DC
sub_80626DC: @ 0x080626DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r0
	adds r4, r1, #0
	adds r6, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _080627B0 @ =sub_80627CC
	ldr r2, _080627B4 @ =0x00002010
	ldr r1, _080627B8 @ =sub_8062E7C
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r2, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r2, r0
	ldr r1, _080627BC @ =IWRAM_START + 0xC
	adds r5, r2, r1
	movs r7, #0
	movs r3, #0
	mov sl, r3
	strh r4, [r0, #4]
	strh r6, [r0, #6]
	mov r1, sb
	str r1, [r0]
	ldrb r1, [r1]
	strb r1, [r0, #8]
	mov r3, r8
	strb r3, [r0, #9]
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r5, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r6, r6, #8
	adds r0, r0, r6
	strh r0, [r5, #0x18]
	movs r3, #2
	rsbs r3, r3, #0
	adds r0, r3, #0
	strb r0, [r1]
	movs r0, #4
	str r2, [sp, #4]
	bl sub_8007C10
	str r0, [r5, #4]
	movs r0, #0x85
	lsls r0, r0, #2
	strh r0, [r5, #0xa]
	ldr r2, [sp, #4]
	ldr r0, _080627C0 @ =IWRAM_START + 0x2C
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
	ldr r3, _080627C4 @ =IWRAM_START + 0x2D
	adds r1, r2, r3
	movs r0, #0xff
	strb r0, [r1]
	adds r0, #1
	strh r0, [r5, #0x1a]
	mov r0, sl
	strh r0, [r5, #8]
	strh r0, [r5, #0x14]
	strh r0, [r5, #0x1c]
	adds r3, #1
	adds r1, r2, r3
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080627C8 @ =IWRAM_START + 0x31
	adds r2, r2, r0
	strb r7, [r2]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r5, #0x28]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004558
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080627B0: .4byte sub_80627CC
_080627B4: .4byte 0x00002010
_080627B8: .4byte sub_8062E7C
_080627BC: .4byte IWRAM_START + 0xC
_080627C0: .4byte IWRAM_START + 0x2C
_080627C4: .4byte IWRAM_START + 0x2D
_080627C8: .4byte IWRAM_START + 0x31

	thumb_func_start sub_80627CC
sub_80627CC: @ 0x080627CC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	ldr r0, _08062840 @ =gCurTask
	mov sb, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r5, r0
	ldr r1, _08062844 @ =IWRAM_START + 0xC
	adds r4, r5, r1
	ldr r7, [r3]
	ldrb r1, [r3, #8]
	lsls r1, r1, #3
	ldrh r0, [r3, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov ip, r1
	ldrb r1, [r7, #1]
	lsls r1, r1, #3
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r6, r1, r0
	ldr r1, _08062848 @ =gUnknown_03005960
	ldr r0, [r1]
	mov r2, ip
	subs r0, r2, r0
	strh r0, [r4, #0x16]
	ldr r1, [r1, #4]
	subs r2, r6, r1
	strh r2, [r4, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	mov r8, sb
	cmp r0, r1
	bhi _08062832
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08062832
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0806284C
_08062832:
	ldrb r0, [r3, #8]
	strb r0, [r7]
	mov r2, r8
	ldr r0, [r2]
	bl TaskDestroy
	b _08062890
	.align 2, 0
_08062840: .4byte gCurTask
_08062844: .4byte IWRAM_START + 0xC
_08062848: .4byte gUnknown_03005960
_0806284C:
	ldr r3, _080628A0 @ =gUnknown_030059E0
	ldr r1, [r3, #0x20]
	ldr r0, _080628A4 @ =0x00400080
	ands r1, r0
	cmp r1, #0
	bne _0806288A
	str r3, [sp]
	str r1, [sp, #4]
	adds r0, r4, #0
	mov r1, ip
	adds r2, r6, #0
	movs r3, #0
	bl sub_800C204
	cmp r0, #1
	bne _0806288A
	movs r0, #0x85
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	ldr r0, _080628A8 @ =IWRAM_START + 0x2C
	adds r1, r5, r0
	movs r0, #0
	strb r0, [r1]
	ldr r2, _080628AC @ =IWRAM_START + 0x2D
	adds r1, r5, r2
	movs r0, #0xff
	strb r0, [r1]
	mov r0, sb
	ldr r1, [r0]
	ldr r0, _080628B0 @ =sub_80628B4
	str r0, [r1, #8]
_0806288A:
	adds r0, r4, #0
	bl sub_80051E8
_08062890:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080628A0: .4byte gUnknown_030059E0
_080628A4: .4byte 0x00400080
_080628A8: .4byte IWRAM_START + 0x2C
_080628AC: .4byte IWRAM_START + 0x2D
_080628B0: .4byte sub_80628B4

	thumb_func_start sub_80628B4
sub_80628B4: @ 0x080628B4
	push {r4, r5, r6, r7, lr}
	ldr r4, _08062918 @ =gCurTask
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	adds r0, #0xc
	adds r6, r1, r0
	ldr r7, [r5]
	ldrb r1, [r5, #8]
	lsls r1, r1, #3
	ldrh r0, [r5, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r7, #1]
	lsls r2, r2, #3
	ldrh r0, [r5, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _0806291C @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	strh r1, [r6, #0x16]
	ldr r0, [r3, #4]
	subs r2, r2, r0
	strh r2, [r6, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0806290A
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0806290A
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08062920
_0806290A:
	ldrb r0, [r5, #8]
	strb r0, [r7]
	ldr r0, [r4]
	bl TaskDestroy
	b _0806292C
	.align 2, 0
_08062918: .4byte gCurTask
_0806291C: .4byte gUnknown_03005960
_08062920:
	adds r0, r6, #0
	bl sub_8004558
	adds r0, r6, #0
	bl sub_80051E8
_0806292C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8062934
sub_8062934: @ 0x08062934
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _080629A0 @ =gCurTask
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r1, [r0]
	str r1, [sp]
	ldrb r2, [r0, #8]
	mov sl, r2
	ldrh r1, [r0, #4]
	ldrh r2, [r0, #6]
	mov r3, sl
	lsls r0, r3, #3
	lsls r1, r1, #8
	adds r7, r0, r1
	ldr r1, [sp]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r2, r2, #8
	adds r0, r0, r2
	mov sb, r0
	ldr r0, _080629A4 @ =gUnknown_030054CC
	ldrb r5, [r0]
	cmp r5, #2
	bls _080629B4
	ldr r2, _080629A8 @ =gUnknown_030059E0
	ldr r0, [r2, #8]
	asrs r0, r0, #8
	cmp r7, r0
	ble _08062980
	b _08062A96
_08062980:
	ldr r0, [r2, #0x20]
	ldr r1, _080629AC @ =0x8000008
	ands r0, r1
	cmp r0, #0
	beq _0806298C
	b _08062A96
_0806298C:
	adds r0, r2, #0
	adds r0, #0x6d
	movs r1, #0xa
	strb r1, [r0]
	ldr r0, _080629B0 @ =gUnknown_030054D0
	str r7, [r0]
	bl sub_8062B00
	b _08062A96
	.align 2, 0
_080629A0: .4byte gCurTask
_080629A4: .4byte gUnknown_030054CC
_080629A8: .4byte gUnknown_030059E0
_080629AC: .4byte 0x8000008
_080629B0: .4byte gUnknown_030054D0
_080629B4:
	ldr r4, _08062A08 @ =gUnknown_030059E0
	ldr r0, [r4, #8]
	asrs r0, r0, #8
	cmp r7, r0
	bgt _08062A96
	ldr r3, [r4, #0x20]
	movs r0, #0x80
	lsls r0, r0, #0x14
	ands r0, r3
	cmp r0, #0
	bne _08062A96
	adds r1, r4, #0
	adds r1, #0x6d
	movs r0, #0xa
	strb r0, [r1]
	ldr r2, _08062A0C @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #0x21
	orrs r0, r1
	strh r0, [r2]
	ldr r0, _08062A10 @ =gUnknown_030054D0
	str r7, [r0]
	cmp r5, #0
	bne _08062A96
	movs r0, #2
	ands r3, r0
	cmp r3, #0
	bne _08062A96
	movs r2, #0x14
	ldrsh r1, [r4, r2]
	movs r0, #0xa0
	lsls r0, r0, #2
	cmp r1, r0
	ble _08062A96
	movs r0, #0x80
	lsls r0, r0, #3
	cmp r1, r0
	bgt _08062A14
	movs r3, #0xc8
	mov r8, r3
	b _08062A3E
	.align 2, 0
_08062A08: .4byte gUnknown_030059E0
_08062A0C: .4byte gUnknown_03005424
_08062A10: .4byte gUnknown_030054D0
_08062A14:
	movs r0, #0x90
	lsls r0, r0, #4
	cmp r1, r0
	bgt _08062A24
	movs r0, #0x96
	lsls r0, r0, #1
	mov r8, r0
	b _08062A3E
_08062A24:
	movs r0, #0xa0
	lsls r0, r0, #4
	movs r2, #0xc8
	lsls r2, r2, #2
	mov r8, r2
	cmp r1, r0
	bgt _08062A38
	movs r3, #0xfa
	lsls r3, r3, #1
	mov r8, r3
_08062A38:
	mov r0, r8
	cmp r0, #0
	beq _08062A96
_08062A3E:
	ldr r1, _08062AE0 @ =gUnknown_03005450
	ldr r5, [r1]
	mov r2, r8
	adds r0, r5, r2
	str r0, [r1]
	ldr r4, _08062AE4 @ =0x0000C350
	adds r1, r4, #0
	bl Div
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl Div
	adds r1, r0, #0
	cmp r6, r1
	beq _08062A86
	ldr r0, _08062AE8 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #0
	bne _08062A86
	subs r0, r6, r1
	lsls r0, r0, #0x10
	ldr r1, _08062AEC @ =gUnknown_03005448
	lsrs r0, r0, #0x10
	ldrb r3, [r1]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bls _08062A7E
	movs r0, #0xff
_08062A7E:
	strb r0, [r1]
	ldr r1, _08062AF0 @ =gUnknown_030054A8
	movs r0, #0x10
	strb r0, [r1, #3]
_08062A86:
	ldr r1, _08062AF4 @ =gUnknown_030059E0
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	ldr r1, [r1, #0xc]
	asrs r1, r1, #8
	mov r2, r8
	bl sub_801F3A4
_08062A96:
	ldr r1, _08062AF8 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r7, r7, r0
	ldr r0, [r1, #4]
	mov r1, sb
	subs r1, r1, r0
	mov sb, r1
	adds r1, r7, #0
	adds r1, #0x80
	movs r0, #0xf8
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08062AC0
	mov r0, sb
	adds r0, #0x80
	cmp r0, #0
	blt _08062AC0
	movs r0, #0x90
	lsls r0, r0, #1
	cmp sb, r0
	ble _08062ACE
_08062AC0:
	mov r3, sl
	ldr r2, [sp]
	strb r3, [r2]
	ldr r0, _08062AFC @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_08062ACE:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062AE0: .4byte gUnknown_03005450
_08062AE4: .4byte 0x0000C350
_08062AE8: .4byte gUnknown_030054CC
_08062AEC: .4byte gUnknown_03005448
_08062AF0: .4byte gUnknown_030054A8
_08062AF4: .4byte gUnknown_030059E0
_08062AF8: .4byte gUnknown_03005960
_08062AFC: .4byte gCurTask

	thumb_func_start sub_8062B00
sub_8062B00: @ 0x08062B00
	push {r4, r5, r6, r7, lr}
	movs r4, #0
	ldr r6, _08062BB0 @ =gUnknown_030055A0
	ldr r0, _08062BB4 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r0, [r0]
	ldrh r0, [r0, #6]
	movs r7, #0xc0
	lsls r7, r7, #0x12
	adds r5, r0, r7
	ldr r2, _08062BB8 @ =gUnknown_030059E0
	adds r3, r2, #0
	adds r3, #0x37
	ldrb r1, [r3]
	movs r0, #0xbf
	ands r0, r1
	strb r0, [r3]
	strh r4, [r2, #0x32]
	ldr r0, [r5, #0x5c]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08062BAA
	ldr r0, [r6]
	cmp r0, #0
	beq _08062B60
	adds r1, r6, #0
	adds r3, r1, #0
	adds r3, #0xc
	movs r2, #1
_08062B44:
	ldr r0, [r1]
	ldrh r0, [r0, #6]
	adds r0, r0, r7
	ldr r0, [r0, #0x5c]
	ands r0, r2
	cmp r0, #0
	beq _08062B54
	adds r4, #1
_08062B54:
	adds r1, #4
	cmp r1, r3
	bhi _08062B60
	ldr r0, [r1]
	cmp r0, #0
	bne _08062B44
_08062B60:
	ldr r0, _08062BB4 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	bl sub_8019CCC
	ldr r0, [r5, #0x5c]
	movs r1, #1
	orrs r0, r1
	str r0, [r5, #0x5c]
	cmp r4, #0
	bne _08062B8E
	ldr r2, _08062BBC @ =gUnknown_03005424
	ldrh r0, [r2]
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	ldr r1, _08062BC0 @ =gUnknown_03005490
	movs r0, #0xe1
	lsls r0, r0, #4
	str r0, [r1]
_08062B8E:
	bl sub_8019224
	movs r1, #7
	strb r1, [r0]
	ldr r0, _08062BC4 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08062BC8 @ =sub_8062D44
	str r0, [r1, #8]
	ldr r1, _08062BCC @ =gUnknown_03005960
	adds r1, #0x50
	ldrh r2, [r1]
	movs r0, #4
	orrs r0, r2
	strh r0, [r1]
_08062BAA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062BB0: .4byte gUnknown_030055A0
_08062BB4: .4byte 0x04000128
_08062BB8: .4byte gUnknown_030059E0
_08062BBC: .4byte gUnknown_03005424
_08062BC0: .4byte gUnknown_03005490
_08062BC4: .4byte gCurTask
_08062BC8: .4byte sub_8062D44
_08062BCC: .4byte gUnknown_03005960

	thumb_func_start sub_8062BD0
sub_8062BD0: @ 0x08062BD0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r0, #0
	mov r8, r0
	ldr r3, _08062C44 @ =gUnknown_030055A0
	ldr r5, _08062C48 @ =0x04000128
	ldr r0, [r5]
	ldr r2, _08062C4C @ =gUnknown_030059E0
	adds r4, r2, #0
	adds r4, #0x37
	ldrb r1, [r4]
	movs r0, #0xbf
	ands r0, r1
	strb r0, [r4]
	mov r1, r8
	strh r1, [r2, #0x32]
	movs r4, #0
	ldr r0, [r3]
	mov sb, r3
	cmp r0, #0
	beq _08062C66
	ldr r0, _08062C50 @ =gUnknown_030055B8
	ldrb r3, [r0]
	movs r7, #0x10
	adds r6, r5, #0
	ldr r2, _08062C54 @ =gUnknown_030054B4
	mov ip, r2
	mov r5, sb
_08062C0C:
	adds r2, r7, #0
	lsls r2, r4
	ands r2, r3
	adds r0, r4, #4
	asrs r2, r0
	ldr r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r1, r7, #0
	lsls r1, r0
	ands r1, r3
	ldr r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r0, #4
	asrs r1, r0
	cmp r2, r1
	beq _08062C58
	mov r1, ip
	adds r0, r4, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08062C58
	movs r2, #1
	mov r8, r2
	b _08062C66
	.align 2, 0
_08062C44: .4byte gUnknown_030055A0
_08062C48: .4byte 0x04000128
_08062C4C: .4byte gUnknown_030059E0
_08062C50: .4byte gUnknown_030055B8
_08062C54: .4byte gUnknown_030054B4
_08062C58:
	adds r5, #4
	adds r4, #1
	cmp r4, #3
	bhi _08062C66
	ldr r0, [r5]
	cmp r0, #0
	bne _08062C0C
_08062C66:
	movs r4, #0
	mov r1, sb
	ldr r0, [r1]
	cmp r0, #0
	beq _08062CF4
	movs r2, #1
	rsbs r2, r2, #0
	mov sb, r2
	movs r7, #0x10
	ldr r6, _08062CC0 @ =0x04000128
	movs r5, #0
_08062C7C:
	ldr r0, _08062CC4 @ =gUnknown_030054B4
	adds r0, r4, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, sb
	bne _08062CDC
	ldr r0, _08062CC8 @ =gUnknown_030055B8
	ldrb r3, [r0]
	adds r2, r7, #0
	lsls r2, r4
	ands r2, r3
	adds r0, r4, #4
	asrs r2, r0
	ldr r1, [r6]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1e
	adds r0, r7, #0
	lsls r0, r1
	ands r3, r0
	ldr r0, [r6]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	adds r0, #4
	asrs r3, r0
	cmp r2, r3
	bne _08062CCC
	lsrs r0, r5, #0x18
	mov r2, r8
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	bl sub_8019CCC
	b _08062CDC
	.align 2, 0
_08062CC0: .4byte 0x04000128
_08062CC4: .4byte gUnknown_030054B4
_08062CC8: .4byte gUnknown_030055B8
_08062CCC:
	lsrs r0, r5, #0x18
	movs r2, #1
	mov r1, r8
	eors r1, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl sub_8019CCC
_08062CDC:
	movs r0, #0x80
	lsls r0, r0, #0x11
	adds r5, r5, r0
	adds r4, #1
	cmp r4, #3
	bhi _08062CF4
	ldr r0, _08062D2C @ =gUnknown_030055A0
	lsls r1, r4, #2
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	bne _08062C7C
_08062CF4:
	ldr r1, _08062D30 @ =gUnknown_03005424
	ldrh r0, [r1]
	movs r4, #4
	orrs r0, r4
	strh r0, [r1]
	ldr r1, _08062D34 @ =gUnknown_03005490
	movs r0, #0xe1
	lsls r0, r0, #4
	str r0, [r1]
	bl sub_8019224
	movs r1, #7
	strb r1, [r0]
	ldr r0, _08062D38 @ =gCurTask
	ldr r1, [r0]
	ldr r0, _08062D3C @ =sub_8062D44
	str r0, [r1, #8]
	ldr r0, _08062D40 @ =gUnknown_03005960
	adds r0, #0x50
	ldrh r1, [r0]
	orrs r4, r1
	strh r4, [r0]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062D2C: .4byte gUnknown_030055A0
_08062D30: .4byte gUnknown_03005424
_08062D34: .4byte gUnknown_03005490
_08062D38: .4byte gCurTask
_08062D3C: .4byte sub_8062D44
_08062D40: .4byte gUnknown_03005960

	thumb_func_start sub_8062D44
sub_8062D44: @ 0x08062D44
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08062E14 @ =0x04000128
	ldr r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	movs r4, #0
	ldr r1, _08062E18 @ =gUnknown_030054B4
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _08062E08
	movs r3, #0
	ldr r0, _08062E1C @ =gUnknown_030055A0
	ldr r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _08062D98
	movs r6, #0x80
	lsls r6, r6, #1
	adds r2, r5, #0
_08062D76:
	ldr r0, [r2]
	ldrh r0, [r0, #6]
	ldr r1, _08062E20 @ =IWRAM_START + 0x54
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _08062D8A
	adds r4, #1
_08062D8A:
	adds r2, #4
	adds r3, #1
	cmp r3, #3
	bhi _08062D98
	ldr r0, [r2]
	cmp r0, #0
	bne _08062D76
_08062D98:
	cmp r4, #0
	beq _08062E08
	subs r0, r3, #1
	cmp r4, r0
	bhs _08062DAA
	ldr r0, _08062E24 @ =gUnknown_030054CC
	ldrb r0, [r0]
	cmp r0, #4
	bne _08062E08
_08062DAA:
	ldr r0, [r5]
	cmp r0, #0
	beq _08062DFC
	mov ip, r5
	movs r6, #1
	ldr r5, _08062E28 @ =gUnknown_030059E0
	movs r0, #0x5c
	adds r0, r0, r5
	mov r8, r0
	ldr r7, _08062E24 @ =gUnknown_030054CC
	mov r4, ip
_08062DC0:
	ldr r0, [r4]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r1, r1, r0
	ldr r2, [r1, #0x5c]
	adds r3, r2, #0
	ands r3, r6
	cmp r3, #0
	bne _08062DEC
	ldrb r0, [r7]
	cmp r0, #4
	beq _08062DEC
	orrs r2, r6
	str r2, [r1, #0x5c]
	ldr r0, [r5, #0x20]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r5, #0x20]
	mov r1, r8
	strh r3, [r1]
_08062DEC:
	adds r4, #4
	mov r0, ip
	adds r0, #0xc
	cmp r4, r0
	bhi _08062DFC
	ldr r0, [r4]
	cmp r0, #0
	bne _08062DC0
_08062DFC:
	bl sub_8019F08
	ldr r0, _08062E2C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_08062E08:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062E14: .4byte 0x04000128
_08062E18: .4byte gUnknown_030054B4
_08062E1C: .4byte gUnknown_030055A0
_08062E20: .4byte IWRAM_START + 0x54
_08062E24: .4byte gUnknown_030054CC
_08062E28: .4byte gUnknown_030059E0
_08062E2C: .4byte gCurTask

	thumb_func_start sub_8062E30
sub_8062E30: @ 0x08062E30
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _08062E74 @ =sub_8062934
	ldr r2, _08062E78 @ =0x00002010
	movs r1, #0
	str r1, [sp]
	movs r1, #0xc
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	str r6, [r0]
	ldrb r1, [r6]
	strb r1, [r0, #8]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r6]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08062E74: .4byte sub_8062934
_08062E78: .4byte 0x00002010

	thumb_func_start sub_8062E7C
sub_8062E7C: @ 0x08062E7C
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8062E90
sub_8062E90: @ 0x08062E90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp, #4]
	ldr r0, _08062ECC @ =gUnknown_030055B0
	ldrb r0, [r0]
	cmp r0, #0
	bne _08062EDC
	ldr r0, _08062ED0 @ =sub_8062FD8
	ldr r2, _08062ED4 @ =0x00002010
	ldr r1, _08062ED8 @ =sub_8063214
	str r1, [sp]
	movs r1, #0x40
	movs r3, #0
	bl TaskCreate
	b _08062EEC
	.align 2, 0
_08062ECC: .4byte gUnknown_030055B0
_08062ED0: .4byte sub_8062FD8
_08062ED4: .4byte 0x00002010
_08062ED8: .4byte sub_8063214
_08062EDC:
	ldr r0, _08062FA8 @ =sub_806319C
	ldr r2, _08062FAC @ =0x00002010
	ldr r1, _08062FB0 @ =sub_8063214
	str r1, [sp]
	movs r1, #0x40
	movs r3, #0
	bl TaskCreate
_08062EEC:
	ldrh r5, [r0, #6]
	movs r6, #0xc0
	lsls r6, r6, #0x12
	adds r6, r5, r6
	ldr r0, _08062FB4 @ =IWRAM_START + 0xC
	adds r4, r5, r0
	movs r1, #0
	mov r8, r1
	mov r2, sl
	strh r2, [r6, #4]
	mov r0, sb
	strh r0, [r6, #6]
	str r7, [r6]
	ldrb r0, [r7]
	strb r0, [r6, #8]
	mov r1, sp
	ldrb r1, [r1, #4]
	strb r1, [r6, #9]
	ldrb r0, [r7]
	lsls r0, r0, #3
	mov r2, sl
	lsls r1, r2, #8
	adds r0, r0, r1
	strh r0, [r4, #0x16]
	ldrb r0, [r7, #1]
	lsls r0, r0, #3
	mov r2, sb
	lsls r1, r2, #8
	adds r0, r0, r1
	strh r0, [r4, #0x18]
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r7]
	movs r0, #4
	bl sub_8007C10
	str r0, [r4, #4]
	ldr r0, _08062FB8 @ =0x00000213
	strh r0, [r4, #0xa]
	ldr r2, _08062FBC @ =IWRAM_START + 0x2C
	adds r0, r5, r2
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r4, #0x1a]
	mov r2, r8
	strh r2, [r4, #8]
	strh r2, [r4, #0x14]
	strh r2, [r4, #0x1c]
	ldr r0, _08062FC0 @ =IWRAM_START + 0x2D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	ldr r2, _08062FC4 @ =IWRAM_START + 0x2E
	adds r1, r5, r2
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _08062FC8 @ =IWRAM_START + 0x31
	adds r5, r5, r0
	movs r1, #0
	strb r1, [r5]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r4, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r4, #0x10]
	ldr r1, _08062FCC @ =gUnknown_030055B4
	ldrb r2, [r1]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x1a
	lsls r2, r2, #0x18
	ldr r3, _08062FD0 @ =gUnknown_080D94F8
	lsrs r2, r2, #0x16
	adds r1, r2, r3
	ldrh r1, [r1]
	adds r3, #2
	adds r2, r2, r3
	ldrb r2, [r2]
	ldr r3, _08062FD4 @ =sub_8063228
	bl sub_8009628
	str r0, [r6, #0x3c]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062FA8: .4byte sub_806319C
_08062FAC: .4byte 0x00002010
_08062FB0: .4byte sub_8063214
_08062FB4: .4byte IWRAM_START + 0xC
_08062FB8: .4byte 0x00000213
_08062FBC: .4byte IWRAM_START + 0x2C
_08062FC0: .4byte IWRAM_START + 0x2D
_08062FC4: .4byte IWRAM_START + 0x2E
_08062FC8: .4byte IWRAM_START + 0x31
_08062FCC: .4byte gUnknown_030055B4
_08062FD0: .4byte gUnknown_080D94F8
_08062FD4: .4byte sub_8063228

	thumb_func_start sub_8062FD8
sub_8062FD8: @ 0x08062FD8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08063048 @ =gCurTask
	mov r8, r0
	ldr r0, [r0]
	ldrh r5, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r3, r5, r0
	ldr r1, _0806304C @ =IWRAM_START + 0xC
	adds r4, r5, r1
	ldr r6, [r3]
	ldrb r1, [r3, #8]
	lsls r1, r1, #3
	ldrh r0, [r3, #4]
	lsls r0, r0, #8
	adds r7, r1, r0
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r3, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r1, _08063050 @ =gUnknown_03005960
	ldr r0, [r1]
	subs r0, r7, r0
	strh r0, [r4, #0x16]
	ldr r1, [r1, #4]
	subs r2, r2, r1
	strh r2, [r4, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08063034
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08063034
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08063054
_08063034:
	ldrb r0, [r3, #8]
	strb r0, [r6]
	ldr r0, [r3, #0x3c]
	bl TaskDestroy
	ldr r0, _08063048 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _080630D4
	.align 2, 0
_08063048: .4byte gCurTask
_0806304C: .4byte IWRAM_START + 0xC
_08063050: .4byte gUnknown_03005960
_08063054:
	ldr r0, _080630E0 @ =gUnknown_030059E0
	mov ip, r0
	ldr r0, [r0, #0x20]
	ldr r1, _080630E4 @ =0x00400080
	ands r0, r1
	cmp r0, #0
	bne _080630C8
	mov r1, ip
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	cmp r7, r0
	bgt _080630C8
	ldr r2, _080630E8 @ =gUnknown_080D63FC
	ldr r3, _080630EC @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, [r0]
	mov r0, ip
	adds r0, #0x74
	strh r1, [r0]
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #3
	adds r2, #4
	adds r0, r0, r2
	ldr r0, [r0]
	mov r1, ip
	adds r1, #0x76
	strh r0, [r1]
	ldr r0, _080630F0 @ =gUnknown_030053E4
	ldr r0, [r0]
	mov r1, ip
	str r0, [r1, #0x78]
	ldr r1, _080630F4 @ =gUnknown_030055B0
	ldrb r0, [r1]
	cmp r0, #0
	bne _080630A6
	adds r0, #1
	strb r0, [r1]
_080630A6:
	ldr r0, _080630F8 @ =0x00000213
	strh r0, [r4, #0xa]
	ldr r0, _080630FC @ =IWRAM_START + 0x2C
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, _08063100 @ =IWRAM_START + 0x2D
	adds r1, r5, r0
	movs r0, #0xff
	strb r0, [r1]
	mov r0, r8
	ldr r1, [r0]
	ldr r0, _08063104 @ =sub_8063108
	str r0, [r1, #8]
	movs r0, #0x98
	bl m4aSongNumStart
_080630C8:
	adds r0, r4, #0
	bl sub_8004558
	adds r0, r4, #0
	bl sub_80051E8
_080630D4:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080630E0: .4byte gUnknown_030059E0
_080630E4: .4byte 0x00400080
_080630E8: .4byte gUnknown_080D63FC
_080630EC: .4byte gUnknown_030055B4
_080630F0: .4byte gUnknown_030053E4
_080630F4: .4byte gUnknown_030055B0
_080630F8: .4byte 0x00000213
_080630FC: .4byte IWRAM_START + 0x2C
_08063100: .4byte IWRAM_START + 0x2D
_08063104: .4byte sub_8063108

	thumb_func_start sub_8063108
sub_8063108: @ 0x08063108
	push {r4, r5, r6, r7, lr}
	ldr r7, _08063174 @ =gCurTask
	ldr r0, [r7]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r6, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _08063178 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r0, [r3, #4]
	subs r2, r2, r0
	strh r2, [r5, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _0806315E
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _0806315E
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0806317C
_0806315E:
	ldrb r0, [r4, #8]
	strb r0, [r6]
	ldr r0, [r4, #0x3c]
	bl TaskDestroy
	ldr r0, _08063174 @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
	b _08063192
	.align 2, 0
_08063174: .4byte gCurTask
_08063178: .4byte gUnknown_03005960
_0806317C:
	adds r0, r5, #0
	bl sub_8004558
	cmp r0, #0
	bne _0806318C
	ldr r1, [r7]
	ldr r0, _08063198 @ =sub_806319C
	str r0, [r1, #8]
_0806318C:
	adds r0, r5, #0
	bl sub_80051E8
_08063192:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063198: .4byte sub_806319C

	thumb_func_start sub_806319C
sub_806319C: @ 0x0806319C
	push {r4, r5, r6, lr}
	ldr r0, _0806320C @ =gCurTask
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r6, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldrb r2, [r6, #1]
	lsls r2, r2, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r2, r2, r0
	ldr r3, _08063210 @ =gUnknown_03005960
	ldr r0, [r3]
	subs r1, r1, r0
	strh r1, [r5, #0x16]
	ldr r0, [r3, #4]
	subs r2, r2, r0
	strh r2, [r5, #0x18]
	adds r1, #0x80
	lsls r1, r1, #0x10
	movs r0, #0xf8
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _080631F2
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _080631F2
	lsls r1, r2, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08063204
_080631F2:
	ldrb r0, [r4, #8]
	strb r0, [r6]
	ldr r0, [r4, #0x3c]
	bl TaskDestroy
	ldr r0, _0806320C @ =gCurTask
	ldr r0, [r0]
	bl TaskDestroy
_08063204:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806320C: .4byte gCurTask
_08063210: .4byte gUnknown_03005960

	thumb_func_start sub_8063214
sub_8063214: @ 0x08063214
	push {lr}
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	ldr r0, [r0, #0x10]
	bl sub_8007CF0
	pop {r0}
	bx r0

	thumb_func_start sub_8063228
sub_8063228: @ 0x08063228
	push {r4, lr}
	ldr r0, _0806328C @ =gUnknown_030055B4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x1a
	lsls r0, r0, #0x18
	ldr r1, _08063290 @ =gUnknown_080D94F8
	lsrs r0, r0, #0x16
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, _08063294 @ =gSpriteStates
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r2, [r0]
	ldm r2!, {r1}
	movs r0, #2
	rsbs r0, r0, #0
	cmp r1, r0
	bne _08063286
	ldm r2!, {r3}
	ldr r1, [r2]
	lsrs r2, r1, #0x10
	movs r0, #0xff
	ands r1, r0
	ldr r4, _08063298 @ =0x040000D4
	ldr r0, _0806329C @ =gUnknown_03002794
	ldr r0, [r0]
	lsls r3, r3, #5
	ldr r0, [r0, #0xc]
	adds r0, r0, r3
	str r0, [r4]
	lsls r2, r2, #1
	ldr r0, _080632A0 @ =gBgPalette
	adds r2, r2, r0
	str r2, [r4, #4]
	lsrs r1, r1, #1
	movs r0, #0x84
	lsls r0, r0, #0x18
	orrs r1, r0
	str r1, [r4, #8]
	ldr r0, [r4, #8]
	ldr r2, _080632A4 @ =gFlags
	ldr r0, [r2]
	movs r1, #1
	orrs r0, r1
	str r0, [r2]
_08063286:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806328C: .4byte gUnknown_030055B4
_08063290: .4byte gUnknown_080D94F8
_08063294: .4byte gSpriteStates
_08063298: .4byte 0x040000D4
_0806329C: .4byte gUnknown_03002794
_080632A0: .4byte gBgPalette
_080632A4: .4byte gFlags

	thumb_func_start sub_80632A8
sub_80632A8: @ 0x080632A8
	push {r4, r5, r6, r7, lr}
	ldr r3, _0806330C @ =gCurTask
	ldr r7, [r3]
	ldrh r1, [r7, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r4, r1, r0
	ldr r5, [r4]
	ldrb r1, [r4, #8]
	lsls r1, r1, #3
	ldrh r0, [r4, #4]
	lsls r0, r0, #8
	adds r6, r1, r0
	ldrb r1, [r5, #1]
	lsls r1, r1, #3
	ldrh r0, [r4, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	ldr r2, _08063310 @ =gUnknown_03005960
	ldr r0, [r2]
	subs r0, r6, r0
	ldr r2, [r2, #4]
	subs r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	lsls r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #0x10
	adds r0, r0, r1
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080632FE
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	adds r0, r1, #0
	adds r0, #0x80
	cmp r0, #0
	blt _080632FE
	movs r0, #0x90
	lsls r0, r0, #1
	cmp r1, r0
	ble _08063314
_080632FE:
	ldrb r0, [r4, #8]
	strb r0, [r5]
	ldr r0, [r3]
	bl TaskDestroy
	b _08063396
	.align 2, 0
_0806330C: .4byte gCurTask
_08063310: .4byte gUnknown_03005960
_08063314:
	ldr r0, _08063370 @ =gUnknown_030059E0
	mov ip, r0
	ldr r0, [r0, #0x20]
	ldr r1, _08063374 @ =0x00400080
	ands r0, r1
	cmp r0, #0
	bne _08063388
	mov r1, ip
	ldr r0, [r1, #8]
	asrs r0, r0, #8
	cmp r6, r0
	bgt _08063388
	ldr r2, _08063378 @ =gUnknown_080D63FC
	ldr r3, _0806337C @ =gUnknown_030055B4
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, [r0]
	mov r0, ip
	adds r0, #0x74
	strh r1, [r0]
	movs r0, #0
	ldrsb r0, [r3, r0]
	lsls r0, r0, #3
	adds r2, #4
	adds r0, r0, r2
	ldr r0, [r0]
	mov r1, ip
	adds r1, #0x76
	strh r0, [r1]
	ldr r0, _08063380 @ =gUnknown_030053E4
	ldr r0, [r0]
	mov r1, ip
	str r0, [r1, #0x78]
	ldr r1, _08063384 @ =gUnknown_030055B0
	ldrb r0, [r1]
	cmp r0, #0
	bne _08063366
	adds r0, #1
	strb r0, [r1]
_08063366:
	adds r0, r7, #0
	bl TaskDestroy
	b _08063396
	.align 2, 0
_08063370: .4byte gUnknown_030059E0
_08063374: .4byte 0x00400080
_08063378: .4byte gUnknown_080D63FC
_0806337C: .4byte gUnknown_030055B4
_08063380: .4byte gUnknown_030053E4
_08063384: .4byte gUnknown_030055B0
_08063388:
	ldr r0, _0806339C @ =gUnknown_030055B0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08063396
	ldr r0, [r3]
	bl TaskDestroy
_08063396:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806339C: .4byte gUnknown_030055B0

	thumb_func_start sub_80633A0
sub_80633A0: @ 0x080633A0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r7, r3, #0x18
	ldr r0, _080633EC @ =gUnknown_030055B0
	ldrb r1, [r0]
	cmp r1, #0
	bne _080633DC
	ldr r0, _080633F0 @ =sub_80632A8
	ldr r2, _080633F4 @ =0x00002010
	str r1, [sp]
	movs r1, #0x3c
	movs r3, #0
	bl TaskCreate
	ldrh r0, [r0, #6]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r0, r0, r1
	strh r6, [r0, #4]
	strh r5, [r0, #6]
	str r4, [r0]
	ldrb r1, [r4]
	strb r1, [r0, #8]
	strb r7, [r0, #9]
_080633DC:
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r4]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080633EC: .4byte gUnknown_030055B0
_080633F0: .4byte sub_80632A8
_080633F4: .4byte 0x00002010

	thumb_func_start sub_80633F8
sub_80633F8: @ 0x080633F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov sb, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov r8, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	ldr r0, _08063500 @ =sub_8063598
	movs r1, #0xff
	lsls r1, r1, #2
	ldr r2, _08063504 @ =0x00002010
	ldr r3, _08063508 @ =sub_80636F0
	str r3, [sp]
	movs r3, #0
	bl TaskCreate
	ldrh r6, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r0, r6
	mov sl, r0
	ldr r1, _0806350C @ =IWRAM_START + 0xC
	adds r7, r6, r1
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	mov r2, sb
	str r2, [r0]
	ldrb r0, [r2]
	mov r1, sl
	strb r0, [r1, #8]
	mov r2, r8
	strb r2, [r1, #9]
	mov r1, sb
	ldrb r0, [r1]
	lsls r0, r0, #3
	lsls r4, r4, #8
	adds r0, r0, r4
	strh r0, [r7, #0x16]
	ldrb r0, [r1, #1]
	lsls r0, r0, #3
	lsls r5, r5, #8
	adds r0, r0, r5
	strh r0, [r7, #0x18]
	movs r2, #2
	rsbs r2, r2, #0
	adds r0, r2, #0
	strb r0, [r1]
	ldr r4, _08063510 @ =gUnknown_080D9518
	ldr r0, [r4, #0x20]
	bl sub_8007C10
	str r0, [r7, #4]
	ldrh r0, [r4, #0x24]
	strh r0, [r7, #0xa]
	adds r0, r4, #0
	adds r0, #0x26
	ldrb r1, [r0]
	ldr r2, _08063514 @ =IWRAM_START + 0x2C
	adds r0, r6, r2
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	movs r0, #0
	strh r0, [r7, #8]
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x1c]
	adds r2, #1
	adds r1, r6, r2
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _08063518 @ =IWRAM_START + 0x2E
	adds r1, r6, r0
	movs r0, #0x10
	strb r0, [r1]
	ldr r1, _0806351C @ =IWRAM_START + 0x31
	adds r6, r6, r1
	movs r2, #0
	strb r2, [r6]
	subs r0, #0x11
	str r0, [r7, #0x28]
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x10]
	adds r0, r7, #0
	bl sub_8004558
	movs r2, #0
	movs r6, #0
_080634C0:
	movs r5, #0
	lsls r0, r2, #2
	mov r8, r0
	adds r1, r2, #1
	mov sb, r1
_080634CA:
	mov r0, r8
	adds r1, r0, r5
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x3c
	mov r1, sl
	adds r7, r1, r0
	strh r6, [r7, #0x16]
	strh r6, [r7, #0x18]
	cmp r2, #0
	bne _08063520
	lsls r4, r5, #3
	ldr r1, _08063510 @ =gUnknown_080D9518
	adds r0, r4, r1
	ldr r0, [r0]
	str r2, [sp, #0x14]
	bl sub_8007C10
	str r0, [r7, #4]
	lsls r1, r5, #2
	add r1, sp
	adds r1, #4
	str r0, [r1]
	ldr r2, [sp, #0x14]
	b _0806352C
	.align 2, 0
_08063500: .4byte sub_8063598
_08063504: .4byte 0x00002010
_08063508: .4byte sub_80636F0
_0806350C: .4byte IWRAM_START + 0xC
_08063510: .4byte gUnknown_080D9518
_08063514: .4byte IWRAM_START + 0x2C
_08063518: .4byte IWRAM_START + 0x2E
_0806351C: .4byte IWRAM_START + 0x31
_08063520:
	lsls r0, r5, #2
	add r0, sp
	adds r0, #4
	ldr r0, [r0]
	str r0, [r7, #4]
	lsls r4, r5, #3
_0806352C:
	ldr r0, _08063594 @ =gUnknown_080D9518
	adds r1, r4, r0
	ldrh r0, [r1, #4]
	strh r0, [r7, #0xa]
	ldrb r1, [r1, #6]
	adds r0, r7, #0
	adds r0, #0x20
	strb r1, [r0]
	movs r0, #0x90
	lsls r0, r0, #3
	strh r0, [r7, #0x1a]
	strh r6, [r7, #8]
	strh r6, [r7, #0x14]
	strh r6, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0x21
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x25
	strb r6, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x28]
	str r6, [r7, #0x10]
	adds r0, r7, #0
	str r2, [sp, #0x14]
	bl sub_8004558
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r2, [sp, #0x14]
	cmp r5, #3
	bls _080634CA
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #3
	bls _080634C0
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063594: .4byte gUnknown_080D9518

	thumb_func_start sub_8063598
sub_8063598: @ 0x08063598
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r2, _0806360C @ =gCurTask
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r1, r0
	adds r0, #0xc
	adds r5, r1, r0
	ldr r4, [r6]
	ldrb r1, [r6, #8]
	lsls r1, r1, #3
	ldrh r0, [r6, #4]
	lsls r0, r0, #8
	adds r1, r1, r0
	str r1, [sp]
	ldrb r1, [r4, #1]
	lsls r1, r1, #3
	ldrh r0, [r6, #6]
	lsls r0, r0, #8
	adds r1, r1, r0
	mov sl, r1
	ldr r1, _08063610 @ =gUnknown_03005960
	ldr r0, [r1]
	ldr r3, [sp]
	subs r0, r3, r0
	strh r0, [r5, #0x16]
	ldr r1, [r1, #4]
	mov r7, sl
	subs r3, r7, r1
	strh r3, [r5, #0x18]
	adds r0, #0x80
	lsls r0, r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08063600
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	adds r0, #0x80
	cmp r0, #0
	blt _08063600
	lsls r1, r3, #0x10
	movs r0, #0x90
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08063614
_08063600:
	ldrb r0, [r6, #8]
	strb r0, [r4]
	ldr r0, [r2]
	bl TaskDestroy
	b _080636CE
	.align 2, 0
_0806360C: .4byte gCurTask
_08063610: .4byte gUnknown_03005960
_08063614:
	adds r0, r5, #0
	bl sub_80051E8
	movs r7, #0x16
	ldrsh r3, [r5, r7]
	str r3, [sp]
	movs r1, #0x18
	ldrsh r0, [r5, r1]
	mov sl, r0
	movs r0, #0
_08063628:
	movs r4, #0
	lsls r3, r0, #2
	mov sb, r3
	lsls r7, r0, #8
	mov r8, r7
	adds r0, #1
	str r0, [sp, #4]
_08063636:
	mov r0, sb
	adds r1, r0, r4
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #0x3c
	adds r5, r6, r0
	adds r1, r5, #0
	adds r1, #0x30
	ldr r0, _080636E0 @ =gUnknown_03005590
	ldr r2, [r0]
	lsls r2, r2, #1
	add r2, r8
	ldr r3, _080636E4 @ =0x000003FF
	adds r0, r3, #0
	ands r2, r0
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r2, r7
	lsls r0, r0, #1
	ldr r3, _080636E8 @ =gUnknown_08097AA4
	adds r0, r0, r3
	movs r7, #0
	ldrsh r0, [r0, r7]
	adds r4, #1
	lsls r3, r4, #4
	subs r3, #8
	muls r0, r3, r0
	asrs r0, r0, #0xe
	ldr r7, [sp]
	adds r0, r7, r0
	strh r0, [r5, #0x16]
	lsls r0, r2, #1
	ldr r7, _080636E8 @ =gUnknown_08097AA4
	adds r0, r0, r7
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r3, r0
	asrs r0, r0, #0xe
	add r0, sl
	strh r0, [r5, #0x18]
	strh r2, [r5, #0x30]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #2]
	adds r3, r0, #0
	strh r3, [r1, #4]
	ldrh r0, [r5, #0x16]
	strh r0, [r1, #6]
	ldrh r0, [r5, #0x18]
	strh r0, [r1, #8]
	ldr r3, _080636EC @ =gUnknown_030054B8
	ldrb r0, [r3]
	adds r2, r0, #1
	strb r2, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x83
	lsls r2, r2, #5
	orrs r0, r2
	str r0, [r5, #0x10]
	adds r0, r5, #0
	bl sub_8004860
	adds r0, r5, #0
	bl sub_80051E8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #3
	bls _08063636
	ldr r7, [sp, #4]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bls _08063628
_080636CE:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080636E0: .4byte gUnknown_03005590
_080636E4: .4byte 0x000003FF
_080636E8: .4byte gUnknown_08097AA4
_080636EC: .4byte gUnknown_030054B8

	thumb_func_start sub_80636F0
sub_80636F0: @ 0x080636F0
	push {r4, r5, lr}
	ldrh r5, [r0, #6]
	movs r4, #0xc0
	lsls r4, r4, #0x12
	adds r4, r5, r4
	ldr r0, [r4, #0x10]
	bl sub_8007CF0
	ldr r0, [r4, #0x40]
	bl sub_8007CF0
	ldr r0, [r4, #0x7c]
	bl sub_8007CF0
	ldr r1, _08063728 @ =IWRAM_START + 0xB8
	adds r0, r5, r1
	ldr r0, [r0]
	bl sub_8007CF0
	ldr r0, _0806372C @ =IWRAM_START + 0xF4
	adds r5, r5, r0
	ldr r0, [r5]
	bl sub_8007CF0
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08063728: .4byte IWRAM_START + 0xB8
_0806372C: .4byte IWRAM_START + 0xF4

	thumb_func_start sub_8063730
sub_8063730: @ 0x08063730
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #9
	bl m4aSongNumStart
	ldr r0, _080637C0 @ =sub_806A75C
	movs r1, #0xf1
	lsls r1, r1, #3
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r3, _080637C4 @ =sub_806A758
	str r3, [sp]
	movs r3, #4
	bl TaskCreate
	ldrh r4, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r0, r4, r0
	bl sub_8063B38
	ldr r1, _080637C8 @ =IWRAM_START + 0x358
	adds r0, r4, r1
	movs r2, #0
	strb r5, [r0]
	ldr r3, _080637CC @ =IWRAM_START + 0x360
	adds r0, r4, r3
	movs r1, #0
	strh r2, [r0]
	ldr r3, _080637D0 @ =gUnknown_03000781
	adds r0, r4, r3
	strb r1, [r0]
	adds r3, #2
	adds r0, r4, r3
	strb r1, [r0]
	subs r3, #3
	adds r0, r4, r3
	strb r1, [r0]
	ldr r0, _080637D4 @ =gUnknown_03000782
	adds r4, r4, r0
	movs r0, #0xff
	strb r0, [r4]
	ldr r1, _080637D8 @ =gUnknown_03005B50
	ldr r0, _080637DC @ =0x06010000
	str r0, [r1]
	ldr r0, _080637E0 @ =gUnknown_03005B54
	str r2, [r0]
	movs r1, #0
	ldr r5, _080637E4 @ =gKeysFirstRepeatIntervals
	movs r4, #0x14
	ldr r3, _080637E8 @ =gKeysContinuedRepeatIntervals
	movs r2, #8
_0806379E:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, r5
	strb r4, [r1]
	adds r1, r0, r3
	strb r2, [r1]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #9
	ble _0806379E
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080637C0: .4byte sub_806A75C
_080637C4: .4byte sub_806A758
_080637C8: .4byte IWRAM_START + 0x358
_080637CC: .4byte IWRAM_START + 0x360
_080637D0: .4byte gUnknown_03000781
_080637D4: .4byte gUnknown_03000782
_080637D8: .4byte gUnknown_03005B50
_080637DC: .4byte 0x06010000
_080637E0: .4byte gUnknown_03005B54
_080637E4: .4byte gKeysFirstRepeatIntervals
_080637E8: .4byte gKeysContinuedRepeatIntervals

	thumb_func_start sub_80637EC
sub_80637EC: @ 0x080637EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	ldr r0, _08063914 @ =sub_806B5A4
	ldr r1, _08063918 @ =0x00000714
	movs r2, #0x80
	lsls r2, r2, #6
	movs r3, #0
	str r3, [sp]
	movs r3, #4
	bl TaskCreate
	ldrh r1, [r0, #6]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r5, r1, r0
	movs r6, #1
	ldr r1, _0806391C @ =gLoadedSaveGame
	ldr r0, [r1]
	ldrb r0, [r0, #0x13]
	asrs r0, r0, #1
	ands r0, r6
	cmp r0, #0
	beq _08063848
	adds r3, r1, #0
	movs r2, #1
_0806382C:
	lsls r0, r6, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r6, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #4
	bgt _08063848
	ldr r0, [r3]
	ldrb r0, [r0, #0x13]
	asrs r0, r1
	ands r0, r2
	cmp r0, #0
	bne _0806382C
_08063848:
	movs r2, #0xfe
	lsls r2, r2, #1
	adds r0, r5, r2
	movs r4, #0
	str r4, [r0]
	movs r0, #0x9e
	lsls r0, r0, #2
	bl EwramMalloc
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r5, r2
	str r0, [r1]
	ldr r1, _08063920 @ =0x00000704
	adds r0, r5, r1
	strb r7, [r0]
	ldr r2, _08063924 @ =0x00000705
	adds r0, r5, r2
	strb r4, [r0]
	adds r1, #2
	adds r0, r5, r1
	strb r4, [r0]
	adds r2, #2
	adds r0, r5, r2
	strb r4, [r0]
	adds r1, #2
	adds r0, r5, r1
	strb r4, [r0]
	adds r2, #2
	adds r0, r5, r2
	strb r6, [r0]
	movs r6, #0
	ldr r0, _08063928 @ =0x0000070A
	adds r3, r5, r0
	ldr r7, _0806391C @ =gLoadedSaveGame
	adds r4, r7, #0
_08063890:
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	adds r2, r3, r1
	ldr r0, [r4]
	adds r0, #7
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #4
	ble _08063890
	ldr r0, [r7]
	ldrb r0, [r0, #6]
	subs r0, #1
	ldr r1, _0806392C @ =0x0000070F
	adds r2, r5, r1
	strb r0, [r2]
	adds r1, #1
	adds r0, r5, r1
	mov r1, r8
	strb r1, [r0]
	ldr r0, _08063930 @ =0x00000711
	adds r1, r5, r0
	movs r0, #2
	strb r0, [r1]
	ldrb r0, [r2]
	cmp r0, #5
	bls _080638D2
	movs r0, #1
	strb r0, [r2]
_080638D2:
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r1, [r7]
	adds r1, #0x34
	movs r2, #0x9e
	lsls r2, r2, #2
	bl memcpy
	ldr r1, _08063934 @ =gUnknown_03005B50
	ldr r0, _08063938 @ =0x06010000
	str r0, [r1]
	ldr r1, _0806393C @ =gUnknown_03005B54
	movs r0, #0
	str r0, [r1]
	bl sub_8068640
	adds r0, r5, #0
	bl sub_8068700
	adds r0, r5, #0
	bl sub_80687BC
	movs r0, #4
	bl m4aSongNumStart
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063914: .4byte sub_806B5A4
_08063918: .4byte 0x00000714
_0806391C: .4byte gLoadedSaveGame
_08063920: .4byte 0x00000704
_08063924: .4byte 0x00000705
_08063928: .4byte 0x0000070A
_0806392C: .4byte 0x0000070F
_08063930: .4byte 0x00000711
_08063934: .4byte gUnknown_03005B50
_08063938: .4byte 0x06010000
_0806393C: .4byte gUnknown_03005B54
